searchState.loadedDescShard("wayland_protocols", 0, "This crate provides bindings to the official wayland …\nMiscellaneous protocols\nGeneric wayland protocols\nProtocols related to window management\nXWayland related protocols\nThis protocol allows a privileged client to control data …\nThe purpose of this protocol is to provide protocol object …\nThis protocol allows clients to monitor user idle status.\nThis protocol serves as an intermediary between capturing …\nThis protocol allows clients to ask the compositor to …\nThis protocol allows for a privileged Wayland client to …\nThe transient seat protocol can be used by privileged …\nList and control workspaces\nClient-side API of this protocol\nmanage a data device for a seat\nmanager to control data devices\noffer to transfer data\noffer to transfer data\nintroduce a new ext_data_control_offer\ndestroy this data device\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nmanage a data device for a seat\nthis data control is no longer valid\nadvertise new primary selection\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nadvertise new selection\ncopy data to the primary selection\ncopy data to the selection\nsource given to set_selection or set_primary_selection was …\ndestroy this data device\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\ncopy data to the primary selection\ncopy data to the selection\ncreate a new data source\ndestroy the manager\nmanager to control data devices\nget a data device for a seat\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\ncreate a new data source\ndestroy the manager\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nget a data device for a seat\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\ndestroy this offer\nThe wire opcode for this event\nThe minimal object version supporting this event\noffer to transfer data\nadvertise offered MIME type\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nrequest that the data is transferred\ndestroy this offer\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nrequest that the data is transferred\noffered MIME type\nfile descriptor for data transfer\nMIME type desired by receiver\nselection was cancelled\ndestroy this source\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\noffer to transfer data\noffer sent after ext_data_control_device.set_selection\nadd an offered MIME type\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nsend the data\ndestroy this source\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nadd an offered MIME type\nGet the opcode number of this message\nGet the opcode number of this message\nfile descriptor for the data\nMIME type for the data\nMIME type offered by the data source\nClient-side API of this protocol\na mapped toplevel\nlist toplevels\napp_id change\nthe toplevel has been closed\ndestroy the ext_foreign_toplevel_handle_v1 object\nall information about the toplevel has been sent\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\na mapped toplevel\na stable identifier for a toplevel\nThe wire opcode for this request\nThe minimal object version supporting this request\ntitle change\ndestroy the ext_foreign_toplevel_handle_v1 object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\ndestroy the ext_foreign_toplevel_list_v1 object\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nlist toplevels\nthe compositor has finished with the toplevel manager\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nstop sending events\na toplevel has been created\ndestroy the ext_foreign_toplevel_list_v1 object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nstop sending events\nClient-side API of this protocol\nidle notification\nidle notification manager\ndestroy the notification object\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nidle notification\nnotification object is idle\nThe wire opcode for this request\nThe minimal object version supporting this request\nnotification object is no longer idle\ndestroy the notification object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\ndestroy the manager\nidle notification manager\ncreate a notification object\ncreate a notification object\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\ndestroy the manager\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\ncreate a notification object\ncreate a notification object\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nminimum idle timeout in msec\nminimum idle timeout in msec\nClient-side API of this protocol\nimage capture source manager for foreign toplevels\nopaque image capture source object\nimage capture source manager for outputs\ncreate source object for foreign toplevel\ndelete this object\nimage capture source manager for foreign toplevels\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\ncreate source object for foreign toplevel\ndelete this object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\ndelete this object\nopaque image capture source object\nThe wire opcode for this request\nThe minimal object version supporting this request\ndelete this object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\ncreate source object for output\ndelete this object\nimage capture source manager for outputs\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\ncreate source object for output\ndelete this object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nClient-side API of this protocol\ncursor capture session\nimage capture frame\nmanager to inform clients and begin capturing\nimage copy capture session\ndelete this object\nget_capture_session sent twice\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\ncursor entered captured area\ncursor capture session\nget image copy capturer session\nhotspot changed\ncursor left captured area\nposition changed\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\ndelete this object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nget image copy capturer session\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nposition x coordinates\nhotspot x coordinates\nposition y coordinates\nhotspot y coordinates\ncapture request has been sent\nattach buffer to session\nbuffer constraints mismatch\ncapture a frame\nbuffer damaged region\ndamage buffer\ndestroy this object\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nimage capture frame\ncapture failed\ninvalid buffer damage\ncapture sent without attach_buffer\npresentation time of the frame\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nframe is available for reading\nsession is no longer available\nbuffer transform\nunknown runtime error\nattach buffer to session\ncapture a frame\ndamage buffer\ndestroy this object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\ndamage height\nnanoseconds part of the timestamp\nhigh 32 bits of the seconds part of the timestamp\nlow 32 bits of the seconds part of the timestamp\ndamage width\ndamage x coordinate\ndamage y coordinate\nregion height\nregion width\nregion x coordinate\nregion y coordinate\ncapture the pointer cursor of an image capture source\ncapture an image capture source\ndestroy the manager\nmanager to inform clients and begin capturing\ninvalid option flag\npaint cursors onto captured frames\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\ncapture the pointer cursor of an image capture source\ncapture an image capture source\ndestroy the manager\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nGet the opcode number of this message\nGet the opcode number of this message\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nimage capture source dimensions\ncreate a frame\ndelete this object\ndma-buf device\ndma-buf format\nall constraints have been sent\ncreate_frame sent before destroying previous frame\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nimage copy capture session\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nshm buffer format\nsession is no longer available\ncreate a frame\ndelete this object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\ndevice dev_t value\nshm format\ndrm format code\nbuffer height\ndrm format modifiers\nbuffer width\nClient-side API of this protocol\nused to lock the session\na surface displayed while the session is locked\nmanage lock state and create lock surfaces\ndestroy the session lock manager object\nused to lock the session\nattempt to lock the session\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\ndestroy the session lock manager object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nattempt to lock the session\nGet the opcode number of this message\nGet the opcode number of this message\nack a configure event\nsurface committed before first ack_configure request\nthe client should resize its surface\ndestroy the lock surface object\nfailed to match ack’d width/height\nThe wire opcode for this event\nThe minimal object version supporting this event\na surface displayed while the session is locked\nserial provided in ack_configure is invalid\nsurface committed with a null buffer\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nack a configure event\ndestroy the lock surface object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nserial for use in ack_configure\nserial from the configure event\ngiven wl_surface has a buffer attached or committed\ndestroy the session lock\ngiven output already has a lock surface\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nmanage lock state and create lock surfaces\nthe session lock object should be destroyed\ncreate a lock surface for a given output\nattempted to destroy session lock while locked\nunlock requested but locked event was never sent\nsession successfully locked\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\ngiven wl_surface already has a role\nunlock the session, destroying the object\ndestroy the session lock\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\ncreate a lock surface for a given output\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nunlock the session, destroying the object\nClient-side API of this protocol\ntransient seat manager\ntransient seat handle\ncreate a transient seat\ndestroy the manager\ntransient seat manager\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\ncreate a transient seat\ndestroy the manager\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\ntransient seat creation denied\ndestroy transient seat\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\ntransient seat handle\nThe wire opcode for this request\nThe minimal object version supporting this request\ntransient seat is ready\ndestroy transient seat\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nClient-side API of this protocol\na workspace group assigned to a set of outputs\na workspace handing a group of surfaces\nlist and control workspaces\ncompositor capabilities\ncreate a new workspace\ncreate_workspace request is available\ndestroy the ext_workspace_group_handle_v1 object\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\na workspace group assigned to a set of outputs\noutput assigned to workspace group\noutput removed from workspace group\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nthis workspace group has been removed\nworkspace added to workspace group\nworkspace removed from workspace group\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\ncreate a new workspace\ndestroy the ext_workspace_group_handle_v1 object\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nGet the opcode number of this message\nGet the opcode number of this message\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\ncapabilities\nactivate the workspace\nactivate request is available\nthe workspace is active\nassign workspace to group\nassign request is available\ncompositor capabilities\nworkspace coordinates changed\ndeactivate the workspace\ndeactivate request is available\ndestroy the ext_workspace_handle_v1 object\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\na workspace handing a group of surfaces\nthe workspace is not visible\nworkspace id\nworkspace name changed\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nremove the workspace\nremove request is available\nthis workspace has been removed\ntypes of states on the workspace\nthe state of the workspace changed\nthe workspace requests attention\nactivate the workspace\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nassign workspace to group\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\ndeactivate the workspace\ndestroy the ext_workspace_handle_v1 object\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nGet the opcode number of this message\nGet the opcode number of this message\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nremove the workspace\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\ncapabilities\nall requests about the workspaces have been sent\nall information about the workspaces and workspace groups …\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nlist and control workspaces\nthe compositor has finished with the workspace_manager\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nstop sending events\nworkspace has been created\na workspace group has been created\nall requests about the workspaces have been sent\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nstop sending events\nThis interface allows a client to set a factor for the …\nWhen a compositor latches on to new content updates it …\nThis protocol allows a client to describe the kind of …\nThis protocol is used by Wayland compositors which act as …\nWhen a Wayland compositor considers applying a content …\nThis protocol allows a compositor to suggest for surfaces …\nLinux DMA-BUF protocol\nThis protocol allows clients to request explicit …\nPresentation time protocol\nThis interface allows a client to register a new Wayland …\nThis protocol extension allows clients to create …\nWayland protocol for graphics tablets\nThis protocol provides a way for clients to indicate …\nViewporter protocol\nClient-side API of this protocol\nalpha modifier object for a surface\nsurface alpha modifier manager\ndestroy the alpha modifier object\nwl_surface was destroyed\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nspecify the alpha multiplier\nalpha modifier object for a surface\ndestroy the alpha modifier object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nspecify the alpha multiplier\nwl_surface already has a alpha modifier object\ndestroy the alpha modifier manager object\ncreate a new alpha modifier surface object\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nsurface alpha modifier manager\ndestroy the alpha modifier manager object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\ncreate a new alpha modifier surface object\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nClient-side API of this protocol\nSurface commit timer\ncommit timing\nDestroy the timer\ntimestamp contains an invalid value\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nSpecify time the following commit takes effect\nthe associated surface no longer exists\ntimestamp exists\nSurface commit timer\nDestroy the timer\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nSpecify time the following commit takes effect\nnanoseconds part of target time\nhigh 32 bits of the seconds part of target time\nlow 32 bits of the seconds part of target time\ncommit timer already exists for surface\nunbind from the commit timing interface\nrequest commit timer interface for surface\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\ncommit timing\nunbind from the commit timing interface\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nrequest commit timer interface for surface\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nClient-side API of this protocol\nsurface content type manager\ncontent type object for a surface\nwl_surface already has a content type object\ndestroy the content type manager object\ncreate a new content type object\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nsurface content type manager\ndestroy the content type manager object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\ncreate a new content type object\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\ndestroy the content type object\ngame content type\nno content type applies\nphoto content type\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nspecify the content type\npossible content types\nvideo content type\ncontent type object for a surface\ndestroy the content type object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nspecify the content type\nthe content type\nClient-side API of this protocol\na leasable DRM connector\nlease device\nDRM lease request\na DRM lease\nconnector_id\ndescription\ndestroy connector\nall properties have been sent\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nname\nThe wire opcode for this request\nThe minimal object version supporting this request\nlease offer withdrawn\na leasable DRM connector\ndestroy connector\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nDRM connector ID\nconnector description\nconnector name\nadvertise connectors available for leases\ncreate a lease request object\nsignals grouping of connectors\nopen a non-master fd for this DRM node\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nrelease this object\nthe compositor has finished using the device\nlease device\ncreate a lease request object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nrelease this object\nDRM file descriptor\nrequested a connector twice\nrequested a lease without requesting a connector\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nrequest a connector for this lease\nsubmit the lease request\nDRM lease request\nrequested a connector from a different lease device\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nrequest a connector for this lease\nsubmit the lease request\ndestroys the lease object\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nsent when the lease has been revoked\nshares the DRM file descriptor\nThe wire opcode for this request\nThe minimal object version supporting this request\na DRM lease\ndestroys the lease object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nleased DRM file descriptor\nClient-side API of this protocol\nprotocol for fifo constraints\nfifo interface\nfifo manager already exists for surface\nunbind from the manager interface\nfatal presentation error\nrequest fifo interface for surface\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nprotocol for fifo constraints\nunbind from the manager interface\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nrequest fifo interface for surface\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\ndestroy the fifo interface\nfatal error\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nsets the start point for a fifo constraint\nthe associated surface no longer exists\nadds a fifo constraint to a content update\nfifo interface\ndestroy the fifo interface\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nsets the start point for a fifo constraint\nadds a fifo constraint to a content update\nClient-side API of this protocol\nfractional surface scale information\nfractional scale interface to a wl_surface\nunbind the fractional surface scale interface\nthe surface already has a fractional_scale object …\nextend surface interface for scale information\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nfractional surface scale information\nunbind the fractional surface scale interface\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nextend surface interface for scale information\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nthe surface\nremove surface scale information for surface\nThe wire opcode for this event\nThe minimal object version supporting this event\nnotify of new preferred scale\nThe wire opcode for this request\nThe minimal object version supporting this request\nfractional scale interface to a wl_surface\nremove surface scale information for surface\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nthe new preferred scale\nUnstable version 1\nClient-side API of this protocol\nparameters for creating a dmabuf-based wl_buffer\ndmabuf feedback\nfactory for creating dmabuf-based wl_buffers\nadd a dmabuf to the temporary set\nthe dmabuf_batch object has already been used to create a …\nbottom field first\ncreate a wl_buffer from the given dmabufs\nimmediately create a wl_buffer from the given dmabufs\nbuffer creation succeeded\ndelete this object, used or not\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nbuffer creation failed\nmissing or too many planes to create a buffer\ncontent is interlaced\ninvalid width or height\nformat not supported\ninvalid wl_buffer resulted from importing dmabufs via the …\noffset + stride * height goes out of dmabuf bounds\nplane index out of bounds\nthe plane index was already set\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\ncontents are y-inverted\nparameters for creating a dmabuf-based wl_buffer\nadd a dmabuf to the temporary set\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\ncreate a wl_buffer from the given dmabufs\nimmediately create a wl_buffer from the given dmabufs\ndelete this object, used or not\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nGet the opcode number of this message\nGet the opcode number of this message\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nthe newly created wl_buffer\ndmabuf fd\nsee enum flags\nsee enum flags\nDRM_FORMAT code\nDRM_FORMAT code\nbase plane height in pixels\nbase plane height in pixels\nhigh 32 bits of layout modifier\nlow 32 bits of layout modifier\noffset in bytes\nplane index\nstride in bytes\nbase plane width in pixels\nbase plane width in pixels\ndestroy the feedback object\nall feedback has been sent\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nformat and modifier table\npreferred main device\nThe wire opcode for this request\nThe minimal object version supporting this request\ndirect scan-out tranche\na preference tranche has been sent\ntranche flags\nsupported buffer format modifier\ntarget device\ndmabuf feedback\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\ndestroy the feedback object\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nGet the opcode number of this message\nGet the opcode number of this message\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\ndevice dev_t value\ndevice dev_t value\ntable file descriptor\ntranche flags\narray of 16-bit indexes\ntable size, in bytes\ncreate a temporary object for buffer parameters\nunbind the factory\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nsupported buffer format\nget default feedback\nget feedback for a surface\nsupported buffer format modifier\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nfactory for creating dmabuf-based wl_buffers\ncreate a temporary object for buffer parameters\nunbind the factory\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nget default feedback\nget feedback for a surface\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nDRM_FORMAT code\nDRM_FORMAT code\nhigh 32 bits of layout modifier\nlow 32 bits of layout modifier\nVersion 1\nClient-side API of this protocol\nglobal for providing explicit synchronization\nper-surface explicit synchronization\nsynchronization object timeline\ndestroy explicit synchronization factory object\nextend surface interface for explicit synchronization\nimport a DRM syncobj timeline\nthe timeline object could not be imported\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nthe surface already has a synchronization object associated\nglobal for providing explicit synchronization\ndestroy explicit synchronization factory object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nextend surface interface for explicit synchronization\nimport a DRM syncobj timeline\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\ndrm_syncobj file descriptor\nthe surface\nacquire and release timeline points are in conflict\ndestroy the surface synchronization object\nno acquire timeline point was set\nno buffer was attached\nno release timeline point was set\nthe associated wl_surface was destroyed\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nset the acquire timeline point\nset the release timeline point\nthe buffer does not support explicit synchronization\nper-surface explicit synchronization\ndestroy the surface synchronization object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nset the acquire timeline point\nset the release timeline point\nhigh 32 bits of the point value\nhigh 32 bits of the point value\nlow 32 bits of the point value\nlow 32 bits of the point value\ndestroy the timeline\nThe wire opcode for this request\nThe minimal object version supporting this request\nsynchronization object timeline\ndestroy the timeline\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nClient-side API of this protocol\ntimed presentation related wl_surface requests\npresentation time feedback event\nclock ID for timestamps\nunbind from the presentation interface\nThe wire opcode for this event\nThe minimal object version supporting this event\nfatal presentation errors\nrequest presentation feedback information\ninvalid flag\ninvalid value in tv_nsec\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\ntimed presentation related wl_surface requests\nunbind from the presentation interface\nrequest presentation feedback information\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nplatform clock identifier\ntarget surface\nthe content update was not displayed\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nhardware provided the presentation timestamp\nhardware signalled the start of the presentation\nbitmask of flags in presented event\nthe content update was displayed\npresentation synchronized to this output\npresentation was vsync’d\npresentation time feedback event\npresentation was done zero-copy\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nGet the opcode number of this message\nGet the opcode number of this message\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\ncombination of ‘kind’ values\npresentation output\nnanoseconds till next refresh\nhigh 32 bits of refresh counter\nlow 32 bits of refresh counter\nnanoseconds part of the presentation timestamp\nhigh 32 bits of the seconds part of the presentation …\nlow 32 bits of the seconds part of the presentation …\nClient-side API of this protocol\nclient security context manager\nclient security context\ncreate a new security context\ndestroy the manager object\nlistening socket FD is invalid\nnested security contexts are forbidden\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nclient security context manager\ncreate a new security context\ndestroy the manager object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nFD signaling when done\nlistening socket FD\nmetadata has already been set\nsecurity context has already been committed\nregister the security context\ndestroy the security context object\nmetadata is invalid\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nset the application ID\nset the instance ID\nset the sandbox engine\nclient security context\nregister the security context\ndestroy the security context object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nset the application ID\nset the instance ID\nset the sandbox engine\nthe application ID\nthe instance ID\nthe sandbox engine name\nVersion 1\nClient-side API of this protocol\nglobal factory for single-pixel buffers\ncreate a 1×1 buffer from 32-bit RGBA values\ndestroy the manager\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nglobal factory for single-pixel buffers\ncreate a 1×1 buffer from 32-bit RGBA values\ndestroy the manager\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nvalue of the buffer’s alpha channel\nvalue of the buffer’s blue channel\nvalue of the buffer’s green channel\nvalue of the buffer’s red channel\nUnstable version 1\nUnstable version 2\nClient-side API of this protocol\ncontroller object for graphic tablet devices\ncontroller object for graphic tablet devices of a seat\na physical tablet tool\ngraphics tablet device\nrelease the memory for the tablet manager object\nget the tablet seat\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\ncontroller object for graphic tablet devices\nrelease the memory for the tablet manager object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nget the tablet seat\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nThe wl_seat object to retrieve the tablets for\nrelease the memory for the tablet seat object\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this request\nThe minimal object version supporting this request\nnew device notification\na new tool has been used with a tablet\ncontroller object for graphic tablet devices of a seat\nrelease the memory for the tablet seat object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nthe newly added graphics tablet\nthe newly added tablet tool\nAirbrush\nBrush\nbutton event\nphysical button state\ncapability flags for a tool\ntool capability notification\ndestroy the tool object\nDistance axis\ndistance change event\ntool description events sequence complete\ntablet tool is making contact\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nEraser\nFinger\nframe event\nhardware id notification in Wacom’s format\nunique hardware serial number of the tool\nLens\nmotion event\nMouse\nPen\nPencil\nbutton is pressed\nPressure axis\npressure change event\nproximity in event\nproximity out event\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nbutton is not pressed\ntool removed\ngiven wl_surface has another role\nZ-rotation axis\nz-rotation change event\nset the tablet tool’s surface\nSlider axis\nSlider position change event\nTilt axes\ntilt change event\na physical tool type\ntool type\ntablet tool is no longer making contact\nWheel axis\nWheel delta event\na physical tablet tool\ndestroy the tool object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nset the tablet tool’s surface\nThe button whose state has changed\nthe capability\nThe wheel delta in discrete clicks\nThe current rotation of the Z axis\nThe wheel delta in 0.01 of a degree\nThe current distance value\nthe hardware id, most significant bits\nthe hardware id, least significant bits\nthe unique serial number of the tool, most significant bits\nthe unique serial number of the tool, least significant …\nThe current position of slider\nThe current pressure value\nWhether the button was pressed or released\nThe current surface the tablet tool is over\nThe tablet the tool is in proximity of\nThe current value of the X tilt axis\nThe current value of the Y tilt axis\nThe time of the event with millisecond granularity\nthe physical tool type\nsurface-local x coordinate\nsurface-local y coordinate\nsurface-local x coordinate\nsurface-local y coordinate\nserial of the enter event\ndestroy the tablet object\ntablet description events sequence complete\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\ntablet device USB vendor/product id\ntablet device name\npath to the device\nThe wire opcode for this request\nThe minimal object version supporting this request\ntablet removed event\ngraphics tablet device\ndestroy the tablet object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nthe device name\npath to local device\nUSB product id\nUSB vendor id\nClient-side API of this protocol\ncontroller object for graphic tablet devices\na set of buttons, rings and strips\npad ring\npad strip\na set of buttons, rings and strips\ncontroller object for graphic tablet devices of a seat\na physical tablet tool\ngraphics tablet device\nrelease the memory for the tablet manager object\nget the tablet seat\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\ncontroller object for graphic tablet devices\nrelease the memory for the tablet manager object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nget the tablet seat\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nThe wl_seat object to retrieve the tablets for\nbuttons announced\ndestroy the pad object\ntablet group description events sequence complete\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nmode switch event\nmode-switch ability announced\nThe wire opcode for this request\nThe minimal object version supporting this request\nring announced\nstrip announced\na set of buttons, rings and strips\ndestroy the pad object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nbuttons in this group\nthe new mode of the pad\nthe number of modes\nthe time of the event with millisecond granularity\nangle changed\ndestroy the ring object\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nfinger\nend of a ring event sequence\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nset compositor feedback\nring axis source\nring event source\ninteraction stopped\npad ring\ndestroy the ring object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nset compositor feedback\nthe current angle in degrees\nthe event source\ntimestamp with millisecond granularity\nring description\nserial of the mode switch event\ndestroy the strip object\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nfinger\nend of a strip event sequence\nposition changed\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nset compositor feedback\nstrip axis source\nstrip event source\ninteraction stopped\npad strip\ndestroy the strip object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nset compositor feedback\nthe current position\nthe event source\ntimestamp with millisecond granularity\nstrip description\nserial of the mode switch event\nphysical button state\nphysical button state\nbuttons announced\ndestroy the pad object\npad description event sequence complete\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nenter event\ngroup announced\nleave event\npath to the device\nthe button is pressed\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nthe button is not pressed\npad removed event\nset compositor feedback\na set of buttons, rings and strips\ndestroy the pad object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nset compositor feedback\nthe index of the button that changed state\nthe number of buttons\npath to local device\nserial number of the enter event\nserial number of the leave event\nsurface the pad is focused on\nsurface the pad is no longer focused on\nthe tablet the pad is attached to\nthe time of the event with millisecond granularity\nbutton index\nbutton description\nserial of the mode switch event\nrelease the memory for the tablet seat object\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nnew pad notification\nThe wire opcode for this request\nThe minimal object version supporting this request\nnew device notification\na new tool has been used with a tablet\ncontroller object for graphic tablet devices of a seat\nrelease the memory for the tablet seat object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nthe newly added graphics tablet\nthe newly added tablet tool\nthe newly added pad\nAirbrush\nBrush\nbutton event\nphysical button state\ncapability flags for a tool\ntool capability notification\ndestroy the tool object\nDistance axis\ndistance change event\ntool description events sequence complete\ntablet tool is making contact\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nEraser\nFinger\nframe event\nhardware id notification in Wacom’s format\nunique hardware serial number of the tool\nLens\nmotion event\nMouse\nPen\nPencil\nbutton is pressed\nPressure axis\npressure change event\nproximity in event\nproximity out event\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nbutton is not pressed\ntool removed\ngiven wl_surface has another role\nZ-rotation axis\nz-rotation change event\nset the tablet tool’s surface\nSlider axis\nSlider position change event\nTilt axes\ntilt change event\na physical tool type\ntool type\ntablet tool is no longer making contact\nWheel axis\nWheel delta event\na physical tablet tool\ndestroy the tool object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nset the tablet tool’s surface\nThe button whose state has changed\nthe capability\nThe wheel delta in discrete clicks\nThe current rotation of the Z axis\nThe wheel delta in degrees\nThe current distance value\nthe hardware id, most significant bits\nthe hardware id, least significant bits\nthe unique serial number of the tool, most significant bits\nthe unique serial number of the tool, least significant …\nThe current position of slider\nThe current pressure value\nWhether the button was pressed or released\nThe current surface the tablet tool is over\nThe tablet the tool is in proximity of\nThe current value of the X tilt axis\nThe current value of the Y tilt axis\nThe time of the event with millisecond granularity\nthe physical tool type\nsurface-local x coordinate\nsurface-local y coordinate\nsurface-local x coordinate\nsurface-local y coordinate\nserial of the proximity_in event\ndestroy the tablet object\ntablet description events sequence complete\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\ntablet device USB vendor/product id\ntablet device name\npath to the device\nThe wire opcode for this request\nThe minimal object version supporting this request\ntablet removed event\ngraphics tablet device\ndestroy the tablet object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nthe device name\npath to local device\nUSB product id\nUSB vendor id\nClient-side API of this protocol\nprotocol for tearing control\nper-surface tearing control interface\ndestroy tearing control factory object\nextend surface interface for tearing control\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nthe surface already has a tearing object associated\nprotocol for tearing control\ndestroy tearing control factory object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nextend surface interface for tearing control\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nasynchronous presentation\ndestroy tearing control object\npresentation hint values\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nset presentation hint\ntearing-free presentation\nper-surface tearing control interface\ndestroy tearing control object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nset presentation hint\nClient-side API of this protocol\ncrop and scale interface to a wl_surface\nsurface cropping and scaling\ndestination size is not integer\nnegative or zero values in width or height\nremove scaling and cropping from the surface\nthe wl_surface was destroyed\nsource rectangle extends outside of the content area\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nset the surface size for scaling\nset the source rectangle for cropping\ncrop and scale interface to a wl_surface\nremove scaling and cropping from the surface\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nset the surface size for scaling\nset the source rectangle for cropping\nsource rectangle height\nsurface height\nsource rectangle width\nsurface width\nsource rectangle x\nsource rectangle y\nunbind from the cropping and scaling interface\nextend surface interface for crop and scale\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nthe surface already has a viewport object associated\nsurface cropping and scaling\nunbind from the cropping and scaling interface\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nextend surface interface for crop and scale\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nthe surface\nThe way for a client to pass focus to another toplevel is …\nThe <code>xdg_wm_dialog_v1</code> interface is exposed as a global …\nXDG Shell protocol\nThis global interface enables clients to ring the system …\nThis protocol enhances normal drag and drop with the …\nThis protocol allows clients to set icons for their …\nClient-side API of this protocol\nan exported activation handle\ninterface for activating surfaces\nThe token has already been used previously\nissues the token request\ndestroy the xdg_activation_token_v1 object\nthe exported activation token\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nspecifies the application being activated\nspecifies the seat and serial of the activating event\nspecifies the surface requesting activation\nan exported activation handle\nissues the token request\ndestroy the xdg_activation_token_v1 object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nspecifies the application being activated\nspecifies the seat and serial of the activating event\nspecifies the surface requesting activation\nthe exported activation token\nthe application id of the client being activated.\nthe wl_seat of the event\nthe serial of the event that triggered the activation\nthe requesting surface\nnotify new interaction being available\ndestroy the xdg_activation object\nrequests a token\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\ninterface for activating surfaces\nnotify new interaction being available\ndestroy the xdg_activation object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nrequests a token\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nthe wl_surface to activate\nthe activation token of the initiating client\nVersion 1\nClient-side API of this protocol\ndialog object\ncreate dialogs related to other toplevels\ndestroy the dialog object\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nmark dialog as modal\nmark dialog as not modal\ndialog object\ndestroy the dialog object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nmark dialog as modal\nmark dialog as not modal\nthe xdg_toplevel object has already been used to create a …\ndestroy the dialog manager object\ncreate a dialog object\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\ncreate dialogs related to other toplevels\ndestroy the dialog manager object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\ncreate a dialog object\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nClient-side API of this protocol\nshort-lived, popup surfaces for menus\nchild surface positioner\ndesktop user interface surface base interface\ntoplevel surface\ncreate desktop-style surfaces\nconfigure the popup surface\nremove xdg_popup interface\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nmake the popup take an explicit grab\ntried to grab after being mapped\npopup interaction is done\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nrecalculate the popup’s location\nsignal the completion of a repositioned request\nshort-lived, popup surfaces for menus\nremove xdg_popup interface\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nmake the popup take an explicit grab\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nrecalculate the popup’s location\nwindow geometry height\nreposition request token\nwindow geometry width\nx position relative to parent surface window geometry\ny position relative to parent surface window geometry\nthe wl_seat of the user event\nthe serial of the user event\nreposition request token\nconstraint adjustments\ndestroy the xdg_positioner object\ninvert the anchor and gravity on the x axis\ninvert the anchor and gravity on the y axis\ninvalid input provided\ndon’t move the child surface when constrained\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nhorizontally resize the surface\nvertically resize the surface\nset anchor rectangle anchor\nset the anchor rectangle within the parent surface\nset the adjustment to be done when constrained\nset child surface gravity\nset surface position offset\nset parent configure this is a response to\nSet the parent window geometry the compositor should use …\ncontinuously reconstrain the surface\nset the size of the to-be positioned rectangle\nmove along the x axis until unconstrained\nmove along the y axis until unconstrained\nchild surface positioner\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\ndestroy the xdg_positioner object\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nGet the opcode number of this message\nGet the opcode number of this message\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nset anchor rectangle anchor\nset the anchor rectangle within the parent surface\nset the adjustment to be done when constrained\nset child surface gravity\nset surface position offset\nset parent configure this is a response to\nSet the parent window geometry the compositor should use …\ncontinuously reconstrain the surface\nset the size of the to-be positioned rectangle\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nanchor\nbit mask of constraint adjustments\ngravity direction\nheight of positioned rectangle\nheight of anchor rectangle\nfuture window geometry height of parent\nfuture window geometry width of parent\nserial of parent configure event\nwidth of positioned rectangle\nwidth of anchor rectangle\nx position of anchor rectangle\nsurface position x offset\ny position of anchor rectangle\nsurface position y offset\nack a configure event\nSurface was already constructed\nsuggest a surface change\nSurface was destroyed before its role object\ndestroy the xdg_surface\nThe wire opcode for this event\nThe minimal object version supporting this event\nassign the xdg_popup surface role\nassign the xdg_toplevel surface role\nInvalid serial number when acking a configure event\nWidth or height was zero or negative\nSurface was not fully constructed\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nset the new window geometry\nAttaching a buffer to an unconfigured surface\ndesktop user interface surface base interface\nack a configure event\ndestroy the xdg_surface\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nassign the xdg_popup surface role\nassign the xdg_toplevel surface role\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nset the new window geometry\nserial of the configure event\nthe serial from the configure event\nthe surface is now activated\nsurface wants to be closed\nsuggest a surface change\nrecommended window geometry bounds\ndestroy the xdg_toplevel\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nthe surface is fullscreen\nset_fullscreen and unset_fullscreen are available\ninvalid parent toplevel\nprovided value is not a valid variant of the resize_edge …\nclient provided an invalid min or max size\nset_maximized and unset_maximized are available\nthe surface is maximized\nset_minimized is available\nstart an interactive move\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nstart an interactive resize\nedge values for resizing\nthe surface is being resized\nset application ID\nset the window as fullscreen on an output\nset the maximum size\nmaximize the window\nset the minimum size\nset the window as minimized\nset the parent of this surface\nset surface title\nshow the window menu\ntypes of state on the surface\nsurface repaint is suspended\nthe surface’s bottom edge is tiled\nthe surface’s left edge is tiled\nthe surface’s right edge is tiled\nthe surface’s top edge is tiled\nunset the window as fullscreen\nunmaximize the window\nshow_window_menu is available\ncompositor capabilities\ntoplevel surface\nstart an interactive move\ndestroy the xdg_toplevel\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nstart an interactive resize\nset application ID\nset the window as fullscreen on an output\nset the maximum size\nmaximize the window\nset the minimum size\nset the window as minimized\nset the parent of this surface\nset surface title\nshow the window menu\nunset the window as fullscreen\nunmaximize the window\narray of 32-bit capabilities\nwhich edge or corner is being dragged\nthe wl_seat of the user event\nthe wl_seat of the user event\nthe wl_seat of the user event\nthe serial of the user event\nthe serial of the user event\nthe serial of the user event\nthe x position to pop up the window menu at\nthe y position to pop up the window menu at\ncreate a positioner object\nxdg_wm_base was destroyed before children\ndestroy xdg_wm_base\nThe wire opcode for this event\nThe minimal object version supporting this event\ncreate a shell surface from a surface\nthe client specified an invalid popup parent surface\nthe client provided an invalid positioner\nthe client provided an invalid surface state\nthe client tried to map or destroy a non-topmost popup\ncheck if the client is alive\nrespond to a ping event\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\ngiven wl_surface has another role\nthe client didn’t respond to a ping event in time\ncreate desktop-style surfaces\ncreate a positioner object\ndestroy xdg_wm_base\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\ncreate a shell surface from a surface\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nrespond to a ping event\npass this to the pong request\nserial of the ping event\nVersion 1\nClient-side API of this protocol\nsystem bell\ndestroy the system bell object\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nring the system bell\nsystem bell\ndestroy the system bell object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nring the system bell\nassociated surface\nVersion 1\nClient-side API of this protocol\nMove a window during a drag\nObject representing a toplevel move during a drag\ndestroy the xdg_toplevel_drag_manager_v1 object\nget an xdg_toplevel_drag for a wl_data_source\ndata_source already used for toplevel drag\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nMove a window during a drag\ndestroy the xdg_toplevel_drag_manager_v1 object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nget an xdg_toplevel_drag for a wl_data_source\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nMove a toplevel with the drag operation\ndestroy an xdg_toplevel_drag_v1 object\ndrag has not ended\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nvalid toplevel already attached\nObject representing a toplevel move during a drag\nMove a toplevel with the drag operation\ndestroy an xdg_toplevel_drag_v1 object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\ndragged surface x offset\ndragged surface y offset\nVersion 1\nClient-side API of this protocol\ninterface to manage toplevel icons\na toplevel window icon\ncreate a new icon instance\ndestroy the toplevel icon manager\nall information has been sent\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\ndescribes a supported &amp; preferred icon size\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nset an icon on a toplevel window\ninterface to manage toplevel icons\ncreate a new icon instance\ndestroy the toplevel icon manager\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nset an icon on a toplevel window\nthe edge size of the square icon in surface-local …\nthe toplevel to act on\nadd icon data from a pixel buffer\ndestroy the icon object\nthe icon has already been assigned to a toplevel and must …\nthe provided buffer does not satisfy requirements\nthe provided buffer has been destroyed before the toplevel …\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nset an icon name\na toplevel window icon\nadd icon data from a pixel buffer\ndestroy the icon object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nset an icon name\nthe scaling factor of the icon, e.g. 1\nThis protocol adds a xwayland_surface role which allows an …\nClient-side API of this protocol\ncontext object for Xwayland shell\ninterface for associating Xwayland windows to wl_surfaces\ndestroy the Xwayland shell object\nassign the xwayland_surface surface role\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\ngiven wl_surface has another role\ncontext object for Xwayland shell\ndestroy the Xwayland shell object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nassign the xwayland_surface surface role\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\ngiven wl_surface is already associated with an X11 window\ndestroy the Xwayland surface object\nserial was not valid\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nassociates a Xwayland window to a wl_surface\ninterface for associating Xwayland windows to wl_surfaces\ndestroy the Xwayland surface object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nassociates a Xwayland window to a wl_surface\nThe upper 32-bits of the serial number associated with the …\nThe lower 32-bits of the serial number associated with the …")