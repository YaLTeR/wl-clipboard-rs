var searchIndex = JSON.parse('{\
"bitflags":{"doc":"Generate types for C-style flags with ergonomic APIs.","t":"SCIQSSDILLOKLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLALLLLLLALLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLDIILLLLLLFLLLKLLFLLLK","n":["ALL","BitFlags","Bits","Bits","EMPTY","FLAGS","Flag","Flags","all","all","bitflags","bits","borrow","borrow_mut","complement","complement","contains","contains","difference","difference","empty","empty","from","from_bits","from_bits","from_bits_retain","from_bits_truncate","from_bits_truncate","from_name","from_name","insert","insert","intersection","intersection","intersects","intersects","into","is_all","is_all","is_empty","is_empty","is_named","is_unnamed","iter","iter","iter","iter_names","iter_names","name","new","parser","remove","remove","set","set","symmetric_difference","symmetric_difference","toggle","toggle","try_from","try_into","type_id","union","union","value","Iter","IterNames","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","into_iter","into_iter","next","next","remaining","try_from","try_from","try_into","try_into","type_id","type_id","ParseError","ParseHex","WriteHex","borrow","borrow_mut","empty_flag","fmt","fmt","from","from_str","into","invalid_hex_flag","invalid_named_flag","parse_hex","provide","to_string","to_writer","try_from","try_into","type_id","write_hex"],"q":[[0,"bitflags"],[65,"bitflags::iter"],[86,"bitflags::parser"]],"d":["A value with all bits set.","","A bits type that can be used as storage for a flags type.","The underlying bits type.","A value with all bits unset.","The set of defined flags.","A defined flags value that may be named or unnamed.","A set of defined flags using a bits type as storage.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Generate a flags type.","Get the underlying bits value.","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether the flag is named.","Whether the flag is unnamed.","Yield the bits of a source flags value in a set of …","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Get the name of this flag.","Define a flag.","Parsing flags from text.","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Call <code>Flags::insert</code> when <code>value</code> is <code>true</code> or <code>Flags::remove</code> …","Call <code>Flags::insert</code> when <code>value</code> is <code>true</code> or <code>Flags::remove</code> …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the flags value of this flag.","An iterator over flags values.","An iterator over flags values.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Get a flags value of any remaining bits that haven’t …","","","","","","","An error encountered while parsing flags from text.","Parse a value from a hex string.","Encode a value as a hex string.","","","A hex or named flag wasn’t found between separators.","","","Returns the argument unchanged.","Parse a flags value from text.","Calls <code>U::from(self)</code>.","An invalid hex flag was encountered.","A named flag that doesn’t correspond to any on the flags …","Parse the value from hex.","","","Write a flags value as text.","","","","Write the value as hex."],"i":[19,0,0,10,19,10,0,0,10,10,0,10,5,5,10,10,10,10,10,10,10,10,5,10,10,10,10,10,10,10,10,10,10,10,10,10,5,10,10,10,10,5,5,0,10,10,10,10,5,5,0,10,10,10,10,10,10,10,10,5,5,5,10,10,5,0,0,6,7,6,7,6,7,6,7,6,7,6,7,7,6,7,6,7,6,7,0,0,0,11,11,11,11,11,11,0,11,11,11,20,11,11,0,11,11,11,21],"f":[0,0,0,0,0,0,0,0,[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[1,1],2],[[1,1],2],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[]],[[]],[[]],[4,3],[4,3],[[1,1]],[[1,1]],[[]],[[]],[[1,1],2],[[1,1],2],[[]],[[],2],[[],2],[[],2],[[],2],[5,2],[5,2],0,[[],6],[[],6],[[],7],[[],7],[5,4],[4,5],0,[[1,1]],[[1,1]],[[1,1,2]],[[1,1,2]],[[]],[[]],[[1,1]],[[1,1]],[[],8],[[],8],[[],9],[[]],[[]],[5],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[6,[10]]],3],[[[7,[10]]],3],[7],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],0,0,0,[[]],[[]],[[],11],[[11,12],13],[[11,12],13],[[]],[4,[[8,[10,11]]]],[[]],[14,11],[14,11],[4,[[8,[1,11]]]],[15],[[],16],[[10,17],[[8,[18]]]],[[],8],[[],8],[[],9],[17,13]],"c":[],"p":[[8,"Sized"],[15,"bool"],[4,"Option"],[15,"str"],[3,"Flag"],[3,"Iter"],[3,"IterNames"],[4,"Result"],[3,"TypeId"],[8,"Flags"],[3,"ParseError"],[3,"Formatter"],[6,"Result"],[8,"Display"],[3,"Demand"],[3,"String"],[8,"Write"],[3,"Error"],[8,"Bits"],[8,"ParseHex"],[8,"WriteHex"]]},\
"bytecount":{"doc":"count occurrences of a given byte, or the number of UTF-8 …","t":"FFFFF","n":["count","naive_count","naive_count_32","naive_num_chars","num_chars"],"q":[[0,"bytecount"]],"d":["Count occurrences of a byte in a slice of bytes, fast","Count occurrences of a byte in a slice of bytes, simple","Count up to <code>(2^32)-1</code> occurrences of a byte in a slice of …","Count the number of UTF-8 encoded Unicode codepoints in a …","Count the number of UTF-8 encoded Unicode codepoints in a …"],"i":[0,0,0,0,0],"f":[[[[2,[1]],1],3],[[[2,[1]],1],3],[[[2,[1]],1],3],[[[2,[1]]],3],[[[2,[1]]],3]],"c":[],"p":[[15,"u8"],[15,"slice"],[15,"usize"]]},\
"cfg_if":{"doc":"A macro for defining <code>#[cfg]</code> if-else statements.","t":"O","n":["cfg_if"],"q":[[0,"cfg_if"]],"d":["The main macro provided by this crate. See crate …"],"i":[0],"f":[0],"c":[],"p":[]},\
"derive_new":{"doc":"A custom derive implementation for <code>#[derive(new)]</code>","t":"Y","n":["new"],"q":[[0,"derive_new"]],"d":[""],"i":[0],"f":[0],"c":[],"p":[]},\
"dlib":{"doc":"dlib is a small crate providing macros to make easy the …","t":"NNNNNENNNNNNNNNNNENNNLLLLOOOLLLLLLLLLLLLLLLLLLLLMMMMMMMMM","n":["CantOpen","CreateCString","CreateCStringWithTrailing","DlClose","DlCloseUnknown","DlError","DlOpen","DlOpenUnknown","DlSym","DlSymUnknown","FreeLibrary","FreeLibraryUnknown","GetModuleHandleExW","GetModuleHandleExWUnknown","GetProcAddress","GetProcAddressUnknown","IncompatibleSize","LibLoadingError","LoadLibraryExW","LoadLibraryExWUnknown","MissingSymbol","borrow","borrow","borrow_mut","borrow_mut","external_library","ffi_dispatch","ffi_dispatch_static","fmt","fmt","fmt","fmt","from","from","into","into","provide","provide","source","source","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","desc","desc","desc","source","source","source","source","source","source"],"q":[[0,"dlib"],[48,"dlib::LibLoadingError"]],"d":["The requested library would not be opened","Could not create a new CString.","Could not create a new CString from bytes with trailing …","The <code>dlclose</code> call failed.","The <code>dlclose</code> call failed and system did not report an error.","An error generated when failing to load a library","The <code>dlopen</code> call failed.","The <code>dlopen</code> call failed and system did not report an error.","The <code>dlsym</code> call failed.","The <code>dlsym</code> call failed and system did not report an error.","The <code>FreeLibrary</code> call failed.","The <code>FreeLibrary</code> call failed and system did not report an …","The <code>GetModuleHandleExW</code> call failed.","The <code>GetModuleHandleExW</code> call failed and system did not …","The <code>GetProcAddress</code> call failed.","The <code>GetProcAddressUnknown</code> call failed and system did not …","The requested type cannot possibly work.","Errors.","The <code>LoadLibraryW</code> call failed.","The <code>LoadLibraryW</code> call failed and system did not report an …","Some required symbol was missing in the library","","","","","Main macro of this library, used to generate the the FFI …","Macro for generically invoking a FFI function","Macro for generically accessing a FFI static","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","The source error.","The source error.","The source error.","The source error.","The source error.","The source error.","The source error.","The source error.","The source error."],"i":[1,4,4,4,4,0,4,4,4,4,4,4,4,4,4,4,4,0,4,4,1,1,4,1,4,0,0,0,1,1,4,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,12,13,14,15,16,17,18,19,20],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,0,[[1,2],3],[[1,2],3],[[4,2],[[6,[5]]]],[[4,2],[[6,[5]]]],[[]],[[]],[[]],[[]],[7],[7],[1,[[9,[8]]]],[4,[[9,[8]]]],[[],10],[[],10],[[],6],[[],6],[[],6],[[],6],[[],11],[[],11],0,0,0,0,0,0,0,0,0],"c":[],"p":[[4,"DlError"],[3,"Formatter"],[6,"Result"],[4,"LibLoadingError"],[3,"Error"],[4,"Result"],[3,"Demand"],[8,"Error"],[4,"Option"],[3,"String"],[3,"TypeId"],[13,"DlOpen"],[13,"DlSym"],[13,"DlClose"],[13,"LoadLibraryExW"],[13,"GetModuleHandleExW"],[13,"GetProcAddress"],[13,"FreeLibrary"],[13,"CreateCString"],[13,"CreateCStringWithTrailing"]]},\
"downcast_rs":{"doc":"Build status Latest version Documentation","t":"IIKKOKKK","n":["Downcast","DowncastSync","as_any","as_any_mut","impl_downcast","into_any","into_any_arc","into_any_rc"],"q":[[0,"downcast_rs"]],"d":["Supports conversion to <code>Any</code>. Traits to be extended by …","Extends <code>Downcast</code> to support <code>Sync</code> traits that thus support …","Convert <code>&amp;Trait</code> (where <code>Trait: Downcast</code>) to <code>&amp;Any</code>. This is …","Convert <code>&amp;mut Trait</code> (where <code>Trait: Downcast</code>) to <code>&amp;Any</code>. This …","Adds downcasting support to traits that extend …","Convert <code>Box&lt;dyn Trait&gt;</code> (where <code>Trait: Downcast</code>) to …","Convert <code>Arc&lt;Trait&gt;</code> (where <code>Trait: Downcast</code>) to <code>Arc&lt;Any&gt;</code>. …","Convert <code>Rc&lt;Trait&gt;</code> (where <code>Trait: Downcast</code>) to <code>Rc&lt;Any&gt;</code>. …"],"i":[0,0,5,5,0,5,6,5],"f":[0,0,[[],1],[[],1],0,[2,[[2,[1]]]],[3,[[3,[1]]]],[4,[[4,[1]]]]],"c":[],"p":[[8,"Any"],[3,"Box"],[3,"Arc"],[3,"Rc"],[8,"Downcast"],[8,"DowncastSync"]]},\
"equivalent":{"doc":"<code>Equivalent</code> and <code>Comparable</code> are traits for key comparison in …","t":"IIKK","n":["Comparable","Equivalent","compare","equivalent"],"q":[[0,"equivalent"]],"d":["Key ordering trait.","Key equivalence trait.","Compare self to <code>key</code> and return their ordering.","Compare self to <code>key</code> and return <code>true</code> if they are equal."],"i":[0,0,3,4],"f":[0,0,[[],1],[[],2]],"c":[],"p":[[4,"Ordering"],[15,"bool"],[8,"Comparable"],[8,"Equivalent"]]},\
"fastrand":{"doc":"A simple and fast random number generator.","t":"DFLFLFLLLFLFLFLLLLFLLLFLFLLLLLFLFLFLFLFLFLLFLFLLFLFLLLLLFLFLFLFLFLFLFLL","n":["Rng","alphabetic","alphabetic","alphanumeric","alphanumeric","bool","bool","borrow","borrow_mut","char","char","choice","choice","choose_multiple","choose_multiple","clone","clone_into","default","digit","digit","eq","equivalent","f32","f32","f64","f64","fill","fmt","fork","from","get_seed","get_seed","i128","i128","i16","i16","i32","i32","i64","i64","i8","i8","into","isize","isize","lowercase","lowercase","new","seed","seed","shuffle","shuffle","to_owned","try_from","try_into","type_id","u128","u128","u16","u16","u32","u32","u64","u64","u8","u8","uppercase","uppercase","usize","usize","with_seed"],"q":[[0,"fastrand"]],"d":["A random number generator.","Generates a random <code>char</code> in ranges a-z and A-Z.","Generates a random <code>char</code> in ranges a-z and A-Z.","Generates a random <code>char</code> in ranges a-z, A-Z and 0-9.","Generates a random <code>char</code> in ranges a-z, A-Z and 0-9.","Generates a random <code>bool</code>.","Generates a random <code>bool</code>.","","","Generates a random <code>char</code> in the given range.","Generates a random <code>char</code> in the given range.","Choose an item from an iterator at random.","Choose an item from an iterator at random.","Collects <code>amount</code> values at random from the iterator into a …","Collects <code>amount</code> values at random from the iterator into a …","Clones the generator by creating a new generator with the …","","Initialize the <code>Rng</code> from the system’s random number …","Generates a random digit in the given <code>base</code>.","Generates a random digit in the given <code>base</code>.","","","Generates a random <code>f32</code> in range <code>0..1</code>.","Generates a random <code>f32</code> in range <code>0..1</code>.","Generates a random <code>f64</code> in range <code>0..1</code>.","Generates a random <code>f64</code> in range <code>0..1</code>.","Fill a byte slice with random data.","","Clones the generator by deterministically deriving a new …","Returns the argument unchanged.","Gives back <strong>current</strong> seed that is being held by the …","Gives back <strong>current</strong> seed that is being held by this …","Generates a random <code>i128</code> in the given range.","Generates a random <code>i128</code> in the given range.","Generates a random <code>i16</code> in the given range.","Generates a random <code>i16</code> in the given range.","Generates a random <code>i32</code> in the given range.","Generates a random <code>i32</code> in the given range.","Generates a random <code>i64</code> in the given range.","Generates a random <code>i64</code> in the given range.","Generates a random <code>i8</code> in the given range.","Generates a random <code>i8</code> in the given range.","Calls <code>U::from(self)</code>.","Generates a random <code>isize</code> in the given range.","Generates a random <code>isize</code> in the given range.","Generates a random <code>char</code> in range a-z.","Generates a random <code>char</code> in range a-z.","Creates a new random number generator.","Initializes the thread-local generator with the given seed.","Initializes this generator with the given seed.","Shuffles a slice randomly.","Shuffles a slice randomly.","","","","","Generates a random <code>u128</code> in the given range.","Generates a random <code>u128</code> in the given range.","Generates a random <code>u16</code> in the given range.","Generates a random <code>u16</code> in the given range.","Generates a random <code>u32</code> in the given range.","Generates a random <code>u32</code> in the given range.","Generates a random <code>u64</code> in the given range.","Generates a random <code>u64</code> in the given range.","Generates a random <code>u8</code> in the given range.","Generates a random <code>u8</code> in the given range.","Generates a random <code>char</code> in range A-Z.","Generates a random <code>char</code> in range A-Z.","Generates a random <code>usize</code> in the given range.","Generates a random <code>usize</code> in the given range.","Creates a new random number generator with the initial …"],"i":[0,0,2,0,2,0,2,2,2,0,2,0,2,0,2,2,2,2,0,2,2,2,0,2,0,2,2,2,2,2,0,2,0,2,0,2,0,2,0,2,0,2,2,0,2,0,2,2,0,2,0,2,2,2,2,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,2],"f":[0,[[],1],[2,1],[[],1],[2,1],[[],3],[2,3],[[]],[[]],[[[4,[1]]],1],[[2,[4,[1]]],1],[5,6],[[2,5],6],[[7,8],9],[[2,7,8],9],[2,2],[[]],[[],2],[10,1],[[2,10],1],[[2,2],3],[[],3],[[],11],[2,11],[[],12],[2,12],[[2,[14,[13]]]],[[2,15],16],[2,2],[[]],[[],17],[2,17],[[[4,[18]]],18],[[2,[4,[18]]],18],[[[4,[19]]],19],[[2,[4,[19]]],19],[[[4,[20]]],20],[[2,[4,[20]]],20],[[[4,[21]]],21],[[2,[4,[21]]],21],[[[4,[22]]],22],[[2,[4,[22]]],22],[[]],[[[4,[23]]],23],[[2,[4,[23]]],23],[[],1],[2,1],[[],2],[17],[[2,17]],[14],[[2,14]],[[]],[[],24],[[],24],[[],25],[[[4,[26]]],26],[[2,[4,[26]]],26],[[[4,[27]]],27],[[2,[4,[27]]],27],[[[4,[10]]],10],[[2,[4,[10]]],10],[[[4,[17]]],17],[[2,[4,[17]]],17],[[[4,[13]]],13],[[2,[4,[13]]],13],[[],1],[2,1],[[[4,[8]]],8],[[2,[4,[8]]],8],[17,2]],"c":[],"p":[[15,"char"],[3,"Rng"],[15,"bool"],[8,"RangeBounds"],[8,"IntoIterator"],[4,"Option"],[8,"Iterator"],[15,"usize"],[3,"Vec"],[15,"u32"],[15,"f32"],[15,"f64"],[15,"u8"],[15,"slice"],[3,"Formatter"],[6,"Result"],[15,"u64"],[15,"i128"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[15,"isize"],[4,"Result"],[3,"TypeId"],[15,"u128"],[15,"u16"]]},\
"fixedbitset":{"doc":"<code>FixedBitSet</code> is a simple fixed size set of bits.","t":"DDIDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Difference","FixedBitSet","IndexRange","Intersection","Ones","SymmetricDifference","Union","as_mut_slice","as_slice","bitand","bitand_assign","bitand_assign","bitor","bitor_assign","bitor_assign","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone_into","cmp","contains","copy_bit","count_ones","default","difference","difference_with","end","end","eq","extend","fmt","fmt","fmt","from","from","from","from","from","from","from_iter","grow","hash","index","insert","insert_range","intersect_with","intersection","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","is_clear","is_disjoint","is_empty","is_subset","is_superset","len","new","next","next","next","next","next","ones","partial_cmp","put","set","set_range","start","start","symmetric_difference","symmetric_difference_with","to_owned","to_string","toggle","toggle_range","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","union","union_with","with_capacity","with_capacity_and_blocks"],"q":[[0,"fixedbitset"]],"d":["An iterator producing elements in the difference of two …","<code>FixedBitSet</code> is a simple fixed size set of bits that each …","<strong>IndexRange</strong> is implemented by Rust’s built-in range …","An iterator producing elements in the intersection of two …","An  iterator producing the indices of the set bit in a set.","An iterator producing elements in the symmetric difference …","An iterator producing elements in the union of two sets.","View the bitset as a mutable slice of <code>u32</code> blocks. Writing …","View the bitset as a slice of <code>u32</code> blocks","","","","","","","","","","","","","","","","","","","","","","Clear all bits.","","","","Return <strong>true</strong> if the bit is enabled in the <strong>FixedBitSet</strong>, <strong>false</strong>…","Copies boolean value from specified bit to the specified …","Count the number of set bits in the given bit range.","","Returns a lazy iterator over the difference of two …","In-place difference of two <code>FixedBitSet</code>s.","End index (exclusive)","End index (exclusive)","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Grow capacity to <strong>bits</strong>, all new bits initialized to zero","","","Enable <code>bit</code>.","Enables every bit in the given range.","In-place intersection of two <code>FixedBitSet</code>s.","Returns a lazy iterator over the intersection of two …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","<code>true</code> if all bits in the <code>FixedBitSet</code> are unset.","Returns <code>true</code> if <code>self</code> has no elements in common with <code>other</code>. …","<code>true</code> if the <code>FixedBitSet</code> is empty.","Returns <code>true</code> if the set is a subset of another, i.e. <code>other</code> …","Returns <code>true</code> if the set is a superset of another, i.e. <code>self</code>…","The length of the <code>FixedBitSet</code> in bits.","Create a new empty <strong>FixedBitSet</strong>.","","","","","","Iterates over all enabled bits.","","Enable <code>bit</code>, and return its previous value.","<strong>Panics</strong> if <strong>bit</strong> is out of bounds.","Sets every bit in the given range to the given state (…","Start index (inclusive)","Start index (inclusive)","Returns a lazy iterator over the symmetric difference of …","In-place symmetric difference of two <code>FixedBitSet</code>s.","","","Toggle <code>bit</code> (inverting its state).","Toggles (inverts) every bit in the given range.","","","","","","","","","","","","","","","","","","","Returns a lazy iterator over the union of two <code>FixedBitSet</code>s.","In-place union of two <code>FixedBitSet</code>s.","Create a new <strong>FixedBitSet</strong> with a specific number of bits, …","Create a new <strong>FixedBitSet</strong> with a specific number of bits, …"],"i":[0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,8,17,16,18,19,1,8,17,16,18,19,1,1,1,1,1,1,1,1,1,1,1,7,7,1,1,1,1,1,8,17,16,18,19,1,1,1,1,1,1,1,1,1,8,17,16,18,19,1,8,17,16,18,19,1,1,1,1,1,1,1,8,17,16,18,19,1,1,1,1,1,7,7,1,1,1,1,1,1,8,17,16,18,19,1,8,17,16,18,19,1,8,17,16,18,19,1,1,1,1,1],"f":[0,0,0,0,0,0,0,[1,[[3,[2]]]],[1,[[3,[2]]]],[[1,1],1],[[1,1]],[[1,1]],[[1,1],1],[[1,1]],[[1,1]],[[1,1],1],[[1,1]],[[1,1]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1],[1,1],[[]],[[1,1],4],[[1,5],6],[[1,5,5]],[[1,7],5],[[],1],[[1,1],8],[[1,1]],[[],9],[[],9],[[1,1],6],[[1,10]],[[1,11],12],[[1,11],[[14,[13]]]],[[1,11],[[14,[13]]]],[[]],[[]],[[]],[[]],[[]],[[]],[10,1],[[1,5]],[[1,15]],[[1,5],6],[[1,5]],[[1,7]],[[1,1]],[[1,1],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,6],[[1,1],6],[1,6],[[1,1],6],[[1,1],6],[1,5],[[],1],[8,9],[17,9],[16,9],[18,9],[19,9],[1,19],[[1,1],[[9,[4]]]],[[1,5],6],[[1,5,6]],[[1,7,6]],[[],9],[[],9],[[1,1],17],[[1,1]],[[]],[[],20],[[1,5]],[[1,7]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[1,1],18],[[1,1]],[5,1],[[5,10],1]],"c":[],"p":[[3,"FixedBitSet"],[15,"u32"],[15,"slice"],[4,"Ordering"],[15,"usize"],[15,"bool"],[8,"IndexRange"],[3,"Difference"],[4,"Option"],[8,"IntoIterator"],[3,"Formatter"],[6,"Result"],[3,"Error"],[4,"Result"],[8,"Hasher"],[3,"Intersection"],[3,"SymmetricDifference"],[3,"Union"],[3,"Ones"],[3,"String"],[3,"TypeId"]]},\
"fnv":{"doc":"An implementation of the Fowler–Noll–Vo hash function.","t":"GGGDLLLLLLLLLLL","n":["FnvBuildHasher","FnvHashMap","FnvHashSet","FnvHasher","borrow","borrow_mut","default","finish","from","into","try_from","try_into","type_id","with_key","write"],"q":[[0,"fnv"]],"d":["A builder for default FNV hashers.","A <code>HashMap</code> using a default FNV hasher.","A <code>HashSet</code> using a default FNV hasher.","An implementation of the Fowler–Noll–Vo hash function.","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","Create an FNV hasher starting with a state corresponding …",""],"i":[0,0,0,0,1,1,1,1,1,1,1,1,1,1,1],"f":[0,0,0,0,[[]],[[]],[[],1],[1,2],[[]],[[]],[[],3],[[],3],[[],4],[2,1],[[1,[6,[5]]]]],"c":[],"p":[[3,"FnvHasher"],[15,"u64"],[4,"Result"],[3,"TypeId"],[15,"u8"],[15,"slice"]]},\
"hashbrown":{"doc":"This crate is a Rust port of Google’s high-performance …","t":"NNIDDELLLLLKLLLAALALLLLMEDEEDDDDDDDDNNNDDDDDEDDNNNDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLDDEDDDDDNDDDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["AllocError","CapacityOverflow","Equivalent","HashMap","HashSet","TryReserveError","borrow","borrow_mut","clone","clone_into","eq","equivalent","equivalent","fmt","from","hash_map","hash_set","into","raw","to_owned","try_from","try_into","type_id","layout","DefaultHashBuilder","Drain","Entry","EntryRef","ExtractIf","HashMap","IntoIter","IntoKeys","IntoValues","Iter","IterMut","Keys","Occupied","Occupied","Occupied","OccupiedEntry","OccupiedEntryRef","OccupiedError","RawEntryBuilder","RawEntryBuilderMut","RawEntryMut","RawOccupiedEntryMut","RawVacantEntryMut","Vacant","Vacant","Vacant","VacantEntry","VacantEntryRef","Values","ValuesMut","allocator","and_modify","and_modify","and_modify","and_replace_entry_with","and_replace_entry_with","and_replace_entry_with","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone","clone","clone_from","clone_into","clone_into","clone_into","clone_into","contains_key","default","drain","entry","entry","entry_ref","eq","equivalent","extend","extend","extend","extract_if","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_hash","from_hash","from_iter","from_key","from_key","from_key_hashed_nocheck","from_key_hashed_nocheck","get","get","get","get","get_key_value","get_key_value","get_key_value_mut","get_key_value_mut","get_many_key_value_mut","get_many_key_value_unchecked_mut","get_many_mut","get_many_unchecked_mut","get_mut","get_mut","get_mut","get_mut","hasher","index","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert_hashed_nocheck","insert_key","insert_unique_unchecked","insert_with_hasher","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_key","into_key","into_key","into_key_value","into_keys","into_mut","into_mut","into_mut","into_values","is_empty","iter","iter_mut","key","key","key","key","key","key","key","key_mut","keys","len","len","len","len","len","len","len","len","len","len","next","next","next","next","next","next","next","next","next","next","or_default","or_default","or_insert","or_insert","or_insert","or_insert_with","or_insert_with","or_insert_with","or_insert_with_key","or_insert_with_key","raw_entry","raw_entry_mut","raw_table","raw_table_mut","remove","remove","remove","remove","remove_entry","remove_entry","remove_entry","remove_entry","replace_entry","replace_entry","replace_entry_with","replace_entry_with","replace_entry_with","replace_key","replace_key","reserve","retain","shrink_to","shrink_to_fit","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_insert","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_reserve","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","values","values_mut","with_capacity_and_hasher","with_capacity_and_hasher_in","with_hasher","with_hasher_in","Difference","Drain","Entry","ExtractIf","HashSet","Intersection","IntoIter","Iter","Occupied","OccupiedEntry","SymmetricDifference","Union","Vacant","VacantEntry","allocator","bitand","bitor","bitxor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone","clone","clone","clone","clone_from","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","contains","default","difference","drain","entry","eq","equivalent","extend","extend","extract_if","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","get","get","get","get","get_or_insert","get_or_insert_owned","get_or_insert_with","hasher","insert","insert","insert","insert_unique_unchecked","intersection","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_value","is_disjoint","is_empty","is_subset","is_superset","iter","len","len","len","len","next","next","next","next","next","next","next","next","or_insert","raw_table","raw_table_mut","remove","remove","replace","replace","reserve","retain","shrink_to","shrink_to_fit","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","sub","symmetric_difference","take","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_reserve","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","with_capacity_and_hasher","with_capacity_and_hasher_in","with_hasher","with_hasher_in","Bucket","InsertSlot","RawDrain","RawIntoIter","RawIter","RawIterHash","RawTable","allocation_info","allocator","as_mut","as_ptr","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bucket","bucket_index","buckets","capacity","clear","clear_no_drop","clone","clone","clone","clone_from","clone_from_with_hasher","clone_into","clone_into","clone_into","copy_from_nonoverlapping","data_end","data_start","default","drain","drain_iter_from","drop","drop","drop","erase","erase_entry","find","find_or_find_insert_slot","from","from","from","from","from","from","from","get","get_many_mut","get_many_unchecked_mut","get_mut","insert","insert_entry","insert_in_slot","insert_no_grow","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter_from","is_bucket_full","is_empty","iter","iter","iter","iter_hash","len","new","new_in","next","next","next","next","reflect_insert","reflect_remove","remove","remove_entry","replace_bucket_with","reserve","shrink_to","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_insert_no_grow","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_reserve","try_with_capacity","try_with_capacity_in","type_id","type_id","type_id","type_id","type_id","type_id","type_id","with_capacity","with_capacity_in"],"q":[[0,"hashbrown"],[23,"hashbrown::TryReserveError"],[24,"hashbrown::hash_map"],[425,"hashbrown::hash_set"],[640,"hashbrown::raw"]],"d":["The memory allocator returned an error","Error due to the computed capacity exceeding the collection…","Key equivalence trait.","A hash map implemented with quadratic probing and SIMD …","A hash set implemented as a <code>HashMap</code> where the value is <code>()</code>.","The error type for <code>try_reserve</code> methods.","","","","","","Checks if this value is equivalent to the given key.","","","Returns the argument unchanged.","A hash map implemented with quadratic probing and SIMD …","A hash set implemented as a <code>HashMap</code> where the value is <code>()</code>.","Calls <code>U::from(self)</code>.","Experimental and unsafe <code>RawTable</code> API. This module is only …","","","","","The layout of the allocation request that failed.","Dummy default hasher for <code>HashMap</code>.","A draining iterator over the entries of a <code>HashMap</code> in …","A view into a single entry in a map, which may either be …","A view into a single entry in a map, which may either be …","A draining iterator over entries of a <code>HashMap</code> which don’…","A hash map implemented with quadratic probing and SIMD …","An owning iterator over the entries of a <code>HashMap</code> in …","An owning iterator over the keys of a <code>HashMap</code> in arbitrary …","An owning iterator over the values of a <code>HashMap</code> in …","An iterator over the entries of a <code>HashMap</code> in arbitrary …","A mutable iterator over the entries of a <code>HashMap</code> in …","An iterator over the keys of a <code>HashMap</code> in arbitrary order. …","An occupied entry.","An occupied entry.","An occupied entry.","A view into an occupied entry in a <code>HashMap</code>. It is part of …","A view into an occupied entry in a <code>HashMap</code>. It is part of …","The error returned by <code>try_insert</code> when the key already …","A builder for computing where in a <code>HashMap</code> a key-value …","A builder for computing where in a <code>HashMap</code> a key-value …","A view into a single entry in a map, which may either be …","A view into an occupied entry in a <code>HashMap</code>. It is part of …","A view into a vacant entry in a <code>HashMap</code>. It is part of the …","A vacant entry.","A vacant entry.","A vacant entry.","A view into a vacant entry in a <code>HashMap</code>. It is part of the …","A view into a vacant entry in a <code>HashMap</code>. It is part of the …","An iterator over the values of a <code>HashMap</code> in arbitrary …","A mutable iterator over the values of a <code>HashMap</code> in …","Returns a reference to the underlying allocator.","Provides in-place mutable access to an occupied entry …","Provides in-place mutable access to an occupied entry …","Provides in-place mutable access to an occupied entry …","Provides shared access to the key and owned access to the …","Provides shared access to the key and owned access to the …","Provides shared access to the key and owned access to the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the number of elements the map can hold without …","Clears the map, removing all key-value pairs. Keeps the …","","","","","","","","","","Returns <code>true</code> if the map contains a value for the specified …","Creates an empty <code>HashMap&lt;K, V, S, A&gt;</code>, with the <code>Default</code> …","Clears the map, returning all key-value pairs as an …","Gets the given key’s corresponding entry in the map for …","The entry in the map that was already occupied.","Gets the given key’s corresponding entry by reference in …","","","Inserts all new key-values from the iterator to existing …","Inserts all new key-values from the iterator to existing …","Inserts all new key-values from the iterator to existing …","Drains elements which are true under the given predicate, …","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a <code>RawEntryMut</code> from the given hash and matching …","Access an immutable entry by hash and matching function.","","Creates a <code>RawEntryMut</code> from the given key.","Access an immutable entry by key.","Creates a <code>RawEntryMut</code> from the given key and its hash.","Access an immutable entry by a key and its hash.","Returns a reference to the value corresponding to the key.","Gets a reference to the value in the entry.","Gets a reference to the value in the entry.","Gets a reference to the value in the entry.","Returns the key-value pair corresponding to the supplied …","Gets a reference to the key and value in the entry.","Returns the key-value pair corresponding to the supplied …","Gets a mutable reference to the key and value in the entry.","Attempts to get mutable references to <code>N</code> values in the map …","Attempts to get mutable references to <code>N</code> values in the map …","Attempts to get mutable references to <code>N</code> values in the map …","Attempts to get mutable references to <code>N</code> values in the map …","Returns a mutable reference to the value corresponding to …","Gets a mutable reference to the value in the entry.","Gets a mutable reference to the value in the entry.","Gets a mutable reference to the value in the entry.","Returns a reference to the map’s <code>BuildHasher</code>.","Returns a reference to the value corresponding to the …","Inserts a key-value pair into the map.","Sets the value of the entry, and returns a …","Sets the value of the entry, and returns the entry’s old …","Sets the value of the entry with the VacantEntry’s key, …","Sets the value of the entry, and returns an OccupiedEntry.","Sets the value of the entry, and returns the entry’s old …","Sets the value of the entry with the VacantEntry’s key, …","Sets the value of the entry, and returns an …","Sets the value of the entry, and returns the entry’s old …","Sets the value of the entry with the VacantEntryRef’s …","Sets the value of the entry with the VacantEntry’s key, …","Sets the value of the entry, and returns the entry’s old …","Insert a key-value pair into the map without checking if …","Set the value of an entry with a custom hasher function.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates an iterator over the entries of a <code>HashMap</code> in …","Creates a consuming iterator, that is, one that moves each …","Creates an iterator over the entries of a <code>HashMap</code> in …","","","","","","","","","","","Converts the entry into a mutable reference to the key in …","Take ownership of the key.","Take ownership of the key.","Converts the OccupiedEntry into a mutable reference to the …","Creates a consuming iterator visiting all the keys in …","Converts the OccupiedEntry into a mutable reference to the …","Converts the OccupiedEntry into a mutable reference to the …","Converts the OccupiedEntryRef into a mutable reference to …","Creates a consuming iterator visiting all the values in …","Returns <code>true</code> if the map contains no elements.","An iterator visiting all key-value pairs in arbitrary …","An iterator visiting all key-value pairs in arbitrary …","Gets a reference to the key in the entry.","Returns a reference to this entry’s key.","Gets a reference to the key in the entry.","Gets a reference to the key that would be used when …","Returns a reference to this entry’s key.","Gets a reference to the key in the entry.","Gets a reference to the key that would be used when …","Gets a mutable reference to the key in the entry.","An iterator visiting all keys in arbitrary order. The …","Returns the number of elements in the map.","","","","","","","","","","","","","","","","","","","","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the result of …","Ensures a value is in the entry by inserting the result of …","Ensures a value is in the entry by inserting the result of …","Ensures a value is in the entry by inserting, if empty, …","Ensures a value is in the entry by inserting, if empty, …","Creates a raw immutable entry builder for the HashMap.","Creates a raw entry builder for the HashMap.","Returns a reference to the <code>RawTable</code> used underneath <code>HashMap</code>…","Returns a mutable reference to the <code>RawTable</code> used …","Removes a key from the map, returning the value at the key …","Takes the value out of the entry, and returns it.","Takes the value out of the entry, and returns it. Keeps …","Takes the value out of the entry, and returns it. Keeps …","Removes a key from the map, returning the stored key and …","Take the ownership of the key and value from the map.","Take the ownership of the key and value from the map. …","Take the ownership of the key and value from the map. …","Replaces the entry, returning the old key and value. The …","Replaces the entry, returning the old key and value. The …","Provides shared access to the key and owned access to the …","Provides shared access to the key and owned access to the …","Provides shared access to the key and owned access to the …","Replaces the key in the hash map with the key used to …","Replaces the key in the hash map with the key used to …","Reserves capacity for at least <code>additional</code> more elements to …","Retains only the elements specified by the predicate. …","Shrinks the capacity of the map with a lower limit. It …","Shrinks the capacity of the map as much as possible. It …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tries to insert a key-value pair into the map, and returns …","","","","","","","","","","","","","","","","","","","","","","","","","Tries to reserve capacity for at least <code>additional</code> more …","","","","","","","","","","","","","","","","","","","","","","","","","The value which was not inserted, because the entry was …","An iterator visiting all values in arbitrary order. The …","An iterator visiting all values mutably in arbitrary order.","Creates an empty <code>HashMap</code> with the specified capacity, …","Creates an empty <code>HashMap</code> with the specified capacity, …","Creates an empty <code>HashMap</code> which will use the given hash …","Creates an empty <code>HashMap</code> which will use the given hash …","A lazy iterator producing elements in the difference of …","A draining iterator over the items of a <code>HashSet</code>.","A view into a single entry in a set, which may either be …","A draining iterator over entries of a <code>HashSet</code> which don’…","A hash set implemented as a <code>HashMap</code> where the value is <code>()</code>.","A lazy iterator producing elements in the intersection of …","An owning iterator over the items of a <code>HashSet</code>.","An iterator over the items of a <code>HashSet</code>.","An occupied entry.","A view into an occupied entry in a <code>HashSet</code>. It is part of …","A lazy iterator producing elements in the symmetric …","A lazy iterator producing elements in the union of <code>HashSet</code>…","A vacant entry.","A view into a vacant entry in a <code>HashSet</code>. It is part of the …","Returns a reference to the underlying allocator.","Returns the intersection of <code>self</code> and <code>rhs</code> as a new …","Returns the union of <code>self</code> and <code>rhs</code> as a new <code>HashSet&lt;T, S&gt;</code>.","Returns the symmetric difference of <code>self</code> and <code>rhs</code> as a new …","","","","","","","","","","","","","","","","","","","","","","","","","Returns the number of elements the set can hold without …","Clears the set, removing all values.","","","","","","","","","","","","","","Returns <code>true</code> if the set contains a value.","Creates an empty <code>HashSet&lt;T, S&gt;</code> with the <code>Default</code> value for …","Visits the values representing the difference, i.e., the …","Clears the set, returning all elements in an iterator.","Gets the given value’s corresponding entry in the set …","","","","","Drains elements which are true under the given predicate, …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns a reference to the value in the set, if any, that …","Returns a reference to this entry’s value.","Gets a reference to the value in the entry.","Gets a reference to the value that would be used when …","Inserts the given <code>value</code> into the set if it is not present, …","Inserts an owned copy of the given <code>value</code> into the set if …","Inserts a value computed from <code>f</code> into the set if the given …","Returns a reference to the set’s <code>BuildHasher</code>.","Adds a value to the set.","Sets the value of the entry, and returns an OccupiedEntry.","Sets the value of the entry with the VacantEntry’s value.","Insert a value the set without checking if the value …","Visits the values representing the intersection, i.e., the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Creates a consuming iterator, that is, one that moves each …","","","","","","","","","Take ownership of the value.","Returns <code>true</code> if <code>self</code> has no elements in common with <code>other</code>. …","Returns <code>true</code> if the set contains no elements.","Returns <code>true</code> if the set is a subset of another, i.e., <code>other</code>…","Returns <code>true</code> if the set is a superset of another, i.e., …","An iterator visiting all elements in arbitrary order. The …","Returns the number of elements in the set.","","","","","","","","","","","","Ensures a value is in the entry by inserting if it was …","Returns a reference to the <code>RawTable</code> used underneath <code>HashSet</code>…","Returns a mutable reference to the <code>RawTable</code> used …","Removes a value from the set. Returns whether the value was","Takes the value out of the entry, and returns it. Keeps …","Adds a value to the set, replacing the existing value, if …","Replaces the entry, returning the old value. The new value …","Reserves capacity for at least <code>additional</code> more elements to …","Retains only the elements specified by the predicate.","Shrinks the capacity of the set with a lower limit. It …","Shrinks the capacity of the set as much as possible. It …","","","","","","","","","Returns the difference of <code>self</code> and <code>rhs</code> as a new …","Visits the values representing the symmetric difference, …","Removes and returns the value in the set, if any, that is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tries to reserve capacity for at least <code>additional</code> more …","","","","","","","","","","","","","Visits the values representing the union, i.e., all the …","Creates an empty <code>HashSet</code> with the specified capacity, using","Creates an empty <code>HashSet</code> with the specified capacity, using","Creates a new empty hash set which will use the given …","Creates a new empty hash set which will use the given …","A reference to a hash table bucket containing a <code>T</code>.","A reference to an empty bucket into which an can be …","Iterator which consumes elements without freeing the table …","Iterator which consumes a table and returns elements.","Iterator which returns a raw pointer to every full bucket …","Iterator over occupied buckets that could match a given …","A raw hash table with an unsafe API.","Return the information about memory allocated by the table.","Returns a reference to the underlying allocator.","Returns a unique mutable reference to the <code>value</code>.","Acquires the underlying raw pointer <code>*mut T</code> to <code>data</code>.","Returns a shared immutable reference to the <code>value</code>.","","","","","","","","","","","","","","","Returns a pointer to an element in the table.","Returns the index of a bucket from a <code>Bucket</code>.","Returns the number of buckets in the table.","Returns the number of elements the map can hold without …","Removes all elements from the table without freeing the …","Marks all table buckets as empty without dropping their …","","","","","Variant of <code>clone_from</code> to use when a hasher is available.","","","","Copies <code>size_of&lt;T&gt;</code> bytes from <code>other</code> to <code>self</code>. The source and …","Returns pointer to one past last element of data table.","Returns pointer to start of data table.","","Returns an iterator which removes all elements from the …","Returns an iterator which removes all elements from the …","","","","Erases an element from the table, dropping it in place.","Finds and erases an element from the table, dropping it in …","Searches for an element in the table.","Searches for an element in the table. If the element is …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Gets a reference to an element in the table.","Attempts to get mutable references to <code>N</code> entries in the …","","Gets a mutable reference to an element in the table.","Inserts a new element into the table, and returns its raw …","Inserts a new element into the table, and returns a …","Inserts a new element into the table in the given slot, …","Inserts a new element into the table, without growing the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Returns an iterator which consumes all elements from the …","Checks whether the bucket at <code>index</code> is full.","Returns <code>true</code> if the table contains no elements.","Returns an iterator over every element in the table. It is …","","","Returns an iterator over occupied buckets that could match …","Returns the number of elements in the table.","Creates a new empty hash table without allocating any …","Creates a new empty hash table without allocating any …","","","","","Refresh the iterator so that it reflects an insertion into …","Refresh the iterator so that it reflects a removal from …","Removes an element from the table, returning it.","Finds and removes an element from the table, returning it.","Temporary removes a bucket, applying the given function to …","Ensures that at least <code>additional</code> items can be inserted …","Shrinks the table to fit <code>max(self.len(), min_size)</code> …","","","","","","","","","","","","","","Attempts to insert a new element without growing the table …","","","","","","","","Tries to ensure that at least <code>additional</code> items can be …","Attempts to allocate a new hash table with at least enough …","Attempts to allocate a new hash table using the given …","","","","","","","","Allocates a new hash table with at least enough capacity …","Allocates a new hash table using the given allocator, with …"],"i":[1,1,0,0,0,0,1,1,1,1,1,21,1,1,1,0,0,1,0,1,1,1,1,72,0,0,0,0,0,0,0,0,0,0,0,0,8,10,12,0,0,0,0,0,0,0,0,8,10,12,0,0,0,0,7,8,10,12,8,10,12,73,7,15,30,31,32,33,16,17,23,28,34,35,8,36,37,38,10,39,40,12,42,43,44,73,7,15,30,31,32,33,16,17,23,28,34,35,8,36,37,38,10,39,40,12,42,43,44,7,7,7,15,16,17,7,7,15,16,17,7,7,7,7,44,7,7,7,7,7,7,7,7,15,30,31,32,33,16,17,23,34,35,8,36,37,38,10,39,40,12,42,43,44,44,73,7,15,30,31,32,33,16,17,23,28,34,35,8,36,37,38,10,39,40,12,42,43,44,35,38,7,35,38,35,38,7,36,39,42,7,36,7,36,7,7,7,7,7,36,39,42,7,7,7,8,36,37,10,39,40,12,42,43,37,36,7,37,73,7,15,30,31,32,33,16,17,23,28,34,35,8,36,37,38,10,39,40,12,42,43,44,7,7,7,15,30,31,32,33,16,17,23,28,34,36,40,43,36,7,36,39,42,7,7,7,7,36,10,39,40,12,42,43,36,7,7,15,30,31,32,33,16,17,23,34,15,30,31,32,33,16,17,23,28,34,10,12,8,10,12,8,10,12,10,12,7,7,7,7,7,36,39,42,7,36,39,42,39,42,36,39,42,39,42,7,7,7,7,15,30,31,32,33,16,17,23,28,34,7,15,16,17,44,73,7,15,30,31,32,33,16,17,23,28,34,35,8,36,37,38,10,39,40,12,42,43,44,7,73,7,15,30,31,32,33,16,17,23,28,34,35,8,36,37,38,10,39,40,12,42,43,44,7,73,7,15,30,31,32,33,16,17,23,28,34,35,8,36,37,38,10,39,40,12,42,43,44,44,7,7,7,7,7,7,0,0,0,0,0,0,0,0,59,0,0,0,59,0,52,52,52,52,52,53,61,58,60,54,55,56,57,59,62,63,52,53,61,58,60,54,55,56,57,59,62,63,52,52,52,53,54,55,56,57,52,52,53,54,55,56,57,52,52,52,52,52,52,52,52,52,52,52,53,61,58,54,55,56,57,59,62,63,52,52,53,61,58,60,54,55,56,57,59,62,63,52,52,59,62,63,52,52,52,52,52,59,63,52,52,52,53,61,58,60,54,55,56,57,59,62,63,52,52,53,61,58,60,54,55,56,57,63,52,52,52,52,52,52,53,61,58,53,61,58,60,54,55,56,57,59,52,52,52,62,52,62,52,52,52,52,53,61,58,60,54,55,56,57,52,52,52,52,53,54,55,56,57,52,53,61,58,60,54,55,56,57,59,62,63,52,53,61,58,60,54,55,56,57,59,62,63,52,52,53,61,58,60,54,55,56,57,59,62,63,52,52,52,52,52,0,0,0,0,0,0,0,50,50,65,65,65,70,65,50,66,69,68,71,70,65,50,66,69,68,71,50,50,50,50,50,50,65,50,66,50,50,65,50,66,65,50,50,50,50,50,50,69,68,50,50,50,50,70,65,50,66,69,68,71,50,50,50,50,50,50,50,50,70,65,50,66,69,68,71,50,66,69,68,71,50,50,50,50,69,68,50,50,50,50,66,69,68,71,66,66,50,50,50,50,50,66,69,68,65,50,66,70,65,50,66,69,68,71,50,70,65,50,66,69,68,71,50,50,50,70,65,50,66,69,68,71,50,50],"f":[0,0,0,0,0,0,[[]],[[]],[1,1],[[]],[[1,1],2],[[],2],[[],2],[[1,3],4],[[]],0,0,[[]],0,[[]],[[],5],[[],5],[[],6],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[8,[0]],9],[[8,[0]]]],[[[10,[0]],9],[[10,[0]]]],[[[12,[11,0]],9],[[12,[11,0]]]],[[[8,[0]],9],[[8,[0]]]],[[[10,[0]],9],[[10,[0]]]],[[[12,[11,0]],9],[[12,[11,0]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[0]]],13],[[[7,[0]]]],[[[7,[14,14,14,[0,[0,14]]]]],[[7,[14,14,14,[0,[0,14]]]]]],[15,15],[16,16],[17,17],[[[7,[14,14,14,[0,[0,14]]]],[7,[14,14,14,[0,[0,14]]]]]],[[]],[[]],[[]],[[]],[[[7,[[0,[18,19]],20,0]],[0,[19,[21,[[0,[18,19]]]],11]]],2],[[],[[7,[22,[0,[22,0]]]]]],[[[7,[0]]],[[23,[0]]]],[[[7,[[0,[18,19]],20,0]],[0,[18,19]]],[[10,[[0,[18,19]],20,0]]]],0,[[[7,[[0,[18,19]],20,0]],[0,[19,[21,[[0,[18,19]]]],11]]],[[12,[[0,[18,19]],[0,[19,[21,[[0,[18,19]]]],11]],20,0]]]],[[[7,[[0,[18,19]],24,20,0]],[7,[[0,[18,19]],24,20,0]]],2],[[],2],[[[7,[[0,[18,19,25]],25,20,0]],26]],[[[7,[[0,[18,19]],20,0]],26]],[[[7,[[0,[18,19,25]],25,20,0]],26]],[[[7,[0]],27],[[28,[27,0]]]],[[[7,[29,29,0]],3],4],[[[15,[29,29]],3],4],[[[30,[29,29]],3],4],[[[31,[29,29,0]],3],4],[[[32,[29,29,0]],3],4],[[[33,[29,0]],3],4],[[[16,[29]],3],4],[[[17,[29]],3],4],[[[23,[29,29,0]],3],4],[[[34,[29]],3],4],[[[35,[0]],3],4],[[[8,[29,29,0]],3],4],[[[36,[29,29,0]],3],4],[[[37,[0]],3],4],[[[38,[0]],3],4],[[[10,[29,29,0]],3],4],[[[39,[29,29,0]],3],4],[[[40,[29,0]],3],4],[[[12,[[41,[[0,[11,29]]]],[0,[11,29]],29,0]],3],4],[[[42,[[41,[[0,[11,29]]]],[0,[11,29]],29,0]],3],4],[[[43,[[41,[[0,[11,29]]]],[0,[11,29]],0]],3],4],[[[44,[29,29,0]],3],4],[[[44,[29,29,0]],3],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[35,[0]],45,27],[[8,[0]]]],[[[38,[0]],45,27],46],[26,[[7,[[0,[18,19]],[0,[20,22]],[0,[22,0]]]]]],[[[35,[20,0]],[0,[19,21,11]]],[[8,[20,0]]]],[[[38,[20,0]],[0,[19,21,11]]],46],[[[35,[0]],45,[0,[21,11]]],[[8,[0]]]],[[[38,[0]],45,[0,[21,11]]],46],[[[7,[[0,[18,19]],20,0]],[0,[19,[21,[[0,[18,19]]]],11]]],46],[[[36,[0]]]],[[[39,[0]]]],[[[42,[11,0]]]],[[[7,[[0,[18,19]],20,0]],[0,[19,[21,[[0,[18,19]]]],11]]],46],[[[36,[0]]]],[[[7,[[0,[18,19]],20,0]],[0,[19,[21,[[0,[18,19]]]],11]]],46],[[[36,[0]]]],[[[7,[[0,[18,19]],20,0]],[47,[[0,[19,[21,[[0,[18,19]]]],11]]]]],[[46,[47]]]],[[[7,[[0,[18,19]],20,0]],[47,[[0,[19,[21,[[0,[18,19]]]],11]]]]],[[46,[47]]]],[[[7,[[0,[18,19]],20,0]],[47,[[0,[19,[21,[[0,[18,19]]]],11]]]]],[[46,[47]]]],[[[7,[[0,[18,19]],20,0]],[47,[[0,[19,[21,[[0,[18,19]]]],11]]]]],[[46,[47]]]],[[[7,[[0,[18,19]],20,0]],[0,[19,[21,[[0,[18,19]]]],11]]],46],[[[36,[0]]]],[[[39,[0]]]],[[[42,[11,0]]]],[[[7,[0]]]],[[[7,[[0,[18,19]],20,0]],[0,[19,[21,[[0,[18,19]]]],11]]]],[[[7,[[0,[18,19]],20,0]],[0,[18,19]]],46],[[[8,[19,20,0]],19],[[36,[19,20,0]]]],[[[36,[0]]]],[[[37,[19,20,0]],19]],[[[10,[19,20,0]]],[[39,[19,20,0]]]],[[[39,[0]]]],[[[40,[19,20,0]]]],[[[12,[[0,[19,[48,[11]]]],11,20,0]]],[[42,[[0,[19,[48,[11]]]],11,20,0]]]],[[[42,[11,0]]]],[[[43,[[0,[19,[48,[11]]]],11,20,0]]]],[[[37,[19,20,0]],45,19]],[[[36,[0]]]],[[[7,[[0,[18,19]],20,0]],[0,[18,19]]]],[[[37,[0]],45,49]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[0]]],15],[[[7,[0]]],[[31,[0]]]],[[[7,[0]]],30],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[36,[0]]]],[[[40,[0]]]],[[[43,[[48,[11]],11,0]]],[[48,[11]]]],[[[36,[0]]]],[[[7,[0]]],[[32,[0]]]],[[[36,[0]]]],[[[39,[0]]]],[[[42,[11,0]]]],[[[7,[0]]],[[33,[0]]]],[[[7,[0]]],2],[[[7,[0]]],15],[[[7,[0]]],30],[[[36,[0]]]],[[[10,[0]]]],[[[39,[0]]]],[[[40,[0]]]],[[[12,[[41,[11]],11,0]]],11],[[[42,[11,0]]]],[[[43,[[41,[11]],11,0]]],11],[[[36,[0]]]],[[[7,[0]]],16],[[[7,[0]]],13],[15,13],[30,13],[[[31,[0]]],13],[[[32,[0]]],13],[[[33,[0]]],13],[16,13],[17,13],[[[23,[0]]],13],[34,13],[15,46],[30,46],[[[31,[0]]],46],[[[32,[0]]],46],[[[33,[0]]],46],[16,46],[17,46],[[[23,[0]]],46],[[[28,[27,0]]],46],[34,46],[[[10,[19,22,20,0]]],22],[[[12,[[0,[19,[48,[11]]]],11,22,20,0]]],22],[[[8,[19,20,0]],19]],[[[10,[19,20,0]]]],[[[12,[[0,[19,[48,[11]]]],11,20,0]]]],[[[8,[19,20,0]],9]],[[[10,[19,20,0]],9]],[[[12,[[0,[19,[48,[11]]]],11,20,0]],9]],[[[10,[19,20,0]],9]],[[[12,[[0,[19,[41,[11]],[48,[11]]]],11,20,0]],9]],[[[7,[0]]],[[38,[0]]]],[[[7,[0]]],[[35,[0]]]],[[[7,[0]]],[[50,[0]]]],[[[7,[0]]],[[50,[0]]]],[[[7,[[0,[18,19]],20,0]],[0,[19,[21,[[0,[18,19]]]],11]]],46],[[[36,[0]]]],[[[39,[0]]]],[[[42,[11,0]]]],[[[7,[[0,[18,19]],20,0]],[0,[19,[21,[[0,[18,19]]]],11]]],46],[[[36,[0]]]],[[[39,[0]]]],[[[42,[11,0]]]],[[[39,[0]]]],[[[42,[[48,[11]],11,0]]]],[[[36,[0]],9],[[8,[0]]]],[[[39,[0]],9],[[10,[0]]]],[[[42,[11,0]],9],[[12,[11,0]]]],[[[39,[0]]]],[[[42,[[48,[11]],11,0]]],[[48,[11]]]],[[[7,[[0,[18,19]],20,0]],13]],[[[7,[0]],27]],[[[7,[[0,[18,19]],20,0]],13]],[[[7,[[0,[18,19]],20,0]]]],[15],[30],[[[31,[0]]]],[[[32,[0]]]],[[[33,[0]]]],[16],[17],[[[23,[0]]]],[[[28,[27,0]]]],[34],[[]],[[]],[[]],[[]],[[],51],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[[7,[[0,[18,19]],20,0]],[0,[18,19]]],[[5,[[44,[[0,[18,19]],20,0]]]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[[7,[[0,[18,19]],20,0]],13],[[5,[1]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],0,[[[7,[0]]],17],[[[7,[0]]],34],[13,7],0,[[],7],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[52,[[0,[18,19,14]],[0,[20,22]],0]],[52,[[0,[18,19,14]],[0,[20,22]],0]]],[[52,[[0,[18,19,14]],[0,[20,22]]]]]],[[[52,[[0,[18,19,14]],[0,[20,22]],0]],[52,[[0,[18,19,14]],[0,[20,22]],0]]],[[52,[[0,[18,19,14]],[0,[20,22]]]]]],[[[52,[[0,[18,19,14]],[0,[20,22]]]],[52,[[0,[18,19,14]],[0,[20,22]]]]],[[52,[[0,[18,19,14]],[0,[20,22]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[52,[0]]],13],[[[52,[0]]]],[[[52,[14,14,[0,[0,14]]]]],[[52,[14,14,[0,[0,14]]]]]],[53,53],[[[54,[0]]],[[54,[0]]]],[[[55,[0]]],[[55,[0]]]],[[[56,[0]]],[[56,[0]]]],[[[57,[0]]],[[57,[0]]]],[[[52,[14,14,[0,[0,14]]]],[52,[14,14,[0,[0,14]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[52,[[0,[18,19]],20,0]],[0,[19,[21,[[0,[18,19]]]],11]]],2],[[],[[52,[22,[0,[22,0]]]]]],[[[52,[[0,[18,19]],20,0]],[52,[[0,[18,19]],20,0]]],[[55,[[0,[18,19]],20,0]]]],[[[52,[0]]],[[58,[0]]]],[[[52,[[0,[18,19]],20,0]],[0,[18,19]]],[[59,[[0,[18,19]],20,0]]]],[[[52,[[0,[18,19]],20,0]],[52,[[0,[18,19]],20,0]]],2],[[],2],[[[52,[[0,[18,19]],20,0]],26]],[[[52,[[0,[18,19,25]],20,0]],26]],[[[52,[0]],27],[[60,[27,0]]]],[[[52,[29,0]],3],4],[[[53,[29]],3],4],[[[61,[29,0]],3],4],[[[58,[29,0]],3],4],[[[54,[[0,[29,18,19]],20,0]],3],4],[[[55,[[0,[29,18,19]],20,0]],3],4],[[[56,[[0,[29,18,19]],20,0]],3],4],[[[57,[[0,[29,18,19]],20,0]],3],4],[[[59,[29,0]],3],4],[[[62,[29,0]],3],4],[[[63,[29,0]],3],4],[[[7,[0]]],[[52,[0]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[26,[[52,[[0,[18,19]],[0,[20,22]],[0,[22,0]]]]]],[[[52,[[0,[18,19]],20,0]],[0,[19,[21,[[0,[18,19]]]],11]]],[[46,[[0,[18,19]]]]]],[[[59,[0]]]],[[[62,[0]]]],[[[63,[0]]]],[[[52,[[0,[18,19]],20,0]],[0,[18,19]]],[[0,[18,19]]]],[[[52,[[0,[18,19]],20,0]],[0,[19,[21,[[0,[18,19]]]],64,11]]],[[0,[18,19]]]],[[[52,[[0,[18,19]],20,0]],[0,[19,[21,[[0,[18,19]]]],11]],9],[[0,[18,19]]]],[[[52,[0]]]],[[[52,[[0,[18,19]],20,0]],[0,[18,19]]],2],[[[59,[19,20,0]]],[[62,[19,20,0]]]],[[[63,[19,20,0]]]],[[[52,[[0,[18,19]],20,0]],[0,[18,19]]],[[0,[18,19]]]],[[[52,[[0,[18,19]],20,0]],[52,[[0,[18,19]],20,0]]],[[54,[[0,[18,19]],20,0]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[52,[0]]],53],[[[52,[0]]],[[61,[0]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[63,[0]]]],[[[52,[[0,[18,19]],20,0]],[52,[[0,[18,19]],20,0]]],2],[[[52,[0]]],2],[[[52,[[0,[18,19]],20,0]],[52,[[0,[18,19]],20,0]]],2],[[[52,[[0,[18,19]],20,0]],[52,[[0,[18,19]],20,0]]],2],[[[52,[0]]],53],[[[52,[0]]],13],[53,13],[[[61,[0]]],13],[[[58,[0]]],13],[53,46],[[[61,[0]]],46],[[[58,[0]]],46],[[[60,[27,0]]],46],[[[54,[[0,[18,19]],20,0]]],[[46,[[0,[18,19]]]]]],[[[55,[[0,[18,19]],20,0]]],[[46,[[0,[18,19]]]]]],[[[56,[[0,[18,19]],20,0]]],[[46,[[0,[18,19]]]]]],[[[57,[[0,[18,19]],20,0]]],[[46,[[0,[18,19]]]]]],[[[59,[19,20,0]]]],[[[52,[0]]],[[50,[0]]]],[[[52,[0]]],[[50,[0]]]],[[[52,[[0,[18,19]],20,0]],[0,[19,[21,[[0,[18,19]]]],11]]],2],[[[62,[0]]]],[[[52,[[0,[18,19]],20,0]],[0,[18,19]]],[[46,[[0,[18,19]]]]]],[[[62,[0]]]],[[[52,[[0,[18,19]],20,0]],13]],[[[52,[0]],27]],[[[52,[[0,[18,19]],20,0]],13]],[[[52,[[0,[18,19]],20,0]]]],[53],[[[61,[0]]]],[[[58,[0]]]],[[[60,[27,0]]]],[[[54,[[0,[18,19]],20,0]]]],[[[55,[[0,[18,19]],20,0]]]],[[[56,[[0,[18,19]],20,0]]]],[[[57,[[0,[18,19]],20,0]]]],[[[52,[[0,[18,19,14]],[0,[20,22]]]],[52,[[0,[18,19,14]],[0,[20,22]]]]],[[52,[[0,[18,19,14]],[0,[20,22]]]]]],[[[52,[[0,[18,19]],20,0]],[52,[[0,[18,19]],20,0]]],[[56,[[0,[18,19]],20,0]]]],[[[52,[[0,[18,19]],20,0]],[0,[19,[21,[[0,[18,19]]]],11]]],[[46,[[0,[18,19]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[[52,[[0,[18,19]],20,0]],13],[[5,[1]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[[52,[[0,[18,19]],20,0]],[52,[[0,[18,19]],20,0]]],[[57,[[0,[18,19]],20,0]]]],[13,[[52,[0]]]],0,[[],[[52,[0]]]],0,0,0,0,0,0,0,0,[[[50,[0]]]],0,[65],[65],[65],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[50,[0]],13],65],[[[50,[0]],65],13],[[[50,[0]]],13],[[[50,[0]]],13],[[[50,[0]]]],[[[50,[0]]]],[65,65],[[[50,[14,[0,[0,14]]]]],[[50,[14,[0,[0,14]]]]]],[66,66],[[[50,[14,[0,[0,14]]]],[50,[14,[0,[0,14]]]]]],[[[50,[14,[0,[0,14]]]],[50,[14,[0,[0,14]]]],49]],[[]],[[]],[[]],[[65,65]],[[[50,[0]]],67],[[[50,[0]]],67],[[],[[50,[[0,[0,22]]]]]],[[[50,[0]]],[[68,[0]]]],[[[50,[0]],66],[[68,[0]]]],[[[50,[0]]]],[[[69,[0]]]],[[[68,[0]]]],[[[50,[0]],65]],[[[50,[0]],45,27],2],[[[50,[0]],45,27],[[46,[65]]]],[[[50,[0]],45,27,49],[[5,[65,70]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[50,[0]],45,27],46],[[[50,[0]],[47,[45]],27],[[46,[47]]]],[[[50,[0]],[47,[45]],27],[[46,[47]]]],[[[50,[0]],45,27],46],[[[50,[0]],45,49],65],[[[50,[0]],45,49]],[[[50,[0]],45,70],65],[[[50,[0]],45],65],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[50,[0]]],[[69,[0]]]],[[]],[[]],[[]],[[]],[[[50,[0]],66],[[69,[0]]]],[[[50,[0]],13],2],[[[50,[0]]],2],[[[50,[0]]],66],[[[69,[0]]],66],[[[68,[0]]],66],[[[50,[0]],45],71],[[[50,[0]]],13],[[],[[50,[0]]]],0,[66,[[46,[65]]]],[[[69,[0]]],46],[[[68,[0]]],46],[71,[[46,[65]]]],[[66,65]],[[66,65]],[[[50,[0]],65]],[[[50,[0]],45,27],46],[[[50,[0]],65,9],2],[[[50,[0]],13,49]],[[[50,[0]],13,49]],[66],[[[69,[0]]]],[[[68,[0]]]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[[50,[0]],45],[[5,[65]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[[50,[0]],13,49],[[5,[1]]]],[13,[[5,[[50,[0]],1]]]],0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[13,[[50,[0]]]],0],"c":[],"p":[[4,"TryReserveError"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"Result"],[3,"TypeId"],[3,"HashMap"],[4,"RawEntryMut"],[8,"FnOnce"],[4,"Entry"],[8,"Sized"],[4,"EntryRef"],[15,"usize"],[8,"Clone"],[3,"Iter"],[3,"Keys"],[3,"Values"],[8,"Eq"],[8,"Hash"],[8,"BuildHasher"],[8,"Equivalent"],[8,"Default"],[3,"Drain"],[8,"PartialEq"],[8,"Copy"],[8,"IntoIterator"],[8,"FnMut"],[3,"ExtractIf"],[8,"Debug"],[3,"IterMut"],[3,"IntoIter"],[3,"IntoKeys"],[3,"IntoValues"],[3,"ValuesMut"],[3,"RawEntryBuilderMut"],[3,"RawOccupiedEntryMut"],[3,"RawVacantEntryMut"],[3,"RawEntryBuilder"],[3,"OccupiedEntry"],[3,"VacantEntry"],[8,"Borrow"],[3,"OccupiedEntryRef"],[3,"VacantEntryRef"],[3,"OccupiedError"],[15,"u64"],[4,"Option"],[15,"array"],[8,"From"],[8,"Fn"],[3,"RawTable"],[3,"String"],[3,"HashSet"],[3,"Iter"],[3,"Intersection"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Union"],[3,"Drain"],[4,"Entry"],[3,"ExtractIf"],[3,"IntoIter"],[3,"OccupiedEntry"],[3,"VacantEntry"],[8,"ToOwned"],[3,"Bucket"],[3,"RawIter"],[3,"NonNull"],[3,"RawDrain"],[3,"RawIntoIter"],[3,"InsertSlot"],[3,"RawIterHash"],[13,"AllocError"],[4,"DefaultHashBuilder"]]},\
"indexmap":{"doc":"<code>IndexMap</code> is a hash table where the iteration order of the …","t":"ICCDLLLLLKLLLLLLOOLALALLLLLDEDDDDDDQDINDDNDQDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Equivalent","IndexMap","IndexSet","TryReserveError","borrow","borrow_mut","clone","clone_into","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","indexmap","indexset","into","map","provide","set","to_owned","to_string","try_from","try_into","type_id","Drain","Entry","IndexMap","IntoIter","IntoKeys","IntoValues","Iter","IterMut","Key","Keys","MutableKeys","Occupied","OccupiedEntry","Slice","Vacant","VacantEntry","Value","Values","ValuesMut","and_modify","as_mut_slice","as_mut_slice","as_slice","as_slice","as_slice","as_slice","as_slice","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone","clone","clone_from","clone_into","clone_into","clone_into","clone_into","cmp","collect","collect","collect","collect","collect","collect","collect","collect","collect","compare","contains_key","count","count","count","count","count","count","count","count","count","default","default","default","default","default","default","default","default","default","default","default","drain","entry","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","extend","first","first","first_mut","first_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","get","get","get_full","get_full_mut","get_full_mut2","get_full_mut2","get_index","get_index","get_index_mut","get_index_mut","get_index_mut2","get_index_mut2","get_index_of","get_key_value","get_mut","get_mut","get_range","get_range","get_range_mut","get_range_mut","hash","hasher","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","insert","insert","insert","insert_full","into","into","into","into","into","into","into","into","into","into","into","into","into","into_boxed_slice","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_key","into_keys","into_keys","into_mut","into_slice","into_values","into_values","is_empty","is_empty","iter","iter","iter_mut","iter_mut","key","key","key","keys","keys","last","last","last","last","last","last","last","last","last","last","last","last_mut","last_mut","len","len","len","len","len","len","len","len","len","len","len","move_index","new","next","next","next","next","next","next","next","next","next","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","nth","nth","nth","nth","nth","nth","nth","nth","nth","nth_back","nth_back","nth_back","nth_back","nth_back","nth_back","nth_back","nth_back","nth_back","or_default","or_insert","or_insert_with","or_insert_with_key","partial_cmp","pop","remove","remove","remove_entry","remove_entry","reserve","reserve_exact","retain","retain2","retain2","reverse","shift_remove","shift_remove","shift_remove_entry","shift_remove_entry","shift_remove_full","shift_remove_index","shrink_to","shrink_to_fit","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","sort_by","sort_by_cached_key","sort_keys","sort_unstable_by","sort_unstable_keys","sorted_by","sorted_unstable_by","split_at","split_at_mut","split_first","split_first_mut","split_last","split_last_mut","split_off","swap_indices","swap_remove","swap_remove","swap_remove_entry","swap_remove_entry","swap_remove_full","swap_remove_index","to_owned","to_owned","to_owned","to_owned","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_reserve","try_reserve_exact","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","values","values","values_mut","values_mut","with_capacity","with_capacity_and_hasher","with_hasher","Difference","Drain","IndexSet","Intersection","IntoIter","Iter","Slice","SymmetricDifference","Union","as_slice","as_slice","as_slice","as_slice","bitand","bitor","bitxor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone","clone","clone","clone","clone_from","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","collect","collect","collect","compare","contains","count","count","count","default","default","default","default","difference","drain","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","extend","first","first","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fold","fold","from","from","from","from","from","from","from","from","from","from_iter","get","get_full","get_index","get_index","get_index_of","get_range","get_range","hash","hasher","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","insert","insert_full","intersection","into","into","into","into","into","into","into","into","into_boxed_slice","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_disjoint","is_empty","is_empty","is_subset","is_superset","iter","iter","last","last","last","last","last","len","len","len","len","len","move_index","new","next","next","next","next","next","next","next","next_back","next_back","next_back","next_back","next_back","next_back","next_back","nth","nth","nth","nth_back","nth_back","nth_back","partial_cmp","pop","remove","replace","replace_full","reserve","reserve_exact","retain","reverse","rfold","rfold","shift_remove","shift_remove_full","shift_remove_index","shift_take","shrink_to","shrink_to_fit","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","sort","sort_by","sort_by_cached_key","sort_unstable","sort_unstable_by","sorted_by","sorted_unstable_by","split_at","split_first","split_last","split_off","sub","swap_indices","swap_remove","swap_remove_full","swap_remove_index","swap_take","symmetric_difference","take","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_reserve","try_reserve_exact","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","with_capacity","with_capacity_and_hasher","with_hasher"],"q":[[0,"indexmap"],[27,"indexmap::map"],[449,"indexmap::set"]],"d":["Key equivalence trait.","","","The error type for <code>try_reserve</code> methods.","","","","","","Compare self to <code>key</code> and return <code>true</code> if they are equal.","","","","","","Returns the argument unchanged.","Create an <code>IndexMap</code> from a list of key-value pairs","Create an <code>IndexSet</code> from a list of values","Calls <code>U::from(self)</code>.","<code>IndexMap</code> is a hash table where the iteration order of the …","","A hash set implemented using <code>IndexMap</code>","","","","","","A draining iterator over the entries of a <code>IndexMap</code>.","Entry for an existing key-value pair or a vacant location …","A hash table where the iteration order of the key-value …","An owning iterator over the entries of a <code>IndexMap</code>.","An owning iterator over the keys of a <code>IndexMap</code>.","An owning iterator over the values of a <code>IndexMap</code>.","An iterator over the entries of a <code>IndexMap</code>.","A mutable iterator over the entries of a <code>IndexMap</code>.","","An iterator over the keys of a <code>IndexMap</code>.","Opt-in mutable access to keys.","Existing slot with equivalent key.","A view into an occupied entry in a <code>IndexMap</code>. It is part of …","A dynamically-sized slice of key-value pairs in an <code>IndexMap</code>…","Vacant slot (no equivalent key in the map).","A view into a vacant entry in a <code>IndexMap</code>. It is part of …","","An iterator over the values of a <code>IndexMap</code>.","A mutable iterator over the values of a <code>IndexMap</code>.","Modifies the entry if it is occupied.","Returns a mutable slice of the remaining entries in the …","Returns a mutable slice of all the key-value pairs in the …","Returns a slice of the remaining entries in the iterator.","Returns a slice of the remaining entries in the iterator.","Returns a slice of the remaining entries in the iterator.","Returns a slice of the remaining entries in the iterator.","Returns a slice of all the key-value pairs in the map.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the number of elements the map can hold without …","Remove all key-value pairs in the map, while preserving …","","","","","","","","","","","","","","","","","","","","","Return <code>true</code> if an equivalent to <code>key</code> exists in the map.","","","","","","","","","","","","","","","","","","","","Return an empty <code>IndexMap</code>","Clears the <code>IndexMap</code> in the given index range, returning …","Get the given key’s corresponding entry in the map for …","","","","","","","","","Extend the map with all key-value pairs in the iterable.","Extend the map with all key-value pairs in the iterable.","Get the first key-value pair.","Get the first key-value pair","Get the first key-value pair, with mutable access to the …","Get the first key-value pair, with mutable access to the …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Examples","Returns the argument unchanged.","Create an <code>IndexMap</code> from the sequence of key-value pairs in …","Gets a reference to the entry’s value in the map.","Return a reference to the value stored for <code>key</code>, if it is …","Return item index, key and value","","Return item index, mutable reference to key and value","","Get a key-value pair by index.","Get a key-value pair by index","Get a key-value pair by index, with mutable access to the …","Get a key-value pair by index","Return mutable reference to key and value at an index.","","Return item index, if it exists in the map","Return references to the key-value pair stored for <code>key</code>, if …","Gets a mutable reference to the entry’s value in the map.","","Returns a slice of key-value pairs in the given range of …","Returns a slice of key-value pairs in the given range of …","Returns a mutable slice of key-value pairs in the given …","Returns a mutable slice of key-value pairs in the given …","","Return a reference to the map’s <code>BuildHasher</code>.","Return the index of the key-value pair","Return the index where the key-value pair exists or will …","Return the index where the key-value pair will be inserted.","","","","","","","","","","","","Returns a reference to the value corresponding to the …","Returns a reference to the value at the supplied <code>index</code>.","","","","","","","","","","","","","","Returns a mutable reference to the value corresponding to …","","","","","","","Returns a mutable reference to the value at the supplied …","Sets the value of the entry to <code>value</code>, and returns the entry…","Inserts the entry’s key and the given value into the …","Insert a key-value pair in the map.","Insert a key-value pair in the map, and get their index.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts into a boxed slice of all the key-value pairs in …","","","","","","","","","","","","","","","Takes ownership of the key, leaving the entry vacant.","Return an owning iterator over the keys of the map slice.","Return an owning iterator over the keys of the map, in …","Converts into a mutable reference to the entry’s value …","Returns a mutable slice of the remaining entries in the …","Return an owning iterator over the values of the map slice.","Return an owning iterator over the values of the map, in …","Returns true if the map slice contains no elements.","Returns true if the map contains no elements.","Return an iterator over the key-value pairs of the map …","Return an iterator over the key-value pairs of the map, in …","Return an iterator over the key-value pairs of the map …","Return an iterator over the key-value pairs of the map, in …","Gets a reference to the entry’s key in the map.","Gets a reference to the entry’s key, either within the …","Gets a reference to the key that was used to find the …","Return an iterator over the keys of the map slice.","Return an iterator over the keys of the map, in their order","","","","","","","","","","Get the last key-value pair.","Get the last key-value pair","Get the last key-value pair, with mutable access to the …","Get the last key-value pair, with mutable access to the …","","","","","","","","","","Return the number of key-value pairs in the map slice.","Return the number of key-value pairs in the map.","Moves the position of a key-value pair from one index to …","Create a new map. (Does not allocate.)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Inserts a default-constructed value in the entry if it is …","Inserts the given default value in the entry if it is …","Inserts the result of the <code>call</code> function in the entry if it …","Inserts the result of the <code>call</code> function with a reference …","","Remove the last key-value pair","Remove the key, value pair stored in the map for this …","Remove the key-value pair equivalent to <code>key</code> and return its …","Remove and return the key, value pair stored in the map …","Remove and return the key-value pair equivalent to <code>key</code>.","Reserve capacity for <code>additional</code> more key-value pairs.","Reserve capacity for <code>additional</code> more key-value pairs, …","Scan through each key-value pair in the map and keep those …","Scan through each key-value pair in the map and keep those …","","Reverses the order of the map’s key-value pairs in place.","Remove the key, value pair stored in the map for this …","Remove the key-value pair equivalent to <code>key</code> and return its …","Remove and return the key, value pair stored in the map …","Remove and return the key-value pair equivalent to <code>key</code>.","Remove the key-value pair equivalent to <code>key</code> and return it …","Remove the key-value pair by index","Shrink the capacity of the map with a lower limit.","Shrink the capacity of the map as much as possible.","","","","","","","","","","Sort the map’s key-value pairs in place using the …","Sort the map’s key-value pairs in place using a sort-key …","Sort the map’s key-value pairs by the default ordering …","Sort the map’s key-value pairs in place using the …","Sort the map’s key-value pairs by the default ordering …","Sort the key-value pairs of the map and return a by-value …","Sort the key-value pairs of the map and return a by-value …","Divides one slice into two at an index.","Divides one mutable slice into two at an index.","Returns the first key-value pair and the rest of the slice,","Returns the first key-value pair and the rest of the slice,","Returns the last key-value pair and the rest of the slice, …","Returns the last key-value pair and the rest of the slice, …","Splits the collection into two at the given index.","Swaps the position of two key-value pairs in the map.","Remove the key, value pair stored in the map for this …","Remove the key-value pair equivalent to <code>key</code> and return its …","Remove and return the key, value pair stored in the map …","Remove and return the key-value pair equivalent to <code>key</code>.","Remove the key-value pair equivalent to <code>key</code> and return it …","Remove the key-value pair by index","","","","","Shortens the map, keeping the first <code>len</code> elements and …","","","","","","","","","","","","","","","","","","","","","","","","","","","Try to reserve capacity for <code>additional</code> more key-value …","Try to reserve capacity for <code>additional</code> more key-value …","","","","","","","","","","","","","","","Return an iterator over the values of the map slice.","Return an iterator over the values of the map, in their …","Return an iterator over mutable references to the the …","Return an iterator over mutable references to the values …","Create a new map with capacity for <code>n</code> key-value pairs. …","Create a new map with capacity for <code>n</code> key-value pairs. …","Create a new map with <code>hash_builder</code>.","A lazy iterator producing elements in the difference of …","A draining iterator over the items of a <code>IndexSet</code>.","A hash set where the iteration order of the values is …","A lazy iterator producing elements in the intersection of …","An owning iterator over the items of a <code>IndexSet</code>.","An iterator over the items of a <code>IndexSet</code>.","A dynamically-sized slice of values in an <code>IndexSet</code>.","A lazy iterator producing elements in the symmetric …","A lazy iterator producing elements in the union of <code>IndexSet</code>…","Returns a slice of the remaining entries in the iterator.","Returns a slice of the remaining entries in the iterator.","Returns a slice of the remaining entries in the iterator.","Returns a slice of all the values in the set.","Returns the set intersection, cloned into a new set.","Returns the set union, cloned into a new set.","Returns the set symmetric-difference, cloned into a new …","","","","","","","","","","","","","","","","","","","Return the number of elements the set can hold without …","Remove all elements in the set, while preserving its …","","","","","","","","","","","","","","","","","","","Return <code>true</code> if an equivalent to <code>value</code> exists in the set.","","","","","","","Return an empty <code>IndexSet</code>","Return an iterator over the values that are in <code>self</code> but …","Clears the <code>IndexSet</code> in the given index range, returning …","","","","","","","","","","","Get the first value.","Get the first value","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Examples","Returns the argument unchanged.","","Return a reference to the value stored in the set, if it …","Return item index and value","Get a value by index.","Get a value by index","Return item index, if it exists in the set","Returns a slice of values in the given range of indices.","Returns a slice of values in the given range of indices.","","Return a reference to the set’s <code>BuildHasher</code>.","","","","","","","","","","","","","Returns a reference to the value at the supplied <code>index</code>.","","","","Insert the value into the set.","Insert the value into the set, and get its index.","Return an iterator over the values that are in both <code>self</code> …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts into a boxed slice of all the values in the set.","","","","","","","","","","","Returns <code>true</code> if <code>self</code> has no elements in common with <code>other</code>.","Returns true if the set slice contains no elements.","Returns true if the set contains no elements.","Returns <code>true</code> if all elements of <code>self</code> are contained in <code>other</code>…","Returns <code>true</code> if all elements of <code>other</code> are contained in <code>self</code>…","Return an iterator over the values of the set slice.","Return an iterator over the values of the set, in their …","","","","Get the last value.","Get the last value","","","","Return the number of elements in the set slice.","Return the number of elements in the set.","Moves the position of a value from one index to another by …","Create a new set. (Does not allocate.)","","","","","","","","","","","","","","","","","","","","","","Remove the last value","Remove the value from the set, and return <code>true</code> if it was …","Adds a value to the set, replacing the existing value, if …","Adds a value to the set, replacing the existing value, if …","Reserve capacity for <code>additional</code> more values.","Reserve capacity for <code>additional</code> more values, without …","Scan through each value in the set and keep those where the","Reverses the order of the set’s values in place.","","","Remove the value from the set, and return <code>true</code> if it was …","Remove the value from the set return it and the index it …","Remove the value by index","Removes and returns the value in the set, if any, that is …","Shrink the capacity of the set with a lower limit.","Shrink the capacity of the set as much as possible.","","","","","","","","Sort the set’s values by their default ordering.","Sort the set’s values in place using the comparison …","Sort the set’s values in place using a key extraction …","Sort the set’s values by their default ordering.","Sort the set’s values in place using the comparison …","Sort the values of the set and return a by-value iterator …","Sort the values of the set and return a by-value iterator …","Divides one slice into two at an index.","Returns the first value and the rest of the slice, or <code>None</code> …","Returns the last value and the rest of the slice, or <code>None</code> …","Splits the collection into two at the given index.","Returns the set difference, cloned into a new set.","Swaps the position of two values in the set.","Remove the value from the set, and return <code>true</code> if it was …","Remove the value from the set return it and the index it …","Remove the value by index","Removes and returns the value in the set, if any, that is …","Return an iterator over the values that are in <code>self</code> or …","Removes and returns the value in the set, if any, that is …","","","","","","","Shortens the set, keeping the first <code>len</code> elements and …","","","","","","","","","","","","","","","","","Try to reserve capacity for <code>additional</code> more values.","Try to reserve capacity for <code>additional</code> more values, …","","","","","","","","","","Return an iterator over all values that are in <code>self</code> or …","Create a new set with capacity for <code>n</code> elements. (Does not …","Create a new set with capacity for <code>n</code> elements. (Does not …","Create a new set with <code>hash_builder</code>."],"i":[0,0,0,0,1,1,1,1,1,30,1,1,1,1,1,1,0,0,1,0,1,0,1,1,1,1,1,0,0,0,0,0,0,0,0,62,0,0,9,0,0,9,0,62,0,0,9,11,13,14,15,11,16,13,39,9,40,14,15,11,16,18,24,19,25,26,12,13,39,9,40,14,15,11,16,18,24,19,25,26,12,13,13,13,14,18,19,13,13,14,18,19,13,12,14,15,11,16,18,24,19,25,26,12,13,14,15,11,16,18,24,19,25,26,14,15,11,18,24,19,25,26,12,12,13,13,13,12,13,12,12,12,13,13,13,13,13,12,13,12,13,39,9,40,14,15,11,16,18,24,19,25,26,12,13,39,9,40,14,15,11,16,18,24,19,25,26,13,13,13,39,13,13,13,62,13,12,13,12,13,62,13,13,13,39,13,12,13,12,13,12,13,39,9,40,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,39,40,13,13,39,9,40,14,15,11,16,18,24,19,25,26,13,13,14,15,11,16,18,24,19,25,26,12,12,13,13,13,40,12,13,39,15,12,13,12,13,12,13,12,13,39,9,40,12,13,14,15,11,16,18,24,19,25,26,12,13,12,13,14,15,11,16,18,24,19,25,26,12,13,13,13,14,15,11,16,18,24,19,25,26,14,15,11,16,18,24,19,25,26,14,15,11,16,18,24,19,25,26,14,15,11,16,18,24,19,25,26,9,9,9,9,12,13,39,13,39,13,13,13,13,62,13,13,39,13,39,13,13,13,13,13,14,15,11,16,18,24,19,25,26,13,13,13,13,13,13,13,12,12,12,12,12,12,13,13,39,13,39,13,13,13,14,18,19,13,13,39,9,40,14,15,11,16,18,24,19,25,26,13,39,9,40,14,15,11,16,18,24,19,25,26,13,13,13,39,9,40,14,15,11,16,18,24,19,25,26,12,13,12,13,12,13,13,13,13,0,0,0,0,0,0,0,0,0,53,55,56,57,57,57,57,53,55,56,58,59,60,61,54,57,53,55,56,58,59,60,61,54,57,57,57,53,58,59,60,61,57,57,53,58,59,60,61,57,54,53,55,56,54,57,53,55,56,53,55,54,57,57,57,54,57,54,54,54,57,57,57,57,57,54,57,53,55,56,58,59,60,61,54,57,60,61,53,55,56,58,59,60,61,57,57,57,57,57,54,57,57,54,57,54,57,54,54,54,54,54,54,54,54,57,57,57,57,57,57,57,57,57,57,57,53,55,56,58,59,60,61,57,57,53,55,56,58,59,60,61,54,57,57,57,54,57,57,57,54,57,53,55,56,54,57,53,55,56,54,57,57,57,53,55,56,58,59,60,61,53,55,56,58,59,60,61,53,55,56,53,55,56,54,57,57,57,57,57,57,57,57,60,61,57,57,57,57,57,57,53,55,56,58,59,60,61,57,57,57,57,57,57,57,54,54,54,57,57,57,57,57,57,57,57,57,53,58,59,60,61,57,57,53,55,56,58,59,60,61,57,53,55,56,58,59,60,61,57,57,57,53,55,56,58,59,60,61,54,57,57,57,57,57],"f":[0,0,0,0,[[]],[[]],[1,1],[[]],[[1,1],2],[[],2],[[],2],[[],2],[[],2],[[1,3],4],[[1,3],4],[[]],0,0,[[]],0,[5],0,[[]],[[],6],[[],7],[[],7],[[],8],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[9,10],9],[11,12],[13,12],[14,12],[15,12],[11,12],[16,12],[13,12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13,17],[13],[14,14],[18,18],[19,19],[[[13,[20,20,20]]],[[13,[20,20,20]]]],[[[13,[20,20,20]],[13,[20,20,20]]]],[[]],[[]],[[]],[[]],[[[12,[21,21]],[12,[21,21]]],22],[14,23],[15,23],[11,23],[16,23],[18,23],[24,23],[19,23],[25,23],[26,23],[[],22],[[[13,[[0,[27,28]],29]],[0,[27,[30,[[0,[27,28]]]],31]]],2],[14,17],[15,17],[11,17],[16,17],[18,17],[24,17],[19,17],[25,17],[26,17],[[],14],[[],15],[[],11],[[],18],[[],24],[[],19],[[],25],[[],26],[[],12],[[],12],[[],[[13,[32]]]],[[13,[33,[17]]],16],[[[13,[[0,[27,28]],29]],[0,[27,28]]],[[9,[[0,[27,28]]]]]],[[[12,[34,34]],[12,[34,34]]],2],[[[13,[[0,[27,28]],34,29]],[13,[[0,[27,28]],29]]],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[[13,[[0,[27,28]],29]],35]],[[[13,[[0,[27,28,36]],36,29]],35]],[12,37],[13,37],[12,37],[13,37],[[[39,[38,38]],3],4],[[[9,[38,38]],3],4],[[[40,[38]],3],4],[[[14,[38,38]],3],4],[[[15,[38,38]],3],4],[[[11,[38,38]],3],4],[[[16,[38,38]],3],4],[[[18,[38]],3],4],[[[24,[38]],3],4],[[[19,[38]],3],4],[[[25,[38]],3],4],[[[26,[38]],3],4],[[[12,[38,38]],3],4],[[[13,[38,38]],3],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[41,[[13,[[0,[27,28]],42]]]],[[]],[35,[[13,[[0,[27,28]],[0,[29,32]]]]]],[39],[[[13,[[0,[27,28]],29]],[0,[27,[30,[[0,[27,28]]]],31]]],37],[[[13,[[0,[27,28]],29]],[0,[27,[30,[[0,[27,28]]]],31]]],37],[[[13,[[0,[27,28]],29]],[0,[27,[30,[[0,[27,28]]]],31]]],37],[[[0,[27,30,31]]],37],[[[13,[[0,[28,27]],29]],[0,[27,[30,[[0,[28,27]]]],31]]],37],[[12,17],37],[[13,17],37],[[12,17],37],[[13,17],37],[17,37],[[[13,[[0,[28,27]],29]],17],37],[[[13,[[0,[27,28]],29]],[0,[27,[30,[[0,[27,28]]]],31]]],[[37,[17]]]],[[[13,[[0,[27,28]],29]],[0,[27,[30,[[0,[27,28]]]],31]]],37],[39],[[[13,[[0,[27,28]],29]],[0,[27,[30,[[0,[27,28]]]],31]]],37],[[12,[33,[17]]],[[37,[12]]]],[[13,[33,[17]]],[[37,[12]]]],[[12,[33,[17]]],[[37,[12]]]],[[13,[33,[17]]],[[37,[12]]]],[[[12,[27,27]],43]],[13],[39,17],[9,17],[40,17],[[12,17]],[[12,[44,[17]]],12],[[12,[45,[17]]],12],[[12,46],12],[[12,[47,[17]]],12],[[12,[48,[17]]],12],[12,12],[[12,[49,[17]]],12],[[13,[49,[17]]]],[[13,[44,[17]]]],[[13,[45,[17]]]],[[[13,[[0,[27,28]],29]],[0,[27,[30,[[0,[27,28]]]],31]]]],[[13,17]],[[13,[48,[17]]]],[[13,46]],[13],[[13,[47,[17]]]],[[12,[49,[17]]],12],[12,12],[[12,[48,[17]]],12],[[12,[44,[17]]],12],[[12,46],12],[[12,[45,[17]]],12],[[12,[47,[17]]],12],[[12,17]],[[13,[49,[17]]]],[[[13,[[0,[27,28]],29]],[0,[27,[30,[[0,[27,28]]]],31]]]],[[13,[47,[17]]]],[[13,[44,[17]]]],[[13,46]],[13],[[13,[48,[17]]]],[[13,[45,[17]]]],[[13,17]],[39],[40],[[[13,[[0,[27,28]],29]],[0,[27,28]]],37],[[[13,[[0,[27,28]],29]],[0,[27,28]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13,[[50,[12]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12],[12],[13],[13],[13],[40],[[[50,[12]]],24],[13,24],[39],[15,12],[[[50,[12]]],26],[13,26],[12,2],[13,2],[12,14],[13,14],[12,15],[13,15],[39],[9],[40],[12,18],[13,18],[14,37],[15,37],[11,37],[16,37],[18,37],[24,37],[19,37],[25,37],[26,37],[12,37],[13,37],[12,37],[13,37],[14,17],[15,17],[11,17],[16,17],[18,17],[24,17],[19,17],[25,17],[26,17],[12,17],[13,17],[[13,17,17]],[[],13],[14,37],[15,37],[11,37],[16,37],[18,37],[24,37],[19,37],[25,37],[26,37],[14,37],[15,37],[11,37],[16,37],[18,37],[24,37],[19,37],[25,37],[26,37],[[14,17],37],[[15,17],37],[[11,17],37],[[16,17],37],[[18,17],37],[[24,17],37],[[19,17],37],[[25,17],37],[[26,17],37],[[14,17],37],[[15,17],37],[[11,17],37],[[16,17],37],[[18,17],37],[[24,17],37],[[19,17],37],[[25,17],37],[[26,17],37],[[[9,[32]]],32],[9],[[9,10]],[[9,10]],[[[12,[51,51]],[12,[51,51]]],[[37,[22]]]],[[[13,[[0,[27,28]],29]]],37],[39],[[[13,[[0,[27,28]],29]],[0,[27,[30,[[0,[27,28]]]],31]]],37],[39],[[[13,[[0,[27,28]],29]],[0,[27,[30,[[0,[27,28]]]],31]]],37],[[[13,[[0,[27,28]],29]],17]],[[[13,[[0,[27,28]],29]],17]],[[[13,[[0,[27,28]],29]],52]],[52],[[[13,[[0,[28,27]],29]],52]],[[[13,[[0,[27,28]],29]]]],[39],[[[13,[[0,[27,28]],29]],[0,[27,[30,[[0,[27,28]]]],31]]],37],[39],[[[13,[[0,[27,28]],29]],[0,[27,[30,[[0,[27,28]]]],31]]],37],[[[13,[[0,[27,28]],29]],[0,[27,[30,[[0,[27,28]]]],31]]],37],[[13,17],37],[[[13,[[0,[27,28]],29]],17]],[[[13,[[0,[27,28]],29]]]],[14],[15],[11],[16],[18],[24],[19],[25],[26],[[[13,[[0,[27,28]],29]],52]],[[[13,[[0,[27,28]],29]],52]],[[[13,[21,[0,[27,28]],29]]]],[[[13,[[0,[27,28]],29]],52]],[[[13,[21,[0,[27,28]],29]]]],[[[13,[[0,[27,28]],29]],52],[[11,[[0,[27,28]]]]]],[[[13,[[0,[27,28]],29]],52],[[11,[[0,[27,28]]]]]],[[12,17]],[[12,17]],[12,37],[12,37],[12,37],[12,37],[[[13,[20]],17],[[13,[20]]]],[[13,17,17]],[39],[[[13,[[0,[27,28]],29]],[0,[27,[30,[[0,[27,28]]]],31]]],37],[39],[[[13,[[0,[27,28]],29]],[0,[27,[30,[[0,[27,28]]]],31]]],37],[[[13,[[0,[27,28]],29]],[0,[27,[30,[[0,[27,28]]]],31]]],37],[[13,17],37],[[]],[[]],[[]],[[]],[[13,17]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[[13,[[0,[27,28]],29]],17],[[7,[1]]]],[[[13,[[0,[27,28]],29]],17],[[7,[1]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[12,19],[13,19],[12,25],[13,25],[17,13],[17,13],[[],13],0,0,0,0,0,0,0,0,0,[53,54],[55,54],[56,54],[57,54],[[[57,[[0,[28,27,20]],[0,[29,32]]]],[57,[[0,[28,27,20]],29]]]],[[[57,[[0,[28,27,20]],[0,[29,32]]]],[57,[[0,[28,27,20]],29]]]],[[[57,[[0,[28,27,20]],[0,[29,32]]]],[57,[[0,[28,27,20]],29]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[57,17],[57],[53,53],[58,58],[59,59],[60,60],[61,61],[[[57,[20,20]]],[[57,[20,20]]]],[[[57,[20,20]],[57,[20,20]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[54,[21]],[54,[21]]],22],[53,23],[55,23],[56,23],[[],22],[[[57,[[0,[27,28]],29]],[0,[27,[30,[[0,[27,28]]]],31]]],2],[53,17],[55,17],[56,17],[[],53],[[],55],[[],54],[[],[[57,[32]]]],[[[57,[[0,[27,28]],29]],[57,[[0,[27,28]],29]]],[[58,[[0,[27,28]],29]]]],[[57,[33,[17]]],56],[[[54,[34]],[54,[34]]],2],[[[57,[[0,[27,28]],29]],[57,[[0,[27,28]],29]]],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[[57,[[0,[27,28]],29]],35]],[[[57,[[0,[27,28,36]],29]],35]],[54,37],[57,37],[[[53,[38]],3],4],[[[55,[38]],3],4],[[[56,[38]],3],4],[[[58,[[0,[38,28,27]],29]],3],4],[[[59,[[0,[38,28,27]],29]],3],4],[[[60,[[0,[38,28,27]],29,29]],3],4],[[[61,[[0,[38,28,27]],29]],3],4],[[[54,[38]],3],4],[[[57,[38]],3],4],[[[60,[[0,[28,27]],29,29]],52]],[[[61,[[0,[28,27]],29]],52]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[41,[[0,[28,27]]]]],[[57,[[0,[28,27]],42]]]],[[]],[35,[[57,[[0,[27,28]],[0,[29,32]]]]]],[[[57,[[0,[27,28]],29]],[0,[27,[30,[[0,[27,28]]]],31]]],[[37,[[0,[27,28]]]]]],[[[57,[[0,[27,28]],29]],[0,[27,[30,[[0,[27,28]]]],31]]],37],[[54,17],37],[[57,17],37],[[[57,[[0,[27,28]],29]],[0,[27,[30,[[0,[27,28]]]],31]]],[[37,[17]]]],[[54,[33,[17]]],[[37,[54]]]],[[57,[33,[17]]],[[37,[54]]]],[[[54,[27]],43]],[57],[[54,[48,[17]]]],[54],[[54,[47,[17]]]],[[54,46]],[[54,[44,[17]]]],[[54,[49,[17]]]],[[54,[45,[17]]]],[[54,17]],[[57,46]],[[57,[48,[17]]]],[[57,[44,[17]]]],[[57,[49,[17]]]],[[57,17]],[57],[[57,[45,[17]]]],[[57,[47,[17]]]],[[[57,[[0,[27,28]],29]],[0,[27,28]]],2],[[[57,[[0,[27,28]],29]],[0,[27,28]]]],[[[57,[[0,[27,28]],29]],[57,[[0,[27,28]],29]]],[[59,[[0,[27,28]],29]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[57,[[50,[54]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[54],[57],[57],[[[57,[[0,[28,27]],29]],[57,[[0,[28,27]],29]]],2],[54,2],[57,2],[[[57,[[0,[28,27]],29]],[57,[[0,[28,27]],29]]],2],[[[57,[[0,[28,27]],29]],[57,[[0,[28,27]],29]]],2],[54,53],[57,53],[53,37],[55,37],[56,37],[54,37],[57,37],[53,17],[55,17],[56,17],[54,17],[57,17],[[57,17,17]],[[],57],[53,37],[55,37],[56,37],[[[58,[[0,[28,27]],29]]],37],[[[59,[[0,[28,27]],29]]],37],[[[60,[[0,[28,27]],29,29]]],37],[[[61,[[0,[28,27]],29]]],37],[53,37],[55,37],[56,37],[[[58,[[0,[28,27]],29]]],37],[[[59,[[0,[28,27]],29]]],37],[[[60,[[0,[28,27]],29,29]]],37],[[[61,[[0,[28,27]],29]]],37],[[53,17],37],[[55,17],37],[[56,17],37],[[53,17],37],[[55,17],37],[[56,17],37],[[[54,[51]],[54,[51]]],[[37,[22]]]],[[[57,[[0,[27,28]],29]]],[[37,[[0,[27,28]]]]]],[[[57,[[0,[27,28]],29]],[0,[27,[30,[[0,[27,28]]]],31]]],2],[[[57,[[0,[27,28]],29]],[0,[27,28]]],[[37,[[0,[27,28]]]]]],[[[57,[[0,[27,28]],29]],[0,[27,28]]]],[[[57,[[0,[27,28]],29]],17]],[[[57,[[0,[27,28]],29]],17]],[[[57,[[0,[27,28]],29]],52]],[[[57,[[0,[27,28]],29]]]],[[[60,[[0,[28,27]],29,29]],52]],[[[61,[[0,[28,27]],29]],52]],[[[57,[[0,[27,28]],29]],[0,[27,[30,[[0,[27,28]]]],31]]],2],[[[57,[[0,[27,28]],29]],[0,[27,[30,[[0,[27,28]]]],31]]],37],[[57,17],37],[[[57,[[0,[27,28]],29]],[0,[27,[30,[[0,[27,28]]]],31]]],[[37,[[0,[27,28]]]]]],[[[57,[[0,[27,28]],29]],17]],[[[57,[[0,[27,28]],29]]]],[53],[55],[56],[[[58,[[0,[28,27]],29]]]],[[[59,[[0,[28,27]],29]]]],[[[60,[[0,[28,27]],29,29]]]],[[[61,[[0,[28,27]],29]]]],[[[57,[21,[0,[27,28]],29]]]],[[[57,[[0,[27,28]],29]],52]],[[[57,[[0,[27,28]],29]],52]],[[[57,[21,[0,[27,28]],29]]]],[[[57,[[0,[27,28]],29]],52]],[[[57,[[0,[27,28]],29]],52],[[55,[[0,[27,28]]]]]],[[[57,[[0,[27,28]],29]],52],[[55,[[0,[27,28]]]]]],[[54,17]],[54,37],[54,37],[[[57,[20]],17],[[57,[20]]]],[[[57,[[0,[28,27,20]],[0,[29,32]]]],[57,[[0,[28,27,20]],29]]]],[[57,17,17]],[[[57,[[0,[27,28]],29]],[0,[27,[30,[[0,[27,28]]]],31]]],2],[[[57,[[0,[27,28]],29]],[0,[27,[30,[[0,[27,28]]]],31]]],37],[[57,17],37],[[[57,[[0,[27,28]],29]],[0,[27,[30,[[0,[27,28]]]],31]]],[[37,[[0,[27,28]]]]]],[[[57,[[0,[27,28]],29]],[57,[[0,[27,28]],29]]],[[60,[[0,[27,28]],29,29]]]],[[[57,[[0,[27,28]],29]],[0,[27,[30,[[0,[27,28]]]],31]]],[[37,[[0,[27,28]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[57,17]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[[57,[[0,[27,28]],29]],17],[[7,[1]]]],[[[57,[[0,[27,28]],29]],17],[[7,[1]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[[57,[[0,[27,28]],29]],[57,[[0,[27,28]],29]]],[[61,[[0,[27,28]],29]]]],[17,57],[17,57],[[],57]],"c":[],"p":[[3,"TryReserveError"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"Demand"],[3,"String"],[4,"Result"],[3,"TypeId"],[4,"Entry"],[8,"FnOnce"],[3,"IntoIter"],[3,"Slice"],[3,"IndexMap"],[3,"Iter"],[3,"IterMut"],[3,"Drain"],[15,"usize"],[3,"Keys"],[3,"Values"],[8,"Clone"],[8,"Ord"],[4,"Ordering"],[8,"FromIterator"],[3,"IntoKeys"],[3,"ValuesMut"],[3,"IntoValues"],[8,"Hash"],[8,"Eq"],[8,"BuildHasher"],[8,"Equivalent"],[8,"Sized"],[8,"Default"],[8,"RangeBounds"],[8,"PartialEq"],[8,"IntoIterator"],[8,"Copy"],[4,"Option"],[8,"Debug"],[3,"OccupiedEntry"],[3,"VacantEntry"],[15,"array"],[3,"RandomState"],[8,"Hasher"],[3,"RangeTo"],[3,"Range"],[3,"RangeFull"],[3,"RangeFrom"],[3,"RangeToInclusive"],[3,"RangeInclusive"],[3,"Box"],[8,"PartialOrd"],[8,"FnMut"],[3,"Iter"],[3,"Slice"],[3,"IntoIter"],[3,"Drain"],[3,"IndexSet"],[3,"Difference"],[3,"Intersection"],[3,"SymmetricDifference"],[3,"Union"],[8,"MutableKeys"]]},\
"lazy_static":{"doc":"A macro for declaring lazily evaluated statics.","t":"IFO","n":["LazyStatic","initialize","lazy_static"],"q":[[0,"lazy_static"]],"d":["Support trait for enabling a few common operation on lazy …","Takes a shared reference to a lazy static and initializes …",""],"i":[0,0,0],"f":[0,[1],0],"c":[],"p":[[8,"LazyStatic"]]},\
"libc":{"doc":"libc - Raw FFI bindings to platforms’ system libraries","t":"","n":["ABDAY_1","ABDAY_2","ABDAY_3","ABDAY_4","ABDAY_5","ABDAY_6","ABDAY_7","ABMON_1","ABMON_10","ABMON_11","ABMON_12","ABMON_2","ABMON_3","ABMON_4","ABMON_5","ABMON_6","ABMON_7","ABMON_8","ABMON_9","ABS_CNT","ABS_MAX","ACCOUNTING","ADDR_COMPAT_LAYOUT","ADDR_LIMIT_32BIT","ADDR_LIMIT_3GB","ADDR_NO_RANDOMIZE","ADFS_SUPER_MAGIC","ADJ_ESTERROR","ADJ_FREQUENCY","ADJ_MAXERROR","ADJ_MICRO","ADJ_NANO","ADJ_OFFSET","ADJ_OFFSET_SINGLESHOT","ADJ_OFFSET_SS_READ","ADJ_SETOFFSET","ADJ_STATUS","ADJ_TAI","ADJ_TICK","ADJ_TIMECONST","AFFS_SUPER_MAGIC","AFS_SUPER_MAGIC","AF_ALG","AF_APPLETALK","AF_ASH","AF_ATMPVC","AF_ATMSVC","AF_AX25","AF_BLUETOOTH","AF_BRIDGE","AF_CAIF","AF_CAN","AF_DECnet","AF_ECONET","AF_IB","AF_IEEE802154","AF_INET","AF_INET6","AF_IPX","AF_IRDA","AF_ISDN","AF_IUCV","AF_KEY","AF_LLC","AF_LOCAL","AF_MPLS","AF_NETBEUI","AF_NETLINK","AF_NETROM","AF_NFC","AF_PACKET","AF_PHONET","AF_PPPOX","AF_RDS","AF_ROSE","AF_ROUTE","AF_RXRPC","AF_SECURITY","AF_SNA","AF_TIPC","AF_UNIX","AF_UNSPEC","AF_VSOCK","AF_WANPIPE","AF_X25","AF_XDP","AIO_ALLDONE","AIO_CANCELED","AIO_NOTCANCELED","AI_ADDRCONFIG","AI_ALL","AI_CANONNAME","AI_NUMERICHOST","AI_NUMERICSERV","AI_PASSIVE","AI_V4MAPPED","ALG_OP_DECRYPT","ALG_OP_ENCRYPT","ALG_SET_AEAD_ASSOCLEN","ALG_SET_AEAD_AUTHSIZE","ALG_SET_IV","ALG_SET_KEY","ALG_SET_OP","ALT_DIGITS","AM_STR","ARPD_FLUSH","ARPD_LOOKUP","ARPD_UPDATE","ARPHRD_ADAPT","ARPHRD_APPLETLK","ARPHRD_ARCNET","ARPHRD_ASH","ARPHRD_ATM","ARPHRD_AX25","ARPHRD_BIF","ARPHRD_CAN","ARPHRD_CHAOS","ARPHRD_CISCO","ARPHRD_CSLIP","ARPHRD_CSLIP6","ARPHRD_DDCMP","ARPHRD_DLCI","ARPHRD_ECONET","ARPHRD_EETHER","ARPHRD_ETHER","ARPHRD_EUI64","ARPHRD_FCAL","ARPHRD_FCFABRIC","ARPHRD_FCPL","ARPHRD_FCPP","ARPHRD_FDDI","ARPHRD_FRAD","ARPHRD_HDLC","ARPHRD_HIPPI","ARPHRD_HWX25","ARPHRD_IEEE1394","ARPHRD_IEEE802","ARPHRD_IEEE80211","ARPHRD_IEEE80211_PRISM","ARPHRD_IEEE80211_RADIOTAP","ARPHRD_IEEE802154","ARPHRD_IEEE802_TR","ARPHRD_INFINIBAND","ARPHRD_IPDDP","ARPHRD_IPGRE","ARPHRD_IRDA","ARPHRD_LAPB","ARPHRD_LOCALTLK","ARPHRD_LOOPBACK","ARPHRD_METRICOM","ARPHRD_NETROM","ARPHRD_NONE","ARPHRD_PIMREG","ARPHRD_PPP","ARPHRD_PRONET","ARPHRD_RAWHDLC","ARPHRD_ROSE","ARPHRD_RSRVD","ARPHRD_SIT","ARPHRD_SKIP","ARPHRD_SLIP","ARPHRD_SLIP6","ARPHRD_TUNNEL","ARPHRD_TUNNEL6","ARPHRD_VOID","ARPHRD_X25","ARPOP_InREPLY","ARPOP_InREQUEST","ARPOP_NAK","ARPOP_REPLY","ARPOP_REQUEST","ARPOP_RREPLY","ARPOP_RREQUEST","ATF_COM","ATF_DONTPUB","ATF_MAGIC","ATF_NETMASK","ATF_PERM","ATF_PUBL","ATF_USETRAILERS","AT_BASE","AT_BASE_PLATFORM","AT_CLKTCK","AT_EACCESS","AT_EGID","AT_EMPTY_PATH","AT_ENTRY","AT_EUID","AT_EXECFD","AT_EXECFN","AT_FDCWD","AT_FLAGS","AT_GID","AT_HWCAP","AT_HWCAP2","AT_IGNORE","AT_NOTELF","AT_NO_AUTOMOUNT","AT_NULL","AT_PAGESZ","AT_PHDR","AT_PHENT","AT_PHNUM","AT_PLATFORM","AT_RANDOM","AT_RECURSIVE","AT_REMOVEDIR","AT_SECURE","AT_STATX_DONT_SYNC","AT_STATX_FORCE_SYNC","AT_STATX_SYNC_AS_STAT","AT_STATX_SYNC_TYPE","AT_SYMLINK_FOLLOW","AT_SYMLINK_NOFOLLOW","AT_SYSINFO_EHDR","AT_UID","AUTOFS_SUPER_MAGIC","B0","B1000000","B110","B115200","B1152000","B1200","B134","B150","B1500000","B1800","B19200","B200","B2000000","B230400","B2400","B2500000","B300","B3000000","B3500000","B38400","B4000000","B460800","B4800","B50","B500000","B57600","B576000","B600","B75","B921600","B9600","BINDERFS_SUPER_MAGIC","BLKIOMIN","BLKIOOPT","BLKPBSZGET","BLKSSZGET","BOOT_TIME","BOTHER","BPF_ABS","BPF_ADD","BPF_ALU","BPF_AND","BPF_B","BPF_DIV","BPF_FS_MAGIC","BPF_H","BPF_IMM","BPF_IND","BPF_JA","BPF_JEQ","BPF_JGE","BPF_JGT","BPF_JMP","BPF_JSET","BPF_JUMP","BPF_K","BPF_LD","BPF_LDX","BPF_LEN","BPF_LL_OFF","BPF_LSH","BPF_MAXINSNS","BPF_MEM","BPF_MEMWORDS","BPF_MISC","BPF_MISCOP","BPF_MOD","BPF_MSH","BPF_MUL","BPF_NEG","BPF_NET_OFF","BPF_OR","BPF_RET","BPF_RSH","BPF_RVAL","BPF_ST","BPF_STMT","BPF_STX","BPF_SUB","BPF_W","BPF_X","BPF_XOR","BRKINT","BS0","BS1","BSDLY","BTRFS_SUPER_MAGIC","BUFSIZ","BUS_ADRALN","BUS_ADRERR","BUS_MCEERR_AO","BUS_MCEERR_AR","BUS_OBJERR","CANFD_BRS","CANFD_ESI","CANFD_MAX_DLC","CANFD_MAX_DLEN","CANFD_MTU","CANXL_HDR_SIZE","CANXL_MAX_DLC","CANXL_MAX_DLC_MASK","CANXL_MAX_DLEN","CANXL_MAX_MTU","CANXL_MIN_DLC","CANXL_MIN_DLEN","CANXL_MIN_MTU","CANXL_MTU","CANXL_PRIO_BITS","CANXL_PRIO_MASK","CANXL_SEC","CANXL_XLF","CAN_BCM","CAN_EFF_FLAG","CAN_EFF_ID_BITS","CAN_EFF_MASK","CAN_ERR_FLAG","CAN_ERR_MASK","CAN_INV_FILTER","CAN_ISOTP","CAN_J1939","CAN_MAX_DLC","CAN_MAX_DLEN","CAN_MCNET","CAN_MTU","CAN_NPROTO","CAN_RAW","CAN_RAW_ERR_FILTER","CAN_RAW_FD_FRAMES","CAN_RAW_FILTER","CAN_RAW_FILTER_MAX","CAN_RAW_JOIN_FILTERS","CAN_RAW_LOOPBACK","CAN_RAW_RECV_OWN_MSGS","CAN_RAW_XL_FRAMES","CAN_RTR_FLAG","CAN_SFF_ID_BITS","CAN_SFF_MASK","CAN_TP16","CAN_TP20","CBAUD","CBAUDEX","CGROUP2_SUPER_MAGIC","CGROUP_SUPER_MAGIC","CIBAUD","CLD_CONTINUED","CLD_DUMPED","CLD_EXITED","CLD_KILLED","CLD_STOPPED","CLD_TRAPPED","CLOCAL","CLOCK_BOOTTIME","CLOCK_BOOTTIME_ALARM","CLOCK_MONOTONIC","CLOCK_MONOTONIC_COARSE","CLOCK_MONOTONIC_RAW","CLOCK_PROCESS_CPUTIME_ID","CLOCK_REALTIME","CLOCK_REALTIME_ALARM","CLOCK_REALTIME_COARSE","CLOCK_TAI","CLOCK_THREAD_CPUTIME_ID","CLONE_CHILD_CLEARTID","CLONE_CHILD_SETTID","CLONE_DETACHED","CLONE_FILES","CLONE_FS","CLONE_IO","CLONE_NEWCGROUP","CLONE_NEWIPC","CLONE_NEWNET","CLONE_NEWNS","CLONE_NEWPID","CLONE_NEWUSER","CLONE_NEWUTS","CLONE_PARENT","CLONE_PARENT_SETTID","CLONE_PIDFD","CLONE_PTRACE","CLONE_SETTLS","CLONE_SIGHAND","CLONE_SYSVSEM","CLONE_THREAD","CLONE_UNTRACED","CLONE_VFORK","CLONE_VM","CLOSE_RANGE_CLOEXEC","CLOSE_RANGE_UNSHARE","CMSG_DATA","CMSG_FIRSTHDR","CMSG_LEN","CMSG_NXTHDR","CMSG_SPACE","CMSPAR","CODA_SUPER_MAGIC","CODESET","CPU_ALLOC_SIZE","CPU_CLR","CPU_COUNT","CPU_COUNT_S","CPU_EQUAL","CPU_ISSET","CPU_SET","CPU_SETSIZE","CPU_ZERO","CR0","CR1","CR2","CR3","CRAMFS_MAGIC","CRDLY","CREAD","CRNCYSTR","CRTSCTS","CS","CS5","CS6","CS7","CS8","CSIZE","CSTOPB","CTRL_ATTR_FAMILY_ID","CTRL_ATTR_FAMILY_NAME","CTRL_ATTR_HDRSIZE","CTRL_ATTR_MAXATTR","CTRL_ATTR_MCAST_GROUPS","CTRL_ATTR_MCAST_GRP_ID","CTRL_ATTR_MCAST_GRP_NAME","CTRL_ATTR_MCAST_GRP_UNSPEC","CTRL_ATTR_OPS","CTRL_ATTR_OP_FLAGS","CTRL_ATTR_OP_ID","CTRL_ATTR_OP_UNSPEC","CTRL_ATTR_UNSPEC","CTRL_ATTR_VERSION","CTRL_CMD_DELFAMILY","CTRL_CMD_DELMCAST_GRP","CTRL_CMD_DELOPS","CTRL_CMD_GETFAMILY","CTRL_CMD_GETMCAST_GRP","CTRL_CMD_GETOPS","CTRL_CMD_NEWFAMILY","CTRL_CMD_NEWMCAST_GRP","CTRL_CMD_NEWOPS","CTRL_CMD_UNSPEC","DAY_1","DAY_2","DAY_3","DAY_4","DAY_5","DAY_6","DAY_7","DCCP_SERVICE_LIST_MAX_LEN","DCCP_SOCKOPT_AVAILABLE_CCIDS","DCCP_SOCKOPT_CCID","DCCP_SOCKOPT_CCID_RX_INFO","DCCP_SOCKOPT_CCID_TX_INFO","DCCP_SOCKOPT_CHANGE_L","DCCP_SOCKOPT_CHANGE_R","DCCP_SOCKOPT_GET_CUR_MPS","DCCP_SOCKOPT_PACKET_SIZE","DCCP_SOCKOPT_QPOLICY_ID","DCCP_SOCKOPT_QPOLICY_TXQLEN","DCCP_SOCKOPT_RECV_CSCOV","DCCP_SOCKOPT_RX_CCID","DCCP_SOCKOPT_SEND_CSCOV","DCCP_SOCKOPT_SERVER_TIMEWAIT","DCCP_SOCKOPT_SERVICE","DCCP_SOCKOPT_TX_CCID","DEAD_PROCESS","DEBUGFS_MAGIC","DEVPTS_SUPER_MAGIC","DIR","DS","DT_BLK","DT_CHR","DT_DIR","DT_FIFO","DT_LNK","DT_REG","DT_SOCK","DT_UNKNOWN","D_FMT","D_T_FMT","Dl_info","E2BIG","EACCES","EADDRINUSE","EADDRNOTAVAIL","EADV","EAFNOSUPPORT","EAGAIN","EAI_AGAIN","EAI_BADFLAGS","EAI_FAIL","EAI_FAMILY","EAI_MEMORY","EAI_NODATA","EAI_NONAME","EAI_OVERFLOW","EAI_SERVICE","EAI_SOCKTYPE","EAI_SYSTEM","EALREADY","EBADE","EBADF","EBADFD","EBADMSG","EBADR","EBADRQC","EBADSLT","EBFONT","EBUSY","ECANCELED","ECHILD","ECHO","ECHOCTL","ECHOE","ECHOK","ECHOKE","ECHONL","ECHOPRT","ECHRNG","ECOMM","ECONNABORTED","ECONNREFUSED","ECONNRESET","ECRYPTFS_SUPER_MAGIC","EDEADLK","EDEADLOCK","EDESTADDRREQ","EDOM","EDOTDOT","EDQUOT","EEXIST","EFAULT","EFBIG","EFD_CLOEXEC","EFD_NONBLOCK","EFD_SEMAPHORE","EFLAGS","EFS_SUPER_MAGIC","EHOSTDOWN","EHOSTUNREACH","EHWPOISON","EIDRM","EILSEQ","EINPROGRESS","EINTR","EINVAL","EIO","EISCONN","EISDIR","EISNAM","EI_ABIVERSION","EI_CLASS","EI_DATA","EI_MAG0","EI_MAG1","EI_MAG2","EI_MAG3","EI_NIDENT","EI_OSABI","EI_PAD","EI_VERSION","EKEYEXPIRED","EKEYREJECTED","EKEYREVOKED","EL2HLT","EL2NSYNC","EL3HLT","EL3RST","ELFCLASS32","ELFCLASS64","ELFCLASSNONE","ELFCLASSNUM","ELFDATA2LSB","ELFDATA2MSB","ELFDATANONE","ELFDATANUM","ELFMAG0","ELFMAG1","ELFMAG2","ELFMAG3","ELFOSABI_AIX","ELFOSABI_ARM","ELFOSABI_ARM_AEABI","ELFOSABI_FREEBSD","ELFOSABI_GNU","ELFOSABI_HPUX","ELFOSABI_IRIX","ELFOSABI_LINUX","ELFOSABI_MODESTO","ELFOSABI_NETBSD","ELFOSABI_NONE","ELFOSABI_OPENBSD","ELFOSABI_SOLARIS","ELFOSABI_STANDALONE","ELFOSABI_SYSV","ELFOSABI_TRU64","ELIBACC","ELIBBAD","ELIBEXEC","ELIBMAX","ELIBSCN","ELNRNG","ELOOP","EMEDIUMTYPE","EMFILE","EMLINK","EMPTY","EMSGSIZE","EMULTIHOP","EM_386","EM_68HC05","EM_68HC08","EM_68HC11","EM_68HC12","EM_68HC16","EM_68K","EM_860","EM_88K","EM_960","EM_AARCH64","EM_ALPHA","EM_ARC","EM_ARC_A5","EM_ARM","EM_AVR","EM_COLDFIRE","EM_CRIS","EM_D10V","EM_D30V","EM_FAKE_ALPHA","EM_FIREPATH","EM_FR20","EM_FR30","EM_FX66","EM_H8S","EM_H8_300","EM_H8_300H","EM_H8_500","EM_HUANY","EM_IA_64","EM_JAVELIN","EM_M32","EM_M32R","EM_ME16","EM_MIPS","EM_MIPS_RS3_LE","EM_MIPS_X","EM_MMA","EM_MMIX","EM_MN10200","EM_MN10300","EM_NCPU","EM_NDR1","EM_NONE","EM_OPENRISC","EM_PARISC","EM_PCP","EM_PDSP","EM_PJ","EM_PPC","EM_PPC64","EM_PRISM","EM_RCE","EM_RH32","EM_S370","EM_S390","EM_SH","EM_SPARC","EM_SPARC32PLUS","EM_SPARCV9","EM_ST100","EM_ST19","EM_ST7","EM_ST9PLUS","EM_STARCORE","EM_SVX","EM_TILEGX","EM_TILEPRO","EM_TINYJ","EM_TRICORE","EM_V800","EM_V850","EM_VAX","EM_VPP500","EM_X86_64","EM_XTENSA","EM_ZSP","ENAMETOOLONG","ENAVAIL","ENETDOWN","ENETRESET","ENETUNREACH","ENFILE","ENOANO","ENOATTR","ENOBUFS","ENOCSI","ENODATA","ENODEV","ENOENT","ENOEXEC","ENOKEY","ENOLCK","ENOLINK","ENOMEDIUM","ENOMEM","ENOMSG","ENONET","ENOPKG","ENOPROTOOPT","ENOSPC","ENOSR","ENOSTR","ENOSYS","ENOTBLK","ENOTCONN","ENOTDIR","ENOTEMPTY","ENOTNAM","ENOTRECOVERABLE","ENOTSOCK","ENOTSUP","ENOTTY","ENOTUNIQ","ENXIO","EOF","EOPNOTSUPP","EOVERFLOW","EOWNERDEAD","EPERM","EPFNOSUPPORT","EPIPE","EPOLLERR","EPOLLET","EPOLLEXCLUSIVE","EPOLLHUP","EPOLLIN","EPOLLMSG","EPOLLONESHOT","EPOLLOUT","EPOLLPRI","EPOLLRDBAND","EPOLLRDHUP","EPOLLRDNORM","EPOLLWAKEUP","EPOLLWRBAND","EPOLLWRNORM","EPOLL_CLOEXEC","EPOLL_CTL_ADD","EPOLL_CTL_DEL","EPOLL_CTL_MOD","EPROTO","EPROTONOSUPPORT","EPROTOTYPE","ERA","ERANGE","ERA_D_FMT","ERA_D_T_FMT","ERA_T_FMT","EREMCHG","EREMOTE","EREMOTEIO","ERESTART","ERFKILL","EROFS","ES","ESHUTDOWN","ESOCKTNOSUPPORT","ESPIPE","ESRCH","ESRMNT","ESTALE","ESTRPIPE","ETH_ALEN","ETH_DATA_LEN","ETH_FCS_LEN","ETH_FRAME_LEN","ETH_HLEN","ETH_P_1588","ETH_P_8021AD","ETH_P_8021AH","ETH_P_8021Q","ETH_P_80221","ETH_P_802_2","ETH_P_802_3","ETH_P_802_3_MIN","ETH_P_802_EX1","ETH_P_AARP","ETH_P_AF_IUCV","ETH_P_ALL","ETH_P_AOE","ETH_P_ARCNET","ETH_P_ARP","ETH_P_ATALK","ETH_P_ATMFATE","ETH_P_ATMMPOA","ETH_P_AX25","ETH_P_BATMAN","ETH_P_BPQ","ETH_P_CAIF","ETH_P_CANFD","ETH_P_CONTROL","ETH_P_CUST","ETH_P_DDCMP","ETH_P_DEC","ETH_P_DIAG","ETH_P_DNA_DL","ETH_P_DNA_RC","ETH_P_DNA_RT","ETH_P_DSA","ETH_P_ECONET","ETH_P_EDSA","ETH_P_FCOE","ETH_P_FIP","ETH_P_HDLC","ETH_P_IEEE802154","ETH_P_IEEEPUP","ETH_P_IEEEPUPAT","ETH_P_IP","ETH_P_IPV6","ETH_P_IPX","ETH_P_IRDA","ETH_P_LAT","ETH_P_LINK_CTL","ETH_P_LOCALTALK","ETH_P_LOOP","ETH_P_LOOPBACK","ETH_P_MACSEC","ETH_P_MOBITEX","ETH_P_MPLS_MC","ETH_P_MPLS_UC","ETH_P_MVRP","ETH_P_PAE","ETH_P_PAUSE","ETH_P_PHONET","ETH_P_PPPTALK","ETH_P_PPP_DISC","ETH_P_PPP_MP","ETH_P_PPP_SES","ETH_P_PRP","ETH_P_PUP","ETH_P_PUPAT","ETH_P_QINQ1","ETH_P_QINQ2","ETH_P_QINQ3","ETH_P_RARP","ETH_P_SCA","ETH_P_SLOW","ETH_P_SNAP","ETH_P_TDLS","ETH_P_TEB","ETH_P_TIPC","ETH_P_TRAILER","ETH_P_TR_802_2","ETH_P_WAN_PPP","ETH_P_WCCP","ETH_P_X25","ETH_ZLEN","ETIME","ETIMEDOUT","ETOOMANYREFS","ETXTBSY","ET_CORE","ET_DYN","ET_EXEC","ET_HIOS","ET_HIPROC","ET_LOOS","ET_LOPROC","ET_NONE","ET_NUM","ET_REL","EUCLEAN","EUNATCH","EUSERS","EV_CNT","EV_CURRENT","EV_MAX","EV_NONE","EV_NUM","EWOULDBLOCK","EXDEV","EXFULL","EXIT_FAILURE","EXIT_SUCCESS","EXT2_SUPER_MAGIC","EXT3_SUPER_MAGIC","EXT4_SUPER_MAGIC","EXTA","EXTB","EXTPROC","Elf32_Addr","Elf32_Chdr","Elf32_Ehdr","Elf32_Half","Elf32_Off","Elf32_Phdr","Elf32_Section","Elf32_Shdr","Elf32_Sym","Elf32_Word","Elf64_Addr","Elf64_Chdr","Elf64_Ehdr","Elf64_Half","Elf64_Off","Elf64_Phdr","Elf64_Section","Elf64_Shdr","Elf64_Sxword","Elf64_Sym","Elf64_Word","Elf64_Xword","F2FS_SUPER_MAGIC","FALLOC_FL_COLLAPSE_RANGE","FALLOC_FL_INSERT_RANGE","FALLOC_FL_KEEP_SIZE","FALLOC_FL_PUNCH_HOLE","FALLOC_FL_UNSHARE_RANGE","FALLOC_FL_ZERO_RANGE","FANOTIFY_METADATA_VERSION","FAN_ACCESS","FAN_ACCESS_PERM","FAN_ALLOW","FAN_CLASS_CONTENT","FAN_CLASS_NOTIF","FAN_CLASS_PRE_CONTENT","FAN_CLOEXEC","FAN_CLOSE","FAN_CLOSE_NOWRITE","FAN_CLOSE_WRITE","FAN_DENY","FAN_EVENT_ON_CHILD","FAN_MARK_ADD","FAN_MARK_DONT_FOLLOW","FAN_MARK_FILESYSTEM","FAN_MARK_FLUSH","FAN_MARK_IGNORED_MASK","FAN_MARK_IGNORED_SURV_MODIFY","FAN_MARK_INODE","FAN_MARK_MOUNT","FAN_MARK_ONLYDIR","FAN_MARK_REMOVE","FAN_MODIFY","FAN_NOFD","FAN_NONBLOCK","FAN_ONDIR","FAN_OPEN","FAN_OPEN_PERM","FAN_Q_OVERFLOW","FAN_UNLIMITED_MARKS","FAN_UNLIMITED_QUEUE","FDPIC_FUNCPTRS","FD_CLOEXEC","FD_CLR","FD_ISSET","FD_SET","FD_SETSIZE","FD_ZERO","FF0","FF1","FFDLY","FF_CNT","FF_MAX","FICLONE","FICLONERANGE","FILE","FILENAME_MAX","FIOASYNC","FIOCLEX","FIONBIO","FIONCLEX","FIONREAD","FIOQSIZE","FLUSHO","FOPEN_MAX","FS","FS_BASE","FUSE_SUPER_MAGIC","FUTEXFS_SUPER_MAGIC","FUTEX_BITSET_MATCH_ANY","FUTEX_CLOCK_REALTIME","FUTEX_CMD_MASK","FUTEX_CMP_REQUEUE","FUTEX_CMP_REQUEUE_PI","FUTEX_FD","FUTEX_LOCK_PI","FUTEX_LOCK_PI2","FUTEX_OP","FUTEX_OP_ADD","FUTEX_OP_ANDN","FUTEX_OP_CMP_EQ","FUTEX_OP_CMP_GE","FUTEX_OP_CMP_GT","FUTEX_OP_CMP_LE","FUTEX_OP_CMP_LT","FUTEX_OP_CMP_NE","FUTEX_OP_OPARG_SHIFT","FUTEX_OP_OR","FUTEX_OP_SET","FUTEX_OP_XOR","FUTEX_PRIVATE_FLAG","FUTEX_REQUEUE","FUTEX_TRYLOCK_PI","FUTEX_UNLOCK_PI","FUTEX_WAIT","FUTEX_WAIT_BITSET","FUTEX_WAIT_REQUEUE_PI","FUTEX_WAKE","FUTEX_WAKE_BITSET","FUTEX_WAKE_OP","F_ADD_SEALS","F_CANCELLK","F_DUPFD","F_DUPFD_CLOEXEC","F_GETFD","F_GETFL","F_GETLEASE","F_GETLK","F_GETOWN","F_GETPIPE_SZ","F_GET_SEALS","F_LOCK","F_NOTIFY","F_OFD_GETLK","F_OFD_SETLK","F_OFD_SETLKW","F_OK","F_RDLCK","F_SEAL_FUTURE_WRITE","F_SEAL_GROW","F_SEAL_SEAL","F_SEAL_SHRINK","F_SEAL_WRITE","F_SETFD","F_SETFL","F_SETLEASE","F_SETLK","F_SETLKW","F_SETOWN","F_SETPIPE_SZ","F_TEST","F_TLOCK","F_ULOCK","F_UNLCK","F_WRLCK","GENL_ADMIN_PERM","GENL_CMD_CAP_DO","GENL_CMD_CAP_DUMP","GENL_CMD_CAP_HASPOL","GENL_ID_CTRL","GENL_ID_PMCRAID","GENL_ID_VFS_DQUOT","GENL_MAX_ID","GENL_MIN_ID","GENL_NAMSIZ","GENL_UNS_ADMIN_PERM","GLOB_ABORTED","GLOB_ALTDIRFUNC","GLOB_APPEND","GLOB_BRACE","GLOB_DOOFFS","GLOB_ERR","GLOB_MARK","GLOB_NOCHECK","GLOB_NOESCAPE","GLOB_NOMAGIC","GLOB_NOMATCH","GLOB_NOSORT","GLOB_NOSPACE","GLOB_ONLYDIR","GLOB_PERIOD","GLOB_TILDE","GLOB_TILDE_CHECK","GRND_INSECURE","GRND_NONBLOCK","GRND_RANDOM","GRPQUOTA","GS","GS_BASE","HOSTFS_SUPER_MAGIC","HPFS_SUPER_MAGIC","HUGETLBFS_MAGIC","HUGETLB_FLAG_ENCODE_16GB","HUGETLB_FLAG_ENCODE_16MB","HUGETLB_FLAG_ENCODE_1GB","HUGETLB_FLAG_ENCODE_1MB","HUGETLB_FLAG_ENCODE_256MB","HUGETLB_FLAG_ENCODE_2GB","HUGETLB_FLAG_ENCODE_2MB","HUGETLB_FLAG_ENCODE_32MB","HUGETLB_FLAG_ENCODE_512KB","HUGETLB_FLAG_ENCODE_512MB","HUGETLB_FLAG_ENCODE_64KB","HUGETLB_FLAG_ENCODE_8MB","HUGETLB_FLAG_ENCODE_MASK","HUGETLB_FLAG_ENCODE_SHIFT","HUPCL","HWTSTAMP_FILTER_ALL","HWTSTAMP_FILTER_NONE","HWTSTAMP_FILTER_NTP_ALL","HWTSTAMP_FILTER_PTP_V1_L4_DELAY_REQ","HWTSTAMP_FILTER_PTP_V1_L4_EVENT","HWTSTAMP_FILTER_PTP_V1_L4_SYNC","HWTSTAMP_FILTER_PTP_V2_DELAY_REQ","HWTSTAMP_FILTER_PTP_V2_EVENT","HWTSTAMP_FILTER_PTP_V2_L2_DELAY_REQ","HWTSTAMP_FILTER_PTP_V2_L2_EVENT","HWTSTAMP_FILTER_PTP_V2_L2_SYNC","HWTSTAMP_FILTER_PTP_V2_L4_DELAY_REQ","HWTSTAMP_FILTER_PTP_V2_L4_EVENT","HWTSTAMP_FILTER_PTP_V2_L4_SYNC","HWTSTAMP_FILTER_PTP_V2_SYNC","HWTSTAMP_FILTER_SOME","HWTSTAMP_TX_OFF","HWTSTAMP_TX_ON","HWTSTAMP_TX_ONESTEP_P2P","HWTSTAMP_TX_ONESTEP_SYNC","IBSHIFT","ICANON","ICRNL","IEXTEN","IFA_ADDRESS","IFA_ANYCAST","IFA_BROADCAST","IFA_CACHEINFO","IFA_FLAGS","IFA_F_DADFAILED","IFA_F_DEPRECATED","IFA_F_HOMEADDRESS","IFA_F_MANAGETEMPADDR","IFA_F_MCAUTOJOIN","IFA_F_NODAD","IFA_F_NOPREFIXROUTE","IFA_F_OPTIMISTIC","IFA_F_PERMANENT","IFA_F_SECONDARY","IFA_F_STABLE_PRIVACY","IFA_F_TEMPORARY","IFA_F_TENTATIVE","IFA_LABEL","IFA_LOCAL","IFA_MULTICAST","IFA_UNSPEC","IFF_ALLMULTI","IFF_ATTACH_QUEUE","IFF_AUTOMEDIA","IFF_BROADCAST","IFF_DEBUG","IFF_DETACH_QUEUE","IFF_DORMANT","IFF_DYNAMIC","IFF_ECHO","IFF_LOOPBACK","IFF_LOWER_UP","IFF_MASTER","IFF_MULTICAST","IFF_MULTI_QUEUE","IFF_NOARP","IFF_NOFILTER","IFF_NOTRAILERS","IFF_NO_PI","IFF_ONE_QUEUE","IFF_PERSIST","IFF_POINTOPOINT","IFF_PORTSEL","IFF_PROMISC","IFF_RUNNING","IFF_SLAVE","IFF_TAP","IFF_TUN","IFF_TUN_EXCL","IFF_UP","IFF_VNET_HDR","IFLA_ADDRESS","IFLA_AF_SPEC","IFLA_ALLMULTI","IFLA_ALT_IFNAME","IFLA_BROADCAST","IFLA_CARRIER","IFLA_CARRIER_CHANGES","IFLA_CARRIER_DOWN_COUNT","IFLA_CARRIER_UP_COUNT","IFLA_COST","IFLA_EVENT","IFLA_EXT_MASK","IFLA_GROUP","IFLA_GRO_MAX_SIZE","IFLA_GSO_MAX_SEGS","IFLA_GSO_MAX_SIZE","IFLA_IFALIAS","IFLA_IFNAME","IFLA_IF_NETNSID","IFLA_INFO_DATA","IFLA_INFO_KIND","IFLA_INFO_SLAVE_DATA","IFLA_INFO_SLAVE_KIND","IFLA_INFO_UNSPEC","IFLA_INFO_XSTATS","IFLA_LINK","IFLA_LINKINFO","IFLA_LINKMODE","IFLA_LINK_NETNSID","IFLA_MAP","IFLA_MASTER","IFLA_MAX_MTU","IFLA_MIN_MTU","IFLA_MTU","IFLA_NET_NS_FD","IFLA_NET_NS_PID","IFLA_NEW_IFINDEX","IFLA_NEW_NETNSID","IFLA_NUM_RX_QUEUES","IFLA_NUM_TX_QUEUES","IFLA_NUM_VF","IFLA_OPERSTATE","IFLA_PAD","IFLA_PARENT_DEV_BUS_NAME","IFLA_PARENT_DEV_NAME","IFLA_PERM_ADDRESS","IFLA_PHYS_PORT_ID","IFLA_PHYS_PORT_NAME","IFLA_PHYS_SWITCH_ID","IFLA_PORT_SELF","IFLA_PRIORITY","IFLA_PROMISCUITY","IFLA_PROP_LIST","IFLA_PROTINFO","IFLA_PROTO_DOWN","IFLA_PROTO_DOWN_REASON","IFLA_QDISC","IFLA_STATS","IFLA_STATS64","IFLA_TARGET_NETNSID","IFLA_TSO_MAX_SEGS","IFLA_TSO_MAX_SIZE","IFLA_TXQLEN","IFLA_UNSPEC","IFLA_VFINFO_LIST","IFLA_VF_PORTS","IFLA_WEIGHT","IFLA_WIRELESS","IFLA_XDP","IFNAMSIZ","IF_LINK_MODE_DEFAULT","IF_LINK_MODE_DORMANT","IF_LINK_MODE_TESTING","IF_NAMESIZE","IF_OPER_DORMANT","IF_OPER_DOWN","IF_OPER_LOWERLAYERDOWN","IF_OPER_NOTPRESENT","IF_OPER_TESTING","IF_OPER_UNKNOWN","IF_OPER_UP","IGNBRK","IGNCR","IGNPAR","IMAXBEL","INADDR_ANY","INADDR_BROADCAST","INADDR_LOOPBACK","INADDR_NONE","INIT_PROCESS","INLCR","INPCK","INPUT_PROP_CNT","INPUT_PROP_MAX","INT_MAX","INT_MIN","IN_ACCESS","IN_ALL_EVENTS","IN_ATTRIB","IN_CLOEXEC","IN_CLOSE","IN_CLOSE_NOWRITE","IN_CLOSE_WRITE","IN_CREATE","IN_DELETE","IN_DELETE_SELF","IN_DONT_FOLLOW","IN_EXCL_UNLINK","IN_IGNORED","IN_ISDIR","IN_MASK_ADD","IN_MASK_CREATE","IN_MODIFY","IN_MOVE","IN_MOVED_FROM","IN_MOVED_TO","IN_MOVE_SELF","IN_NONBLOCK","IN_ONESHOT","IN_ONLYDIR","IN_OPEN","IN_Q_OVERFLOW","IN_UNMOUNT","IP6T_SO_ORIGINAL_DST","IPC_CREAT","IPC_EXCL","IPC_INFO","IPC_NOWAIT","IPC_PRIVATE","IPC_RMID","IPC_SET","IPC_STAT","IPDEFTTL","IPOPT_CLASS","IPOPT_CLASS_MASK","IPOPT_CONTROL","IPOPT_COPIED","IPOPT_COPY","IPOPT_END","IPOPT_EOL","IPOPT_LSRR","IPOPT_MEASUREMENT","IPOPT_MINOFF","IPOPT_NOOP","IPOPT_NOP","IPOPT_NUMBER","IPOPT_NUMBER_MASK","IPOPT_OFFSET","IPOPT_OLEN","IPOPT_OPTVAL","IPOPT_RA","IPOPT_RESERVED1","IPOPT_RESERVED2","IPOPT_RR","IPOPT_SEC","IPOPT_SID","IPOPT_SSRR","IPOPT_TIMESTAMP","IPOPT_TS","IPOPT_TS_PRESPEC","IPOPT_TS_TSANDADDR","IPOPT_TS_TSONLY","IPPROTO_AH","IPPROTO_BEETPH","IPPROTO_COMP","IPPROTO_DCCP","IPPROTO_DSTOPTS","IPPROTO_EGP","IPPROTO_ENCAP","IPPROTO_ESP","IPPROTO_ETHERNET","IPPROTO_FRAGMENT","IPPROTO_GRE","IPPROTO_HOPOPTS","IPPROTO_ICMP","IPPROTO_ICMPV6","IPPROTO_IDP","IPPROTO_IGMP","IPPROTO_IP","IPPROTO_IPIP","IPPROTO_IPV6","IPPROTO_MAX","IPPROTO_MH","IPPROTO_MPLS","IPPROTO_MPTCP","IPPROTO_MTP","IPPROTO_NONE","IPPROTO_PIM","IPPROTO_PUP","IPPROTO_RAW","IPPROTO_ROUTING","IPPROTO_RSVP","IPPROTO_SCTP","IPPROTO_TCP","IPPROTO_TP","IPPROTO_UDP","IPPROTO_UDPLITE","IPTOS_ECN","IPTOS_ECN_CE","IPTOS_ECN_ECT0","IPTOS_ECN_ECT1","IPTOS_ECN_MASK","IPTOS_ECN_NOT_ECT","IPTOS_LOWDELAY","IPTOS_MINCOST","IPTOS_PREC","IPTOS_PREC_CRITIC_ECP","IPTOS_PREC_FLASH","IPTOS_PREC_FLASHOVERRIDE","IPTOS_PREC_IMMEDIATE","IPTOS_PREC_INTERNETCONTROL","IPTOS_PREC_MASK","IPTOS_PREC_NETCONTROL","IPTOS_PREC_PRIORITY","IPTOS_PREC_ROUTINE","IPTOS_RELIABILITY","IPTOS_THROUGHPUT","IPTOS_TOS","IPTOS_TOS_MASK","IPV6_2292DSTOPTS","IPV6_2292HOPLIMIT","IPV6_2292HOPOPTS","IPV6_2292PKTINFO","IPV6_2292PKTOPTIONS","IPV6_2292RTHDR","IPV6_ADDRFORM","IPV6_ADDR_PREFERENCES","IPV6_ADD_MEMBERSHIP","IPV6_AUTHHDR","IPV6_AUTOFLOWLABEL","IPV6_CHECKSUM","IPV6_DONTFRAG","IPV6_DROP_MEMBERSHIP","IPV6_DSTOPTS","IPV6_FLOWINFO","IPV6_FLOWINFO_FLOWLABEL","IPV6_FLOWINFO_PRIORITY","IPV6_FLOWINFO_SEND","IPV6_FLOWLABEL_MGR","IPV6_FREEBIND","IPV6_HDRINCL","IPV6_HOPLIMIT","IPV6_HOPOPTS","IPV6_IPSEC_POLICY","IPV6_JOIN_ANYCAST","IPV6_LEAVE_ANYCAST","IPV6_MINHOPCOUNT","IPV6_MTU","IPV6_MTU_DISCOVER","IPV6_MULTICAST_ALL","IPV6_MULTICAST_HOPS","IPV6_MULTICAST_IF","IPV6_MULTICAST_LOOP","IPV6_NEXTHOP","IPV6_ORIGDSTADDR","IPV6_PATHMTU","IPV6_PKTINFO","IPV6_PMTUDISC_DO","IPV6_PMTUDISC_DONT","IPV6_PMTUDISC_INTERFACE","IPV6_PMTUDISC_OMIT","IPV6_PMTUDISC_PROBE","IPV6_PMTUDISC_WANT","IPV6_PREFER_SRC_CGA","IPV6_PREFER_SRC_COA","IPV6_PREFER_SRC_HOME","IPV6_PREFER_SRC_NONCGA","IPV6_PREFER_SRC_PUBLIC","IPV6_PREFER_SRC_PUBTMP_DEFAULT","IPV6_PREFER_SRC_TMP","IPV6_RECVDSTOPTS","IPV6_RECVERR","IPV6_RECVFRAGSIZE","IPV6_RECVHOPLIMIT","IPV6_RECVHOPOPTS","IPV6_RECVORIGDSTADDR","IPV6_RECVPATHMTU","IPV6_RECVPKTINFO","IPV6_RECVRTHDR","IPV6_RECVTCLASS","IPV6_ROUTER_ALERT","IPV6_ROUTER_ALERT_ISOLATE","IPV6_RTHDR","IPV6_RTHDRDSTOPTS","IPV6_RTHDR_LOOSE","IPV6_RTHDR_STRICT","IPV6_TCLASS","IPV6_TRANSPARENT","IPV6_UNICAST_HOPS","IPV6_UNICAST_IF","IPV6_V6ONLY","IPV6_XFRM_POLICY","IPVERSION","IP_ADD_MEMBERSHIP","IP_ADD_SOURCE_MEMBERSHIP","IP_BIND_ADDRESS_NO_PORT","IP_BLOCK_SOURCE","IP_CHECKSUM","IP_DEFAULT_MULTICAST_LOOP","IP_DEFAULT_MULTICAST_TTL","IP_DROP_MEMBERSHIP","IP_DROP_SOURCE_MEMBERSHIP","IP_FREEBIND","IP_HDRINCL","IP_IPSEC_POLICY","IP_MINTTL","IP_MSFILTER","IP_MTU","IP_MTU_DISCOVER","IP_MULTICAST_ALL","IP_MULTICAST_IF","IP_MULTICAST_LOOP","IP_MULTICAST_TTL","IP_NODEFRAG","IP_OPTIONS","IP_ORIGDSTADDR","IP_PASSSEC","IP_PKTINFO","IP_PKTOPTIONS","IP_PMTUDISC_DO","IP_PMTUDISC_DONT","IP_PMTUDISC_INTERFACE","IP_PMTUDISC_OMIT","IP_PMTUDISC_PROBE","IP_PMTUDISC_WANT","IP_RECVERR","IP_RECVFRAGSIZE","IP_RECVOPTS","IP_RECVORIGDSTADDR","IP_RECVTOS","IP_RECVTTL","IP_RETOPTS","IP_ROUTER_ALERT","IP_TOS","IP_TRANSPARENT","IP_TTL","IP_UNBLOCK_SOURCE","IP_UNICAST_IF","IP_XFRM_POLICY","ISIG","ISOFS_SUPER_MAGIC","ISTRIP","ITIMER_PROF","ITIMER_REAL","ITIMER_VIRTUAL","IUTF8","IXANY","IXOFF","IXON","J1939_EE_INFO_NONE","J1939_EE_INFO_RX_ABORT","J1939_EE_INFO_RX_DPO","J1939_EE_INFO_RX_RTS","J1939_EE_INFO_TX_ABORT","J1939_FILTER_MAX","J1939_IDLE_ADDR","J1939_MAX_UNICAST_ADDR","J1939_NLA_BYTES_ACKED","J1939_NLA_DEST_ADDR","J1939_NLA_DEST_NAME","J1939_NLA_PAD","J1939_NLA_PGN","J1939_NLA_SRC_ADDR","J1939_NLA_SRC_NAME","J1939_NLA_TOTAL_SIZE","J1939_NO_ADDR","J1939_NO_NAME","J1939_NO_PGN","J1939_PGN_ADDRESS_CLAIMED","J1939_PGN_ADDRESS_COMMANDED","J1939_PGN_MAX","J1939_PGN_PDU1_MAX","J1939_PGN_REQUEST","JFFS2_SUPER_MAGIC","KERNEL_VERSION","KEXEC_ARCH_MASK","KEXEC_FILE_NO_INITRAMFS","KEXEC_FILE_ON_CRASH","KEXEC_FILE_UNLOAD","KEXEC_ON_CRASH","KEXEC_PRESERVE_CONTEXT","KEYCTL_ASSUME_AUTHORITY","KEYCTL_CAPABILITIES","KEYCTL_CAPS0_BIG_KEY","KEYCTL_CAPS0_CAPABILITIES","KEYCTL_CAPS0_DIFFIE_HELLMAN","KEYCTL_CAPS0_INVALIDATE","KEYCTL_CAPS0_MOVE","KEYCTL_CAPS0_PERSISTENT_KEYRINGS","KEYCTL_CAPS0_PUBLIC_KEY","KEYCTL_CAPS0_RESTRICT_KEYRING","KEYCTL_CAPS1_NS_KEYRING_NAME","KEYCTL_CAPS1_NS_KEY_TAG","KEYCTL_CHOWN","KEYCTL_CLEAR","KEYCTL_DESCRIBE","KEYCTL_DH_COMPUTE","KEYCTL_GET_KEYRING_ID","KEYCTL_GET_PERSISTENT","KEYCTL_GET_SECURITY","KEYCTL_INSTANTIATE","KEYCTL_INSTANTIATE_IOV","KEYCTL_INVALIDATE","KEYCTL_JOIN_SESSION_KEYRING","KEYCTL_LINK","KEYCTL_MOVE","KEYCTL_NEGATE","KEYCTL_PKEY_DECRYPT","KEYCTL_PKEY_ENCRYPT","KEYCTL_PKEY_QUERY","KEYCTL_PKEY_SIGN","KEYCTL_PKEY_VERIFY","KEYCTL_READ","KEYCTL_REJECT","KEYCTL_RESTRICT_KEYRING","KEYCTL_REVOKE","KEYCTL_SEARCH","KEYCTL_SESSION_TO_PARENT","KEYCTL_SETPERM","KEYCTL_SET_REQKEY_KEYRING","KEYCTL_SET_TIMEOUT","KEYCTL_SUPPORTS_DECRYPT","KEYCTL_SUPPORTS_ENCRYPT","KEYCTL_SUPPORTS_SIGN","KEYCTL_SUPPORTS_VERIFY","KEYCTL_UNLINK","KEYCTL_UPDATE","KEY_CNT","KEY_MAX","KEY_REQKEY_DEFL_DEFAULT","KEY_REQKEY_DEFL_GROUP_KEYRING","KEY_REQKEY_DEFL_NO_CHANGE","KEY_REQKEY_DEFL_PROCESS_KEYRING","KEY_REQKEY_DEFL_REQUESTOR_KEYRING","KEY_REQKEY_DEFL_SESSION_KEYRING","KEY_REQKEY_DEFL_THREAD_KEYRING","KEY_REQKEY_DEFL_USER_KEYRING","KEY_REQKEY_DEFL_USER_SESSION_KEYRING","KEY_SPEC_GROUP_KEYRING","KEY_SPEC_PROCESS_KEYRING","KEY_SPEC_REQKEY_AUTH_KEY","KEY_SPEC_REQUESTOR_KEYRING","KEY_SPEC_SESSION_KEYRING","KEY_SPEC_THREAD_KEYRING","KEY_SPEC_USER_KEYRING","KEY_SPEC_USER_SESSION_KEYRING","LC_ADDRESS","LC_ADDRESS_MASK","LC_ALL","LC_ALL_MASK","LC_COLLATE","LC_COLLATE_MASK","LC_CTYPE","LC_CTYPE_MASK","LC_IDENTIFICATION","LC_IDENTIFICATION_MASK","LC_MEASUREMENT","LC_MEASUREMENT_MASK","LC_MESSAGES","LC_MESSAGES_MASK","LC_MONETARY","LC_MONETARY_MASK","LC_NAME","LC_NAME_MASK","LC_NUMERIC","LC_NUMERIC_MASK","LC_PAPER","LC_PAPER_MASK","LC_TELEPHONE","LC_TELEPHONE_MASK","LC_TIME","LC_TIME_MASK","LED_CNT","LED_MAX","LINUX_REBOOT_CMD_CAD_OFF","LINUX_REBOOT_CMD_CAD_ON","LINUX_REBOOT_CMD_HALT","LINUX_REBOOT_CMD_KEXEC","LINUX_REBOOT_CMD_POWER_OFF","LINUX_REBOOT_CMD_RESTART","LINUX_REBOOT_CMD_RESTART2","LINUX_REBOOT_CMD_SW_SUSPEND","LINUX_REBOOT_MAGIC1","LINUX_REBOOT_MAGIC2","LINUX_REBOOT_MAGIC2A","LINUX_REBOOT_MAGIC2B","LINUX_REBOOT_MAGIC2C","LIO_NOP","LIO_NOWAIT","LIO_READ","LIO_WAIT","LIO_WRITE","LM_ID_BASE","LM_ID_NEWLM","LOCK_EX","LOCK_NB","LOCK_SH","LOCK_UN","LOGIN_PROCESS","LOG_ALERT","LOG_AUTH","LOG_AUTHPRIV","LOG_CONS","LOG_CRIT","LOG_CRON","LOG_DAEMON","LOG_DEBUG","LOG_EMERG","LOG_ERR","LOG_FACMASK","LOG_FTP","LOG_INFO","LOG_KERN","LOG_LOCAL0","LOG_LOCAL1","LOG_LOCAL2","LOG_LOCAL3","LOG_LOCAL4","LOG_LOCAL5","LOG_LOCAL6","LOG_LOCAL7","LOG_LPR","LOG_MAIL","LOG_NDELAY","LOG_NEWS","LOG_NFACILITIES","LOG_NOTICE","LOG_NOWAIT","LOG_ODELAY","LOG_PERROR","LOG_PID","LOG_PRIMASK","LOG_SYSLOG","LOG_USER","LOG_UUCP","LOG_WARNING","L_tmpnam","Lmid_t","MADV_COLD","MADV_DODUMP","MADV_DOFORK","MADV_DONTDUMP","MADV_DONTFORK","MADV_DONTNEED","MADV_DONTNEED_LOCKED","MADV_FREE","MADV_HUGEPAGE","MADV_HWPOISON","MADV_KEEPONFORK","MADV_MERGEABLE","MADV_NOHUGEPAGE","MADV_NORMAL","MADV_PAGEOUT","MADV_POPULATE_READ","MADV_POPULATE_WRITE","MADV_RANDOM","MADV_REMOVE","MADV_SEQUENTIAL","MADV_SOFT_OFFLINE","MADV_UNMERGEABLE","MADV_WILLNEED","MADV_WIPEONFORK","MAP_32BIT","MAP_ANON","MAP_ANONYMOUS","MAP_DENYWRITE","MAP_EXECUTABLE","MAP_FAILED","MAP_FILE","MAP_FIXED","MAP_FIXED_NOREPLACE","MAP_GROWSDOWN","MAP_HUGETLB","MAP_HUGE_16GB","MAP_HUGE_16MB","MAP_HUGE_1GB","MAP_HUGE_1MB","MAP_HUGE_256MB","MAP_HUGE_2GB","MAP_HUGE_2MB","MAP_HUGE_32MB","MAP_HUGE_512KB","MAP_HUGE_512MB","MAP_HUGE_64KB","MAP_HUGE_8MB","MAP_HUGE_MASK","MAP_HUGE_SHIFT","MAP_LOCKED","MAP_NONBLOCK","MAP_NORESERVE","MAP_POPULATE","MAP_PRIVATE","MAP_SHARED","MAP_SHARED_VALIDATE","MAP_STACK","MAP_SYNC","MAP_TYPE","MAXTC","MAXTTL","MAX_ADDR_LEN","MAX_IPOPTLEN","MAX_LINKS","MCAST_BLOCK_SOURCE","MCAST_EXCLUDE","MCAST_INCLUDE","MCAST_JOIN_GROUP","MCAST_JOIN_SOURCE_GROUP","MCAST_LEAVE_GROUP","MCAST_LEAVE_SOURCE_GROUP","MCAST_MSFILTER","MCAST_UNBLOCK_SOURCE","MCL_CURRENT","MCL_FUTURE","MEMBARRIER_CMD_GLOBAL","MEMBARRIER_CMD_GLOBAL_EXPEDITED","MEMBARRIER_CMD_PRIVATE_EXPEDITED","MEMBARRIER_CMD_PRIVATE_EXPEDITED_RSEQ","MEMBARRIER_CMD_PRIVATE_EXPEDITED_SYNC_CORE","MEMBARRIER_CMD_QUERY","MEMBARRIER_CMD_REGISTER_GLOBAL_EXPEDITED","MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED","MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED_RSEQ","MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED_SYNC_CORE","MFD_ALLOW_SEALING","MFD_CLOEXEC","MFD_HUGETLB","MFD_HUGE_16GB","MFD_HUGE_16MB","MFD_HUGE_1GB","MFD_HUGE_1MB","MFD_HUGE_256MB","MFD_HUGE_2GB","MFD_HUGE_2MB","MFD_HUGE_32MB","MFD_HUGE_512KB","MFD_HUGE_512MB","MFD_HUGE_64KB","MFD_HUGE_8MB","MFD_HUGE_MASK","MFD_HUGE_SHIFT","MINIX2_SUPER_MAGIC","MINIX2_SUPER_MAGIC2","MINIX3_SUPER_MAGIC","MINIX_SUPER_MAGIC","MINIX_SUPER_MAGIC2","MINSIGSTKSZ","MLOCK_ONFAULT","MMAP_PAGE_ZERO","MNT_DETACH","MNT_EXPIRE","MNT_FORCE","MODULE_INIT_IGNORE_MODVERSIONS","MODULE_INIT_IGNORE_VERMAGIC","MOD_CLKA","MOD_CLKB","MOD_ESTERROR","MOD_FREQUENCY","MOD_MAXERROR","MOD_MICRO","MOD_NANO","MOD_OFFSET","MOD_STATUS","MOD_TAI","MOD_TIMECONST","MON_1","MON_10","MON_11","MON_12","MON_2","MON_3","MON_4","MON_5","MON_6","MON_7","MON_8","MON_9","MPOL_BIND","MPOL_DEFAULT","MPOL_F_NUMA_BALANCING","MPOL_F_RELATIVE_NODES","MPOL_F_STATIC_NODES","MPOL_INTERLEAVE","MPOL_LOCAL","MPOL_PREFERRED","MREMAP_DONTUNMAP","MREMAP_FIXED","MREMAP_MAYMOVE","MSC_CNT","MSC_MAX","MSDOS_SUPER_MAGIC","MSG_CMSG_CLOEXEC","MSG_CONFIRM","MSG_COPY","MSG_CTRUNC","MSG_DONTROUTE","MSG_DONTWAIT","MSG_EOR","MSG_ERRQUEUE","MSG_EXCEPT","MSG_FASTOPEN","MSG_FIN","MSG_INFO","MSG_MORE","MSG_NOERROR","MSG_NOSIGNAL","MSG_NOTIFICATION","MSG_OOB","MSG_PEEK","MSG_RST","MSG_STAT","MSG_SYN","MSG_TRUNC","MSG_TRYHARD","MSG_WAITALL","MSG_WAITFORONE","MSG_ZEROCOPY","MS_ACTIVE","MS_ASYNC","MS_BIND","MS_DIRSYNC","MS_INVALIDATE","MS_I_VERSION","MS_KERNMOUNT","MS_LAZYTIME","MS_MANDLOCK","MS_MGC_MSK","MS_MGC_VAL","MS_MOVE","MS_NOATIME","MS_NODEV","MS_NODIRATIME","MS_NOEXEC","MS_NOSUID","MS_NOUSER","MS_POSIXACL","MS_PRIVATE","MS_RDONLY","MS_REC","MS_RELATIME","MS_REMOUNT","MS_RMT_MASK","MS_SHARED","MS_SILENT","MS_SLAVE","MS_STRICTATIME","MS_SYNC","MS_SYNCHRONOUS","MS_UNBINDABLE","M_ARENA_MAX","M_ARENA_TEST","M_CHECK_ACTION","M_GRAIN","M_KEEP","M_MMAP_MAX","M_MMAP_THRESHOLD","M_MXFAST","M_NLBLKS","M_PERTURB","M_TOP_PAD","M_TRIM_THRESHOLD","NCCS","NCP_SUPER_MAGIC","NDA_CACHEINFO","NDA_DST","NDA_IFINDEX","NDA_LINK_NETNSID","NDA_LLADDR","NDA_MASTER","NDA_PORT","NDA_PROBES","NDA_SRC_VNI","NDA_UNSPEC","NDA_VLAN","NDA_VNI","NETLINK_ADD_MEMBERSHIP","NETLINK_AUDIT","NETLINK_BROADCAST_ERROR","NETLINK_CAP_ACK","NETLINK_CONNECTOR","NETLINK_CRYPTO","NETLINK_DNRTMSG","NETLINK_DROP_MEMBERSHIP","NETLINK_ECRYPTFS","NETLINK_EXT_ACK","NETLINK_FIB_LOOKUP","NETLINK_FIREWALL","NETLINK_GENERIC","NETLINK_GET_STRICT_CHK","NETLINK_INET_DIAG","NETLINK_IP6_FW","NETLINK_ISCSI","NETLINK_KOBJECT_UEVENT","NETLINK_LISTEN_ALL_NSID","NETLINK_LIST_MEMBERSHIPS","NETLINK_NETFILTER","NETLINK_NFLOG","NETLINK_NO_ENOBUFS","NETLINK_PKTINFO","NETLINK_RDMA","NETLINK_ROUTE","NETLINK_RX_RING","NETLINK_SCSITRANSPORT","NETLINK_SELINUX","NETLINK_SOCK_DIAG","NETLINK_TX_RING","NETLINK_UNUSED","NETLINK_USERSOCK","NETLINK_XFRM","NEW_TIME","NFNETLINK_V0","NFNLGRP_ACCT_QUOTA","NFNLGRP_CONNTRACK_DESTROY","NFNLGRP_CONNTRACK_EXP_DESTROY","NFNLGRP_CONNTRACK_EXP_NEW","NFNLGRP_CONNTRACK_EXP_UPDATE","NFNLGRP_CONNTRACK_NEW","NFNLGRP_CONNTRACK_UPDATE","NFNLGRP_NFTABLES","NFNLGRP_NFTRACE","NFNLGRP_NONE","NFNL_BATCH_GENID","NFNL_BATCH_UNSPEC","NFNL_MSG_BATCH_BEGIN","NFNL_MSG_BATCH_END","NFNL_SUBSYS_ACCT","NFNL_SUBSYS_COUNT","NFNL_SUBSYS_CTHELPER","NFNL_SUBSYS_CTNETLINK","NFNL_SUBSYS_CTNETLINK_EXP","NFNL_SUBSYS_CTNETLINK_TIMEOUT","NFNL_SUBSYS_HOOK","NFNL_SUBSYS_IPSET","NFNL_SUBSYS_NFTABLES","NFNL_SUBSYS_NFT_COMPAT","NFNL_SUBSYS_NONE","NFNL_SUBSYS_OSF","NFNL_SUBSYS_QUEUE","NFNL_SUBSYS_ULOG","NFPROTO_ARP","NFPROTO_BRIDGE","NFPROTO_DECNET","NFPROTO_INET","NFPROTO_IPV4","NFPROTO_IPV6","NFPROTO_NETDEV","NFPROTO_NUMPROTO","NFPROTO_UNSPEC","NFQA_CAP_LEN","NFQA_CFG_CMD","NFQA_CFG_FLAGS","NFQA_CFG_F_CONNTRACK","NFQA_CFG_F_FAIL_OPEN","NFQA_CFG_F_GSO","NFQA_CFG_F_MAX","NFQA_CFG_F_SECCTX","NFQA_CFG_F_UID_GID","NFQA_CFG_MASK","NFQA_CFG_PARAMS","NFQA_CFG_QUEUE_MAXLEN","NFQA_CFG_UNSPEC","NFQA_CT","NFQA_CT_INFO","NFQA_EXP","NFQA_GID","NFQA_HWADDR","NFQA_IFINDEX_INDEV","NFQA_IFINDEX_OUTDEV","NFQA_IFINDEX_PHYSINDEV","NFQA_IFINDEX_PHYSOUTDEV","NFQA_L2HDR","NFQA_MARK","NFQA_PACKET_HDR","NFQA_PAYLOAD","NFQA_PRIORITY","NFQA_SECCTX","NFQA_SKB_CSUMNOTREADY","NFQA_SKB_CSUM_NOTVERIFIED","NFQA_SKB_GSO","NFQA_SKB_INFO","NFQA_TIMESTAMP","NFQA_UID","NFQA_UNSPEC","NFQA_VERDICT_HDR","NFQA_VLAN","NFQA_VLAN_PROTO","NFQA_VLAN_TCI","NFQA_VLAN_UNSPEC","NFQNL_CFG_CMD_BIND","NFQNL_CFG_CMD_NONE","NFQNL_CFG_CMD_PF_BIND","NFQNL_CFG_CMD_PF_UNBIND","NFQNL_CFG_CMD_UNBIND","NFQNL_COPY_META","NFQNL_COPY_NONE","NFQNL_COPY_PACKET","NFQNL_MSG_CONFIG","NFQNL_MSG_PACKET","NFQNL_MSG_VERDICT","NFQNL_MSG_VERDICT_BATCH","NFS_SUPER_MAGIC","NFT_BREAK","NFT_BYTEORDER_HTON","NFT_BYTEORDER_NTOH","NFT_CHAIN_MAXNAMELEN","NFT_CMP_EQ","NFT_CMP_GT","NFT_CMP_GTE","NFT_CMP_LT","NFT_CMP_LTE","NFT_CMP_NEQ","NFT_CONTINUE","NFT_CT_BYTES","NFT_CT_DIRECTION","NFT_CT_DST","NFT_CT_EXPIRATION","NFT_CT_HELPER","NFT_CT_L3PROTOCOL","NFT_CT_LABELS","NFT_CT_MARK","NFT_CT_PKTS","NFT_CT_PROTOCOL","NFT_CT_PROTO_DST","NFT_CT_PROTO_SRC","NFT_CT_SECMARK","NFT_CT_SRC","NFT_CT_STATE","NFT_CT_STATUS","NFT_DATA_RESERVED_MASK","NFT_DATA_VALUE","NFT_DATA_VALUE_MAXLEN","NFT_DATA_VERDICT","NFT_DYNSET_F_INV","NFT_DYNSET_OP_ADD","NFT_DYNSET_OP_UPDATE","NFT_GOTO","NFT_JUMP","NFT_LIMIT_F_INV","NFT_LIMIT_PKTS","NFT_LIMIT_PKT_BYTES","NFT_LOOKUP_F_INV","NFT_META_BRI_IIFNAME","NFT_META_BRI_OIFNAME","NFT_META_CGROUP","NFT_META_CPU","NFT_META_IIF","NFT_META_IIFGROUP","NFT_META_IIFNAME","NFT_META_IIFTYPE","NFT_META_L4PROTO","NFT_META_LEN","NFT_META_MARK","NFT_META_NFPROTO","NFT_META_NFTRACE","NFT_META_OIF","NFT_META_OIFGROUP","NFT_META_OIFNAME","NFT_META_OIFTYPE","NFT_META_PKTTYPE","NFT_META_PRANDOM","NFT_META_PRIORITY","NFT_META_PROTOCOL","NFT_META_RTCLASSID","NFT_META_SECMARK","NFT_META_SKGID","NFT_META_SKUID","NFT_MSG_DELCHAIN","NFT_MSG_DELOBJ","NFT_MSG_DELRULE","NFT_MSG_DELSET","NFT_MSG_DELSETELEM","NFT_MSG_DELTABLE","NFT_MSG_GETCHAIN","NFT_MSG_GETGEN","NFT_MSG_GETOBJ","NFT_MSG_GETOBJ_RESET","NFT_MSG_GETRULE","NFT_MSG_GETSET","NFT_MSG_GETSETELEM","NFT_MSG_GETTABLE","NFT_MSG_MAX","NFT_MSG_NEWCHAIN","NFT_MSG_NEWGEN","NFT_MSG_NEWOBJ","NFT_MSG_NEWRULE","NFT_MSG_NEWSET","NFT_MSG_NEWSETELEM","NFT_MSG_NEWTABLE","NFT_MSG_TRACE","NFT_NAT_DNAT","NFT_NAT_SNAT","NFT_NG_INCREMENTAL","NFT_NG_RANDOM","NFT_OBJ_MAXNAMELEN","NFT_PAYLOAD_CSUM_INET","NFT_PAYLOAD_CSUM_NONE","NFT_PAYLOAD_LL_HEADER","NFT_PAYLOAD_NETWORK_HEADER","NFT_PAYLOAD_TRANSPORT_HEADER","NFT_QUEUE_FLAG_BYPASS","NFT_QUEUE_FLAG_CPU_FANOUT","NFT_QUEUE_FLAG_MASK","NFT_QUOTA_F_INV","NFT_RANGE_EQ","NFT_RANGE_NEQ","NFT_REG32_00","NFT_REG32_01","NFT_REG32_02","NFT_REG32_03","NFT_REG32_04","NFT_REG32_05","NFT_REG32_06","NFT_REG32_07","NFT_REG32_08","NFT_REG32_09","NFT_REG32_10","NFT_REG32_11","NFT_REG32_12","NFT_REG32_13","NFT_REG32_14","NFT_REG32_15","NFT_REG32_SIZE","NFT_REG_1","NFT_REG_2","NFT_REG_3","NFT_REG_4","NFT_REG_SIZE","NFT_REG_VERDICT","NFT_REJECT_ICMPX_ADMIN_PROHIBITED","NFT_REJECT_ICMPX_HOST_UNREACH","NFT_REJECT_ICMPX_NO_ROUTE","NFT_REJECT_ICMPX_PORT_UNREACH","NFT_REJECT_ICMPX_UNREACH","NFT_REJECT_ICMP_UNREACH","NFT_REJECT_TCP_RST","NFT_RETURN","NFT_SET_ANONYMOUS","NFT_SET_CONSTANT","NFT_SET_ELEM_INTERVAL_END","NFT_SET_EVAL","NFT_SET_INTERVAL","NFT_SET_MAP","NFT_SET_MAXNAMELEN","NFT_SET_POL_MEMORY","NFT_SET_POL_PERFORMANCE","NFT_SET_TIMEOUT","NFT_TABLE_MAXNAMELEN","NFT_TRACETYPE_POLICY","NFT_TRACETYPE_RETURN","NFT_TRACETYPE_RULE","NFT_TRACETYPE_UNSPEC","NFT_USERDATA_MAXLEN","NFULA_CFG_CMD","NFULA_CFG_FLAGS","NFULA_CFG_MODE","NFULA_CFG_NLBUFSIZ","NFULA_CFG_QTHRESH","NFULA_CFG_TIMEOUT","NFULA_CFG_UNSPEC","NFULA_CT","NFULA_CT_INFO","NFULA_GID","NFULA_HWADDR","NFULA_HWHEADER","NFULA_HWLEN","NFULA_HWTYPE","NFULA_IFINDEX_INDEV","NFULA_IFINDEX_OUTDEV","NFULA_IFINDEX_PHYSINDEV","NFULA_IFINDEX_PHYSOUTDEV","NFULA_L2HDR","NFULA_MARK","NFULA_PACKET_HDR","NFULA_PAYLOAD","NFULA_PREFIX","NFULA_SEQ","NFULA_SEQ_GLOBAL","NFULA_TIMESTAMP","NFULA_UID","NFULA_UNSPEC","NFULA_VLAN","NFULA_VLAN_PROTO","NFULA_VLAN_TCI","NFULA_VLAN_UNSPEC","NFULNL_CFG_CMD_BIND","NFULNL_CFG_CMD_NONE","NFULNL_CFG_CMD_PF_BIND","NFULNL_CFG_CMD_PF_UNBIND","NFULNL_CFG_CMD_UNBIND","NFULNL_CFG_F_CONNTRACK","NFULNL_CFG_F_SEQ","NFULNL_CFG_F_SEQ_GLOBAL","NFULNL_COPY_META","NFULNL_COPY_NONE","NFULNL_COPY_PACKET","NFULNL_MSG_CONFIG","NFULNL_MSG_PACKET","NF_ACCEPT","NF_DROP","NF_INET_FORWARD","NF_INET_LOCAL_IN","NF_INET_LOCAL_OUT","NF_INET_NUMHOOKS","NF_INET_POST_ROUTING","NF_INET_PRE_ROUTING","NF_IP6_FORWARD","NF_IP6_LOCAL_IN","NF_IP6_LOCAL_OUT","NF_IP6_NUMHOOKS","NF_IP6_POST_ROUTING","NF_IP6_PRE_ROUTING","NF_IP6_PRI_CONNTRACK","NF_IP6_PRI_CONNTRACK_DEFRAG","NF_IP6_PRI_CONNTRACK_HELPER","NF_IP6_PRI_FILTER","NF_IP6_PRI_FIRST","NF_IP6_PRI_LAST","NF_IP6_PRI_MANGLE","NF_IP6_PRI_NAT_DST","NF_IP6_PRI_NAT_SRC","NF_IP6_PRI_RAW","NF_IP6_PRI_SECURITY","NF_IP6_PRI_SELINUX_FIRST","NF_IP6_PRI_SELINUX_LAST","NF_IP_FORWARD","NF_IP_LOCAL_IN","NF_IP_LOCAL_OUT","NF_IP_NUMHOOKS","NF_IP_POST_ROUTING","NF_IP_PRE_ROUTING","NF_IP_PRI_CONNTRACK","NF_IP_PRI_CONNTRACK_CONFIRM","NF_IP_PRI_CONNTRACK_DEFRAG","NF_IP_PRI_CONNTRACK_HELPER","NF_IP_PRI_FILTER","NF_IP_PRI_FIRST","NF_IP_PRI_LAST","NF_IP_PRI_MANGLE","NF_IP_PRI_NAT_DST","NF_IP_PRI_NAT_SRC","NF_IP_PRI_RAW","NF_IP_PRI_SECURITY","NF_IP_PRI_SELINUX_FIRST","NF_IP_PRI_SELINUX_LAST","NF_MAX_VERDICT","NF_NETDEV_INGRESS","NF_NETDEV_NUMHOOKS","NF_QUEUE","NF_REPEAT","NF_STOLEN","NF_STOP","NF_VERDICT_BITS","NF_VERDICT_FLAG_QUEUE_BYPASS","NF_VERDICT_MASK","NF_VERDICT_QBITS","NF_VERDICT_QMASK","NILFS_SUPER_MAGIC","NI_DGRAM","NI_MAXHOST","NI_NAMEREQD","NI_NOFQDN","NI_NUMERICHOST","NI_NUMERICSERV","NL0","NL1","NLA_ALIGN","NLA_ALIGNTO","NLA_F_NESTED","NLA_F_NET_BYTEORDER","NLA_TYPE_MASK","NLDLY","NLMSG_DONE","NLMSG_ERROR","NLMSG_MIN_TYPE","NLMSG_NOOP","NLMSG_OVERRUN","NLM_F_ACK","NLM_F_APPEND","NLM_F_ATOMIC","NLM_F_CREATE","NLM_F_DUMP","NLM_F_DUMP_FILTERED","NLM_F_DUMP_INTR","NLM_F_ECHO","NLM_F_EXCL","NLM_F_MATCH","NLM_F_MULTI","NLM_F_REPLACE","NLM_F_REQUEST","NLM_F_ROOT","NOEXPR","NOFLSH","NOSTR","NSFS_MAGIC","NTF_EXT_LEARNED","NTF_MASTER","NTF_OFFLOADED","NTF_PROXY","NTF_ROUTER","NTF_SELF","NTF_USE","NTP_API","NT_ASRS","NT_AUXV","NT_FPREGSET","NT_GWINDOWS","NT_LWPSINFO","NT_LWPSTATUS","NT_PLATFORM","NT_PRCRED","NT_PRFPREG","NT_PRFPXREG","NT_PRPSINFO","NT_PRSTATUS","NT_PRXREG","NT_PSINFO","NT_PSTATUS","NT_TASKSTRUCT","NT_UTSNAME","NUD_DELAY","NUD_FAILED","NUD_INCOMPLETE","NUD_NOARP","NUD_NONE","NUD_PERMANENT","NUD_PROBE","NUD_REACHABLE","NUD_STALE","OCFS2_SUPER_MAGIC","OCRNL","OFDEL","OFILL","OLCUC","OLD_TIME","ONLCR","ONLRET","ONOCR","OPENPROM_SUPER_MAGIC","OPEN_TREE_CLOEXEC","OPEN_TREE_CLONE","OPOST","ORIG_RAX","OVERLAYFS_SUPER_MAGIC","O_ACCMODE","O_APPEND","O_ASYNC","O_CLOEXEC","O_CREAT","O_DIRECT","O_DIRECTORY","O_DSYNC","O_EXCL","O_FSYNC","O_LARGEFILE","O_NDELAY","O_NOATIME","O_NOCTTY","O_NOFOLLOW","O_NONBLOCK","O_PATH","O_RDONLY","O_RDWR","O_RSYNC","O_SYNC","O_TMPFILE","O_TRUNC","O_WRONLY","PACKET_ADD_MEMBERSHIP","PACKET_DROP_MEMBERSHIP","PACKET_MR_ALLMULTI","PACKET_MR_MULTICAST","PACKET_MR_PROMISC","PACKET_MR_UNICAST","PARENB","PARMRK","PARODD","PATH_MAX","PENDIN","PF_ALG","PF_APPLETALK","PF_ASH","PF_ATMPVC","PF_ATMSVC","PF_AX25","PF_BLUETOOTH","PF_BRIDGE","PF_CAIF","PF_CAN","PF_DECnet","PF_ECONET","PF_IB","PF_IEEE802154","PF_INET","PF_INET6","PF_IPX","PF_IRDA","PF_ISDN","PF_IUCV","PF_KEY","PF_LLC","PF_LOCAL","PF_MASKOS","PF_MASKPROC","PF_MPLS","PF_NETBEUI","PF_NETLINK","PF_NETROM","PF_NFC","PF_PACKET","PF_PHONET","PF_PPPOX","PF_R","PF_RDS","PF_ROSE","PF_ROUTE","PF_RXRPC","PF_SECURITY","PF_SNA","PF_TIPC","PF_UNIX","PF_UNSPEC","PF_VSOCK","PF_W","PF_WANPIPE","PF_X","PF_X25","PF_XDP","PIDFD_NONBLOCK","PIPE_BUF","PM_STR","POLLERR","POLLHUP","POLLIN","POLLNVAL","POLLOUT","POLLPRI","POLLRDBAND","POLLRDHUP","POLLRDNORM","POLLWRBAND","POLLWRNORM","POSIX_FADV_DONTNEED","POSIX_FADV_NOREUSE","POSIX_FADV_NORMAL","POSIX_FADV_RANDOM","POSIX_FADV_SEQUENTIAL","POSIX_FADV_WILLNEED","POSIX_MADV_DONTNEED","POSIX_MADV_NORMAL","POSIX_MADV_RANDOM","POSIX_MADV_SEQUENTIAL","POSIX_MADV_WILLNEED","POSIX_SPAWN_RESETIDS","POSIX_SPAWN_SETPGROUP","POSIX_SPAWN_SETSCHEDPARAM","POSIX_SPAWN_SETSCHEDULER","POSIX_SPAWN_SETSID","POSIX_SPAWN_SETSIGDEF","POSIX_SPAWN_SETSIGMASK","POSIX_SPAWN_USEVFORK","PRIO_MAX","PRIO_MIN","PRIO_PGRP","PRIO_PROCESS","PRIO_USER","PROC_SUPER_MAGIC","PROT_EXEC","PROT_GROWSDOWN","PROT_GROWSUP","PROT_NONE","PROT_READ","PROT_WRITE","PR_CAPBSET_DROP","PR_CAPBSET_READ","PR_CAP_AMBIENT","PR_CAP_AMBIENT_CLEAR_ALL","PR_CAP_AMBIENT_IS_SET","PR_CAP_AMBIENT_LOWER","PR_CAP_AMBIENT_RAISE","PR_ENDIAN_BIG","PR_ENDIAN_LITTLE","PR_ENDIAN_PPC_LITTLE","PR_FPEMU_NOPRINT","PR_FPEMU_SIGFPE","PR_FP_EXC_ASYNC","PR_FP_EXC_DISABLED","PR_FP_EXC_DIV","PR_FP_EXC_INV","PR_FP_EXC_NONRECOV","PR_FP_EXC_OVF","PR_FP_EXC_PRECISE","PR_FP_EXC_RES","PR_FP_EXC_SW_ENABLE","PR_FP_EXC_UND","PR_FP_MODE_FR","PR_FP_MODE_FRE","PR_GET_CHILD_SUBREAPER","PR_GET_DUMPABLE","PR_GET_ENDIAN","PR_GET_FPEMU","PR_GET_FPEXC","PR_GET_FP_MODE","PR_GET_KEEPCAPS","PR_GET_NAME","PR_GET_NO_NEW_PRIVS","PR_GET_PDEATHSIG","PR_GET_SECCOMP","PR_GET_SECUREBITS","PR_GET_SPECULATION_CTRL","PR_GET_THP_DISABLE","PR_GET_TID_ADDRESS","PR_GET_TIMERSLACK","PR_GET_TIMING","PR_GET_TSC","PR_GET_UNALIGN","PR_MCE_KILL","PR_MCE_KILL_CLEAR","PR_MCE_KILL_DEFAULT","PR_MCE_KILL_EARLY","PR_MCE_KILL_GET","PR_MCE_KILL_LATE","PR_MCE_KILL_SET","PR_MPX_DISABLE_MANAGEMENT","PR_MPX_ENABLE_MANAGEMENT","PR_SCHED_CORE","PR_SCHED_CORE_CREATE","PR_SCHED_CORE_GET","PR_SCHED_CORE_MAX","PR_SCHED_CORE_SCOPE_PROCESS_GROUP","PR_SCHED_CORE_SCOPE_THREAD","PR_SCHED_CORE_SCOPE_THREAD_GROUP","PR_SCHED_CORE_SHARE_FROM","PR_SCHED_CORE_SHARE_TO","PR_SET_CHILD_SUBREAPER","PR_SET_DUMPABLE","PR_SET_ENDIAN","PR_SET_FPEMU","PR_SET_FPEXC","PR_SET_FP_MODE","PR_SET_KEEPCAPS","PR_SET_MM","PR_SET_MM_ARG_END","PR_SET_MM_ARG_START","PR_SET_MM_AUXV","PR_SET_MM_BRK","PR_SET_MM_END_CODE","PR_SET_MM_END_DATA","PR_SET_MM_ENV_END","PR_SET_MM_ENV_START","PR_SET_MM_EXE_FILE","PR_SET_MM_MAP","PR_SET_MM_MAP_SIZE","PR_SET_MM_START_BRK","PR_SET_MM_START_CODE","PR_SET_MM_START_DATA","PR_SET_MM_START_STACK","PR_SET_NAME","PR_SET_NO_NEW_PRIVS","PR_SET_PDEATHSIG","PR_SET_PTRACER","PR_SET_PTRACER_ANY","PR_SET_SECCOMP","PR_SET_SECUREBITS","PR_SET_SPECULATION_CTRL","PR_SET_THP_DISABLE","PR_SET_TIMERSLACK","PR_SET_TIMING","PR_SET_TSC","PR_SET_UNALIGN","PR_SET_VMA","PR_SET_VMA_ANON_NAME","PR_SPEC_DISABLE","PR_SPEC_DISABLE_NOEXEC","PR_SPEC_ENABLE","PR_SPEC_FORCE_DISABLE","PR_SPEC_INDIRECT_BRANCH","PR_SPEC_NOT_AFFECTED","PR_SPEC_PRCTL","PR_SPEC_STORE_BYPASS","PR_TASK_PERF_EVENTS_DISABLE","PR_TASK_PERF_EVENTS_ENABLE","PR_TIMING_STATISTICAL","PR_TIMING_TIMESTAMP","PR_TSC_ENABLE","PR_TSC_SIGSEGV","PR_UNALIGN_NOPRINT","PR_UNALIGN_SIGBUS","PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP","PTHREAD_COND_INITIALIZER","PTHREAD_CREATE_DETACHED","PTHREAD_CREATE_JOINABLE","PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP","PTHREAD_MUTEX_ADAPTIVE_NP","PTHREAD_MUTEX_DEFAULT","PTHREAD_MUTEX_ERRORCHECK","PTHREAD_MUTEX_INITIALIZER","PTHREAD_MUTEX_NORMAL","PTHREAD_MUTEX_RECURSIVE","PTHREAD_MUTEX_ROBUST","PTHREAD_MUTEX_STALLED","PTHREAD_PRIO_INHERIT","PTHREAD_PRIO_NONE","PTHREAD_PRIO_PROTECT","PTHREAD_PROCESS_PRIVATE","PTHREAD_PROCESS_SHARED","PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP","PTHREAD_RWLOCK_INITIALIZER","PTHREAD_STACK_MIN","PTRACE_ATTACH","PTRACE_CONT","PTRACE_DETACH","PTRACE_EVENT_CLONE","PTRACE_EVENT_EXEC","PTRACE_EVENT_EXIT","PTRACE_EVENT_FORK","PTRACE_EVENT_SECCOMP","PTRACE_EVENT_STOP","PTRACE_EVENT_VFORK","PTRACE_EVENT_VFORK_DONE","PTRACE_GETEVENTMSG","PTRACE_GETFPREGS","PTRACE_GETFPXREGS","PTRACE_GETREGS","PTRACE_GETREGSET","PTRACE_GETSIGINFO","PTRACE_GET_RSEQ_CONFIGURATION","PTRACE_GET_SYSCALL_INFO","PTRACE_INTERRUPT","PTRACE_KILL","PTRACE_LISTEN","PTRACE_O_EXITKILL","PTRACE_O_MASK","PTRACE_O_SUSPEND_SECCOMP","PTRACE_O_TRACECLONE","PTRACE_O_TRACEEXEC","PTRACE_O_TRACEEXIT","PTRACE_O_TRACEFORK","PTRACE_O_TRACESECCOMP","PTRACE_O_TRACESYSGOOD","PTRACE_O_TRACEVFORK","PTRACE_O_TRACEVFORKDONE","PTRACE_PEEKDATA","PTRACE_PEEKSIGINFO","PTRACE_PEEKSIGINFO_SHARED","PTRACE_PEEKTEXT","PTRACE_PEEKUSER","PTRACE_POKEDATA","PTRACE_POKETEXT","PTRACE_POKEUSER","PTRACE_SEIZE","PTRACE_SETFPREGS","PTRACE_SETFPXREGS","PTRACE_SETOPTIONS","PTRACE_SETREGS","PTRACE_SETREGSET","PTRACE_SETSIGINFO","PTRACE_SINGLESTEP","PTRACE_SYSCALL","PTRACE_SYSCALL_INFO_ENTRY","PTRACE_SYSCALL_INFO_EXIT","PTRACE_SYSCALL_INFO_NONE","PTRACE_SYSCALL_INFO_SECCOMP","PTRACE_SYSEMU","PTRACE_SYSEMU_SINGLESTEP","PTRACE_TRACEME","PT_DYNAMIC","PT_GNU_EH_FRAME","PT_GNU_RELRO","PT_GNU_STACK","PT_HIOS","PT_HIPROC","PT_HISUNW","PT_INTERP","PT_LOAD","PT_LOOS","PT_LOPROC","PT_LOSUNW","PT_NOTE","PT_NULL","PT_NUM","PT_PHDR","PT_SHLIB","PT_SUNWBSS","PT_SUNWSTACK","PT_TLS","P_ALL","P_PGID","P_PID","P_PIDFD","QCMD","QFMT_VFS_OLD","QFMT_VFS_V0","QFMT_VFS_V1","QIF_ALL","QIF_BLIMITS","QIF_BTIME","QIF_ILIMITS","QIF_INODES","QIF_ITIME","QIF_LIMITS","QIF_SPACE","QIF_TIMES","QIF_USAGE","QNX4_SUPER_MAGIC","QNX6_SUPER_MAGIC","Q_GETFMT","Q_GETINFO","Q_GETQUOTA","Q_QUOTAOFF","Q_QUOTAON","Q_SETINFO","Q_SETQUOTA","Q_SYNC","R10","R11","R12","R13","R14","R15","R8","R9","RADIXCHAR","RAND_MAX","RAX","RBP","RBX","RB_AUTOBOOT","RB_DISABLE_CAD","RB_ENABLE_CAD","RB_HALT_SYSTEM","RB_KEXEC","RB_POWER_OFF","RB_SW_SUSPEND","RCX","RDI","RDTGROUP_SUPER_MAGIC","RDX","READ_IMPLIES_EXEC","REG_BADBR","REG_BADPAT","REG_BADRPT","REG_CR2","REG_CSGSFS","REG_EBRACE","REG_EBRACK","REG_ECOLLATE","REG_ECTYPE","REG_EEND","REG_EESCAPE","REG_EFL","REG_ENOSYS","REG_EPAREN","REG_ERANGE","REG_ERPAREN","REG_ERR","REG_ESIZE","REG_ESPACE","REG_ESUBREG","REG_EXTENDED","REG_ICASE","REG_NEWLINE","REG_NOMATCH","REG_NOSUB","REG_NOTBOL","REG_NOTEOL","REG_OLDMASK","REG_R10","REG_R11","REG_R12","REG_R13","REG_R14","REG_R15","REG_R8","REG_R9","REG_RAX","REG_RBP","REG_RBX","REG_RCX","REG_RDI","REG_RDX","REG_RIP","REG_RSI","REG_RSP","REG_STARTEND","REG_TRAPNO","REISERFS_SUPER_MAGIC","REL_CNT","REL_MAX","RENAME_EXCHANGE","RENAME_NOREPLACE","RENAME_WHITEOUT","REP_CNT","REP_MAX","RESOLVE_BENEATH","RESOLVE_CACHED","RESOLVE_IN_ROOT","RESOLVE_NO_MAGICLINKS","RESOLVE_NO_SYMLINKS","RESOLVE_NO_XDEV","RIP","RLIM64_INFINITY","RLIMIT_AS","RLIMIT_CORE","RLIMIT_CPU","RLIMIT_DATA","RLIMIT_FSIZE","RLIMIT_LOCKS","RLIMIT_MEMLOCK","RLIMIT_MSGQUEUE","RLIMIT_NICE","RLIMIT_NLIMITS","RLIMIT_NOFILE","RLIMIT_NPROC","RLIMIT_RSS","RLIMIT_RTPRIO","RLIMIT_RTTIME","RLIMIT_SIGPENDING","RLIMIT_STACK","RLIM_INFINITY","RLIM_NLIMITS","RLIM_SAVED_CUR","RLIM_SAVED_MAX","RSI","RSP","RTA_CACHEINFO","RTA_DST","RTA_ENCAP","RTA_ENCAP_TYPE","RTA_EXPIRES","RTA_FLOW","RTA_GATEWAY","RTA_IIF","RTA_MARK","RTA_METRICS","RTA_MFC_STATS","RTA_MP_ALGO","RTA_MULTIPATH","RTA_NEWDST","RTA_OIF","RTA_PAD","RTA_PREF","RTA_PREFSRC","RTA_PRIORITY","RTA_PROTOINFO","RTA_SESSION","RTA_SRC","RTA_TABLE","RTA_TTL_PROPAGATE","RTA_UID","RTA_UNSPEC","RTA_VIA","RTCF_DIRECTSRC","RTCF_DOREDIRECT","RTCF_LOG","RTCF_MASQ","RTCF_NAT","RTCF_VALVE","RTEXT_FILTER_BRVLAN","RTEXT_FILTER_BRVLAN_COMPRESSED","RTEXT_FILTER_CFM_CONFIG","RTEXT_FILTER_CFM_STATUS","RTEXT_FILTER_MRP","RTEXT_FILTER_SKIP_STATS","RTEXT_FILTER_VF","RTF_ADDRCLASSMASK","RTF_ADDRCONF","RTF_ALLONLINK","RTF_BROADCAST","RTF_CACHE","RTF_DEFAULT","RTF_DYNAMIC","RTF_FLOW","RTF_GATEWAY","RTF_HOST","RTF_INTERFACE","RTF_IRTT","RTF_LINKRT","RTF_LOCAL","RTF_MODIFIED","RTF_MSS","RTF_MTU","RTF_MULTICAST","RTF_NAT","RTF_NOFORWARD","RTF_NONEXTHOP","RTF_NOPMTUDISC","RTF_POLICY","RTF_REINSTATE","RTF_REJECT","RTF_STATIC","RTF_THROW","RTF_UP","RTF_WINDOW","RTF_XRESOLVE","RTLD_DEEPBIND","RTLD_DEFAULT","RTLD_DI_CONFIGADDR","RTLD_DI_LINKMAP","RTLD_DI_LMID","RTLD_DI_ORIGIN","RTLD_DI_PROFILENAME","RTLD_DI_PROFILEOUT","RTLD_DI_SERINFO","RTLD_DI_SERINFOSIZE","RTLD_DI_TLS_DATA","RTLD_DI_TLS_MODID","RTLD_GLOBAL","RTLD_LAZY","RTLD_LOCAL","RTLD_NEXT","RTLD_NODELETE","RTLD_NOLOAD","RTLD_NOW","RTMGRP_DECnet_IFADDR","RTMGRP_DECnet_ROUTE","RTMGRP_IPV4_IFADDR","RTMGRP_IPV4_MROUTE","RTMGRP_IPV4_ROUTE","RTMGRP_IPV4_RULE","RTMGRP_IPV6_IFADDR","RTMGRP_IPV6_IFINFO","RTMGRP_IPV6_MROUTE","RTMGRP_IPV6_PREFIX","RTMGRP_IPV6_ROUTE","RTMGRP_LINK","RTMGRP_NEIGH","RTMGRP_NOTIFY","RTMGRP_TC","RTMSG_AR_FAILED","RTMSG_CONTROL","RTMSG_DELDEVICE","RTMSG_DELROUTE","RTMSG_DELRULE","RTMSG_NEWDEVICE","RTMSG_NEWROUTE","RTMSG_NEWRULE","RTMSG_OVERRUN","RTM_DELACTION","RTM_DELADDR","RTM_DELADDRLABEL","RTM_DELLINK","RTM_DELMDB","RTM_DELNEIGH","RTM_DELNETCONF","RTM_DELNSID","RTM_DELQDISC","RTM_DELROUTE","RTM_DELRULE","RTM_DELTCLASS","RTM_DELTFILTER","RTM_F_CLONED","RTM_F_EQUALIZE","RTM_F_FIB_MATCH","RTM_F_LOOKUP_TABLE","RTM_F_NOTIFY","RTM_F_PREFIX","RTM_GETACTION","RTM_GETADDR","RTM_GETADDRLABEL","RTM_GETANYCAST","RTM_GETDCB","RTM_GETLINK","RTM_GETMDB","RTM_GETMULTICAST","RTM_GETNEIGH","RTM_GETNEIGHTBL","RTM_GETNETCONF","RTM_GETNSID","RTM_GETQDISC","RTM_GETROUTE","RTM_GETRULE","RTM_GETSTATS","RTM_GETTCLASS","RTM_GETTFILTER","RTM_NEWACTION","RTM_NEWADDR","RTM_NEWADDRLABEL","RTM_NEWCACHEREPORT","RTM_NEWLINK","RTM_NEWMDB","RTM_NEWNDUSEROPT","RTM_NEWNEIGH","RTM_NEWNEIGHTBL","RTM_NEWNETCONF","RTM_NEWNSID","RTM_NEWPREFIX","RTM_NEWQDISC","RTM_NEWROUTE","RTM_NEWRULE","RTM_NEWSTATS","RTM_NEWTCLASS","RTM_NEWTFILTER","RTM_SETDCB","RTM_SETLINK","RTM_SETNEIGHTBL","RTNLGRP_BRVLAN","RTNLGRP_DCB","RTNLGRP_DECnet_IFADDR","RTNLGRP_DECnet_ROUTE","RTNLGRP_DECnet_RULE","RTNLGRP_IPV4_IFADDR","RTNLGRP_IPV4_MROUTE","RTNLGRP_IPV4_MROUTE_R","RTNLGRP_IPV4_NETCONF","RTNLGRP_IPV4_ROUTE","RTNLGRP_IPV4_RULE","RTNLGRP_IPV6_IFADDR","RTNLGRP_IPV6_IFINFO","RTNLGRP_IPV6_MROUTE","RTNLGRP_IPV6_MROUTE_R","RTNLGRP_IPV6_NETCONF","RTNLGRP_IPV6_PREFIX","RTNLGRP_IPV6_ROUTE","RTNLGRP_IPV6_RULE","RTNLGRP_LINK","RTNLGRP_MCTP_IFADDR","RTNLGRP_MDB","RTNLGRP_MPLS_NETCONF","RTNLGRP_MPLS_ROUTE","RTNLGRP_ND_USEROPT","RTNLGRP_NEIGH","RTNLGRP_NEXTHOP","RTNLGRP_NONE","RTNLGRP_NOP2","RTNLGRP_NOP4","RTNLGRP_NOTIFY","RTNLGRP_NSID","RTNLGRP_PHONET_IFADDR","RTNLGRP_PHONET_ROUTE","RTNLGRP_STATS","RTNLGRP_TC","RTNLGRP_TUNNEL","RTN_ANYCAST","RTN_BLACKHOLE","RTN_BROADCAST","RTN_LOCAL","RTN_MULTICAST","RTN_NAT","RTN_PROHIBIT","RTN_THROW","RTN_UNICAST","RTN_UNREACHABLE","RTN_UNSPEC","RTN_XRESOLVE","RTPROT_BOOT","RTPROT_KERNEL","RTPROT_REDIRECT","RTPROT_STATIC","RTPROT_UNSPEC","RT_ADDRCLASS","RT_CLASS_DEFAULT","RT_CLASS_LOCAL","RT_CLASS_MAIN","RT_CLASS_MAX","RT_CLASS_UNSPEC","RT_LOCALADDR","RT_SCOPE_HOST","RT_SCOPE_LINK","RT_SCOPE_NOWHERE","RT_SCOPE_SITE","RT_SCOPE_UNIVERSE","RT_TABLE_COMPAT","RT_TABLE_DEFAULT","RT_TABLE_LOCAL","RT_TABLE_MAIN","RT_TABLE_UNSPEC","RT_TOS","RUN_LVL","RUSAGE_CHILDREN","RUSAGE_SELF","RUSAGE_THREAD","RWF_APPEND","RWF_DSYNC","RWF_HIPRI","RWF_NOWAIT","RWF_SYNC","R_OK","SA_NOCLDSTOP","SA_NOCLDWAIT","SA_NODEFER","SA_ONSTACK","SA_RESETHAND","SA_RESTART","SA_SIGINFO","SCHED_BATCH","SCHED_FIFO","SCHED_IDLE","SCHED_OTHER","SCHED_RESET_ON_FORK","SCHED_RR","SCM_CREDENTIALS","SCM_J1939_DEST_ADDR","SCM_J1939_DEST_NAME","SCM_J1939_ERRQUEUE","SCM_J1939_PRIO","SCM_RIGHTS","SCM_TIMESTAMP","SCM_TIMESTAMPING","SCM_TIMESTAMPING_OPT_STATS","SCM_TIMESTAMPING_PKTINFO","SCM_TIMESTAMPNS","SCM_TXTIME","SCM_WIFI_STATUS","SCTP_ABORT","SCTP_ADAPTATION_LAYER","SCTP_ADDR_OVER","SCTP_ALL_ASSOC","SCTP_ASSOCINFO","SCTP_AUTHINFO","SCTP_AUTH_ACTIVE_KEY","SCTP_AUTH_CHUNK","SCTP_AUTH_DEACTIVATE_KEY","SCTP_AUTH_DELETE_KEY","SCTP_AUTH_KEY","SCTP_AUTOCLOSE","SCTP_AUTO_ASCONF","SCTP_CONTEXT","SCTP_CURRENT_ASSOC","SCTP_DEFAULT_SEND_PARAM","SCTP_DEFAULT_SNDINFO","SCTP_DELAYED_ACK","SCTP_DELAYED_ACK_TIME","SCTP_DELAYED_SACK","SCTP_DISABLE_FRAGMENTS","SCTP_DSTADDRV4","SCTP_DSTADDRV6","SCTP_ENABLE_CHANGE_ASSOC_REQ","SCTP_ENABLE_RESET_ASSOC_REQ","SCTP_ENABLE_RESET_STREAM_REQ","SCTP_ENABLE_STRRESET_MASK","SCTP_EOF","SCTP_EVENTS","SCTP_FRAGMENT_INTERLEAVE","SCTP_FUTURE_ASSOC","SCTP_GET_ASSOC_ID_LIST","SCTP_GET_ASSOC_NUMBER","SCTP_GET_PEER_ADDR_INFO","SCTP_HMAC_IDENT","SCTP_INIT","SCTP_INITMSG","SCTP_I_WANT_MAPPED_V4_ADDR","SCTP_LOCAL_AUTH_CHUNKS","SCTP_MAXSEG","SCTP_MAX_BURST","SCTP_NODELAY","SCTP_NOTIFICATION","SCTP_NXTINFO","SCTP_PARTIAL_DELIVERY_POINT","SCTP_PEER_ADDR_PARAMS","SCTP_PEER_ADDR_THLDS","SCTP_PEER_ADDR_THLDS_V2","SCTP_PEER_AUTH_CHUNKS","SCTP_PRIMARY_ADDR","SCTP_PRINFO","SCTP_PR_INDEX","SCTP_PR_POLICY","SCTP_PR_PRIO_ENABLED","SCTP_PR_RTX_ENABLED","SCTP_PR_SCTP_ALL","SCTP_PR_SCTP_MASK","SCTP_PR_SCTP_MAX","SCTP_PR_SCTP_NONE","SCTP_PR_SCTP_PRIO","SCTP_PR_SCTP_RTX","SCTP_PR_SCTP_TTL","SCTP_PR_SET_POLICY","SCTP_PR_TTL_ENABLED","SCTP_RCVINFO","SCTP_RECVNXTINFO","SCTP_RECVRCVINFO","SCTP_REUSE_PORT","SCTP_RTOINFO","SCTP_SACK_IMMEDIATELY","SCTP_SENDALL","SCTP_SET_PEER_PRIMARY_ADDR","SCTP_SNDINFO","SCTP_SNDRCV","SCTP_STATUS","SCTP_STREAM_RESET_INCOMING","SCTP_STREAM_RESET_OUTGOING","SCTP_UNORDERED","SECCOMP_FILTER_FLAG_LOG","SECCOMP_FILTER_FLAG_SPEC_ALLOW","SECCOMP_FILTER_FLAG_TSYNC","SECCOMP_GET_ACTION_AVAIL","SECCOMP_GET_NOTIF_SIZES","SECCOMP_MODE_DISABLED","SECCOMP_MODE_FILTER","SECCOMP_MODE_STRICT","SECCOMP_RET_ACTION","SECCOMP_RET_ACTION_FULL","SECCOMP_RET_ALLOW","SECCOMP_RET_DATA","SECCOMP_RET_ERRNO","SECCOMP_RET_KILL","SECCOMP_RET_KILL_PROCESS","SECCOMP_RET_KILL_THREAD","SECCOMP_RET_LOG","SECCOMP_RET_TRACE","SECCOMP_RET_TRAP","SECCOMP_SET_MODE_FILTER","SECCOMP_SET_MODE_STRICT","SECURITYFS_MAGIC","SEEK_CUR","SEEK_DATA","SEEK_END","SEEK_HOLE","SEEK_SET","SELFMAG","SELINUX_MAGIC","SEM_FAILED","SFD_CLOEXEC","SFD_NONBLOCK","SHM_EXEC","SHM_HUGETLB","SHM_LOCK","SHM_NORESERVE","SHM_R","SHM_RDONLY","SHM_REMAP","SHM_RND","SHM_UNLOCK","SHM_W","SHORT_INODE","SHUT_RD","SHUT_RDWR","SHUT_WR","SIGABRT","SIGALRM","SIGBUS","SIGCHLD","SIGCONT","SIGEV_NONE","SIGEV_SIGNAL","SIGEV_THREAD","SIGEV_THREAD_ID","SIGFPE","SIGHUP","SIGILL","SIGINT","SIGIO","SIGIOT","SIGKILL","SIGPIPE","SIGPOLL","SIGPROF","SIGPWR","SIGQUIT","SIGRTMAX","SIGRTMIN","SIGSEGV","SIGSTKFLT","SIGSTKSZ","SIGSTOP","SIGSYS","SIGTERM","SIGTRAP","SIGTSTP","SIGTTIN","SIGTTOU","SIGUNUSED","SIGURG","SIGUSR1","SIGUSR2","SIGVTALRM","SIGWINCH","SIGXCPU","SIGXFSZ","SIG_BLOCK","SIG_DFL","SIG_ERR","SIG_IGN","SIG_SETMASK","SIG_UNBLOCK","SIOCADDMULTI","SIOCADDRT","SIOCDARP","SIOCDELMULTI","SIOCDELRT","SIOCDIFADDR","SIOCDRARP","SIOCETHTOOL","SIOCGARP","SIOCGHWTSTAMP","SIOCGIFADDR","SIOCGIFBR","SIOCGIFBRDADDR","SIOCGIFCONF","SIOCGIFCOUNT","SIOCGIFDSTADDR","SIOCGIFENCAP","SIOCGIFFLAGS","SIOCGIFHWADDR","SIOCGIFINDEX","SIOCGIFMAP","SIOCGIFMEM","SIOCGIFMETRIC","SIOCGIFMTU","SIOCGIFNAME","SIOCGIFNETMASK","SIOCGIFPFLAGS","SIOCGIFSLAVE","SIOCGIFTXQLEN","SIOCGMIIPHY","SIOCGMIIREG","SIOCGRARP","SIOCGSKNS","SIOCOUTQNSD","SIOCSARP","SIOCSHWTSTAMP","SIOCSIFADDR","SIOCSIFBR","SIOCSIFBRDADDR","SIOCSIFDSTADDR","SIOCSIFENCAP","SIOCSIFFLAGS","SIOCSIFHWADDR","SIOCSIFHWBROADCAST","SIOCSIFLINK","SIOCSIFMAP","SIOCSIFMEM","SIOCSIFMETRIC","SIOCSIFMTU","SIOCSIFNETMASK","SIOCSIFPFLAGS","SIOCSIFSLAVE","SIOCSIFTXQLEN","SIOCSMIIREG","SIOCSRARP","SIOCWANDEV","SIOGIFINDEX","SI_LOAD_SHIFT","SKF_AD_ALU_XOR_X","SKF_AD_CPU","SKF_AD_HATYPE","SKF_AD_IFINDEX","SKF_AD_MARK","SKF_AD_MAX","SKF_AD_NLATTR","SKF_AD_NLATTR_NEST","SKF_AD_OFF","SKF_AD_PAY_OFFSET","SKF_AD_PKTTYPE","SKF_AD_PROTOCOL","SKF_AD_QUEUE","SKF_AD_RANDOM","SKF_AD_RXHASH","SKF_AD_VLAN_TAG","SKF_AD_VLAN_TAG_PRESENT","SKF_AD_VLAN_TPID","SKF_LL_OFF","SKF_NET_OFF","SK_MEMINFO_BACKLOG","SK_MEMINFO_DROPS","SK_MEMINFO_FWD_ALLOC","SK_MEMINFO_OPTMEM","SK_MEMINFO_RCVBUF","SK_MEMINFO_RMEM_ALLOC","SK_MEMINFO_SNDBUF","SK_MEMINFO_WMEM_ALLOC","SK_MEMINFO_WMEM_QUEUED","SMACK_MAGIC","SMB_SUPER_MAGIC","SND_CNT","SND_MAX","SOCK_CLOEXEC","SOCK_DCCP","SOCK_DGRAM","SOCK_NONBLOCK","SOCK_PACKET","SOCK_RAW","SOCK_RDM","SOCK_SEQPACKET","SOCK_STREAM","SOF_TIMESTAMPING_OPT_CMSG","SOF_TIMESTAMPING_OPT_ID","SOF_TIMESTAMPING_OPT_PKTINFO","SOF_TIMESTAMPING_OPT_STATS","SOF_TIMESTAMPING_OPT_TSONLY","SOF_TIMESTAMPING_OPT_TX_SWHW","SOF_TIMESTAMPING_RAW_HARDWARE","SOF_TIMESTAMPING_RX_HARDWARE","SOF_TIMESTAMPING_RX_SOFTWARE","SOF_TIMESTAMPING_SOFTWARE","SOF_TIMESTAMPING_SYS_HARDWARE","SOF_TIMESTAMPING_TX_ACK","SOF_TIMESTAMPING_TX_HARDWARE","SOF_TIMESTAMPING_TX_SCHED","SOF_TIMESTAMPING_TX_SOFTWARE","SOF_TXTIME_DEADLINE_MODE","SOF_TXTIME_REPORT_ERRORS","SOL_AAL","SOL_ALG","SOL_ATM","SOL_BLUETOOTH","SOL_CAIF","SOL_CAN_BASE","SOL_CAN_J1939","SOL_CAN_RAW","SOL_DCCP","SOL_DECNET","SOL_ICMPV6","SOL_IP","SOL_IPV6","SOL_IRDA","SOL_IUCV","SOL_LLC","SOL_NETBEUI","SOL_NETLINK","SOL_NFC","SOL_PACKET","SOL_PNPIPE","SOL_PPPOL2TP","SOL_RAW","SOL_RDS","SOL_RXRPC","SOL_SOCKET","SOL_TCP","SOL_TIPC","SOL_TLS","SOL_UDP","SOL_X25","SOL_XDP","SOMAXCONN","SO_ACCEPTCONN","SO_ATTACH_BPF","SO_ATTACH_FILTER","SO_ATTACH_REUSEPORT_CBPF","SO_ATTACH_REUSEPORT_EBPF","SO_BINDTODEVICE","SO_BINDTOIFINDEX","SO_BPF_EXTENSIONS","SO_BROADCAST","SO_BSDCOMPAT","SO_BUSY_POLL","SO_CNX_ADVICE","SO_COOKIE","SO_DEBUG","SO_DETACH_BPF","SO_DETACH_FILTER","SO_DETACH_REUSEPORT_BPF","SO_DOMAIN","SO_DONTROUTE","SO_EE_OFFENDER","SO_EE_ORIGIN_ICMP","SO_EE_ORIGIN_ICMP6","SO_EE_ORIGIN_LOCAL","SO_EE_ORIGIN_NONE","SO_EE_ORIGIN_TIMESTAMPING","SO_EE_ORIGIN_TXSTATUS","SO_ERROR","SO_GET_FILTER","SO_INCOMING_CPU","SO_INCOMING_NAPI_ID","SO_J1939_ERRQUEUE","SO_J1939_FILTER","SO_J1939_PROMISC","SO_J1939_SEND_PRIO","SO_KEEPALIVE","SO_LINGER","SO_LOCK_FILTER","SO_MARK","SO_MAX_PACING_RATE","SO_MEMINFO","SO_NOFCS","SO_NO_CHECK","SO_OOBINLINE","SO_ORIGINAL_DST","SO_PASSCRED","SO_PASSSEC","SO_PEEK_OFF","SO_PEERCRED","SO_PEERGROUPS","SO_PEERNAME","SO_PEERSEC","SO_PRIORITY","SO_PROTOCOL","SO_RCVBUF","SO_RCVBUFFORCE","SO_RCVLOWAT","SO_RCVTIMEO","SO_RCVTIMEO_NEW","SO_REUSEADDR","SO_REUSEPORT","SO_RXQ_OVFL","SO_SECURITY_AUTHENTICATION","SO_SECURITY_ENCRYPTION_NETWORK","SO_SECURITY_ENCRYPTION_TRANSPORT","SO_SELECT_ERR_QUEUE","SO_SNDBUF","SO_SNDBUFFORCE","SO_SNDLOWAT","SO_SNDTIMEO","SO_SNDTIMEO_NEW","SO_TIMESTAMP","SO_TIMESTAMPING","SO_TIMESTAMPING_NEW","SO_TIMESTAMPNS","SO_TIMESTAMPNS_NEW","SO_TIMESTAMP_NEW","SO_TXTIME","SO_TYPE","SO_WIFI_STATUS","SO_ZEROCOPY","SPLICE_F_GIFT","SPLICE_F_MORE","SPLICE_F_MOVE","SPLICE_F_NONBLOCK","SS","SS_DISABLE","SS_ONSTACK","STATX_ALL","STATX_ATIME","STATX_ATTR_APPEND","STATX_ATTR_AUTOMOUNT","STATX_ATTR_COMPRESSED","STATX_ATTR_DAX","STATX_ATTR_ENCRYPTED","STATX_ATTR_IMMUTABLE","STATX_ATTR_MOUNT_ROOT","STATX_ATTR_NODUMP","STATX_ATTR_VERITY","STATX_BASIC_STATS","STATX_BLOCKS","STATX_BTIME","STATX_CTIME","STATX_DIOALIGN","STATX_GID","STATX_INO","STATX_MNT_ID","STATX_MODE","STATX_MTIME","STATX_NLINK","STATX_SIZE","STATX_TYPE","STATX_UID","STATX__RESERVED","STA_CLK","STA_CLOCKERR","STA_DEL","STA_FLL","STA_FREQHOLD","STA_INS","STA_MODE","STA_NANO","STA_PLL","STA_PPSERROR","STA_PPSFREQ","STA_PPSJITTER","STA_PPSSIGNAL","STA_PPSTIME","STA_PPSWANDER","STA_RONLY","STA_UNSYNC","STDERR_FILENO","STDIN_FILENO","STDOUT_FILENO","STICKY_TIMEOUTS","ST_APPEND","ST_IMMUTABLE","ST_MANDLOCK","ST_NOATIME","ST_NODEV","ST_NODIRATIME","ST_NOEXEC","ST_NOSUID","ST_RDONLY","ST_RELATIME","ST_SYNCHRONOUS","ST_WRITE","SW_CNT","SW_MAX","SYNC_FILE_RANGE_WAIT_AFTER","SYNC_FILE_RANGE_WAIT_BEFORE","SYNC_FILE_RANGE_WRITE","SYN_CNT","SYN_MAX","SYSFS_MAGIC","SYS__sysctl","SYS_accept","SYS_accept4","SYS_access","SYS_acct","SYS_add_key","SYS_adjtimex","SYS_afs_syscall","SYS_alarm","SYS_arch_prctl","SYS_bind","SYS_bpf","SYS_brk","SYS_capget","SYS_capset","SYS_chdir","SYS_chmod","SYS_chown","SYS_chroot","SYS_clock_adjtime","SYS_clock_getres","SYS_clock_gettime","SYS_clock_nanosleep","SYS_clock_settime","SYS_clone","SYS_clone3","SYS_close","SYS_close_range","SYS_connect","SYS_copy_file_range","SYS_creat","SYS_create_module","SYS_delete_module","SYS_dup","SYS_dup2","SYS_dup3","SYS_epoll_create","SYS_epoll_create1","SYS_epoll_ctl","SYS_epoll_ctl_old","SYS_epoll_pwait","SYS_epoll_pwait2","SYS_epoll_wait","SYS_epoll_wait_old","SYS_eventfd","SYS_eventfd2","SYS_execve","SYS_execveat","SYS_exit","SYS_exit_group","SYS_faccessat","SYS_faccessat2","SYS_fadvise64","SYS_fallocate","SYS_fanotify_init","SYS_fanotify_mark","SYS_fchdir","SYS_fchmod","SYS_fchmodat","SYS_fchown","SYS_fchownat","SYS_fcntl","SYS_fdatasync","SYS_fgetxattr","SYS_finit_module","SYS_flistxattr","SYS_flock","SYS_fork","SYS_fremovexattr","SYS_fsconfig","SYS_fsetxattr","SYS_fsmount","SYS_fsopen","SYS_fspick","SYS_fstat","SYS_fstatfs","SYS_fsync","SYS_ftruncate","SYS_futex","SYS_futex_waitv","SYS_futimesat","SYS_get_kernel_syms","SYS_get_mempolicy","SYS_get_robust_list","SYS_get_thread_area","SYS_getcpu","SYS_getcwd","SYS_getdents","SYS_getdents64","SYS_getegid","SYS_geteuid","SYS_getgid","SYS_getgroups","SYS_getitimer","SYS_getpeername","SYS_getpgid","SYS_getpgrp","SYS_getpid","SYS_getpmsg","SYS_getppid","SYS_getpriority","SYS_getrandom","SYS_getresgid","SYS_getresuid","SYS_getrlimit","SYS_getrusage","SYS_getsid","SYS_getsockname","SYS_getsockopt","SYS_gettid","SYS_gettimeofday","SYS_getuid","SYS_getxattr","SYS_init_module","SYS_inotify_add_watch","SYS_inotify_init","SYS_inotify_init1","SYS_inotify_rm_watch","SYS_io_cancel","SYS_io_destroy","SYS_io_getevents","SYS_io_setup","SYS_io_submit","SYS_io_uring_enter","SYS_io_uring_register","SYS_io_uring_setup","SYS_ioctl","SYS_ioperm","SYS_iopl","SYS_ioprio_get","SYS_ioprio_set","SYS_kcmp","SYS_kexec_file_load","SYS_kexec_load","SYS_keyctl","SYS_kill","SYS_landlock_add_rule","SYS_landlock_create_ruleset","SYS_landlock_restrict_self","SYS_lchown","SYS_lgetxattr","SYS_link","SYS_linkat","SYS_listen","SYS_listxattr","SYS_llistxattr","SYS_lookup_dcookie","SYS_lremovexattr","SYS_lseek","SYS_lsetxattr","SYS_lstat","SYS_madvise","SYS_mbind","SYS_membarrier","SYS_memfd_create","SYS_memfd_secret","SYS_migrate_pages","SYS_mincore","SYS_mkdir","SYS_mkdirat","SYS_mknod","SYS_mknodat","SYS_mlock","SYS_mlock2","SYS_mlockall","SYS_mmap","SYS_modify_ldt","SYS_mount","SYS_mount_setattr","SYS_move_mount","SYS_move_pages","SYS_mprotect","SYS_mq_getsetattr","SYS_mq_notify","SYS_mq_open","SYS_mq_timedreceive","SYS_mq_timedsend","SYS_mq_unlink","SYS_mremap","SYS_msgctl","SYS_msgget","SYS_msgrcv","SYS_msgsnd","SYS_msync","SYS_munlock","SYS_munlockall","SYS_munmap","SYS_name_to_handle_at","SYS_nanosleep","SYS_newfstatat","SYS_nfsservctl","SYS_open","SYS_open_by_handle_at","SYS_open_tree","SYS_openat","SYS_openat2","SYS_pause","SYS_perf_event_open","SYS_personality","SYS_pidfd_getfd","SYS_pidfd_open","SYS_pidfd_send_signal","SYS_pipe","SYS_pipe2","SYS_pivot_root","SYS_pkey_alloc","SYS_pkey_free","SYS_pkey_mprotect","SYS_poll","SYS_ppoll","SYS_prctl","SYS_pread64","SYS_preadv","SYS_preadv2","SYS_prlimit64","SYS_process_madvise","SYS_process_mrelease","SYS_process_vm_readv","SYS_process_vm_writev","SYS_pselect6","SYS_ptrace","SYS_putpmsg","SYS_pwrite64","SYS_pwritev","SYS_pwritev2","SYS_query_module","SYS_quotactl","SYS_quotactl_fd","SYS_read","SYS_readahead","SYS_readlink","SYS_readlinkat","SYS_readv","SYS_reboot","SYS_recvfrom","SYS_recvmmsg","SYS_recvmsg","SYS_remap_file_pages","SYS_removexattr","SYS_rename","SYS_renameat","SYS_renameat2","SYS_request_key","SYS_restart_syscall","SYS_rmdir","SYS_rseq","SYS_rt_sigaction","SYS_rt_sigpending","SYS_rt_sigprocmask","SYS_rt_sigqueueinfo","SYS_rt_sigreturn","SYS_rt_sigsuspend","SYS_rt_sigtimedwait","SYS_rt_tgsigqueueinfo","SYS_sched_get_priority_max","SYS_sched_get_priority_min","SYS_sched_getaffinity","SYS_sched_getattr","SYS_sched_getparam","SYS_sched_getscheduler","SYS_sched_rr_get_interval","SYS_sched_setaffinity","SYS_sched_setattr","SYS_sched_setparam","SYS_sched_setscheduler","SYS_sched_yield","SYS_seccomp","SYS_security","SYS_select","SYS_semctl","SYS_semget","SYS_semop","SYS_semtimedop","SYS_sendfile","SYS_sendmmsg","SYS_sendmsg","SYS_sendto","SYS_set_mempolicy","SYS_set_mempolicy_home_node","SYS_set_robust_list","SYS_set_thread_area","SYS_set_tid_address","SYS_setdomainname","SYS_setfsgid","SYS_setfsuid","SYS_setgid","SYS_setgroups","SYS_sethostname","SYS_setitimer","SYS_setns","SYS_setpgid","SYS_setpriority","SYS_setregid","SYS_setresgid","SYS_setresuid","SYS_setreuid","SYS_setrlimit","SYS_setsid","SYS_setsockopt","SYS_settimeofday","SYS_setuid","SYS_setxattr","SYS_shmat","SYS_shmctl","SYS_shmdt","SYS_shmget","SYS_shutdown","SYS_sigaltstack","SYS_signalfd","SYS_signalfd4","SYS_socket","SYS_socketpair","SYS_splice","SYS_stat","SYS_statfs","SYS_statx","SYS_swapoff","SYS_swapon","SYS_symlink","SYS_symlinkat","SYS_sync","SYS_sync_file_range","SYS_syncfs","SYS_sysfs","SYS_sysinfo","SYS_syslog","SYS_tee","SYS_tgkill","SYS_time","SYS_timer_create","SYS_timer_delete","SYS_timer_getoverrun","SYS_timer_gettime","SYS_timer_settime","SYS_timerfd_create","SYS_timerfd_gettime","SYS_timerfd_settime","SYS_times","SYS_tkill","SYS_truncate","SYS_tuxcall","SYS_umask","SYS_umount2","SYS_uname","SYS_unlink","SYS_unlinkat","SYS_unshare","SYS_uselib","SYS_userfaultfd","SYS_ustat","SYS_utime","SYS_utimensat","SYS_utimes","SYS_vfork","SYS_vhangup","SYS_vmsplice","SYS_vserver","SYS_wait4","SYS_waitid","SYS_write","SYS_writev","S_IEXEC","S_IFBLK","S_IFCHR","S_IFDIR","S_IFIFO","S_IFLNK","S_IFMT","S_IFREG","S_IFSOCK","S_IREAD","S_IRGRP","S_IROTH","S_IRUSR","S_IRWXG","S_IRWXO","S_IRWXU","S_ISGID","S_ISUID","S_ISVTX","S_IWGRP","S_IWOTH","S_IWRITE","S_IWUSR","S_IXGRP","S_IXOTH","S_IXUSR","TAB0","TAB1","TAB2","TAB3","TABDLY","TCA_CHAIN","TCA_DUMP_INVISIBLE","TCA_FCNT","TCA_HW_OFFLOAD","TCA_KIND","TCA_OPTIONS","TCA_PAD","TCA_RATE","TCA_STAB","TCA_STATS","TCA_STATS2","TCA_UNSPEC","TCA_XSTATS","TCFLSH","TCGETA","TCGETS","TCGETS2","TCGETX","TCIFLUSH","TCIOFF","TCIOFLUSH","TCION","TCOFLUSH","TCOOFF","TCOON","TCP_CC_INFO","TCP_CM_INQ","TCP_CONGESTION","TCP_COOKIE_TRANSACTIONS","TCP_CORK","TCP_DEFER_ACCEPT","TCP_FASTOPEN","TCP_FASTOPEN_CONNECT","TCP_FASTOPEN_KEY","TCP_FASTOPEN_NO_COOKIE","TCP_INFO","TCP_INQ","TCP_KEEPCNT","TCP_KEEPIDLE","TCP_KEEPINTVL","TCP_LINGER2","TCP_MAXSEG","TCP_MD5SIG","TCP_MD5SIG_EXT","TCP_MD5SIG_MAXKEYLEN","TCP_NODELAY","TCP_NOTSENT_LOWAT","TCP_QUEUE_SEQ","TCP_QUICKACK","TCP_REPAIR","TCP_REPAIR_OPTIONS","TCP_REPAIR_QUEUE","TCP_REPAIR_WINDOW","TCP_SAVED_SYN","TCP_SAVE_SYN","TCP_SYNCNT","TCP_THIN_DUPACK","TCP_THIN_LINEAR_TIMEOUTS","TCP_TIMESTAMP","TCP_ULP","TCP_USER_TIMEOUT","TCP_WINDOW_CLAMP","TCP_ZEROCOPY_RECEIVE","TCSADRAIN","TCSAFLUSH","TCSANOW","TCSBRK","TCSBRKP","TCSETA","TCSETAF","TCSETAW","TCSETS","TCSETS2","TCSETSF","TCSETSF2","TCSETSW","TCSETSW2","TCSETX","TCSETXF","TCSETXW","TCXONC","TFD_CLOEXEC","TFD_NONBLOCK","TFD_TIMER_ABSTIME","TFD_TIMER_CANCEL_ON_SET","THOUSEP","TIMER_ABSTIME","TIME_BAD","TIME_DEL","TIME_ERROR","TIME_INS","TIME_OK","TIME_OOP","TIME_WAIT","TIOCCBRK","TIOCCONS","TIOCEXCL","TIOCGDEV","TIOCGETD","TIOCGEXCL","TIOCGICOUNT","TIOCGLCKTRMIOS","TIOCGPGRP","TIOCGPKT","TIOCGPTLCK","TIOCGPTN","TIOCGPTPEER","TIOCGRS485","TIOCGSERIAL","TIOCGSID","TIOCGSOFTCAR","TIOCGWINSZ","TIOCINQ","TIOCLINUX","TIOCMBIC","TIOCMBIS","TIOCMGET","TIOCMIWAIT","TIOCMSET","TIOCM_CAR","TIOCM_CD","TIOCM_CTS","TIOCM_DSR","TIOCM_DTR","TIOCM_LE","TIOCM_RI","TIOCM_RNG","TIOCM_RTS","TIOCM_SR","TIOCM_ST","TIOCNOTTY","TIOCNXCL","TIOCOUTQ","TIOCPKT","TIOCSBRK","TIOCSCTTY","TIOCSERCONFIG","TIOCSERGETLSR","TIOCSERGETMULTI","TIOCSERGSTRUCT","TIOCSERGWILD","TIOCSERSETMULTI","TIOCSERSWILD","TIOCSETD","TIOCSIG","TIOCSLCKTRMIOS","TIOCSPGRP","TIOCSPTLCK","TIOCSRS485","TIOCSSERIAL","TIOCSSOFTCAR","TIOCSTI","TIOCSWINSZ","TIOCVHANGUP","TLS_GET_RECORD_TYPE","TMPFS_MAGIC","TMP_MAX","TOSTOP","TRACEFS_MAGIC","TUN_READQ_SIZE","TUN_TAP_DEV","TUN_TUN_DEV","TUN_TYPE_MASK","T_FMT","T_FMT_AMPM","UDF_SUPER_MAGIC","UDP_CORK","UDP_ENCAP","UDP_GRO","UDP_NO_CHECK6_RX","UDP_NO_CHECK6_TX","UDP_SEGMENT","UINPUT_MAX_NAME_SIZE","UINPUT_VERSION","UIO_MAXIOV","UMOUNT_NOFOLLOW","UNAME26","USBDEVICE_SUPER_MAGIC","USER_PROCESS","USRQUOTA","UTIME_NOW","UTIME_OMIT","VDISCARD","VEOF","VEOL","VEOL2","VERASE","VINTR","VKILL","VLNEXT","VMADDR_CID_ANY","VMADDR_CID_HOST","VMADDR_CID_HYPERVISOR","VMADDR_CID_LOCAL","VMADDR_CID_RESERVED","VMADDR_PORT_ANY","VMIN","VQUIT","VREPRINT","VSTART","VSTOP","VSUSP","VSWTC","VT0","VT1","VTDLY","VTIME","VWERASE","WCONTINUED","WCOREDUMP","WEXITED","WEXITSTATUS","WHOLE_SECONDS","WIFCONTINUED","WIFEXITED","WIFSIGNALED","WIFSTOPPED","WNOHANG","WNOWAIT","WSTOPPED","WSTOPSIG","WTERMSIG","WUNTRACED","W_EXITCODE","W_OK","W_STOPCODE","XATTR_CREATE","XATTR_REPLACE","XENFS_SUPER_MAGIC","XFS_SUPER_MAGIC","XTABS","X_OK","YESEXPR","YESSTR","_IOFBF","_IOLBF","_IONBF","_PC_2_SYMLINKS","_PC_ALLOC_SIZE_MIN","_PC_ASYNC_IO","_PC_CHOWN_RESTRICTED","_PC_FILESIZEBITS","_PC_LINK_MAX","_PC_MAX_CANON","_PC_MAX_INPUT","_PC_NAME_MAX","_PC_NO_TRUNC","_PC_PATH_MAX","_PC_PIPE_BUF","_PC_PRIO_IO","_PC_REC_INCR_XFER_SIZE","_PC_REC_MAX_XFER_SIZE","_PC_REC_MIN_XFER_SIZE","_PC_REC_XFER_ALIGN","_PC_SOCK_MAXBUF","_PC_SYMLINK_MAX","_PC_SYNC_IO","_PC_VDISABLE","_POSIX_VDISABLE","_SC_2_CHAR_TERM","_SC_2_C_BIND","_SC_2_C_DEV","_SC_2_C_VERSION","_SC_2_FORT_DEV","_SC_2_FORT_RUN","_SC_2_LOCALEDEF","_SC_2_PBS","_SC_2_PBS_ACCOUNTING","_SC_2_PBS_CHECKPOINT","_SC_2_PBS_LOCATE","_SC_2_PBS_MESSAGE","_SC_2_PBS_TRACK","_SC_2_SW_DEV","_SC_2_UPE","_SC_2_VERSION","_SC_ADVISORY_INFO","_SC_AIO_LISTIO_MAX","_SC_AIO_MAX","_SC_AIO_PRIO_DELTA_MAX","_SC_ARG_MAX","_SC_ASYNCHRONOUS_IO","_SC_ATEXIT_MAX","_SC_AVPHYS_PAGES","_SC_BARRIERS","_SC_BASE","_SC_BC_BASE_MAX","_SC_BC_DIM_MAX","_SC_BC_SCALE_MAX","_SC_BC_STRING_MAX","_SC_CHARCLASS_NAME_MAX","_SC_CHAR_BIT","_SC_CHAR_MAX","_SC_CHAR_MIN","_SC_CHILD_MAX","_SC_CLK_TCK","_SC_CLOCK_SELECTION","_SC_COLL_WEIGHTS_MAX","_SC_CPUTIME","_SC_C_LANG_SUPPORT","_SC_C_LANG_SUPPORT_R","_SC_DELAYTIMER_MAX","_SC_DEVICE_IO","_SC_DEVICE_SPECIFIC","_SC_DEVICE_SPECIFIC_R","_SC_EQUIV_CLASS_MAX","_SC_EXPR_NEST_MAX","_SC_FD_MGMT","_SC_FIFO","_SC_FILE_ATTRIBUTES","_SC_FILE_LOCKING","_SC_FILE_SYSTEM","_SC_FSYNC","_SC_GETGR_R_SIZE_MAX","_SC_GETPW_R_SIZE_MAX","_SC_HOST_NAME_MAX","_SC_INT_MAX","_SC_INT_MIN","_SC_IOV_MAX","_SC_IPV6","_SC_JOB_CONTROL","_SC_LEVEL1_DCACHE_ASSOC","_SC_LEVEL1_DCACHE_LINESIZE","_SC_LEVEL1_DCACHE_SIZE","_SC_LEVEL1_ICACHE_ASSOC","_SC_LEVEL1_ICACHE_LINESIZE","_SC_LEVEL1_ICACHE_SIZE","_SC_LEVEL2_CACHE_ASSOC","_SC_LEVEL2_CACHE_LINESIZE","_SC_LEVEL2_CACHE_SIZE","_SC_LEVEL3_CACHE_ASSOC","_SC_LEVEL3_CACHE_LINESIZE","_SC_LEVEL3_CACHE_SIZE","_SC_LEVEL4_CACHE_ASSOC","_SC_LEVEL4_CACHE_LINESIZE","_SC_LEVEL4_CACHE_SIZE","_SC_LINE_MAX","_SC_LOGIN_NAME_MAX","_SC_LONG_BIT","_SC_MAPPED_FILES","_SC_MB_LEN_MAX","_SC_MEMLOCK","_SC_MEMLOCK_RANGE","_SC_MEMORY_PROTECTION","_SC_MESSAGE_PASSING","_SC_MONOTONIC_CLOCK","_SC_MQ_OPEN_MAX","_SC_MQ_PRIO_MAX","_SC_MULTI_PROCESS","_SC_NETWORKING","_SC_NGROUPS_MAX","_SC_NL_ARGMAX","_SC_NL_LANGMAX","_SC_NL_MSGMAX","_SC_NL_NMAX","_SC_NL_SETMAX","_SC_NL_TEXTMAX","_SC_NPROCESSORS_CONF","_SC_NPROCESSORS_ONLN","_SC_NZERO","_SC_OPEN_MAX","_SC_PAGESIZE","_SC_PAGE_SIZE","_SC_PASS_MAX","_SC_PHYS_PAGES","_SC_PII","_SC_PII_INTERNET","_SC_PII_INTERNET_DGRAM","_SC_PII_INTERNET_STREAM","_SC_PII_OSI","_SC_PII_OSI_CLTS","_SC_PII_OSI_COTS","_SC_PII_OSI_M","_SC_PII_SOCKET","_SC_PII_XTI","_SC_PIPE","_SC_POLL","_SC_PRIORITIZED_IO","_SC_PRIORITY_SCHEDULING","_SC_RAW_SOCKETS","_SC_READER_WRITER_LOCKS","_SC_REALTIME_SIGNALS","_SC_REGEXP","_SC_REGEX_VERSION","_SC_RE_DUP_MAX","_SC_RTSIG_MAX","_SC_SAVED_IDS","_SC_SCHAR_MAX","_SC_SCHAR_MIN","_SC_SELECT","_SC_SEMAPHORES","_SC_SEM_NSEMS_MAX","_SC_SEM_VALUE_MAX","_SC_SHARED_MEMORY_OBJECTS","_SC_SHELL","_SC_SHRT_MAX","_SC_SHRT_MIN","_SC_SIGNALS","_SC_SIGQUEUE_MAX","_SC_SINGLE_PROCESS","_SC_SPAWN","_SC_SPIN_LOCKS","_SC_SPORADIC_SERVER","_SC_SSIZE_MAX","_SC_SS_REPL_MAX","_SC_STREAMS","_SC_STREAM_MAX","_SC_SYMLOOP_MAX","_SC_SYNCHRONIZED_IO","_SC_SYSTEM_DATABASE","_SC_SYSTEM_DATABASE_R","_SC_THREADS","_SC_THREAD_ATTR_STACKADDR","_SC_THREAD_ATTR_STACKSIZE","_SC_THREAD_CPUTIME","_SC_THREAD_DESTRUCTOR_ITERATIONS","_SC_THREAD_KEYS_MAX","_SC_THREAD_PRIORITY_SCHEDULING","_SC_THREAD_PRIO_INHERIT","_SC_THREAD_PRIO_PROTECT","_SC_THREAD_PROCESS_SHARED","_SC_THREAD_ROBUST_PRIO_INHERIT","_SC_THREAD_ROBUST_PRIO_PROTECT","_SC_THREAD_SAFE_FUNCTIONS","_SC_THREAD_SPORADIC_SERVER","_SC_THREAD_STACK_MIN","_SC_THREAD_THREADS_MAX","_SC_TIMEOUTS","_SC_TIMERS","_SC_TIMER_MAX","_SC_TRACE","_SC_TRACE_EVENT_FILTER","_SC_TRACE_EVENT_NAME_MAX","_SC_TRACE_INHERIT","_SC_TRACE_LOG","_SC_TRACE_NAME_MAX","_SC_TRACE_SYS_MAX","_SC_TRACE_USER_EVENT_MAX","_SC_TTY_NAME_MAX","_SC_TYPED_MEMORY_OBJECTS","_SC_TZNAME_MAX","_SC_T_IOV_MAX","_SC_UCHAR_MAX","_SC_UINT_MAX","_SC_UIO_MAXIOV","_SC_ULONG_MAX","_SC_USER_GROUPS","_SC_USER_GROUPS_R","_SC_USHRT_MAX","_SC_V6_ILP32_OFF32","_SC_V6_ILP32_OFFBIG","_SC_V6_LP64_OFF64","_SC_V6_LPBIG_OFFBIG","_SC_V7_ILP32_OFF32","_SC_V7_ILP32_OFFBIG","_SC_V7_LP64_OFF64","_SC_V7_LPBIG_OFFBIG","_SC_VERSION","_SC_WORD_BIT","_SC_XBS5_ILP32_OFF32","_SC_XBS5_ILP32_OFFBIG","_SC_XBS5_LP64_OFF64","_SC_XBS5_LPBIG_OFFBIG","_SC_XOPEN_CRYPT","_SC_XOPEN_ENH_I18N","_SC_XOPEN_LEGACY","_SC_XOPEN_REALTIME","_SC_XOPEN_REALTIME_THREADS","_SC_XOPEN_SHM","_SC_XOPEN_STREAMS","_SC_XOPEN_UNIX","_SC_XOPEN_VERSION","_SC_XOPEN_XCU_VERSION","_SC_XOPEN_XPG2","_SC_XOPEN_XPG3","_SC_XOPEN_XPG4","__NFT_REG_MAX","__SIZEOF_PTHREAD_BARRIERATTR_T","__SIZEOF_PTHREAD_BARRIER_T","__SIZEOF_PTHREAD_CONDATTR_T","__SIZEOF_PTHREAD_COND_T","__SIZEOF_PTHREAD_MUTEXATTR_T","__SIZEOF_PTHREAD_MUTEX_T","__SIZEOF_PTHREAD_RWLOCKATTR_T","__SIZEOF_PTHREAD_RWLOCK_T","__UT_HOSTSIZE","__UT_LINESIZE","__UT_NAMESIZE","__WALL","__WCLONE","__WNOTHREAD","__c_anonymous_ifr_ifru","__c_anonymous_ifru_map","__c_anonymous_ptrace_syscall_info_data","__c_anonymous_ptrace_syscall_info_entry","__c_anonymous_ptrace_syscall_info_exit","__c_anonymous_ptrace_syscall_info_seccomp","__c_anonymous_sockaddr_can_can_addr","__c_anonymous_sockaddr_can_j1939","__c_anonymous_sockaddr_can_tp","__errno_location","__exit_status","__fsword_t","__glibc_reserved1","__glibc_reserved2","__glibc_reserved3","__glibc_reserved4","__key","__priority_which_t","__rlimit_resource_t","__s16","__s32","__s64","__seq","__statx_timestamp_pad1","__syscall_ulong_t","__timeval","__u16","__u32","__u64","__u8","__unused1","__unused10","__unused11","__unused2","__unused3","__unused4","__unused5","__unused6","__unused7","__unused8","__unused9","_exit","_f","_libc_fpstate","_libc_fpxreg","_libc_xmmreg","_st","_xmm","abort","abs","absflat","absfuzz","absinfo","absmax","absmin","accept","accept4","access","acct","actime","addmntent","addr","addr","addr_mask","addrinfo","adjtime","adjtimex","af","af_alg_iv","ai_addr","ai_addrlen","ai_canonname","ai_family","ai_flags","ai_next","ai_protocol","ai_socktype","aio_buf","aio_cancel","aio_error","aio_fildes","aio_fsync","aio_lio_opcode","aio_nbytes","aio_offset","aio_read","aio_reqprio","aio_return","aio_sigevent","aio_suspend","aio_write","aiocb","alarm","ar_hln","ar_hrd","ar_op","ar_pln","ar_pro","arch","arch","arena","arena","args","args","args","arp_dev","arp_flags","arp_flags","arp_ha","arp_ha","arp_netmask","arp_netmask","arp_pa","arp_pa","arpd_request","arphdr","arpreq","arpreq_old","asctime_r","atexit","atof","atoi","atol","atoll","attack_length","attack_level","auth_keynumber","backtrace","base_addr","bind","blkcnt64_t","blkcnt_t","blksize_t","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","brk","bsearch","bufferram","bustype","button","c_cc","c_cc","c_cflag","c_cflag","c_char","c_double","c_float","c_iflag","c_iflag","c_int","c_ispeed","c_ispeed","c_lflag","c_lflag","c_line","c_line","c_long","c_longlong","c_oflag","c_oflag","c_ospeed","c_ospeed","c_schar","c_short","c_uchar","c_uint","c_ulong","c_ulonglong","c_ushort","c_void","calcnt","calloc","can_addr","can_dlc","can_err_mask_t","can_family","can_filter","can_frame","can_id","can_id","can_id","can_ifindex","can_mask","canfd_frame","canid_t","canxl_frame","cc_t","center","cfgetispeed","cfgetospeed","cfmakeraw","cfsetispeed","cfsetospeed","cfsetspeed","cgid","cgroup","ch_addralign","ch_addralign","ch_reserved","ch_size","ch_size","ch_type","ch_type","chdir","child_tid","chmod","chown","chroot","clearenv","clearerr","clock_adjtime","clock_getcpuclockid","clock_getres","clock_gettime","clock_nanosleep","clock_settime","clock_t","clockid","clockid_t","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_args","close","closedir","closelog","cmd","cmsg_len","cmsg_level","cmsg_type","cmsghdr","code","code","code","codes_ptr","codes_size","connect","constant","cookie","copy_file_range","cpu_set_t","creat","creat64","cs","ctermid","ctime_r","cuid","currency_symbol","custom_data","custom_len","cwd","cwd","d_ino","d_ino","d_name","d_name","d_off","d_off","d_reclen","d_reclen","d_type","d_type","daemon","data","data","data","deadband","decimal_point","delay","dest_offset","dev","dev_t","difftime","direction","dirent","dirent64","dirfd","dirname","dl_iterate_phdr","dl_phdr_info","dladdr","dladdr1","dlclose","dlerror","dli_fbase","dli_fname","dli_saddr","dli_sname","dlinfo","dlmopen","dlopen","dlpi_addr","dlpi_adds","dlpi_name","dlpi_phdr","dlpi_phnum","dlpi_subs","dlpi_tls_data","dlpi_tls_modid","dlsym","dma","domainname","dqb_bhardlimit","dqb_bsoftlimit","dqb_btime","dqb_curinodes","dqb_curspace","dqb_ihardlimit","dqb_isoftlimit","dqb_itime","dqb_valid","dqblk","drand48","ds","dup","dup2","dup3","duplocale","e_ehsize","e_ehsize","e_entry","e_entry","e_exit","e_flags","e_flags","e_ident","e_ident","e_machine","e_machine","e_phentsize","e_phentsize","e_phnum","e_phnum","e_phoff","e_phoff","e_shentsize","e_shentsize","e_shnum","e_shnum","e_shoff","e_shoff","e_shstrndx","e_shstrndx","e_termination","e_type","e_type","e_version","e_version","eaccess","ee_code","ee_data","ee_errno","ee_info","ee_origin","ee_pad","ee_type","effect","effect_id","eflags","element","end_level","endgrent","endmntent","endpwent","endservent","endspent","endutxent","entry","envelope","envelope","envelope","epoll_create","epoll_create1","epoll_ctl","epoll_event","epoll_pwait","epoll_wait","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","erand48","errcnt","error","es","esterror","esterror","euidaccess","event_len","eventfd","events","events","execl","execle","execlp","execv","execve","execvp","execvpe","exit","exit","exit_signal","explicit_bzero","exponent","f_bavail","f_bavail","f_bavail","f_bavail","f_bfree","f_bfree","f_bfree","f_bfree","f_blocks","f_blocks","f_blocks","f_blocks","f_bsize","f_bsize","f_bsize","f_bsize","f_favail","f_favail","f_ffree","f_ffree","f_ffree","f_ffree","f_files","f_files","f_files","f_files","f_flag","f_flag","f_flags","f_frsize","f_frsize","f_frsize","f_frsize","f_fsid","f_fsid","f_fsid","f_fsid","f_namelen","f_namelen","f_namemax","f_namemax","f_spare","f_type","f_type","faccessat","fade_length","fade_level","fallocate","fallocate64","fanotify_event_metadata","fanotify_init","fanotify_mark","fanotify_response","fchdir","fchmod","fchmodat","fchown","fchownat","fclose","fcntl","fd","fd","fd","fd_set","fdatasync","fdopen","fdopendir","feof","ferror","fexecve","ff_condition_effect","ff_constant_effect","ff_effect","ff_effects_max","ff_effects_max","ff_envelope","ff_periodic_effect","ff_ramp_effect","ff_replay","ff_rumble_effect","ff_trigger","fflush","fgetc","fgetgrent_r","fgetpos","fgetpos64","fgetpwent_r","fgets","fgetspent_r","fgetxattr","file_clone_range","fileno","filter","flag","flags","flags","flags","flags","flags","flags","flags","flags","flags","flat","flistxattr","flock","flock","flock64","fmemopen","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fop","fop","fopen","fopen64","fordblks","fordblks","fork","forkpty","fpathconf","fpos64_t","fpos_t","fpregs","fprintf","fputc","fputs","frac_digits","fread","fread_unlocked","free","freeaddrinfo","freehigh","freeifaddrs","freelocale","freeram","freeswap","fremovexattr","freopen","freopen64","freq","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","fs","fs_base","fsblkcnt_t","fscanf","fseek","fseeko","fseeko64","fsetpos","fsetpos64","fsetxattr","fsfilcnt_t","fsid_t","fsmblks","fsmblks","fstat","fstat64","fstatat","fstatat64","fstatfs","fstatfs64","fstatvfs","fstatvfs64","fsync","ftell","ftello","ftello64","ftok","ftruncate","ftruncate64","ftw","ftw","futimens","futimes","fuzz","fwrite","gai_strerror","genlmsghdr","getaddrinfo","getauxval","getchar","getchar_unlocked","getcontext","getcwd","getdomainname","getdtablesize","getegid","getentropy","getenv","geteuid","getgid","getgrent","getgrent_r","getgrgid","getgrgid_r","getgrnam","getgrnam_r","getgrouplist","getgroups","gethostid","gethostname","getifaddrs","getline","getloadavg","getlogin","getmntent","getmntent_r","getnameinfo","getopt","getopt_long","getpeername","getpgid","getpgrp","getpid","getppid","getpriority","getprotobyname","getprotobynumber","getpt","getpwent","getpwent_r","getpwnam","getpwnam_r","getpwuid","getpwuid_r","getrandom","getresgid","getresuid","getrlimit","getrlimit64","getrusage","getservbyname","getservbyport","getservent","getsid","getsockname","getsockopt","getspent","getspent_r","getspnam","getspnam_r","gettid","gettimeofday","getuid","getutxent","getutxid","getutxline","getxattr","gid","gid","gid_t","gl_flags","gl_flags","gl_offs","gl_offs","gl_pathc","gl_pathc","gl_pathv","gl_pathv","glob","glob64","glob64_t","glob_t","globfree","globfree64","gmtime","gmtime_r","gnu_basename","gnu_get_libc_release","gnu_get_libc_version","gr_gid","gr_mem","gr_name","gr_passwd","grantpt","greg_t","gregs","group","group","grouping","gs","gs_base","h_addr_list","h_addrtype","h_aliases","h_length","h_name","ha","has_arg","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hasmntopt","hblkhd","hblkhd","hblks","hblks","hostent","hstrerror","hwtstamp_config","i387","iconv","iconv_close","iconv_open","iconv_t","id","id","id","id_t","idtype_t","if_freenameindex","if_index","if_indextoname","if_name","if_nameindex","if_nameindex","if_nametoindex","ifa_addr","ifa_data","ifa_flags","ifa_ifu","ifa_name","ifa_netmask","ifa_next","ifaddrs","ifr6_addr","ifr6_ifindex","ifr6_prefixlen","ifr_ifru","ifr_name","ifreq","ifru_addr","ifru_broadaddr","ifru_data","ifru_dstaddr","ifru_flags","ifru_hwaddr","ifru_ifindex","ifru_map","ifru_metric","ifru_mtu","ifru_netmask","ifru_newname","ifru_slave","imr_address","imr_ifindex","imr_interface","imr_interface","imr_multiaddr","imr_multiaddr","imr_multiaddr","imr_sourceaddr","in6_addr","in6_ifreq","in6_pktinfo","in6_rtmsg","in_addr","in_addr_t","in_pktinfo","in_port_t","index","initgroups","ino64_t","ino_t","inotify_add_watch","inotify_event","inotify_init","inotify_init1","inotify_rm_watch","input_absinfo","input_event","input_id","input_keymap_entry","input_mask","instruction_pointer","instruction_pointer","int16_t","int32_t","int64_t","int8_t","int_curr_symbol","int_frac_digits","int_n_cs_precedes","int_n_sep_by_space","int_n_sign_posn","int_p_cs_precedes","int_p_sep_by_space","int_p_sign_posn","interval","intmax_t","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","intptr_t","ioctl","ioperm","iopl","iov_base","iov_len","iovec","ip","ip_mreq","ip_mreq_source","ip_mreqn","ipc_perm","ipi6_addr","ipi6_ifindex","ipi_addr","ipi_ifindex","ipi_spec_dst","ipv6_mreq","ipv6mr_interface","ipv6mr_multiaddr","irq","is_error","isalnum","isalpha","isatty","isblank","iscntrl","isdigit","isgraph","islower","isprint","ispunct","isspace","isupper","isxdigit","it_interval","it_interval","it_value","it_value","itimerspec","itimerval","iv","ivlen","j1939","j1939_filter","jf","jitcnt","jitter","jrand48","jt","k","keepcost","keepcost","key_t","keycode","kill","killpg","l_len","l_len","l_linger","l_onoff","l_pid","l_pid","l_start","l_start","l_type","l_type","l_whence","l_whence","labs","lchown","lcong48","lconv","left_coeff","left_saturation","len","len","len","len","len","length","level","lgetxattr","linger","link","linkat","lio_listio","listen","listxattr","llistxattr","loads","locale_t","localeconv","localtime","localtime_r","lockf","loff_t","login_tty","lrand48","lremovexattr","lseek","lseek64","lsetxattr","lstat","lstat64","lutimes","machine","madvise","magic","magnitude","major","makecontext","makedev","mallinfo","mallinfo","mallinfo2","mallinfo2","malloc","malloc_info","malloc_trim","malloc_usable_size","mallopt","mask","mask","max_align_t","maxerror","maxerror","maximum","mcontext_t","mem_end","mem_start","mem_unit","memalign","memchr","memcmp","memcpy","memfd_create","memmem","memmove","memrchr","memset","metadata_len","mincore","minimum","minor","mkdir","mkdirat","mkdtemp","mkfifo","mkfifoat","mknod","mknodat","mkostemp","mkostemps","mkstemp","mkstemps","mktime","mlock","mlock2","mlockall","mmap","mmap64","mmsghdr","mnt_dir","mnt_freq","mnt_fsname","mnt_opts","mnt_passno","mnt_type","mntent","mode","mode","mode_t","modes","modtime","mon_decimal_point","mon_grouping","mon_thousands_sep","mount","mprotect","mq_attr","mq_close","mq_curmsgs","mq_flags","mq_getattr","mq_maxmsg","mq_msgsize","mq_open","mq_receive","mq_send","mq_setattr","mq_timedreceive","mq_timedsend","mq_unlink","mqd_t","mr_address","mr_alen","mr_ifindex","mr_type","mrand48","mremap","msg","msg_control","msg_controllen","msg_ctime","msg_flags","msg_hdr","msg_iov","msg_iovlen","msg_len","msg_lrpid","msg_lspid","msg_name","msg_namelen","msg_perm","msg_qbytes","msg_qnum","msg_rtime","msg_stime","msgctl","msgget","msghdr","msginfo","msglen_t","msgmap","msgmax","msgmnb","msgmni","msgpool","msgqnum_t","msgrcv","msgseg","msgsnd","msgssz","msgtql","msqid_ds","msync","munlock","munlockall","munmap","mxcr_mask","mxcr_mask","mxcsr","mxcsr","n_cs_precedes","n_sep_by_space","n_sign_posn","name","name","name","name","name","name_mask","name_t","nanosleep","negative_sign","newlocale","nfds_t","nice","nl_family","nl_groups","nl_item","nl_langinfo","nl_langinfo_l","nl_mmap_hdr","nl_mmap_req","nl_pid","nl_pktinfo","nla_len","nla_type","nlattr","nlink_t","nlmsg_flags","nlmsg_len","nlmsg_pid","nlmsg_seq","nlmsg_type","nlmsgerr","nlmsghdr","nm_block_nr","nm_block_size","nm_frame_nr","nm_frame_size","nm_gid","nm_group","nm_len","nm_pid","nm_status","nm_uid","nodename","nr","nr","nr","nr","nrand48","ntp_adjtime","ntp_gettime","ntptimeval","nxt_assoc_id","nxt_flags","nxt_length","nxt_ppid","nxt_sid","off","off64_t","off_t","offset","offset","old","op","open","open64","open_how","open_memstream","open_wmemstream","openat","openat64","opendir","openlog","openpty","option","ordblks","ordblks","orig_rax","p_aliases","p_align","p_align","p_cs_precedes","p_filesz","p_filesz","p_flags","p_flags","p_memsz","p_memsz","p_name","p_offset","p_offset","p_paddr","p_paddr","p_proto","p_sep_by_space","p_sign_posn","p_type","p_type","p_vaddr","p_vaddr","packet_mreq","pad","pad","pad","parent_tid","passwd","pathconf","pause","pclose","period","perror","personality","pgn","pgn","pgn_mask","pgn_t","phase","pid","pid","pid_t","pidfd","pipe","pipe2","poll","pollfd","popen","port","positive_sign","posix_basename","posix_fadvise","posix_fadvise64","posix_fallocate","posix_fallocate64","posix_madvise","posix_memalign","posix_openpt","posix_spawn","posix_spawn_file_actions_addchdir_np","posix_spawn_file_actions_addclose","posix_spawn_file_actions_addclosefrom_np","posix_spawn_file_actions_adddup2","posix_spawn_file_actions_addfchdir_np","posix_spawn_file_actions_addopen","posix_spawn_file_actions_addtcsetpgrp_np","posix_spawn_file_actions_destroy","posix_spawn_file_actions_init","posix_spawn_file_actions_t","posix_spawnattr_destroy","posix_spawnattr_getflags","posix_spawnattr_getpgroup","posix_spawnattr_getschedparam","posix_spawnattr_getschedpolicy","posix_spawnattr_getsigdefault","posix_spawnattr_getsigmask","posix_spawnattr_init","posix_spawnattr_setflags","posix_spawnattr_setpgroup","posix_spawnattr_setschedparam","posix_spawnattr_setschedpolicy","posix_spawnattr_setsigdefault","posix_spawnattr_setsigmask","posix_spawnattr_t","posix_spawnp","ppoll","ppsfreq","pr_policy","pr_value","prctl","pread","pread64","preadv","preadv2","preadv64","preadv64v2","precision","printf","prio","priority_t","prlimit","prlimit64","process_vm_readv","process_vm_writev","procs","product","protoent","pselect","pthread_atfork","pthread_attr_destroy","pthread_attr_getaffinity_np","pthread_attr_getguardsize","pthread_attr_getstack","pthread_attr_init","pthread_attr_setaffinity_np","pthread_attr_setdetachstate","pthread_attr_setstacksize","pthread_attr_t","pthread_barrier_destroy","pthread_barrier_init","pthread_barrier_t","pthread_barrier_wait","pthread_barrierattr_destroy","pthread_barrierattr_getpshared","pthread_barrierattr_init","pthread_barrierattr_setpshared","pthread_barrierattr_t","pthread_cancel","pthread_cond_broadcast","pthread_cond_destroy","pthread_cond_init","pthread_cond_signal","pthread_cond_t","pthread_cond_timedwait","pthread_cond_wait","pthread_condattr_destroy","pthread_condattr_getclock","pthread_condattr_getpshared","pthread_condattr_init","pthread_condattr_setclock","pthread_condattr_setpshared","pthread_condattr_t","pthread_create","pthread_detach","pthread_exit","pthread_getaffinity_np","pthread_getattr_np","pthread_getcpuclockid","pthread_getname_np","pthread_getschedparam","pthread_getspecific","pthread_join","pthread_key_create","pthread_key_delete","pthread_key_t","pthread_kill","pthread_mutex_consistent","pthread_mutex_destroy","pthread_mutex_init","pthread_mutex_lock","pthread_mutex_t","pthread_mutex_timedlock","pthread_mutex_trylock","pthread_mutex_unlock","pthread_mutexattr_destroy","pthread_mutexattr_getprotocol","pthread_mutexattr_getpshared","pthread_mutexattr_getrobust","pthread_mutexattr_init","pthread_mutexattr_setprotocol","pthread_mutexattr_setpshared","pthread_mutexattr_setrobust","pthread_mutexattr_settype","pthread_mutexattr_t","pthread_rwlock_destroy","pthread_rwlock_init","pthread_rwlock_rdlock","pthread_rwlock_t","pthread_rwlock_tryrdlock","pthread_rwlock_trywrlock","pthread_rwlock_unlock","pthread_rwlock_wrlock","pthread_rwlockattr_destroy","pthread_rwlockattr_getkind_np","pthread_rwlockattr_getpshared","pthread_rwlockattr_init","pthread_rwlockattr_setkind_np","pthread_rwlockattr_setpshared","pthread_rwlockattr_t","pthread_self","pthread_setaffinity_np","pthread_setname_np","pthread_setschedparam","pthread_setschedprio","pthread_setspecific","pthread_sigmask","pthread_sigqueue","pthread_spin_destroy","pthread_spin_init","pthread_spin_lock","pthread_spin_trylock","pthread_spin_unlock","pthread_spinlock_t","pthread_t","ptrace","ptrace_peeksiginfo_args","ptrace_rseq_configuration","ptrace_syscall_info","ptrdiff_t","ptsname","ptsname_r","putchar","putchar_unlocked","putenv","putgrent","putpwent","puts","pututxline","pw_dir","pw_gecos","pw_gid","pw_name","pw_passwd","pw_shell","pw_uid","pwrite","pwrite64","pwritev","pwritev2","pwritev64","pwritev64v2","qsort","qsort_r","quotactl","r10","r11","r12","r13","r14","r15","r8","r9","raise","rand","rax","rbp","rbx","rcv_assoc_id","rcv_context","rcv_cumtsn","rcv_flags","rcv_ppid","rcv_sid","rcv_ssn","rcv_tsn","rcx","rdi","rdp","rdp","rdx","read","readahead","readdir","readdir64","readdir64_r","readdir_r","readlink","readlinkat","readv","realloc","reallocarray","realpath","reboot","recv","recvfrom","recvmmsg","recvmsg","regcomp","regerror","regex_t","regexec","regfree","regmatch_t","regoff_t","regs","release","remap_file_pages","remove","removexattr","rename","renameat","renameat2","replay","req","request_id","request_id","res_init","reserved","reserved","resolution","resolve","response","ret_data","retval","retval","revents","rewind","rewinddir","right_coeff","right_saturation","rip","rip","rip","rlim64_t","rlim_cur","rlim_cur","rlim_max","rlim_max","rlim_t","rlimit","rlimit64","rm_eo","rm_so","rmdir","rseq_abi_pointer","rseq_abi_size","rsi","rsp","rt_class","rt_dev","rt_dst","rt_flags","rt_gateway","rt_genmask","rt_irtt","rt_metric","rt_mtu","rt_pad1","rt_pad2","rt_pad3","rt_pad4","rt_tos","rt_window","rtentry","ru_idrss","ru_inblock","ru_isrss","ru_ixrss","ru_majflt","ru_maxrss","ru_minflt","ru_msgrcv","ru_msgsnd","ru_nivcsw","ru_nsignals","ru_nswap","ru_nvcsw","ru_oublock","ru_stime","ru_utime","rusage","rx_filter","rx_id","s6_addr","s_addr","s_aliases","s_name","s_port","s_proto","sa_data","sa_family","sa_family_t","sa_flags","sa_mask","sa_restorer","sa_sigaction","salg_family","salg_feat","salg_mask","salg_name","salg_type","sbrk","scancode","scanf","sched_get_priority_max","sched_get_priority_min","sched_getaffinity","sched_getcpu","sched_getparam","sched_getscheduler","sched_param","sched_priority","sched_rr_get_interval","sched_setaffinity","sched_setparam","sched_setscheduler","sched_yield","sctp_assoc_t","sctp_authinfo","sctp_initmsg","sctp_nxtinfo","sctp_prinfo","sctp_rcvinfo","sctp_sndinfo","sctp_sndrcvinfo","sdt","seccomp","seccomp_data","seccomp_data","seccomp_notif","seccomp_notif_resp","seccomp_notif_sizes","seed48","seekdir","select","sem_close","sem_ctime","sem_destroy","sem_flg","sem_getvalue","sem_init","sem_nsems","sem_num","sem_op","sem_open","sem_otime","sem_perm","sem_post","sem_t","sem_timedwait","sem_trywait","sem_unlink","sem_wait","semaem","sembuf","semctl","semget","semid_ds","seminfo","semmap","semmni","semmns","semmnu","semmsl","semop","semopm","semume","semusz","semvmx","send","sendfile","sendfile64","sendmmsg","sendmsg","sendto","servent","set_tid","set_tid_size","setbuf","setcontext","setdomainname","setegid","setenv","seteuid","setfsgid","setfsuid","setgid","setgrent","setgroups","sethostid","sethostname","setlocale","setlogmask","setmntent","setns","setpgid","setpriority","setpwent","setregid","setresgid","setresuid","setreuid","setrlimit","setrlimit64","setservent","setsid","setsockopt","setspent","settimeofday","setuid","setutxent","setvbuf","setxattr","sgetspent_r","sh_addr","sh_addr","sh_addralign","sh_addralign","sh_entsize","sh_entsize","sh_flags","sh_flags","sh_info","sh_info","sh_link","sh_link","sh_name","sh_name","sh_offset","sh_offset","sh_size","sh_size","sh_type","sh_type","sharedram","shift","shm_atime","shm_cpid","shm_ctime","shm_dtime","shm_lpid","shm_nattch","shm_open","shm_perm","shm_segsz","shm_unlink","shmat","shmatt_t","shmctl","shmdt","shmget","shmid_ds","shutdown","si_addr","si_code","si_errno","si_pid","si_signo","si_status","si_stime","si_uid","si_utime","si_value","sigaction","sigaction","sigaddset","sigaltstack","sigdelset","sigemptyset","sigev_notify","sigev_notify_thread_id","sigev_signo","sigev_value","sigevent","sigfillset","sighandler_t","siginfo_t","sigismember","signal","signal","signalfd","signalfd_siginfo","signature","significand","sigpending","sigprocmask","sigset_t","sigsuspend","sigtimedwait","sigval","sigwait","sigwaitinfo","sin6_addr","sin6_family","sin6_flowinfo","sin6_port","sin6_scope_id","sin_addr","sin_family","sin_port","sin_zero","sinfo_assoc_id","sinfo_context","sinfo_cumtsn","sinfo_flags","sinfo_ppid","sinfo_ssn","sinfo_stream","sinfo_timetolive","sinfo_tsn","sinit_max_attempts","sinit_max_init_timeo","sinit_max_instreams","sinit_num_ostreams","sival_ptr","size_t","sleep","sll_addr","sll_family","sll_halen","sll_hatype","sll_ifindex","sll_pkttype","sll_protocol","smblks","smblks","snd_assoc_id","snd_context","snd_flags","snd_ppid","snd_sid","snprintf","sock_extended_err","sock_filter","sock_fprog","sock_txtime","sockaddr","sockaddr_alg","sockaddr_can","sockaddr_in","sockaddr_in6","sockaddr_ll","sockaddr_nl","sockaddr_storage","sockaddr_un","sockaddr_vm","socket","socketpair","socklen_t","sp_expire","sp_flag","sp_inact","sp_lstchg","sp_max","sp_min","sp_namp","sp_pwdp","sp_warn","speed_t","splice","sprintf","spwd","srand","srand48","src_fd","src_length","src_offset","ss","ss_family","ss_flags","ss_size","ss_sp","sscanf","ssi_addr","ssi_addr_lsb","ssi_arch","ssi_band","ssi_call_addr","ssi_code","ssi_errno","ssi_fd","ssi_int","ssi_overrun","ssi_pid","ssi_ptr","ssi_signo","ssi_status","ssi_stime","ssi_syscall","ssi_tid","ssi_trapno","ssi_uid","ssi_utime","ssize_t","st_atime","st_atime","st_atime_nsec","st_atime_nsec","st_blksize","st_blksize","st_blocks","st_blocks","st_ctime","st_ctime","st_ctime_nsec","st_ctime_nsec","st_dev","st_dev","st_gid","st_gid","st_info","st_info","st_ino","st_ino","st_mode","st_mode","st_mtime","st_mtime","st_mtime_nsec","st_mtime_nsec","st_name","st_name","st_nlink","st_nlink","st_other","st_other","st_rdev","st_rdev","st_shndx","st_shndx","st_size","st_size","st_size","st_size","st_space","st_uid","st_uid","st_value","st_value","stabil","stack","stack_pointer","stack_size","stack_t","stamp","start_code","start_level","start_stack","stat","stat","stat64","stat64","statfs","statfs","statfs64","statfs64","status","statvfs","statvfs","statvfs64","statvfs64","statx","statx","statx_timestamp","stbcnt","stpcpy","stpncpy","strcasecmp","strcasestr","strcat","strchr","strchrnul","strcmp","strcoll","strcpy","strcspn","strdup","strerror","strerror_r","strftime","strlen","strncasecmp","strncat","strncmp","strncpy","strndup","strnlen","strong_magnitude","strpbrk","strptime","strrchr","strsignal","strspn","strstr","strtod","strtof","strtok","strtok_r","strtol","strtoll","strtoul","strtoull","strxfrm","stx_atime","stx_attributes","stx_attributes_mask","stx_blksize","stx_blocks","stx_btime","stx_ctime","stx_dev_major","stx_dev_minor","stx_dio_mem_align","stx_dio_offset_align","stx_gid","stx_ino","stx_mask","stx_mnt_id","stx_mode","stx_mtime","stx_nlink","stx_rdev_major","stx_rdev_minor","stx_size","stx_uid","sun_family","sun_path","suseconds_t","sval","svm_cid","svm_family","svm_port","svm_reserved1","svm_zero","swapcontext","swapoff","swapon","swd","swd","symlink","symlinkat","sync","sync_file_range","syncfs","syscall","sysconf","sysctl","sysinfo","sysinfo","syslog","sysname","system","tai","tai","tcdrain","tcflag_t","tcflow","tcflush","tcgetattr","tcgetpgrp","tcgetsid","tcsendbreak","tcsetattr","tcsetpgrp","tee","telldir","termios","termios2","thousands_sep","tick","time","time","time","time","time_t","timegm","timer_create","timer_delete","timer_getoverrun","timer_gettime","timer_settime","timer_t","timerfd_create","timerfd_gettime","timerfd_settime","times","timespec","timeval","timex","timezone","tls","tm","tm_gmtoff","tm_hour","tm_isdst","tm_mday","tm_min","tm_mon","tm_sec","tm_wday","tm_yday","tm_year","tm_zone","tmpfile","tmpfile64","tmpnam","tms","tms_cstime","tms_cutime","tms_stime","tms_utime","tolerance","tolower","totalhigh","totalram","totalswap","toupper","tp","trigger","truncate","truncate64","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ttyname","ttyname_r","tv_nsec","tv_nsec","tv_sec","tv_sec","tv_sec","tv_sec","tv_usec","tv_usec","tx_id","tx_type","type_","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u","u","u64","u_ar0","u_comm","u_debugreg","u_dsize","u_fpstate","u_fpvalid","u_ssize","u_tsize","uc_flags","uc_link","uc_mcontext","uc_sigmask","uc_stack","ucontext_t","ucred","uid","uid","uid_t","uinput_abs_setup","uinput_ff_erase","uinput_ff_upload","uinput_setup","uinput_user_dev","uint16_t","uint32_t","uint64_t","uint8_t","uintmax_t","uintptr_t","umask","umount","umount2","uname","ungetc","unlink","unlinkat","unlockpt","unsetenv","unshare","uordblks","uordblks","updated","uptime","useconds_t","uselocale","user","user_fpregs_struct","user_regs_struct","usleep","usmblks","usmblks","ut_addr_v6","ut_exit","ut_host","ut_id","ut_line","ut_pid","ut_session","ut_tv","ut_type","ut_user","utimbuf","utime","utimensat","utimes","utmpname","utmpx","utmpxname","utsname","val","value","value","vendor","vers","version","version","version","vfork","vhangup","vmsplice","wait","wait4","waitid","waitpid","waveform","wchar_t","wcslen","wcstombs","wd","weak_magnitude","winsize","wmemchr","write","writev","ws_col","ws_row","ws_xpixel","ws_ypixel","xmm_space"],"q":[[0,"libc"]],"dmaximum number of services provided on the same listening …uth Header","","IP Payload Comp. Protocol","DCCP","IP6 destination option","exterior gateway protocol","encapsulation header","IP6 Encap Sec. Payload","Ethernet-within-IPv6 encapsulation.","IP6 fragmentation header","General Routing Encap.","Hop-by-hop option header","","","xns idp","group mgmt protocol","","for compatibility","","","","","Multipath TCP","","IP6 no next header","Protocol indep. multicast","pup","raw IP packet","IP6 routing header","resource reservation","SCTP","","tp-4 w/ class negotiationhe <code>PartialEq</code>, <code>Eq</code> and <code>Hash</code> implementations of thisquivalent to C’s <code>void</code> type when used as a pointereturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","GNU version of <code>basename(3)</code>, defined in <code>string.h</codeinterface name, e.g. “en0”","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeversion of <code>basename(3)</code>, defined in <code>libgen.h</codehe 64-bit libc on Solaris and illumos only has readdir_r. …if":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2,3,3],4],0,0,0,0,0,0,0,0,0,0,[2,2],0,0,0,0,0,0,0,0,[2,2],0,[[1,2],4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[5,6],[7,5],[8,8],[[7,5],5],[8,8],0,0,0,[9,10],[[11,12]],[12,9],[[11,12],9],[[12,12],13],[[11,12],13],[[11,12]],0,[12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[9,14]],[[9,14],13],[[9,14]],0,[14],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[9,9,9,9],9],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[15,15],0,0,[15,15],0,0,0,0,0,0,0,0,[15,15],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[15,15],0,0,0,0,0,0,0,[15,15],0,0,0,0,0,0,0,0,0,0,0,[15,15],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[16,16,16],16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[9,9],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[9,9],9],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[16,16],0,0,0,0,0,[16,13],0,0,0,0,0,0,0,0,0,0,[15,15],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[9,9],[9,9],[9,13],[9,13],0,0,0,0,0,0,0,[[9,9]],[9,13],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],9],[[],9],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[17,18],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[9,13],0,[9,9],0,[9,13],[9,13],[9,13],[9,13],0,0,0,[9,9],[9,9],0,[[9,9],9],0,[9,9],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[19,19],[20,20],[21,21],[22,22],[23,23],[24,24],[25,25],[26,26],[27,27],[28,28],[29,29],[30,30],[31,31],[32,32],[33,33],[34,34],[35,35],[36,36],[37,37],[38,38],[39,39],[40,40],[41,41],[42,42],[43,43],[18,18],[44,44],[45,45],[46,46],[47,47],[14,14],[48,48],[49,49],[50,50],[51,51],[52,52],[53,53],[54,54],[55,55],[56,56],[57,57],[58,58],[59,59],[60,60],[61,61],[62,62],[63,63],[64,64],[65,65],[66,66],[67,67],[68,68],[69,69],[70,70],[71,71],[72,72],[12,12],[73,73],[74,74],[75,75],[76,76],[77,77],[78,78],[79,79],[80,80],[81,81],[82,82],[83,83],[84,84],[85,85],[86,86],[87,87],[88,88],[89,89],[90,90],[91,91],[92,92],[93,93],[94,94],[95,95],[96,96],[97,97],[98,98],[99,99],[100,100],[101,101],[102,102],[103,103],[104,104],[105,105],[106,106],[107,107],[108,108],[109,109],[110,110],[111,111],[112,112],[17,17],[113,113],[114,114],[115,115],[116,116],[4,4],[117,117],[118,118],[119,119],[120,120],[121,121],[122,122],[123,123],[124,124],[125,125],[126,126],[127,127],[128,128],[129,129],[130,130],[131,131],[132,132],[133,133],[134,134],[135,135],[136,136],[137,137],[138,138],[139,139],[140,140],[141,141],[142,142],[143,143],[144,144],[145,145],[146,146],[147,147],[148,148],[149,149],[150,150],[151,151],[152,152],[153,153],[7,7],[5,5],[154,154],[155,155],[156,156],[157,157],[158,158],[159,159],[160,160],[161,161],[162,162],[163,163],[164,164],[165,165],[166,166],[167,167],[168,168],[169,169],[170,170],[171,171],[172,172],[173,173],[174,174],[175,175],[176,176],[177,177],[178,178],[179,179],[180,180],[181,181],[182,182],[183,183],[184,184],[185,185],[186,186],[187,187],[188,188],[189,189],[190,190],[191,191],[192,192],[193,193],[194,194],[195,195],[196,196],[197,197],[198,198],[199,199],[200,200],[201,201],[202,202],[203,203],[204,204],[205,205],[206,206],[207,207],[208,208],[209,209],[210,210],[211,211],[212,212],[213,213],[214,214],[215,215],[216,216],[217,217],[218,218],[219,219],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[20,20],13],[[21,21],13],[[22,22],13],[[23,23],13],[[24,24],13],[[25,25],13],[[26,26],13],[[27,27],13],[[28,28],13],[[29,29],13],[[30,30],13],[[31,31],13],[[32,32],13],[[33,33],13],[[34,34],13],[[35,35],13],[[36,36],13],[[40,40],13],[[41,41],13],[[42,42],13],[[43,43],13],[[18,18],13],[[44,44],13],[[45,45],13],[[46,46],13],[[47,47],13],[[14,14],13],[[48,48],13],[[49,49],13],[[50,50],13],[[51,51],13],[[52,52],13],[[53,53],13],[[54,54],13],[[55,55],13],[[56,56],13],[[57,57],13],[[58,58],13],[[59,59],13],[[60,60],13],[[61,61],13],[[62,62],13],[[63,63],13],[[65,65],13],[[66,66],13],[[67,67],13],[[68,68],13],[[69,69],13],[[70,70],13],[[71,71],13],[[72,72],13],[[12,12],13],[[73,73],13],[[74,74],13],[[75,75],13],[[76,76],13],[[77,77],13],[[78,78],13],[[79,79],13],[[80,80],13],[[81,81],13],[[82,82],13],[[83,83],13],[[84,84],13],[[85,85],13],[[86,86],13],[[87,87],13],[[88,88],13],[[89,89],13],[[90,90],13],[[91,91],13],[[92,92],13],[[93,93],13],[[94,94],13],[[95,95],13],[[96,96],13],[[97,97],13],[[98,98],13],[[99,99],13],[[100,100],13],[[101,101],13],[[102,102],13],[[103,103],13],[[104,104],13],[[105,105],13],[[106,106],13],[[107,107],13],[[108,108],13],[[109,109],13],[[110,110],13],[[111,111],13],[[112,112],13],[[17,17],13],[[113,113],13],[[114,114],13],[[115,115],13],[[116,116],13],[[4,4],13],[[117,117],13],[[118,118],13],[[119,119],13],[[120,120],13],[[121,121],13],[[122,122],13],[[123,123],13],[[124,124],13],[[125,125],13],[[126,126],13],[[127,127],13],[[128,128],13],[[129,129],13],[[130,130],13],[[131,131],13],[[132,132],13],[[133,133],13],[[134,134],13],[[135,135],13],[[136,136],13],[[137,137],13],[[138,138],13],[[139,139],13],[[140,140],13],[[143,143],13],[[144,144],13],[[148,148],13],[[149,149],13],[[150,150],13],[[151,151],13],[[152,152],13],[[153,153],13],[[7,7],13],[[5,5],13],[[154,154],13],[[155,155],13],[[156,156],13],[[157,157],13],[[158,158],13],[[159,159],13],[[160,160],13],[[161,161],13],[[162,162],13],[[163,163],13],[[164,164],13],[[165,165],13],[[166,166],13],[[167,167],13],[[168,168],13],[[169,169],13],[[170,170],13],[[171,171],13],[[172,172],13],[[173,173],13],[[174,174],13],[[175,175],13],[[176,176],13],[[177,177],13],[[178,178],13],[[179,179],13],[[180,180],13],[[181,181],13],[[182,182],13],[[183,183],13],[[184,184],13],[[185,185],13],[[186,186],13],[[187,187],13],[[188,188],13],[[189,189],13],[[190,190],13],[[191,191],13],[[192,192],13],[[193,193],13],[[194,194],13],[[195,195],13],[[196,196],13],[[197,197],13],[[198,198],13],[[199,199],13],[[200,200],13],[[201,201],13],[[203,203],13],[[204,204],13],[[205,205],13],[[206,206],13],[[207,207],13],[[208,208],13],[[209,209],13],[[210,210],13],[[211,211],13],[[212,212],13],[[213,213],13],[[214,214],13],[[218,218],13],[[219,219],13],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[19,220],221],[[20,220],221],[[21,220],221],[[22,220],221],[[23,220],221],[[24,220],221],[[25,220],221],[[26,220],221],[[27,220],221],[[28,220],221],[[29,220],221],[[30,220],221],[[31,220],221],[[32,220],221],[[33,220],221],[[34,220],221],[[35,220],221],[[36,220],221],[[37,220],221],[[38,220],221],[[39,220],221],[[40,220],221],[[41,220],221],[[42,220],221],[[43,220],221],[[18,220],221],[[44,220],221],[[45,220],221],[[46,220],221],[[47,220],221],[[14,220],221],[[48,220],221],[[49,220],221],[[50,220],221],[[51,220],221],[[52,220],221],[[53,220],221],[[54,220],221],[[55,220],221],[[56,220],221],[[57,220],221],[[58,220],221],[[59,220],221],[[60,220],221],[[61,220],221],[[62,220],221],[[63,220],221],[[222,220],[[224,[223]]]],[[64,220],221],[[65,220],221],[[66,220],221],[[67,220],221],[[68,220],221],[[69,220],221],[[70,220],221],[[71,220],221],[[72,220],221],[[12,220],221],[[73,220],221],[[74,220],221],[[75,220],221],[[76,220],221],[[77,220],221],[[78,220],221],[[79,220],221],[[80,220],221],[[81,220],221],[[82,220],221],[[83,220],221],[[84,220],221],[[85,220],221],[[86,220],221],[[87,220],221],[[88,220],221],[[89,220],221],[[90,220],221],[[91,220],221],[[92,220],221],[[93,220],221],[[94,220],221],[[95,220],221],[[96,220],221],[[97,220],221],[[98,220],221],[[99,220],221],[[100,220],221],[[101,220],221],[[102,220],221],[[103,220],221],[[104,220],221],[[105,220],221],[[106,220],221],[[107,220],221],[[108,220],221],[[109,220],221],[[110,220],221],[[111,220],221],[[112,220],221],[[17,220],221],[[113,220],221],[[114,220],221],[[115,220],221],[[116,220],221],[[4,220],221],[[117,220],221],[[118,220],221],[[119,220],221],[[120,220],221],[[121,220],221],[[122,220],221],[[123,220],221],[[124,220],221],[[125,220],221],[[126,220],221],[[127,220],221],[[128,220],221],[[129,220],221],[[130,220],221],[[131,220],221],[[132,220],221],[[133,220],221],[[134,220],221],[[135,220],221],[[136,220],221],[[137,220],221],[[138,220],221],[[139,220],221],[[140,220],221],[[141,220],221],[[142,220],221],[[143,220],221],[[144,220],221],[[148,220],221],[[149,220],221],[[150,220],221],[[151,220],221],[[152,220],221],[[153,220],221],[[7,220],221],[[5,220],221],[[154,220],221],[[155,220],221],[[156,220],221],[[157,220],221],[[158,220],221],[[159,220],221],[[160,220],221],[[161,220],221],[[162,220],221],[[163,220],221],[[164,220],221],[[165,220],221],[[166,220],221],[[167,220],221],[[168,220],221],[[169,220],221],[[170,220],221],[[171,220],221],[[172,220],221],[[173,220],221],[[174,220],221],[[175,220],221],[[176,220],221],[[177,220],221],[[178,220],221],[[179,220],221],[[180,220],221],[[181,220],221],[[182,220],221],[[183,220],221],[[184,220],221],[[185,220],221],[[186,220],221],[[187,220],221],[[188,220],221],[[189,220],221],[[190,220],221],[[191,220],221],[[192,220],221],[[193,220],221],[[194,220],221],[[195,220],221],[[196,220],221],[[197,220],221],[[198,220],221],[[199,220],221],[[200,220],221],[[201,220],221],[[203,220],221],[[204,220],221],[[205,220],221],[[206,220],221],[[207,220],221],[[208,220],221],[[209,220],221],[[210,220],221],[[211,220],221],[[212,220],221],[[213,220],221],[[214,220],221],[[218,220],221],[[219,220],221],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[20,225]],[[21,225]],[[22,225]],[[23,225]],[[24,225]],[[25,225]],[[26,225]],[[27,225]],[[28,225]],[[29,225]],[[30,225]],[[31,225]],[[32,225]],[[33,225]],[[34,225]],[[35,225]],[[36,225]],[[40,225]],[[41,225]],[[42,225]],[[43,225]],[[18,225]],[[44,225]],[[45,225]],[[46,225]],[[47,225]],[[14,225]],[[48,225]],[[49,225]],[[50,225]],[[51,225]],[[52,225]],[[53,225]],[[54,225]],[[55,225]],[[56,225]],[[57,225]],[[58,225]],[[59,225]],[[60,225]],[[61,225]],[[62,225]],[[63,225]],[[65,225]],[[66,225]],[[67,225]],[[68,225]],[[69,225]],[[70,225]],[[71,225]],[[72,225]],[[12,225]],[[73,225]],[[74,225]],[[75,225]],[[76,225]],[[77,225]],[[78,225]],[[79,225]],[[80,225]],[[81,225]],[[82,225]],[[83,225]],[[84,225]],[[85,225]],[[86,225]],[[87,225]],[[88,225]],[[89,225]],[[90,225]],[[91,225]],[[92,225]],[[93,225]],[[94,225]],[[95,225]],[[96,225]],[[97,225]],[[98,225]],[[99,225]],[[100,225]],[[101,225]],[[102,225]],[[103,225]],[[104,225]],[[105,225]],[[106,225]],[[107,225]],[[108,225]],[[109,225]],[[110,225]],[[111,225]],[[112,225]],[[17,225]],[[113,225]],[[114,225]],[[115,225]],[[116,225]],[[4,225]],[[117,225]],[[118,225]],[[119,225]],[[120,225]],[[121,225]],[[122,225]],[[123,225]],[[124,225]],[[125,225]],[[126,225]],[[127,225]],[[128,225]],[[129,225]],[[130,225]],[[131,225]],[[132,225]],[[133,225]],[[134,225]],[[135,225]],[[136,225]],[[137,225]],[[138,225]],[[139,225]],[[140,225]],[[143,225]],[[144,225]],[[148,225]],[[149,225]],[[150,225]],[[151,225]],[[152,225]],[[153,225]],[[7,225]],[[5,225]],[[154,225]],[[155,225]],[[156,225]],[[157,225]],[[158,225]],[[159,225]],[[160,225]],[[161,225]],[[162,225]],[[163,225]],[[164,225]],[[165,225]],[[166,225]],[[167,225]],[[168,225]],[[169,225]],[[170,225]],[[171,225]],[[172,225]],[[173,225]],[[174,225]],[[175,225]],[[176,225]],[[177,225]],[[178,225]],[[179,225]],[[180,225]],[[181,225]],[[182,225]],[[183,225]],[[184,225]],[[185,225]],[[186,225]],[[187,225]],[[188,225]],[[189,225]],[[190,225]],[[191,225]],[[192,225]],[[193,225]],[[194,225]],[[195,225]],[[196,225]],[[197,225]],[[198,225]],[[199,225]],[[200,225]],[[201,225]],[[203,225]],[[204,225]],[[205,225]],[[206,225]],[[207,225]],[[208,225]],[[209,225]],[[210,225]],[[211,225]],[[212,225]],[[213,225]],[[214,225]],[[218,225]],[[219,225]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[226,8],0,[[8,8],226],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[226,8],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[182,222],0,0,[182,227],0,[182,9],[182,228],[182,229],[182,228],[182,32],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],[[],224],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],[[],230],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[715,1376,3354,4258,4622,6745,6746,6747,6748,7009,7010,8861,8862,8863,8864,8915],"p":[[6,"__u16"],[6,"__u32"],[6,"__u8"],[3,"sock_filter"],[3,"cmsghdr"],[6,"c_uchar"],[3,"msghdr"],[6,"c_uint"],[6,"c_int"],[6,"size_t"],[15,"usize"],[3,"cpu_set_t"],[15,"bool"],[3,"fd_set"],[15,"u8"],[15,"u32"],[3,"sock_extended_err"],[3,"sockaddr"],[4,"DIR"],[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"itimerval"],[3,"tms"],[3,"servent"],[3,"protoent"],[4,"FILE"],[4,"fpos_t"],[4,"timezone"],[3,"in_addr"],[3,"ip_mreq"],[3,"ip_mreqn"],[3,"ip_mreq_source"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"addrinfo"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"lconv"],[3,"in_pktinfo"],[3,"ifaddrs"],[3,"in6_rtmsg"],[3,"arpreq"],[3,"arpreq_old"],[3,"arphdr"],[3,"mmsghdr"],[3,"epoll_event"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"utsname"],[3,"sigevent"],[4,"fpos64_t"],[3,"glob_t"],[3,"passwd"],[3,"spwd"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"itimerspec"],[3,"fsid_t"],[3,"packet_mreq"],[3,"if_nameindex"],[3,"msginfo"],[3,"sembuf"],[3,"input_event"],[3,"input_id"],[3,"input_absinfo"],[3,"input_keymap_entry"],[3,"input_mask"],[3,"ff_replay"],[3,"ff_trigger"],[3,"ff_envelope"],[3,"ff_constant_effect"],[3,"ff_ramp_effect"],[3,"ff_condition_effect"],[3,"ff_periodic_effect"],[3,"ff_rumble_effect"],[3,"ff_effect"],[3,"uinput_ff_upload"],[3,"uinput_ff_erase"],[3,"uinput_abs_setup"],[3,"dl_phdr_info"],[3,"Elf32_Ehdr"],[3,"Elf64_Ehdr"],[3,"Elf32_Sym"],[3,"Elf64_Sym"],[3,"Elf32_Phdr"],[3,"Elf64_Phdr"],[3,"Elf32_Shdr"],[3,"Elf64_Shdr"],[3,"ucred"],[3,"mntent"],[3,"posix_spawn_file_actions_t"],[3,"posix_spawnattr_t"],[3,"genlmsghdr"],[3,"in6_pktinfo"],[3,"arpd_request"],[3,"inotify_event"],[3,"fanotify_response"],[3,"sockaddr_vm"],[3,"regmatch_t"],[3,"__c_anonymous_sockaddr_can_tp"],[3,"__c_anonymous_sockaddr_can_j1939"],[3,"can_filter"],[3,"j1939_filter"],[3,"sock_fprog"],[3,"seccomp_data"],[3,"nlmsghdr"],[3,"nlmsgerr"],[3,"nlattr"],[3,"file_clone_range"],[3,"__c_anonymous_ifru_map"],[3,"in6_ifreq"],[3,"option"],[3,"sctp_initmsg"],[3,"sctp_sndrcvinfo"],[3,"sctp_sndinfo"],[3,"sctp_rcvinfo"],[3,"sctp_nxtinfo"],[3,"sctp_prinfo"],[3,"sctp_authinfo"],[3,"rlimit64"],[3,"sockaddr_nl"],[3,"dirent"],[3,"sockaddr_alg"],[3,"uinput_setup"],[3,"uinput_user_dev"],[3,"af_alg_iv"],[3,"mq_attr"],[19,"__c_anonymous_ifr_ifru"],[3,"ifreq"],[3,"hwtstamp_config"],[3,"dirent64"],[3,"sock_txtime"],[19,"__c_anonymous_sockaddr_can_can_addr"],[3,"sockaddr_can"],[3,"statx"],[3,"statx_timestamp"],[3,"aiocb"],[3,"__exit_status"],[3,"__timeval"],[3,"glob64_t"],[3,"termios"],[3,"mallinfo"],[3,"mallinfo2"],[3,"nl_pktinfo"],[3,"nl_mmap_req"],[3,"nl_mmap_hdr"],[3,"rtentry"],[3,"timex"],[3,"ntptimeval"],[3,"regex_t"],[3,"Elf64_Chdr"],[3,"Elf32_Chdr"],[3,"seminfo"],[3,"ptrace_peeksiginfo_args"],[3,"__c_anonymous_ptrace_syscall_info_entry"],[3,"__c_anonymous_ptrace_syscall_info_exit"],[3,"__c_anonymous_ptrace_syscall_info_seccomp"],[3,"ptrace_syscall_info"],[19,"__c_anonymous_ptrace_syscall_info_data"],[3,"utmpx"],[3,"sigset_t"],[3,"sysinfo"],[3,"msqid_ds"],[3,"semid_ds"],[3,"sigaction"],[3,"statfs"],[3,"flock"],[3,"flock64"],[3,"siginfo_t"],[3,"stack_t"],[3,"stat"],[3,"stat64"],[3,"statfs64"],[3,"statvfs64"],[3,"pthread_attr_t"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"user_regs_struct"],[3,"user"],[3,"mcontext_t"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"seccomp_notif_sizes"],[3,"ptrace_rseq_configuration"],[3,"user_fpregs_struct"],[3,"ucontext_t"],[3,"statvfs"],[3,"max_align_t"],[3,"clone_args"],[3,"sem_t"],[3,"termios2"],[3,"pthread_mutexattr_t"],[3,"pthread_rwlockattr_t"],[3,"pthread_condattr_t"],[3,"pthread_barrierattr_t"],[3,"fanotify_event_metadata"],[3,"pthread_cond_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_barrier_t"],[3,"can_frame"],[3,"canfd_frame"],[3,"canxl_frame"],[3,"open_how"],[3,"in6_addr"],[3,"Formatter"],[6,"Result"],[4,"c_void"],[3,"Error"],[4,"Result"],[8,"Hasher"],[6,"dev_t"],[6,"pid_t"],[6,"c_long"],[6,"uid_t"],[3,"TypeId"]]},\
"libloading":{"doc":"Bindings around the platform’s dynamic library loading …","t":"NNNNNNNNENNNNNNNDNNDLLLLLLALLLLLLLLLLLLLLLLLLFLLALLLLLLLLLLLLLMMMMMMMMMAAAAAAAAAAAAAAAAAAAAAAAAAAADRRRRDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["CreateCString","CreateCStringWithTrailing","DlClose","DlCloseUnknown","DlOpen","DlOpenUnknown","DlSym","DlSymUnknown","Error","FreeLibrary","FreeLibraryUnknown","GetModuleHandleExW","GetModuleHandleExWUnknown","GetProcAddress","GetProcAddressUnknown","IncompatibleSize","Library","LoadLibraryExW","LoadLibraryExWUnknown","Symbol","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","changelog","clone","clone_into","close","deref","fmt","fmt","fmt","fmt","from","from","from","from","from_raw","get","into","into","into","into_raw","library_filename","lift_option","new","os","provide","source","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","desc","desc","desc","source","source","source","source","source","source","r0_3_0","r0_3_1","r0_3_2","r0_3_3","r0_3_4","r0_4_0","r0_4_1","r0_4_2","r0_4_3","r0_5_0","r0_5_1","r0_5_2","r0_6_0","r0_6_1","r0_6_2","r0_6_3","r0_6_4","r0_6_5","r0_6_6","r0_6_7","r0_7_0","r0_7_1","r0_7_2","r0_7_3","r0_7_4","r0_8_0","unix","Library","RTLD_GLOBAL","RTLD_LAZY","RTLD_LOCAL","RTLD_NOW","Symbol","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","close","deref","drop","fmt","fmt","from","from","from","from_raw","get","get_singlethreaded","into","into","into_raw","into_raw","lift_option","new","open","this","to_owned","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"libloading"],[62,"libloading::Error"],[71,"libloading::changelog"],[97,"libloading::os"],[98,"libloading::os::unix"]],"d":["Could not create a new CString.","Could not create a new CString from bytes with trailing …","The <code>dlclose</code> call failed.","The <code>dlclose</code> call failed and system did not report an error.","The <code>dlopen</code> call failed.","The <code>dlopen</code> call failed and system did not report an error.","The <code>dlsym</code> call failed.","The <code>dlsym</code> call failed and system did not report an error.","Errors.","The <code>FreeLibrary</code> call failed.","The <code>FreeLibrary</code> call failed and system did not report an …","The <code>GetModuleHandleExW</code> call failed.","The <code>GetModuleHandleExW</code> call failed and system did not …","The <code>GetProcAddress</code> call failed.","The <code>GetProcAddressUnknown</code> call failed and system did not …","The requested type cannot possibly work.","A loaded dynamic library.","The <code>LoadLibraryW</code> call failed.","The <code>LoadLibraryW</code> call failed and system did not report an …","Symbol from a library.","","","","","","","The change log.","","","Unload the library.","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Wrap the <code>os::platform::Symbol</code> into this safe wrapper.","Get a pointer to a function or static variable by symbol …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Extract the wrapped <code>os::platform::Symbol</code>.","Converts a library name to a filename generally …","Lift Option out of the symbol.","Find and load a dynamic library.","Unsafe but flexible platform-specific bindings to dynamic …","","","","","","","","","","","","","","The source error.","The source error.","The source error.","The source error.","The source error.","The source error.","The source error.","The source error.","The source error.","Release 0.3.0 (2016-07-27)","Release 0.3.1 (2016-10-01)","Release 0.3.2 (2017-02-10)","Release 0.3.3 (2017-03-25)","Release 0.3.4 (2017-03-25)","Release 0.4.0 (2017-05-01)","Release 0.4.1 (2017-08-29)","Release 0.4.2 (2017-09-24)","Release 0.4.3 (2017-12-07)","Release 0.5.0 (2018-01-11)","Release 0.5.1 (2019-06-01)","Release 0.5.2 (2019-07-07)","Release 0.6.0 (2020-04-05)","Release 0.6.1 (2020-04-15)","Release 0.6.2 (2020-05-06)","Release 0.6.3 (2020-08-22)","Release 0.6.4 (2020-10-10)","Release 0.6.5 (2020-10-23)","Release 0.6.6 (2020-12-03)","Release 0.6.7 (2021-01-14)","Release 0.7.0 (2021-02-06)","Release 0.7.1 (2021-10-09)","Release 0.7.2 (2021-11-14)","Release 0.7.3 (2022-01-15)","Release 0.7.4 (2022-11-07)","Release 0.8.1 (2023-09-30)","UNIX implementation of dynamic library loading.","A platform-specific counterpart of the cross-platform …","Make loaded symbols available for resolution globally.","Perform lazy binding.","Load symbols into an isolated namespace.","Perform eager binding.","Symbol from a library.","","","","","","","Unload the library.","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Convert a raw handle returned by <code>dlopen</code>-family of calls to …","Get a pointer to a function or static variable by symbol …","Get a pointer to function or static variable by symbol …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert the <code>Library</code> to a raw handle.","Convert the loaded <code>Symbol</code> into a raw pointer.","Lift Option out of the symbol.","Find and eagerly load a shared library (module).","Find and load an executable object file (shared library).","Load the <code>Library</code> representing the current executable.","","","","","","",""],"i":[3,3,3,3,3,3,3,3,0,3,3,3,3,3,3,3,0,3,3,0,2,1,3,2,1,3,0,1,1,2,1,2,1,3,3,2,2,1,3,1,2,2,1,3,1,0,1,2,0,3,3,1,3,2,1,3,2,1,3,2,1,3,21,22,23,24,25,26,27,28,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,8,7,8,8,8,7,8,7,7,8,7,7,8,7,7,7,7,8,7,8,8,7,7,7,8,7,8,7,8,7,8],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[1,1],[[]],[2,[[4,[3]]]],[1],[[2,5],6],[[1,5],6],[[3,5],6],[[3,5],6],[[]],[7,2],[[]],[[]],[8,1],[[2,[10,[9]]],[[4,[1,3]]]],[[]],[[]],[[]],[1,8],[[[12,[11]]],13],[[[1,[14]]],[[14,[1]]]],[[[12,[11]]],[[4,[2,3]]]],0,[15],[3,[[14,[16]]]],[[]],[[],17],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],18],[[],18],[[],18],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[8,8],[[]],[7,[[4,[3]]]],[8],[7],[[7,5],6],[[8,5],6],[[]],[2,7],[[]],[19,7],[[7,[10,[9]]],[[4,[8,3]]]],[[7,[10,[9]]],[[4,[8,3]]]],[[]],[[]],[7,19],[8,19],[[[8,[14]]],[[14,[8]]]],[[[12,[11]]],[[4,[7,3]]]],[[[14,[[12,[11]]]],20],[[4,[7,3]]]],[[],7],[[]],[[],4],[[],4],[[],4],[[],4],[[],18],[[],18]],"c":[],"p":[[3,"Symbol"],[3,"Library"],[4,"Error"],[4,"Result"],[3,"Formatter"],[6,"Result"],[3,"Library"],[3,"Symbol"],[15,"u8"],[15,"slice"],[3,"OsStr"],[8,"AsRef"],[3,"OsString"],[4,"Option"],[3,"Demand"],[8,"Error"],[3,"String"],[3,"TypeId"],[6,"c_void"],[6,"c_int"],[13,"DlOpen"],[13,"DlSym"],[13,"DlClose"],[13,"LoadLibraryExW"],[13,"GetModuleHandleExW"],[13,"GetProcAddress"],[13,"FreeLibrary"],[13,"CreateCString"],[13,"CreateCStringWithTrailing"]]},\
"linux_raw_sys":{"doc":"","t":"AAAAAAALLGGGGGGGGGGGGGELLLLLLRRRRRRRRRRRRRRRRRRRRRRFFFRRRDTDDDDDDDRRRRRRRRRRRRRRRRRRRRRRRMMMLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRNNNNNNNNRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRNNNNNNNNNNNNSRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRDRRRRRRRRDRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRGGGMMMMGGGGGDDGGGGGDGGGGGGGGDGDDGGGGGGDGGGGGDGGGGGGGDMMGMMMMMMMMMGGGGGTDDDDDTDDDDDGGGMMGGGGGMDDGMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMGGGMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLDLMMMMMMMMMMMMLLMMMMMMMMMMMDLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMDMMMMMMMMMMDDDMMDMMMMMMDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMEDDDTDDTDDDDDMMMMMMDMDLLLLLLMMMMMDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMDMMMMMMMMDDDDMMMMDMMMMMMMMMMMMMMMMLDMMLMMMMMMMEEMMMMMMMMDMLLLMMMMMDMMLMMMMMMMMDMMDMMMMMMMMLMMMMMMMMMMMMMMMMMMMDDDDMMMMMMMMMMMMMMMMMDMMMMMMMMLLLLLLLLLLMMLMMMMDDMMMDTDGDTDGGTGMMMGMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMGMMMDDDMMMDDMMMMMMMMMMMMMMMMMMMMMMGDDDDDDMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMDTDTDDDDDDDDDDDLMDMMMMMMMMMDDDDMDMMMMMRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRFFFFRF","n":["ctypes","elf","errno","general","ioctl","select_macros","signal_macros","borrow","borrow_mut","c_char","c_double","c_float","c_int","c_long","c_longlong","c_schar","c_short","c_uchar","c_uint","c_ulong","c_ulonglong","c_ushort","c_void","fmt","from","into","try_from","try_into","type_id","DT_HASH","DT_NULL","DT_RELA","DT_RELAENT","DT_RELASZ","DT_STRTAB","DT_SYMENT","DT_SYMTAB","DT_VERDEF","DT_VERSYM","EI_ABIVERSION","EI_CLASS","EI_DATA","EI_NIDENT","EI_OSABI","EI_VERSION","ELFABIVERSION","ELFCLASS","ELFDATA","ELFMAG","ELFOSABI_LINUX","ELFOSABI_SYSV","ELF_ST_BIND","ELF_ST_TYPE","ELF_ST_VISIBILITY","EM_CURRENT","ET_DYN","EV_CURRENT","Elf_Dyn","Elf_Dyn_Union","Elf_Ehdr","Elf_Phdr","Elf_Rela","Elf_Sym","Elf_Verdaux","Elf_Verdef","Elf_auxv_t","PF_R","PF_W","PF_X","PN_XNUM","PT_DYNAMIC","PT_GNU_RELRO","PT_GNU_STACK","PT_INTERP","PT_LOAD","PT_PHDR","PT_TLS","R_RELATIVE","SELFMAG","SHN_ABS","SHN_UNDEF","STB_GLOBAL","STB_WEAK","STN_UNDEF","STT_FUNC","STT_NOTYPE","STV_DEFAULT","VER_DEF_CURRENT","VER_FLG_BASE","_vda_next","a_type","a_val","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","d_ptr","d_tag","d_un","d_val","e_ehsize","e_entry","e_flags","e_ident","e_machine","e_phentsize","e_phnum","e_phoff","e_shentsize","e_shnum","e_shoff","e_shstrndx","e_type","e_version","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","p_align","p_filesz","p_flags","p_memsz","p_offset","p_paddr","p_type","p_vaddr","r_addend","r_info","r_offset","st_info","st_name","st_other","st_shndx","st_size","st_value","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vd_aux","vd_cnt","vd_flags","vd_hash","vd_ndx","vd_next","vd_version","vda_name","E2BIG","EACCES","EADDRINUSE","EADDRNOTAVAIL","EADV","EAFNOSUPPORT","EAGAIN","EALREADY","EBADE","EBADF","EBADFD","EBADMSG","EBADR","EBADRQC","EBADSLT","EBFONT","EBUSY","ECANCELED","ECHILD","ECHRNG","ECOMM","ECONNABORTED","ECONNREFUSED","ECONNRESET","EDEADLK","EDEADLOCK","EDESTADDRREQ","EDOM","EDOTDOT","EDQUOT","EEXIST","EFAULT","EFBIG","EHOSTDOWN","EHOSTUNREACH","EHWPOISON","EIDRM","EILSEQ","EINPROGRESS","EINTR","EINVAL","EIO","EISCONN","EISDIR","EISNAM","EKEYEXPIRED","EKEYREJECTED","EKEYREVOKED","EL2HLT","EL2NSYNC","EL3HLT","EL3RST","ELIBACC","ELIBBAD","ELIBEXEC","ELIBMAX","ELIBSCN","ELNRNG","ELOOP","EMEDIUMTYPE","EMFILE","EMLINK","EMSGSIZE","EMULTIHOP","ENAMETOOLONG","ENAVAIL","ENETDOWN","ENETRESET","ENETUNREACH","ENFILE","ENOANO","ENOBUFS","ENOCSI","ENODATA","ENODEV","ENOENT","ENOEXEC","ENOKEY","ENOLCK","ENOLINK","ENOMEDIUM","ENOMEM","ENOMSG","ENONET","ENOPKG","ENOPROTOOPT","ENOSPC","ENOSR","ENOSTR","ENOSYS","ENOTBLK","ENOTCONN","ENOTDIR","ENOTEMPTY","ENOTNAM","ENOTRECOVERABLE","ENOTSOCK","ENOTTY","ENOTUNIQ","ENXIO","EOPNOTSUPP","EOVERFLOW","EOWNERDEAD","EPERM","EPFNOSUPPORT","EPIPE","EPROTO","EPROTONOSUPPORT","EPROTOTYPE","ERANGE","EREMCHG","EREMOTE","EREMOTEIO","ERESTART","ERFKILL","EROFS","ESHUTDOWN","ESOCKTNOSUPPORT","ESPIPE","ESRCH","ESRMNT","ESTALE","ESTRPIPE","ETIME","ETIMEDOUT","ETOOMANYREFS","ETXTBSY","EUCLEAN","EUNATCH","EUSERS","EWOULDBLOCK","EXDEV","EXFULL","AAFS_MAGIC","ADDRB","ADFS_SUPER_MAGIC","AFFS_SUPER_MAGIC","AFS_FS_MAGIC","AFS_SUPER_MAGIC","ANON_INODE_FS_MAGIC","ARCH_SET_FS","ARG_MAX","AT_BASE","AT_BASE_PLATFORM","AT_CLKTCK","AT_EACCESS","AT_EGID","AT_EMPTY_PATH","AT_ENTRY","AT_EUID","AT_EXECFD","AT_EXECFN","AT_FDCWD","AT_FLAGS","AT_GID","AT_HWCAP","AT_HWCAP2","AT_IGNORE","AT_MINSIGSTKSZ","AT_NOTELF","AT_NO_AUTOMOUNT","AT_NULL","AT_PAGESZ","AT_PHDR","AT_PHENT","AT_PHNUM","AT_PLATFORM","AT_RANDOM","AT_RECURSIVE","AT_REMOVEDIR","AT_RSEQ_ALIGN","AT_RSEQ_FEATURE_SIZE","AT_SECURE","AT_STATX_DONT_SYNC","AT_STATX_FORCE_SYNC","AT_STATX_SYNC_AS_STAT","AT_STATX_SYNC_TYPE","AT_SYMLINK_FOLLOW","AT_SYMLINK_NOFOLLOW","AT_SYSINFO_EHDR","AT_UID","AT_VECTOR_SIZE_ARCH","AUTOFS_SUPER_MAGIC","B0","B1000000","B110","B115200","B1152000","B1200","B134","B150","B1500000","B1800","B19200","B200","B2000000","B230400","B2400","B2500000","B300","B3000000","B3500000","B38400","B4000000","B460800","B4800","B50","B500000","B57600","B576000","B600","B75","B921600","B9600","BDEVFS_MAGIC","BINDERFS_SUPER_MAGIC","BINFMTFS_MAGIC","BLOCK_SIZE","BLOCK_SIZE_BITS","BMAP_IOCTL","BOTHER","BPF_FS_MAGIC","BRKINT","BS0","BS1","BSDLY","BTRFS_SUPER_MAGIC","BTRFS_TEST_MAGIC","BUS_ADRALN","BUS_ADRERR","BUS_MCEERR_AO","BUS_MCEERR_AR","BUS_OBJERR","CAP_AUDIT_CONTROL","CAP_AUDIT_READ","CAP_AUDIT_WRITE","CAP_BLOCK_SUSPEND","CAP_BPF","CAP_CHECKPOINT_RESTORE","CAP_CHOWN","CAP_DAC_OVERRIDE","CAP_DAC_READ_SEARCH","CAP_FOWNER","CAP_FSETID","CAP_IPC_LOCK","CAP_IPC_OWNER","CAP_KILL","CAP_LAST_CAP","CAP_LEASE","CAP_LINUX_IMMUTABLE","CAP_MAC_ADMIN","CAP_MAC_OVERRIDE","CAP_MKNOD","CAP_NET_ADMIN","CAP_NET_BIND_SERVICE","CAP_NET_BROADCAST","CAP_NET_RAW","CAP_PERFMON","CAP_SETFCAP","CAP_SETGID","CAP_SETPCAP","CAP_SETUID","CAP_SYSLOG","CAP_SYS_ADMIN","CAP_SYS_BOOT","CAP_SYS_CHROOT","CAP_SYS_MODULE","CAP_SYS_NICE","CAP_SYS_PACCT","CAP_SYS_PTRACE","CAP_SYS_RAWIO","CAP_SYS_RESOURCE","CAP_SYS_TIME","CAP_SYS_TTY_CONFIG","CAP_WAKE_ALARM","CBAUD","CBAUDEX","CEPH_SUPER_MAGIC","CGROUP2_SUPER_MAGIC","CGROUP_SUPER_MAGIC","CIBAUD","CIFS_SUPER_MAGIC","CLD_CONTINUED","CLD_DUMPED","CLD_EXITED","CLD_KILLED","CLD_STOPPED","CLD_TRAPPED","CLOCAL","CLOCKS_MASK","CLOCKS_MONO","CLOCK_BOOTTIME","CLOCK_BOOTTIME_ALARM","CLOCK_MONOTONIC","CLOCK_MONOTONIC_COARSE","CLOCK_MONOTONIC_RAW","CLOCK_PROCESS_CPUTIME_ID","CLOCK_REALTIME","CLOCK_REALTIME_ALARM","CLOCK_REALTIME_COARSE","CLOCK_SGI_CYCLE","CLOCK_TAI","CLOCK_THREAD_CPUTIME_ID","CLONE_ARGS_SIZE_VER0","CLONE_ARGS_SIZE_VER1","CLONE_ARGS_SIZE_VER2","CLONE_CHILD_CLEARTID","CLONE_CHILD_SETTID","CLONE_CLEAR_SIGHAND","CLONE_DETACHED","CLONE_FILES","CLONE_FS","CLONE_INTO_CGROUP","CLONE_IO","CLONE_NEWCGROUP","CLONE_NEWIPC","CLONE_NEWNET","CLONE_NEWNS","CLONE_NEWPID","CLONE_NEWTIME","CLONE_NEWUSER","CLONE_NEWUTS","CLONE_PARENT","CLONE_PARENT_SETTID","CLONE_PIDFD","CLONE_PTRACE","CLONE_SETTLS","CLONE_SIGHAND","CLONE_SYSVSEM","CLONE_THREAD","CLONE_UNTRACED","CLONE_VFORK","CLONE_VM","CMSPAR","CODA_SUPER_MAGIC","CR0","CR1","CR2","CR3","CRAMFS_MAGIC","CRAMFS_MAGIC_WEND","CRDLY","CREAD","CRTSCTS","CS5","CS6","CS7","CS8","CSIGNAL","CSIZE","CSTOPB","DAXFS_MAGIC","DEBUGFS_MAGIC","DEVMEM_MAGIC","DEVPTS_SUPER_MAGIC","DMA_BUF_MAGIC","DN_ACCESS","DN_ATTRIB","DN_CREATE","DN_DELETE","DN_MODIFY","DN_MULTISHOT","DN_RENAME","DT_BLK","DT_CHR","DT_DIR","DT_FIFO","DT_LNK","DT_REG","DT_SOCK","DT_UNKNOWN","ECHO","ECHOCTL","ECHOE","ECHOK","ECHOKE","ECHONL","ECHOPRT","ECRYPTFS_SUPER_MAGIC","EFD_CLOEXEC","EFD_NONBLOCK","EFD_SEMAPHORE","EFIVARFS_MAGIC","EFS_SUPER_MAGIC","EMT_TAGOVF","EPOLLERR","EPOLLET","EPOLLEXCLUSIVE","EPOLLHUP","EPOLLIN","EPOLLMSG","EPOLLNVAL","EPOLLONESHOT","EPOLLOUT","EPOLLPRI","EPOLLRDBAND","EPOLLRDHUP","EPOLLRDNORM","EPOLLWAKEUP","EPOLLWRBAND","EPOLLWRNORM","EPOLL_CLOEXEC","EPOLL_CTL_ADD","EPOLL_CTL_DEL","EPOLL_CTL_MOD","EROFS_SUPER_MAGIC_V1","EXFAT_SUPER_MAGIC","EXT2_SUPER_MAGIC","EXT3_SUPER_MAGIC","EXT4_SUPER_MAGIC","EXTA","EXTB","EXTPROC","F2FS_SUPER_MAGIC","FALLOC_FL_COLLAPSE_RANGE","FALLOC_FL_INSERT_RANGE","FALLOC_FL_KEEP_SIZE","FALLOC_FL_NO_HIDE_STALE","FALLOC_FL_PUNCH_HOLE","FALLOC_FL_UNSHARE_RANGE","FALLOC_FL_ZERO_RANGE","FASYNC","FD_CLOEXEC","FF0","FF1","FFDLY","FILE_DEDUPE_RANGE_DIFFERS","FILE_DEDUPE_RANGE_SAME","FLUSHO","FPE_CONDTRAP","FPE_FLTDIV","FPE_FLTINV","FPE_FLTOVF","FPE_FLTRES","FPE_FLTSUB","FPE_FLTUND","FPE_FLTUNK","FPE_INTDIV","FPE_INTOVF","FSCONFIG_CMD_CREATE","FSCONFIG_CMD_RECONFIGURE","FSCONFIG_SET_BINARY","FSCONFIG_SET_FD","FSCONFIG_SET_FLAG","FSCONFIG_SET_PATH","FSCONFIG_SET_PATH_EMPTY","FSCONFIG_SET_STRING","FSCRYPT_KEY_DESCRIPTOR_SIZE","FSCRYPT_KEY_DESC_PREFIX","FSCRYPT_KEY_DESC_PREFIX_SIZE","FSCRYPT_KEY_IDENTIFIER_SIZE","FSCRYPT_KEY_REMOVAL_STATUS_FLAG_FILES_BUSY","FSCRYPT_KEY_REMOVAL_STATUS_FLAG_OTHER_USERS","FSCRYPT_KEY_SPEC_TYPE_DESCRIPTOR","FSCRYPT_KEY_SPEC_TYPE_IDENTIFIER","FSCRYPT_KEY_STATUS_ABSENT","FSCRYPT_KEY_STATUS_FLAG_ADDED_BY_SELF","FSCRYPT_KEY_STATUS_INCOMPLETELY_REMOVED","FSCRYPT_KEY_STATUS_PRESENT","FSCRYPT_MAX_KEY_SIZE","FSCRYPT_MODE_ADIANTUM","FSCRYPT_MODE_AES_128_CBC","FSCRYPT_MODE_AES_128_CTS","FSCRYPT_MODE_AES_256_CTS","FSCRYPT_MODE_AES_256_HCTR2","FSCRYPT_MODE_AES_256_XTS","FSCRYPT_MODE_SM4_CTS","FSCRYPT_MODE_SM4_XTS","FSCRYPT_POLICY_FLAGS_PAD_16","FSCRYPT_POLICY_FLAGS_PAD_32","FSCRYPT_POLICY_FLAGS_PAD_4","FSCRYPT_POLICY_FLAGS_PAD_8","FSCRYPT_POLICY_FLAGS_PAD_MASK","FSCRYPT_POLICY_FLAG_DIRECT_KEY","FSCRYPT_POLICY_FLAG_IV_INO_LBLK_32","FSCRYPT_POLICY_FLAG_IV_INO_LBLK_64","FSCRYPT_POLICY_V1","FSCRYPT_POLICY_V2","FSLABEL_MAX","FSMOUNT_CLOEXEC","FSOPEN_CLOEXEC","FSPICK_CLOEXEC","FSPICK_EMPTY_PATH","FSPICK_NO_AUTOMOUNT","FSPICK_SYMLINK_NOFOLLOW","FS_APPEND_FL","FS_BTREE_FL","FS_CASEFOLD_FL","FS_COMPRBLK_FL","FS_COMPR_FL","FS_DAX_FL","FS_DIRSYNC_FL","FS_DIRTY_FL","FS_EA_INODE_FL","FS_ENCRYPTION_MODE_ADIANTUM","FS_ENCRYPTION_MODE_AES_128_CBC","FS_ENCRYPTION_MODE_AES_128_CTS","FS_ENCRYPTION_MODE_AES_256_CBC","FS_ENCRYPTION_MODE_AES_256_CTS","FS_ENCRYPTION_MODE_AES_256_GCM","FS_ENCRYPTION_MODE_AES_256_XTS","FS_ENCRYPTION_MODE_INVALID","FS_ENCRYPT_FL","FS_EOFBLOCKS_FL","FS_EXTENT_FL","FS_FL_USER_MODIFIABLE","FS_FL_USER_VISIBLE","FS_HUGE_FILE_FL","FS_IMAGIC_FL","FS_IMMUTABLE_FL","FS_INDEX_FL","FS_INLINE_DATA_FL","FS_JOURNAL_DATA_FL","FS_KEY_DESCRIPTOR_SIZE","FS_KEY_DESC_PREFIX","FS_KEY_DESC_PREFIX_SIZE","FS_MAX_KEY_SIZE","FS_NOATIME_FL","FS_NOCOMP_FL","FS_NOCOW_FL","FS_NODUMP_FL","FS_NOTAIL_FL","FS_POLICY_FLAGS_PAD_16","FS_POLICY_FLAGS_PAD_32","FS_POLICY_FLAGS_PAD_4","FS_POLICY_FLAGS_PAD_8","FS_POLICY_FLAGS_PAD_MASK","FS_POLICY_FLAGS_VALID","FS_POLICY_FLAG_DIRECT_KEY","FS_PROJINHERIT_FL","FS_RESERVED_FL","FS_SECRM_FL","FS_SYNC_FL","FS_TOPDIR_FL","FS_UNRM_FL","FS_VERITY_FL","FS_XFLAG_APPEND","FS_XFLAG_COWEXTSIZE","FS_XFLAG_DAX","FS_XFLAG_EXTSIZE","FS_XFLAG_EXTSZINHERIT","FS_XFLAG_FILESTREAM","FS_XFLAG_HASATTR","FS_XFLAG_IMMUTABLE","FS_XFLAG_NOATIME","FS_XFLAG_NODEFRAG","FS_XFLAG_NODUMP","FS_XFLAG_NOSYMLINKS","FS_XFLAG_PREALLOC","FS_XFLAG_PROJINHERIT","FS_XFLAG_REALTIME","FS_XFLAG_RTINHERIT","FS_XFLAG_SYNC","FUSE_SUPER_MAGIC","FUTEXFS_SUPER_MAGIC","FUTEX_32","FUTEX_BITSET_MATCH_ANY","FUTEX_CLOCK_REALTIME","FUTEX_CMD_MASK","FUTEX_CMP_REQUEUE","FUTEX_CMP_REQUEUE_PI","FUTEX_CMP_REQUEUE_PI_PRIVATE","FUTEX_CMP_REQUEUE_PRIVATE","FUTEX_FD","FUTEX_LOCK_PI","FUTEX_LOCK_PI2","FUTEX_LOCK_PI2_PRIVATE","FUTEX_LOCK_PI_PRIVATE","FUTEX_OP_ADD","FUTEX_OP_ANDN","FUTEX_OP_CMP_EQ","FUTEX_OP_CMP_GE","FUTEX_OP_CMP_GT","FUTEX_OP_CMP_LE","FUTEX_OP_CMP_LT","FUTEX_OP_CMP_NE","FUTEX_OP_OPARG_SHIFT","FUTEX_OP_OR","FUTEX_OP_SET","FUTEX_OP_XOR","FUTEX_OWNER_DIED","FUTEX_PRIVATE_FLAG","FUTEX_REQUEUE","FUTEX_REQUEUE_PRIVATE","FUTEX_TID_MASK","FUTEX_TRYLOCK_PI","FUTEX_TRYLOCK_PI_PRIVATE","FUTEX_UNLOCK_PI","FUTEX_UNLOCK_PI_PRIVATE","FUTEX_WAIT","FUTEX_WAITERS","FUTEX_WAITV_MAX","FUTEX_WAIT_BITSET","FUTEX_WAIT_BITSET_PRIVATE","FUTEX_WAIT_PRIVATE","FUTEX_WAIT_REQUEUE_PI","FUTEX_WAIT_REQUEUE_PI_PRIVATE","FUTEX_WAKE","FUTEX_WAKE_BITSET","FUTEX_WAKE_BITSET_PRIVATE","FUTEX_WAKE_OP","FUTEX_WAKE_OP_PRIVATE","FUTEX_WAKE_PRIVATE","F_ADD_SEALS","F_CANCELLK","F_DUPFD","F_DUPFD_CLOEXEC","F_EXLCK","F_GETFD","F_GETFL","F_GETLEASE","F_GETLK","F_GETOWN","F_GETOWNER_UIDS","F_GETOWN_EX","F_GETPIPE_SZ","F_GETSIG","F_GET_FILE_RW_HINT","F_GET_RW_HINT","F_GET_SEALS","F_LINUX_SPECIFIC_BASE","F_NOTIFY","F_OFD_GETLK","F_OFD_SETLK","F_OFD_SETLKW","F_OK","F_OWNER_PGRP","F_OWNER_PID","F_OWNER_TID","F_RDLCK","F_SEAL_EXEC","F_SEAL_FUTURE_WRITE","F_SEAL_GROW","F_SEAL_SEAL","F_SEAL_SHRINK","F_SEAL_WRITE","F_SETFD","F_SETFL","F_SETLEASE","F_SETLK","F_SETLKW","F_SETOWN","F_SETOWN_EX","F_SETPIPE_SZ","F_SETSIG","F_SET_FILE_RW_HINT","F_SET_RW_HINT","F_SHLCK","F_UNLCK","F_WRLCK","GRND_INSECURE","GRND_NONBLOCK","GRND_RANDOM","HOSTFS_SUPER_MAGIC","HPFS_SUPER_MAGIC","HUGETLBFS_MAGIC","HUGETLB_FLAG_ENCODE_16GB","HUGETLB_FLAG_ENCODE_16KB","HUGETLB_FLAG_ENCODE_16MB","HUGETLB_FLAG_ENCODE_1GB","HUGETLB_FLAG_ENCODE_1MB","HUGETLB_FLAG_ENCODE_256MB","HUGETLB_FLAG_ENCODE_2GB","HUGETLB_FLAG_ENCODE_2MB","HUGETLB_FLAG_ENCODE_32MB","HUGETLB_FLAG_ENCODE_512KB","HUGETLB_FLAG_ENCODE_512MB","HUGETLB_FLAG_ENCODE_64KB","HUGETLB_FLAG_ENCODE_8MB","HUGETLB_FLAG_ENCODE_MASK","HUGETLB_FLAG_ENCODE_SHIFT","HUPCL","IBSHIFT","ICANON","ICRNL","IEXTEN","IGNBRK","IGNCR","IGNPAR","ILL_BADIADDR","ILL_BADSTK","ILL_COPROC","ILL_ILLADR","ILL_ILLOPC","ILL_ILLOPN","ILL_ILLTRP","ILL_PRVOPC","ILL_PRVREG","IMAXBEL","INLCR","INPCK","INR_OPEN_CUR","INR_OPEN_MAX","IN_ACCESS","IN_ALL_EVENTS","IN_ATTRIB","IN_CLOEXEC","IN_CLOSE","IN_CLOSE_NOWRITE","IN_CLOSE_WRITE","IN_CREATE","IN_DELETE","IN_DELETE_SELF","IN_DONT_FOLLOW","IN_EXCL_UNLINK","IN_IGNORED","IN_ISDIR","IN_MASK_ADD","IN_MASK_CREATE","IN_MODIFY","IN_MOVE","IN_MOVED_FROM","IN_MOVED_TO","IN_MOVE_SELF","IN_NONBLOCK","IN_ONESHOT","IN_ONLYDIR","IN_OPEN","IN_Q_OVERFLOW","IN_UNMOUNT","IOCSIZE_MASK","IOCSIZE_SHIFT","IOC_IN","IOC_INOUT","IOC_OUT","ISIG","ISOFS_SUPER_MAGIC","ISTRIP","ITIMER_PROF","ITIMER_REAL","ITIMER_VIRTUAL","IUCLC","IUTF8","IXANY","IXOFF","IXON","JFFS2_SUPER_MAGIC","LINK_MAX","LINUX_REBOOT_CMD_CAD_OFF","LINUX_REBOOT_CMD_CAD_ON","LINUX_REBOOT_CMD_HALT","LINUX_REBOOT_CMD_KEXEC","LINUX_REBOOT_CMD_POWER_OFF","LINUX_REBOOT_CMD_RESTART","LINUX_REBOOT_CMD_RESTART2","LINUX_REBOOT_CMD_SW_SUSPEND","LINUX_REBOOT_MAGIC1","LINUX_REBOOT_MAGIC2","LINUX_REBOOT_MAGIC2A","LINUX_REBOOT_MAGIC2B","LINUX_REBOOT_MAGIC2C","LINUX_VERSION_CODE","LINUX_VERSION_MAJOR","LINUX_VERSION_PATCHLEVEL","LINUX_VERSION_SUBLEVEL","LOCK_EX","LOCK_MAND","LOCK_NB","LOCK_READ","LOCK_RW","LOCK_SH","LOCK_UN","LOCK_WRITE","MADV_COLD","MADV_COLLAPSE","MADV_DODUMP","MADV_DOFORK","MADV_DONTDUMP","MADV_DONTFORK","MADV_DONTNEED","MADV_DONTNEED_LOCKED","MADV_FREE","MADV_HUGEPAGE","MADV_HWPOISON","MADV_KEEPONFORK","MADV_MERGEABLE","MADV_NOHUGEPAGE","MADV_NORMAL","MADV_PAGEOUT","MADV_POPULATE_READ","MADV_POPULATE_WRITE","MADV_RANDOM","MADV_REMOVE","MADV_SEQUENTIAL","MADV_SOFT_OFFLINE","MADV_UNMERGEABLE","MADV_WILLNEED","MADV_WIPEONFORK","MAP_32BIT","MAP_ANONYMOUS","MAP_DENYWRITE","MAP_EXECUTABLE","MAP_FILE","MAP_FIXED","MAP_FIXED_NOREPLACE","MAP_GROWSDOWN","MAP_HUGETLB","MAP_HUGE_16GB","MAP_HUGE_16KB","MAP_HUGE_16MB","MAP_HUGE_1GB","MAP_HUGE_1MB","MAP_HUGE_256MB","MAP_HUGE_2GB","MAP_HUGE_2MB","MAP_HUGE_32MB","MAP_HUGE_512KB","MAP_HUGE_512MB","MAP_HUGE_64KB","MAP_HUGE_8MB","MAP_HUGE_MASK","MAP_HUGE_SHIFT","MAP_LOCKED","MAP_NONBLOCK","MAP_NORESERVE","MAP_POPULATE","MAP_PRIVATE","MAP_SHARED","MAP_SHARED_VALIDATE","MAP_STACK","MAP_SYNC","MAP_TYPE","MAP_UNINITIALIZED","MAX_CANON","MAX_CLOCKS","MAX_INPUT","MCL_CURRENT","MCL_FUTURE","MCL_ONFAULT","MEMBARRIER_CMD_FLAG_CPU","MEMBARRIER_CMD_GET_REGISTRATIONS","MEMBARRIER_CMD_GLOBAL","MEMBARRIER_CMD_GLOBAL_EXPEDITED","MEMBARRIER_CMD_PRIVATE_EXPEDITED","MEMBARRIER_CMD_PRIVATE_EXPEDITED_RSEQ","MEMBARRIER_CMD_PRIVATE_EXPEDITED_SYNC_CORE","MEMBARRIER_CMD_QUERY","MEMBARRIER_CMD_REGISTER_GLOBAL_EXPEDITED","MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED","MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED_RSEQ","MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED_SYNC_CORE","MEMBARRIER_CMD_SHARED","MFD_ALLOW_SEALING","MFD_CLOEXEC","MFD_EXEC","MFD_HUGETLB","MFD_HUGE_16GB","MFD_HUGE_16MB","MFD_HUGE_1GB","MFD_HUGE_1MB","MFD_HUGE_256MB","MFD_HUGE_2GB","MFD_HUGE_2MB","MFD_HUGE_32MB","MFD_HUGE_512KB","MFD_HUGE_512MB","MFD_HUGE_64KB","MFD_HUGE_8MB","MFD_HUGE_MASK","MFD_HUGE_SHIFT","MFD_NOEXEC_SEAL","MINIX2_SUPER_MAGIC","MINIX2_SUPER_MAGIC2","MINIX3_SUPER_MAGIC","MINIX_SUPER_MAGIC","MINIX_SUPER_MAGIC2","MINSIGSTKSZ","MLOCK_LIMIT","MLOCK_ONFAULT","MNT_DETACH","MNT_EXPIRE","MNT_FORCE","MOUNT_ATTR_IDMAP","MOUNT_ATTR_NOATIME","MOUNT_ATTR_NODEV","MOUNT_ATTR_NODIRATIME","MOUNT_ATTR_NOEXEC","MOUNT_ATTR_NOSUID","MOUNT_ATTR_NOSYMFOLLOW","MOUNT_ATTR_RDONLY","MOUNT_ATTR_RELATIME","MOUNT_ATTR_SIZE_VER0","MOUNT_ATTR_STRICTATIME","MOUNT_ATTR__ATIME","MOVE_MOUNT_F_AUTOMOUNTS","MOVE_MOUNT_F_EMPTY_PATH","MOVE_MOUNT_F_SYMLINKS","MOVE_MOUNT_SET_GROUP","MOVE_MOUNT_T_AUTOMOUNTS","MOVE_MOUNT_T_EMPTY_PATH","MOVE_MOUNT_T_SYMLINKS","MOVE_MOUNT__MASK","MREMAP_DONTUNMAP","MREMAP_FIXED","MREMAP_MAYMOVE","MSDOS_SUPER_MAGIC","MS_ACTIVE","MS_ASYNC","MS_BIND","MS_BORN","MS_DIRSYNC","MS_INVALIDATE","MS_I_VERSION","MS_KERNMOUNT","MS_LAZYTIME","MS_MANDLOCK","MS_MGC_MSK","MS_MGC_VAL","MS_MOVE","MS_NOATIME","MS_NODEV","MS_NODIRATIME","MS_NOEXEC","MS_NOREMOTELOCK","MS_NOSEC","MS_NOSUID","MS_NOSYMFOLLOW","MS_NOUSER","MS_POSIXACL","MS_PRIVATE","MS_RDONLY","MS_REC","MS_RELATIME","MS_REMOUNT","MS_RMT_MASK","MS_SHARED","MS_SILENT","MS_SLAVE","MS_STRICTATIME","MS_SUBMOUNT","MS_SYNC","MS_SYNCHRONOUS","MS_UNBINDABLE","MS_VERBOSE","MTD_INODE_FS_MAGIC","NAME_MAX","NCC","NCCS","NCP_SUPER_MAGIC","NFS_SUPER_MAGIC","NGROUPS_MAX","NILFS_SUPER_MAGIC","NL0","NL1","NLDLY","NOFLSH","NR_FILE","NR_OPEN","NSFS_MAGIC","NSIG","NSIGBUS","NSIGCHLD","NSIGEMT","NSIGFPE","NSIGILL","NSIGPOLL","NSIGSEGV","NSIGSYS","NSIGTRAP","OCFS2_SUPER_MAGIC","OCRNL","OFDEL","OFILL","OLCUC","ONLCR","ONLRET","ONOCR","OPENPROM_SUPER_MAGIC","OPEN_TREE_CLOEXEC","OPEN_TREE_CLONE","OPOST","OVERCOMMIT_ALWAYS","OVERCOMMIT_GUESS","OVERCOMMIT_NEVER","OVERLAYFS_SUPER_MAGIC","O_ACCMODE","O_APPEND","O_CLOEXEC","O_CREAT","O_DIRECT","O_DIRECTORY","O_DSYNC","O_EXCL","O_LARGEFILE","O_NDELAY","O_NOATIME","O_NOCTTY","O_NOFOLLOW","O_NONBLOCK","O_PATH","O_RDONLY","O_RDWR","O_SYNC","O_TMPFILE","O_TMPFILE_MASK","O_TRUNC","O_WRONLY","PARENB","PARMRK","PARODD","PATH_MAX","PENDIN","PIPEFS_MAGIC","PIPE_BUF","PKEY_ACCESS_MASK","PKEY_DISABLE_ACCESS","PKEY_DISABLE_WRITE","POLLERR","POLLHUP","POLLIN","POLLMSG","POLLNVAL","POLLOUT","POLLPRI","POLLRDBAND","POLLRDHUP","POLLRDNORM","POLLREMOVE","POLLWRBAND","POLLWRNORM","POLL_ERR","POLL_HUP","POLL_IN","POLL_MSG","POLL_OUT","POLL_PRI","POSIX_FADV_DONTNEED","POSIX_FADV_NOREUSE","POSIX_FADV_NORMAL","POSIX_FADV_RANDOM","POSIX_FADV_SEQUENTIAL","POSIX_FADV_WILLNEED","PRIO_MAX","PRIO_MIN","PRIO_PGRP","PRIO_PROCESS","PRIO_USER","PROC_SUPER_MAGIC","PROT_EXEC","PROT_GROWSDOWN","PROT_GROWSUP","PROT_NONE","PROT_READ","PROT_SEM","PROT_WRITE","PSTOREFS_MAGIC","P_ALL","P_PGID","P_PID","P_PIDFD","QNX4_SUPER_MAGIC","QNX6_SUPER_MAGIC","RAMFS_MAGIC","RDTGROUP_SUPER_MAGIC","REISER2FS_JR_SUPER_MAGIC_STRING","REISER2FS_SUPER_MAGIC_STRING","REISERFS_SUPER_MAGIC","REISERFS_SUPER_MAGIC_STRING","RENAME_EXCHANGE","RENAME_NOREPLACE","RENAME_WHITEOUT","RESOLVE_BENEATH","RESOLVE_CACHED","RESOLVE_IN_ROOT","RESOLVE_NO_MAGICLINKS","RESOLVE_NO_SYMLINKS","RESOLVE_NO_XDEV","RLIM64_INFINITY","RLIMIT_AS","RLIMIT_CORE","RLIMIT_CPU","RLIMIT_DATA","RLIMIT_FSIZE","RLIMIT_LOCKS","RLIMIT_MEMLOCK","RLIMIT_MSGQUEUE","RLIMIT_NICE","RLIMIT_NOFILE","RLIMIT_NPROC","RLIMIT_RSS","RLIMIT_RTPRIO","RLIMIT_RTTIME","RLIMIT_SIGPENDING","RLIMIT_STACK","RLIM_INFINITY","RLIM_NLIMITS","ROBUST_LIST_LIMIT","RTSIG_MAX","RUSAGE_BOTH","RUSAGE_CHILDREN","RUSAGE_SELF","RUSAGE_THREAD","RWF_APPEND","RWF_DSYNC","RWF_HIPRI","RWF_NOWAIT","RWF_SYNC","RWF_WRITE_LIFE_NOT_SET","RWH_WRITE_LIFE_EXTREME","RWH_WRITE_LIFE_LONG","RWH_WRITE_LIFE_MEDIUM","RWH_WRITE_LIFE_NONE","RWH_WRITE_LIFE_NOT_SET","RWH_WRITE_LIFE_SHORT","R_OK","SA_EXPOSE_TAGBITS","SA_NOCLDSTOP","SA_NOCLDWAIT","SA_NODEFER","SA_NOMASK","SA_ONESHOT","SA_ONSTACK","SA_RESETHAND","SA_RESTART","SA_RESTORER","SA_SIGINFO","SA_UNSUPPORTED","SCHED_BATCH","SCHED_DEADLINE","SCHED_FIFO","SCHED_FLAG_ALL","SCHED_FLAG_DL_OVERRUN","SCHED_FLAG_KEEP_ALL","SCHED_FLAG_KEEP_PARAMS","SCHED_FLAG_KEEP_POLICY","SCHED_FLAG_RECLAIM","SCHED_FLAG_RESET_ON_FORK","SCHED_FLAG_UTIL_CLAMP","SCHED_FLAG_UTIL_CLAMP_MAX","SCHED_FLAG_UTIL_CLAMP_MIN","SCHED_IDLE","SCHED_NORMAL","SCHED_RESET_ON_FORK","SCHED_RR","SECRETMEM_MAGIC","SECURITYFS_MAGIC","SEEK_CUR","SEEK_DATA","SEEK_END","SEEK_HOLE","SEEK_MAX","SEEK_SET","SEGV_ACCADI","SEGV_ACCERR","SEGV_ADIDERR","SEGV_ADIPERR","SEGV_BNDERR","SEGV_MAPERR","SEGV_MTEAERR","SEGV_MTESERR","SEGV_PKUERR","SELINUX_MAGIC","SIGABRT","SIGALRM","SIGBUS","SIGCHLD","SIGCONT","SIGEV_MAX_SIZE","SIGEV_NONE","SIGEV_SIGNAL","SIGEV_THREAD","SIGEV_THREAD_ID","SIGFPE","SIGHUP","SIGILL","SIGINT","SIGIO","SIGIOT","SIGKILL","SIGPIPE","SIGPOLL","SIGPROF","SIGPWR","SIGQUIT","SIGRTMIN","SIGSEGV","SIGSTKFLT","SIGSTKSZ","SIGSTOP","SIGSYS","SIGTERM","SIGTRAP","SIGTSTP","SIGTTIN","SIGTTOU","SIGUNUSED","SIGURG","SIGUSR1","SIGUSR2","SIGVTALRM","SIGWINCH","SIGXCPU","SIGXFSZ","SIG_BLOCK","SIG_SETMASK","SIG_UNBLOCK","SI_ASYNCIO","SI_ASYNCNL","SI_DETHREAD","SI_KERNEL","SI_MAX_SIZE","SI_MESGQ","SI_QUEUE","SI_SIGIO","SI_TIMER","SI_TKILL","SI_USER","SMACK_MAGIC","SMB2_SUPER_MAGIC","SMB_SUPER_MAGIC","SOCKFS_MAGIC","SPLICE_F_GIFT","SPLICE_F_MORE","SPLICE_F_MOVE","SPLICE_F_NONBLOCK","SQUASHFS_MAGIC","SS_AUTODISARM","SS_DISABLE","SS_FLAG_BITS","SS_ONSTACK","STACK_END_MAGIC","STATX_ALL","STATX_ATIME","STATX_ATTR_APPEND","STATX_ATTR_AUTOMOUNT","STATX_ATTR_COMPRESSED","STATX_ATTR_DAX","STATX_ATTR_ENCRYPTED","STATX_ATTR_IMMUTABLE","STATX_ATTR_MOUNT_ROOT","STATX_ATTR_NODUMP","STATX_ATTR_VERITY","STATX_BASIC_STATS","STATX_BLOCKS","STATX_BTIME","STATX_CTIME","STATX_DIOALIGN","STATX_GID","STATX_INO","STATX_MNT_ID","STATX_MODE","STATX_MTIME","STATX_NLINK","STATX_SIZE","STATX_TYPE","STATX_UID","STATX__RESERVED","STAT_HAVE_NSEC","STDERR_FILENO","STDIN_FILENO","STDOUT_FILENO","SYNC_FILE_RANGE_WAIT_AFTER","SYNC_FILE_RANGE_WAIT_BEFORE","SYNC_FILE_RANGE_WRITE","SYNC_FILE_RANGE_WRITE_AND_WAIT","SYSFS_MAGIC","SYS_SECCOMP","SYS_USER_DISPATCH","S_IFBLK","S_IFCHR","S_IFDIR","S_IFIFO","S_IFLNK","S_IFMT","S_IFREG","S_IFSOCK","S_IRGRP","S_IROTH","S_IRUSR","S_IRWXG","S_IRWXO","S_IRWXU","S_ISGID","S_ISUID","S_ISVTX","S_IWGRP","S_IWOTH","S_IWUSR","S_IXGRP","S_IXOTH","S_IXUSR","TAB0","TAB1","TAB2","TAB3","TABDLY","TCIFLUSH","TCIOFF","TCIOFLUSH","TCION","TCOFLUSH","TCOOFF","TCOON","TCSADRAIN","TCSAFLUSH","TCSANOW","TFD_CLOEXEC","TFD_CREATE_FLAGS","TFD_NONBLOCK","TFD_SETTIME_FLAGS","TFD_SHARED_FCNTL_FLAGS","TFD_TIMER_ABSTIME","TFD_TIMER_CANCEL_ON_SET","TIMER_ABSTIME","TIOCM_CAR","TIOCM_CD","TIOCM_CTS","TIOCM_DSR","TIOCM_DTR","TIOCM_LE","TIOCM_LOOP","TIOCM_OUT1","TIOCM_OUT2","TIOCM_RI","TIOCM_RNG","TIOCM_RTS","TIOCM_SR","TIOCM_ST","TIOCPKT_DATA","TIOCPKT_DOSTOP","TIOCPKT_FLUSHREAD","TIOCPKT_FLUSHWRITE","TIOCPKT_IOCTL","TIOCPKT_NOSTOP","TIOCPKT_START","TIOCPKT_STOP","TIOCSER_TEMT","TMPFS_MAGIC","TOSTOP","TRACEFS_MAGIC","TRAP_BRANCH","TRAP_BRKPT","TRAP_HWBKPT","TRAP_PERF","TRAP_PERF_FLAG_ASYNC","TRAP_TRACE","TRAP_UNK","UDF_SUPER_MAGIC","UFFDIO","UFFDIO_COPY_MODE_DONTWAKE","UFFDIO_COPY_MODE_WP","UFFDIO_REGISTER_MODE_MINOR","UFFDIO_REGISTER_MODE_MISSING","UFFDIO_REGISTER_MODE_WP","UFFDIO_ZEROPAGE_MODE_DONTWAKE","UFFD_API","UFFD_EVENT_FORK","UFFD_EVENT_PAGEFAULT","UFFD_EVENT_REMAP","UFFD_EVENT_REMOVE","UFFD_EVENT_UNMAP","UFFD_FEATURE_EVENT_FORK","UFFD_FEATURE_EVENT_REMAP","UFFD_FEATURE_EVENT_REMOVE","UFFD_FEATURE_EVENT_UNMAP","UFFD_FEATURE_EXACT_ADDRESS","UFFD_FEATURE_MINOR_HUGETLBFS","UFFD_FEATURE_MINOR_SHMEM","UFFD_FEATURE_MISSING_HUGETLBFS","UFFD_FEATURE_MISSING_SHMEM","UFFD_FEATURE_PAGEFAULT_FLAG_WP","UFFD_FEATURE_SIGBUS","UFFD_FEATURE_THREAD_ID","UFFD_FEATURE_WP_HUGETLBFS_SHMEM","UFFD_PAGEFAULT_FLAG_MINOR","UFFD_PAGEFAULT_FLAG_WP","UFFD_PAGEFAULT_FLAG_WRITE","UFFD_USER_MODE_ONLY","UIO_FASTIOV","UIO_MAXIOV","UMOUNT_NOFOLLOW","UMOUNT_UNUSED","USBDEVICE_SUPER_MAGIC","USERFAULTFD_IOC","UTIME_NOW","UTIME_OMIT","V9FS_MAGIC","VDISCARD","VEOF","VEOL","VEOL2","VERASE","VFS_CAP_FLAGS_EFFECTIVE","VFS_CAP_FLAGS_MASK","VFS_CAP_REVISION","VFS_CAP_REVISION_1","VFS_CAP_REVISION_2","VFS_CAP_REVISION_3","VFS_CAP_REVISION_MASK","VFS_CAP_REVISION_SHIFT","VFS_CAP_U32","VFS_CAP_U32_1","VFS_CAP_U32_2","VFS_CAP_U32_3","VINTR","VKILL","VLNEXT","VMIN","VQUIT","VREPRINT","VSTART","VSTOP","VSUSP","VSWTC","VT0","VT1","VTDLY","VTIME","VWERASE","WCONTINUED","WEXITED","WNOHANG","WNOWAIT","WSTOPPED","WUNTRACED","W_OK","XATTR_APPARMOR_SUFFIX","XATTR_BTRFS_PREFIX","XATTR_CAPS_SUFFIX","XATTR_CREATE","XATTR_EVM_SUFFIX","XATTR_HURD_PREFIX","XATTR_IMA_SUFFIX","XATTR_LIST_MAX","XATTR_MAC_OSX_PREFIX","XATTR_NAME_APPARMOR","XATTR_NAME_CAPS","XATTR_NAME_EVM","XATTR_NAME_IMA","XATTR_NAME_MAX","XATTR_NAME_POSIX_ACL_ACCESS","XATTR_NAME_POSIX_ACL_DEFAULT","XATTR_NAME_SELINUX","XATTR_NAME_SMACK","XATTR_NAME_SMACKEXEC","XATTR_NAME_SMACKIPIN","XATTR_NAME_SMACKIPOUT","XATTR_NAME_SMACKMMAP","XATTR_NAME_SMACKTRANSMUTE","XATTR_OS2_PREFIX","XATTR_POSIX_ACL_ACCESS","XATTR_POSIX_ACL_DEFAULT","XATTR_REPLACE","XATTR_SECURITY_PREFIX","XATTR_SELINUX_SUFFIX","XATTR_SIZE_MAX","XATTR_SMACK_EXEC","XATTR_SMACK_IPIN","XATTR_SMACK_IPOUT","XATTR_SMACK_MMAP","XATTR_SMACK_SUFFIX","XATTR_SMACK_TRANSMUTE","XATTR_SYSTEM_PREFIX","XATTR_TRUSTED_PREFIX","XATTR_USER_PREFIX","XCASE","XENFS_SUPER_MAGIC","XFS_SUPER_MAGIC","XTABS","X_OK","ZONEFS_MAGIC","_IOC_DIRBITS","_IOC_DIRMASK","_IOC_DIRSHIFT","_IOC_NONE","_IOC_NRBITS","_IOC_NRMASK","_IOC_NRSHIFT","_IOC_READ","_IOC_SIZEBITS","_IOC_SIZEMASK","_IOC_SIZESHIFT","_IOC_TYPEBITS","_IOC_TYPEMASK","_IOC_TYPESHIFT","_IOC_WRITE","_LINUX_CAPABILITY_U32S","_LINUX_CAPABILITY_U32S_1","_LINUX_CAPABILITY_U32S_2","_LINUX_CAPABILITY_U32S_3","_LINUX_CAPABILITY_VERSION","_LINUX_CAPABILITY_VERSION_1","_LINUX_CAPABILITY_VERSION_2","_LINUX_CAPABILITY_VERSION_3","_NSIG","_STK_LIM","_UFFDIO_API","_UFFDIO_CONTINUE","_UFFDIO_COPY","_UFFDIO_REGISTER","_UFFDIO_UNREGISTER","_UFFDIO_WAKE","_UFFDIO_WRITEPROTECT","_UFFDIO_ZEROPAGE","__BindgenBitfieldUnit","__FD_SETSIZE","__FPE_DECDIV","__FPE_DECERR","__FPE_DECOVF","__FPE_INVASC","__FPE_INVDEC","__ILL_BNDMOD","__ILL_BREAK","__IncompleteArrayField","__NR__sysctl","__NR_accept","__NR_accept4","__NR_access","__NR_acct","__NR_add_key","__NR_adjtimex","__NR_afs_syscall","__NR_alarm","__NR_arch_prctl","__NR_bind","__NR_bpf","__NR_brk","__NR_capget","__NR_capset","__NR_chdir","__NR_chmod","__NR_chown","__NR_chroot","__NR_clock_adjtime","__NR_clock_getres","__NR_clock_gettime","__NR_clock_nanosleep","__NR_clock_settime","__NR_clone","__NR_clone3","__NR_close","__NR_close_range","__NR_connect","__NR_copy_file_range","__NR_creat","__NR_create_module","__NR_delete_module","__NR_dup","__NR_dup2","__NR_dup3","__NR_epoll_create","__NR_epoll_create1","__NR_epoll_ctl","__NR_epoll_ctl_old","__NR_epoll_pwait","__NR_epoll_pwait2","__NR_epoll_wait","__NR_epoll_wait_old","__NR_eventfd","__NR_eventfd2","__NR_execve","__NR_execveat","__NR_exit","__NR_exit_group","__NR_faccessat","__NR_faccessat2","__NR_fadvise64","__NR_fallocate","__NR_fanotify_init","__NR_fanotify_mark","__NR_fchdir","__NR_fchmod","__NR_fchmodat","__NR_fchown","__NR_fchownat","__NR_fcntl","__NR_fdatasync","__NR_fgetxattr","__NR_finit_module","__NR_flistxattr","__NR_flock","__NR_fork","__NR_fremovexattr","__NR_fsconfig","__NR_fsetxattr","__NR_fsmount","__NR_fsopen","__NR_fspick","__NR_fstat","__NR_fstatfs","__NR_fsync","__NR_ftruncate","__NR_futex","__NR_futex_waitv","__NR_futimesat","__NR_get_kernel_syms","__NR_get_mempolicy","__NR_get_robust_list","__NR_get_thread_area","__NR_getcpu","__NR_getcwd","__NR_getdents","__NR_getdents64","__NR_getegid","__NR_geteuid","__NR_getgid","__NR_getgroups","__NR_getitimer","__NR_getpeername","__NR_getpgid","__NR_getpgrp","__NR_getpid","__NR_getpmsg","__NR_getppid","__NR_getpriority","__NR_getrandom","__NR_getresgid","__NR_getresuid","__NR_getrlimit","__NR_getrusage","__NR_getsid","__NR_getsockname","__NR_getsockopt","__NR_gettid","__NR_gettimeofday","__NR_getuid","__NR_getxattr","__NR_init_module","__NR_inotify_add_watch","__NR_inotify_init","__NR_inotify_init1","__NR_inotify_rm_watch","__NR_io_cancel","__NR_io_destroy","__NR_io_getevents","__NR_io_pgetevents","__NR_io_setup","__NR_io_submit","__NR_io_uring_enter","__NR_io_uring_register","__NR_io_uring_setup","__NR_ioctl","__NR_ioperm","__NR_iopl","__NR_ioprio_get","__NR_ioprio_set","__NR_kcmp","__NR_kexec_file_load","__NR_kexec_load","__NR_keyctl","__NR_kill","__NR_landlock_add_rule","__NR_landlock_create_ruleset","__NR_landlock_restrict_self","__NR_lchown","__NR_lgetxattr","__NR_link","__NR_linkat","__NR_listen","__NR_listxattr","__NR_llistxattr","__NR_lookup_dcookie","__NR_lremovexattr","__NR_lseek","__NR_lsetxattr","__NR_lstat","__NR_madvise","__NR_mbind","__NR_membarrier","__NR_memfd_create","__NR_memfd_secret","__NR_migrate_pages","__NR_mincore","__NR_mkdir","__NR_mkdirat","__NR_mknod","__NR_mknodat","__NR_mlock","__NR_mlock2","__NR_mlockall","__NR_mmap","__NR_modify_ldt","__NR_mount","__NR_mount_setattr","__NR_move_mount","__NR_move_pages","__NR_mprotect","__NR_mq_getsetattr","__NR_mq_notify","__NR_mq_open","__NR_mq_timedreceive","__NR_mq_timedsend","__NR_mq_unlink","__NR_mremap","__NR_msgctl","__NR_msgget","__NR_msgrcv","__NR_msgsnd","__NR_msync","__NR_munlock","__NR_munlockall","__NR_munmap","__NR_name_to_handle_at","__NR_nanosleep","__NR_newfstatat","__NR_nfsservctl","__NR_open","__NR_open_by_handle_at","__NR_open_tree","__NR_openat","__NR_openat2","__NR_pause","__NR_perf_event_open","__NR_personality","__NR_pidfd_getfd","__NR_pidfd_open","__NR_pidfd_send_signal","__NR_pipe","__NR_pipe2","__NR_pivot_root","__NR_pkey_alloc","__NR_pkey_free","__NR_pkey_mprotect","__NR_poll","__NR_ppoll","__NR_prctl","__NR_pread64","__NR_preadv","__NR_preadv2","__NR_prlimit64","__NR_process_madvise","__NR_process_mrelease","__NR_process_vm_readv","__NR_process_vm_writev","__NR_pselect6","__NR_ptrace","__NR_putpmsg","__NR_pwrite64","__NR_pwritev","__NR_pwritev2","__NR_query_module","__NR_quotactl","__NR_quotactl_fd","__NR_read","__NR_readahead","__NR_readlink","__NR_readlinkat","__NR_readv","__NR_reboot","__NR_recvfrom","__NR_recvmmsg","__NR_recvmsg","__NR_remap_file_pages","__NR_removexattr","__NR_rename","__NR_renameat","__NR_renameat2","__NR_request_key","__NR_restart_syscall","__NR_rmdir","__NR_rseq","__NR_rt_sigaction","__NR_rt_sigpending","__NR_rt_sigprocmask","__NR_rt_sigqueueinfo","__NR_rt_sigreturn","__NR_rt_sigsuspend","__NR_rt_sigtimedwait","__NR_rt_tgsigqueueinfo","__NR_sched_get_priority_max","__NR_sched_get_priority_min","__NR_sched_getaffinity","__NR_sched_getattr","__NR_sched_getparam","__NR_sched_getscheduler","__NR_sched_rr_get_interval","__NR_sched_setaffinity","__NR_sched_setattr","__NR_sched_setparam","__NR_sched_setscheduler","__NR_sched_yield","__NR_seccomp","__NR_security","__NR_select","__NR_semctl","__NR_semget","__NR_semop","__NR_semtimedop","__NR_sendfile","__NR_sendmmsg","__NR_sendmsg","__NR_sendto","__NR_set_mempolicy","__NR_set_mempolicy_home_node","__NR_set_robust_list","__NR_set_thread_area","__NR_set_tid_address","__NR_setdomainname","__NR_setfsgid","__NR_setfsuid","__NR_setgid","__NR_setgroups","__NR_sethostname","__NR_setitimer","__NR_setns","__NR_setpgid","__NR_setpriority","__NR_setregid","__NR_setresgid","__NR_setresuid","__NR_setreuid","__NR_setrlimit","__NR_setsid","__NR_setsockopt","__NR_settimeofday","__NR_setuid","__NR_setxattr","__NR_shmat","__NR_shmctl","__NR_shmdt","__NR_shmget","__NR_shutdown","__NR_sigaltstack","__NR_signalfd","__NR_signalfd4","__NR_socket","__NR_socketpair","__NR_splice","__NR_stat","__NR_statfs","__NR_statx","__NR_swapoff","__NR_swapon","__NR_symlink","__NR_symlinkat","__NR_sync","__NR_sync_file_range","__NR_syncfs","__NR_sysfs","__NR_sysinfo","__NR_syslog","__NR_tee","__NR_tgkill","__NR_time","__NR_timer_create","__NR_timer_delete","__NR_timer_getoverrun","__NR_timer_gettime","__NR_timer_settime","__NR_timerfd_create","__NR_timerfd_gettime","__NR_timerfd_settime","__NR_times","__NR_tkill","__NR_truncate","__NR_tuxcall","__NR_umask","__NR_umount2","__NR_uname","__NR_unlink","__NR_unlinkat","__NR_unshare","__NR_uselib","__NR_userfaultfd","__NR_ustat","__NR_utime","__NR_utimensat","__NR_utimes","__NR_vfork","__NR_vhangup","__NR_vmsplice","__NR_vserver","__NR_wait4","__NR_waitid","__NR_write","__NR_writev","__O_SYNC","__O_TMPFILE","__WALL","__WCLONE","__WNOTHREAD","__X32_SYSCALL_BIT","__be16","__be32","__be64","__bindgen_anon_1","__bindgen_anon_1","__bindgen_anon_1","__bindgen_padding_0","__fsword_t","__kernel_caddr_t","__kernel_clock_t","__kernel_clockid_t","__kernel_daddr_t","__kernel_fd_set","__kernel_fsid_t","__kernel_gid16_t","__kernel_gid32_t","__kernel_gid_t","__kernel_ino_t","__kernel_ipc_pid_t","__kernel_itimerspec","__kernel_key_t","__kernel_loff_t","__kernel_long_t","__kernel_mode_t","__kernel_mqd_t","__kernel_off_t","__kernel_old_dev_t","__kernel_old_gid_t","__kernel_old_itimerval","__kernel_old_time_t","__kernel_old_timespec","__kernel_old_timeval","__kernel_old_uid_t","__kernel_pid_t","__kernel_ptrdiff_t","__kernel_rwf_t","__kernel_sighandler_t","__kernel_size_t","__kernel_sock_timeval","__kernel_ssize_t","__kernel_suseconds_t","__kernel_time64_t","__kernel_time_t","__kernel_timer_t","__kernel_timespec","__kernel_uid16_t","__kernel_uid32_t","__kernel_uid_t","__kernel_ulong_t","__le16","__le32","__le64","__old_kernel_stat","__out_reserved","__pad0","__poll_t","__reserved","__reserved","__reserved","__reserved","__reserved","__reserved","__reserved","__reserved","__reserved","__restorefn_t","__s16","__s32","__s64","__s8","__sifields","__sifields__bindgen_ty_1","__sifields__bindgen_ty_2","__sifields__bindgen_ty_3","__sifields__bindgen_ty_4","__sifields__bindgen_ty_5","__sifields__bindgen_ty_5__bindgen_ty_1","__sifields__bindgen_ty_5__bindgen_ty_1__bindgen_ty_1","__sifields__bindgen_ty_5__bindgen_ty_1__bindgen_ty_2","__sifields__bindgen_ty_5__bindgen_ty_1__bindgen_ty_3","__sifields__bindgen_ty_6","__sifields__bindgen_ty_7","__sighandler_t","__signalfn_t","__sigrestore_t","__spare0","__spare3","__sum16","__u16","__u32","__u64","__u8","__unused","__user_cap_data_struct","__user_cap_header_struct","__wsum","_addr","_addr_bnd","_addr_lsb","_addr_pkey","_arch","_attribute","_band","_bitfield_1","_bitfield_align_1","_call_addr","_data","_dummy_bnd","_dummy_pkey","_fd","_flags","_function","_kill","_lower","_overrun","_pad","_perf","_pid","_pid","_pid","_pkey","_rt","_si_pad","_sifields","_sigchld","_sigev_thread","_sigev_un","_sigfault","_sigpoll","_sigsys","_sigval","_sigval","_status","_stime","_sys_private","_syscall","_tid","_tid","_timer","_trapno","_type","_uid","_uid","_uid","_upper","_utime","address","api","arg","as_mut_ptr","as_mut_slice","as_ptr","as_slice","attr_clr","attr_set","base_addr","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buf","buf_size","bytes_deduped","c_cc","c_cc","c_cc","c_cc","c_cflag","c_cflag","c_cflag","c_cflag","c_iflag","c_iflag","c_iflag","c_iflag","c_ispeed","c_ispeed","c_lflag","c_lflag","c_lflag","c_lflag","c_line","c_line","c_line","c_line","c_oflag","c_oflag","c_oflag","c_oflag","c_ospeed","c_ospeed","cap_user_data_t","cap_user_header_t","cc_t","cgroup","child_tid","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_args","cmp","compat_statfs64","contents","contents_encryption_mode","contents_encryption_mode","cookie","copy","d_ino","d_name","d_off","d_reclen","d_type","data","data","data","default","default","descriptor","dest_count","dest_fd","dest_offset","dest_offset","dst","dummy","effective","end","entropy_count","entry_number","epoll_event","eq","eq","eq","eq","eq","event","events","events","exit_signal","f_bavail","f_bavail","f_bavail","f_bfree","f_bfree","f_bfree","f_blocks","f_blocks","f_blocks","f_bsize","f_bsize","f_bsize","f_ffree","f_ffree","f_ffree","f_files","f_files","f_files","f_flags","f_flags","f_flags","f_frsize","f_frsize","f_frsize","f_fsid","f_fsid","f_fsid","f_namelen","f_namelen","f_namelen","f_owner_ex","f_spare","f_spare","f_spare","f_type","f_type","f_type","fd","fds_bits","feat","features","file_clone_range","file_dedupe_range","file_dedupe_range_info","filenames_encryption_mode","filenames_encryption_mode","files_stat_struct","flags","flags","flags","flags","flags","flags","flock","flock64","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fork","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","fsconfig_command","fscrypt_add_key_arg","fscrypt_get_key_status_arg","fscrypt_get_policy_ex_arg","fscrypt_get_policy_ex_arg__bindgen_ty_1","fscrypt_key","fscrypt_key_specifier","fscrypt_key_specifier__bindgen_ty_1","fscrypt_policy_v1","fscrypt_policy_v2","fscrypt_provisioning_key_payload","fscrypt_remove_key_arg","fstrim_range","fsx_cowextsize","fsx_extsize","fsx_nextents","fsx_pad","fsx_projid","fsx_xflags","fsxattr","futex_offset","futex_waitv","get","get_bit","hash","hash","hash","hash","identifier","info","inheritable","inheritable","inheritable","inodes_stat_t","inotify_event","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","ioctls","ioctls","iov_base","iov_len","iovec","it_interval","it_interval","it_interval","it_interval","it_value","it_value","it_value","it_value","itimerspec","itimerval","kernel_sigaction","kernel_sigset_t","key_id","key_spec","key_spec","key_spec","ktermios","l_len","l_len","l_pid","l_pid","l_start","l_start","l_type","l_type","l_whence","l_whence","len","len","len","len","len","limit","limit_in_pages","linux_dirent64","list","list_op_pending","lm","magic_etc","magic_etc","mapped","mask","master_key_descriptor","master_key_identifier","max_files","membarrier_cmd","membarrier_cmd_flag","minlen","mode","mode","mode","mode","mode","mode","mode","mount_attr","name","new","new","new_bitfield_1","next","nr_files","nr_free_files","nr_inodes","nr_unused","open_how","pagefault","parent_tid","partial_cmp","permitted","permitted","permitted","pid","pid","pidfd","policy","policy_size","pollfd","propagation","ptid","rand_pool_info","range","range","range","range","raw","raw","raw","raw_size","read_exec_only","remap","removal_status_flags","remove","reserved","reserved","reserved1","reserved1","reserved1","reserved2","reserved2","reserved2","reserved3","reserved3","resolve","revents","rlim_cur","rlim_cur","rlim_max","rlim_max","rlimit","rlimit64","robust_list","robust_list_head","rootid","ru_idrss","ru_inblock","ru_isrss","ru_ixrss","ru_majflt","ru_maxrss","ru_minflt","ru_msgrcv","ru_msgsnd","ru_nivcsw","ru_nsignals","ru_nswap","ru_nvcsw","ru_oublock","ru_stime","ru_utime","rusage","sa_flags","sa_flags","sa_handler","sa_handler_kernel","sa_mask","sa_mask","sa_restorer","sa_restorer","seg_32bit","seg_not_present","set","set_bit","set_contents","set_limit_in_pages","set_lm","set_read_exec_only","set_seg_32bit","set_seg_not_present","set_tid","set_tid_size","set_useable","si_code","si_errno","si_signo","sig","sigaction","sigaltstack","sigev_notify","sigev_signo","sigev_value","sigevent","sigevent__bindgen_ty_1","sigevent__bindgen_ty_1__bindgen_ty_1","sigevent_t","siginfo","siginfo__bindgen_ty_1","siginfo__bindgen_ty_1__bindgen_ty_1","siginfo_t","sigset_t","sigval","sigval_t","sival_int","sival_ptr","size","speed_t","src","src_fd","src_length","src_length","src_offset","src_offset","ss_flags","ss_size","ss_sp","st_atime","st_atime","st_atime_nsec","st_blksize","st_blocks","st_ctime","st_ctime","st_ctime_nsec","st_dev","st_dev","st_gid","st_gid","st_ino","st_ino","st_mode","st_mode","st_mtime","st_mtime","st_mtime_nsec","st_nlink","st_nlink","st_rdev","st_rdev","st_size","st_size","st_uid","st_uid","stack","stack_size","stack_t","start","start","start","stat","statfs","statfs64","status","status","status_flags","statx","statx_timestamp","stx_atime","stx_attributes","stx_attributes_mask","stx_blksize","stx_blocks","stx_btime","stx_ctime","stx_dev_major","stx_dev_minor","stx_dio_mem_align","stx_dio_offset_align","stx_gid","stx_ino","stx_mask","stx_mnt_id","stx_mode","stx_mtime","stx_nlink","stx_rdev_major","stx_rdev_minor","stx_size","stx_uid","tcflag_t","termio","termios","termios2","timespec","timeval","timezone","tls","to","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tv_nsec","tv_nsec","tv_nsec","tv_nsec","tv_sec","tv_sec","tv_sec","tv_sec","tv_sec","tv_sec","tv_sec","tv_usec","tv_usec","tv_usec","type_","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","tz_dsttime","tz_minuteswest","u","uaddr","ufd","uffd_msg","uffd_msg__bindgen_ty_1","uffd_msg__bindgen_ty_1__bindgen_ty_1","uffd_msg__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1","uffd_msg__bindgen_ty_1__bindgen_ty_2","uffd_msg__bindgen_ty_1__bindgen_ty_3","uffd_msg__bindgen_ty_1__bindgen_ty_4","uffd_msg__bindgen_ty_1__bindgen_ty_5","uffdio_api","uffdio_continue","uffdio_copy","uffdio_range","uffdio_register","uffdio_writeprotect","uffdio_zeropage","useable","user_count","user_desc","userns_fd","v1","v2","val","val","version","version","version","version","vfs_cap_data","vfs_cap_data__bindgen_ty_1","vfs_ns_cap_data","vfs_ns_cap_data__bindgen_ty_1","wd","winsize","ws_col","ws_row","ws_xpixel","ws_ypixel","zeropage","ACRN_IOCTL_ASSIGN_PCIDEV","ACRN_IOCTL_ATTACH_IOREQ_CLIENT","ACRN_IOCTL_CLEAR_VM_IOREQ","ACRN_IOCTL_CREATE_IOREQ_CLIENT","ACRN_IOCTL_CREATE_VM","ACRN_IOCTL_DEASSIGN_PCIDEV","ACRN_IOCTL_DESTROY_IOREQ_CLIENT","ACRN_IOCTL_DESTROY_VM","ACRN_IOCTL_INJECT_MSI","ACRN_IOCTL_IOEVENTFD","ACRN_IOCTL_IRQFD","ACRN_IOCTL_NOTIFY_REQUEST_FINISH","ACRN_IOCTL_PAUSE_VM","ACRN_IOCTL_PM_GET_CPU_STATE","ACRN_IOCTL_RESET_PTDEV_INTR","ACRN_IOCTL_RESET_VM","ACRN_IOCTL_SET_IRQLINE","ACRN_IOCTL_SET_MEMSEG","ACRN_IOCTL_SET_PTDEV_INTR","ACRN_IOCTL_SET_VCPU_REGS","ACRN_IOCTL_START_VM","ACRN_IOCTL_UNSET_MEMSEG","ACRN_IOCTL_VM_INTR_MONITOR","AGPIOC_ALLOCATE","APM_IOC_STANDBY","APM_IOC_SUSPEND","ASPEED_LPC_CTRL_IOCTL_GET_SIZE","ASPEED_LPC_CTRL_IOCTL_MAP","ASPEED_P2A_CTRL_IOCTL_GET_MEMORY_CONFIG","ASPEED_P2A_CTRL_IOCTL_SET_WINDOW","ATMARPD_CTRL","ATMARP_ENCAP","ATMARP_MKIP","ATMARP_SETENTRY","ATMLEC_CTRL","ATMLEC_DATA","ATMLEC_MCAST","ATMMPC_CTRL","ATMMPC_DATA","ATMSIGD_CTRL","ATMTCP_CREATE","ATMTCP_REMOVE","ATM_ADDADDR","ATM_ADDLECSADDR","ATM_ADDPARTY","ATM_DELADDR","ATM_DELLECSADDR","ATM_DROPPARTY","ATM_GETADDR","ATM_GETCIRANGE","ATM_GETESI","ATM_GETLECSADDR","ATM_GETLINKRATE","ATM_GETLOOP","ATM_GETNAMES","ATM_GETSTAT","ATM_GETSTATZ","ATM_GETTYPE","ATM_NEWBACKENDIF","ATM_QUERYLOOP","ATM_RSTADDR","ATM_SETBACKEND","ATM_SETCIRANGE","ATM_SETESI","ATM_SETESIF","ATM_SETLOOP","ATM_SETSC","AUTOFS_DEV_IOCTL_ASKUMOUNT","AUTOFS_DEV_IOCTL_CATATONIC","AUTOFS_DEV_IOCTL_CLOSEMOUNT","AUTOFS_DEV_IOCTL_EXPIRE","AUTOFS_DEV_IOCTL_FAIL","AUTOFS_DEV_IOCTL_ISMOUNTPOINT","AUTOFS_DEV_IOCTL_OPENMOUNT","AUTOFS_DEV_IOCTL_PROTOSUBVER","AUTOFS_DEV_IOCTL_PROTOVER","AUTOFS_DEV_IOCTL_READY","AUTOFS_DEV_IOCTL_REQUESTER","AUTOFS_DEV_IOCTL_SETPIPEFD","AUTOFS_DEV_IOCTL_TIMEOUT","AUTOFS_DEV_IOCTL_VERSION","AUTOFS_IOC_ASKUMOUNT","AUTOFS_IOC_CATATONIC","AUTOFS_IOC_EXPIRE","AUTOFS_IOC_EXPIRE_MULTI","AUTOFS_IOC_FAIL","AUTOFS_IOC_PROTOSUBVER","AUTOFS_IOC_PROTOVER","AUTOFS_IOC_READY","AUTOFS_IOC_SETTIMEOUT","BLKALIGNOFF","BLKBSZGET","BLKBSZSET","BLKCLOSEZONE","BLKDISCARD","BLKDISCARDZEROES","BLKFINISHZONE","BLKFLSBUF","BLKFRAGET","BLKFRASET","BLKGETDISKSEQ","BLKGETNRZONES","BLKGETSIZE","BLKGETSIZE64","BLKGETZONESZ","BLKIOMIN","BLKIOOPT","BLKOPENZONE","BLKPBSZGET","BLKPG","BLKRAGET","BLKRASET","BLKREPORTZONE","BLKRESETZONE","BLKROGET","BLKROSET","BLKROTATIONAL","BLKRRPART","BLKSECDISCARD","BLKSECTGET","BLKSECTSET","BLKSSZGET","BLKTRACESETUP","BLKTRACESTART","BLKTRACESTOP","BLKTRACETEARDOWN","BLKZEROOUT","BR2684_SETFILT","BTRFS_IOC_ADD_DEV","BTRFS_IOC_BALANCE","BTRFS_IOC_BALANCE_CTL","BTRFS_IOC_BALANCE_PROGRESS","BTRFS_IOC_BALANCE_V2","BTRFS_IOC_CLONE","BTRFS_IOC_CLONE_RANGE","BTRFS_IOC_DEFAULT_SUBVOL","BTRFS_IOC_DEFRAG","BTRFS_IOC_DEFRAG_RANGE","BTRFS_IOC_DEVICES_READY","BTRFS_IOC_DEV_INFO","BTRFS_IOC_DEV_REPLACE","BTRFS_IOC_FILE_EXTENT_SAME","BTRFS_IOC_FORGET_DEV","BTRFS_IOC_FS_INFO","BTRFS_IOC_GET_DEV_STATS","BTRFS_IOC_GET_FEATURES","BTRFS_IOC_GET_SUBVOL_INFO","BTRFS_IOC_GET_SUBVOL_ROOTREF","BTRFS_IOC_GET_SUPPORTED_FEATURES","BTRFS_IOC_INO_LOOKUP","BTRFS_IOC_INO_LOOKUP_USER","BTRFS_IOC_INO_PATHS","BTRFS_IOC_LOGICAL_INO","BTRFS_IOC_LOGICAL_INO_V2","BTRFS_IOC_QGROUP_ASSIGN","BTRFS_IOC_QGROUP_CREATE","BTRFS_IOC_QGROUP_LIMIT","BTRFS_IOC_QUOTA_CTL","BTRFS_IOC_QUOTA_RESCAN","BTRFS_IOC_QUOTA_RESCAN_STATUS","BTRFS_IOC_QUOTA_RESCAN_WAIT","BTRFS_IOC_RESIZE","BTRFS_IOC_RM_DEV","BTRFS_IOC_RM_DEV_V2","BTRFS_IOC_SCAN_DEV","BTRFS_IOC_SCRUB","BTRFS_IOC_SCRUB_CANCEL","BTRFS_IOC_SCRUB_PROGRESS","BTRFS_IOC_SEND","BTRFS_IOC_SET_FEATURES","BTRFS_IOC_SET_RECEIVED_SUBVOL","BTRFS_IOC_SNAP_CREATE","BTRFS_IOC_SNAP_CREATE_V2","BTRFS_IOC_SNAP_DESTROY","BTRFS_IOC_SNAP_DESTROY_V2","BTRFS_IOC_SPACE_INFO","BTRFS_IOC_START_SYNC","BTRFS_IOC_SUBVOL_CREATE","BTRFS_IOC_SUBVOL_CREATE_V2","BTRFS_IOC_SUBVOL_GETFLAGS","BTRFS_IOC_SUBVOL_SETFLAGS","BTRFS_IOC_SYNC","BTRFS_IOC_TRANS_END","BTRFS_IOC_TRANS_START","BTRFS_IOC_TREE_SEARCH","BTRFS_IOC_TREE_SEARCH_V2","BTRFS_IOC_WAIT_SYNC","BT_BMC_IOCTL_SMS_ATN","CAPI_CLR_FLAGS","CAPI_GET_ERRCODE","CAPI_GET_FLAGS","CAPI_GET_MANUFACTURER","CAPI_GET_PROFILE","CAPI_GET_SERIAL","CAPI_GET_VERSION","CAPI_INSTALLED","CAPI_MANUFACTURER_CMD","CAPI_NCCI_GETUNIT","CAPI_NCCI_OPENCOUNT","CAPI_REGISTER","CAPI_SET_FLAGS","CCISS_BIG_PASSTHRU","CCISS_DEREGDISK","CCISS_GETBUSTYPES","CCISS_GETDRIVVER","CCISS_GETFIRMVER","CCISS_GETHEARTBEAT","CCISS_GETINTINFO","CCISS_GETLUNINFO","CCISS_GETNODENAME","CCISS_GETPCIINFO","CCISS_PASSTHRU","CCISS_REGNEWD","CCISS_REGNEWDISK","CCISS_RESCANDISK","CCISS_REVALIDVOLS","CCISS_SETINTINFO","CCISS_SETNODENAME","CEC_ADAP_G_CAPS","CEC_ADAP_G_CONNECTOR_INFO","CEC_ADAP_G_LOG_ADDRS","CEC_ADAP_G_PHYS_ADDR","CEC_ADAP_S_LOG_ADDRS","CEC_ADAP_S_PHYS_ADDR","CEC_DQEVENT","CEC_G_MODE","CEC_RECEIVE","CEC_S_MODE","CEC_TRANSMIT","CHIOEXCHANGE","CHIOGELEM","CHIOGPARAMS","CHIOGPICKER","CHIOGSTATUS","CHIOGVPARAMS","CHIOINITELEM","CHIOMOVE","CHIOPOSITION","CHIOSPICKER","CHIOSVOLTAG","CIOC_KERNEL_VERSION","CM_IOCGATR","CM_IOSDBGLVL","CXL_MEM_QUERY_COMMANDS","CXL_MEM_SEND_COMMAND","DELL_WMI_SMBIOS_CMD","DFL_FPGA_CHECK_EXTENSION","DFL_FPGA_FME_ERR_GET_IRQ_NUM","DFL_FPGA_FME_ERR_SET_IRQ","DFL_FPGA_FME_PORT_ASSIGN","DFL_FPGA_FME_PORT_PR","DFL_FPGA_FME_PORT_RELEASE","DFL_FPGA_GET_API_VERSION","DFL_FPGA_PORT_DMA_MAP","DFL_FPGA_PORT_DMA_UNMAP","DFL_FPGA_PORT_ERR_GET_IRQ_NUM","DFL_FPGA_PORT_ERR_SET_IRQ","DFL_FPGA_PORT_GET_INFO","DFL_FPGA_PORT_GET_REGION_INFO","DFL_FPGA_PORT_RESET","DFL_FPGA_PORT_UINT_GET_IRQ_NUM","DFL_FPGA_PORT_UINT_SET_IRQ","DMA_BUF_IOCTL_SYNC","DMA_BUF_SET_NAME","DMA_BUF_SET_NAME_A","DMA_BUF_SET_NAME_B","DMA_HEAP_IOCTL_ALLOC","DM_DEV_ARM_POLL","DM_DEV_CREATE","DM_DEV_REMOVE","DM_DEV_RENAME","DM_DEV_SET_GEOMETRY","DM_DEV_STATUS","DM_DEV_SUSPEND","DM_DEV_WAIT","DM_GET_TARGET_VERSION","DM_LIST_DEVICES","DM_LIST_VERSIONS","DM_REMOVE_ALL","DM_TABLE_CLEAR","DM_TABLE_DEPS","DM_TABLE_LOAD","DM_TABLE_STATUS","DM_TARGET_MSG","DM_VERSION","ENI_MEMDUMP","ENI_SETMULT","EVIOCGEFFECTS","EVIOCGID","EVIOCGKEYCODE","EVIOCGKEYCODE_V2","EVIOCGMASK","EVIOCGRAB","EVIOCGREP","EVIOCGVERSION","EVIOCREVOKE","EVIOCRMFF","EVIOCSCLOCKID","EVIOCSFF","EVIOCSKEYCODE","EVIOCSKEYCODE_V2","EVIOCSMASK","EVIOCSREP","EXT4_IOC32_GETRSVSZ","EXT4_IOC32_GETVERSION","EXT4_IOC32_GETVERSION_OLD","EXT4_IOC32_GROUP_EXTEND","EXT4_IOC32_SETRSVSZ","EXT4_IOC32_SETVERSION","EXT4_IOC32_SETVERSION_OLD","EXT4_IOC_ALLOC_DA_BLKS","EXT4_IOC_CHECKPOINT","EXT4_IOC_CLEAR_ES_CACHE","EXT4_IOC_GETRSVSZ","EXT4_IOC_GETSTATE","EXT4_IOC_GETVERSION","EXT4_IOC_GETVERSION_OLD","EXT4_IOC_GET_ES_CACHE","EXT4_IOC_GROUP_EXTEND","EXT4_IOC_MIGRATE","EXT4_IOC_PRECACHE_EXTENTS","EXT4_IOC_RESIZE_FS","EXT4_IOC_SETRSVSZ","EXT4_IOC_SETVERSION","EXT4_IOC_SETVERSION_OLD","EXT4_IOC_SHUTDOWN","EXT4_IOC_SWAP_BOOT","F2FS_IOC_COMMIT_ATOMIC_WRITE","F2FS_IOC_COMPRESS_FILE","F2FS_IOC_DECOMPRESS_FILE","F2FS_IOC_DEFRAGMENT","F2FS_IOC_FLUSH_DEVICE","F2FS_IOC_GARBAGE_COLLECT","F2FS_IOC_GARBAGE_COLLECT_RANGE","F2FS_IOC_GET_COMPRESS_BLOCKS","F2FS_IOC_GET_COMPRESS_OPTION","F2FS_IOC_GET_FEATURES","F2FS_IOC_GET_PIN_FILE","F2FS_IOC_MOVE_RANGE","F2FS_IOC_PRECACHE_EXTENTS","F2FS_IOC_RELEASE_COMPRESS_BLOCKS","F2FS_IOC_RELEASE_VOLATILE_WRITE","F2FS_IOC_RESERVE_COMPRESS_BLOCKS","F2FS_IOC_RESIZE_FS","F2FS_IOC_SEC_TRIM_FILE","F2FS_IOC_SET_COMPRESS_OPTION","F2FS_IOC_SET_PIN_FILE","F2FS_IOC_SHUTDOWN","F2FS_IOC_START_ATOMIC_WRITE","F2FS_IOC_START_VOLATILE_WRITE","F2FS_IOC_WRITE_CHECKPOINT","FAT_IOCTL_GET_ATTRIBUTES","FAT_IOCTL_GET_VOLUME_ID","FAT_IOCTL_SET_ATTRIBUTES","FBIOGET_VBLANK","FBIO_CURSOR","FBIO_GETCONTROL2","FBIO_RADEON_GET_MIRROR","FBIO_RADEON_SET_MIRROR","FBIO_WAITEVENT","FBIO_WAITFORVSYNC","FDCLRPRM","FDDEFPRM","FDEJECT","FDFLUSH","FDFMTBEG","FDFMTEND","FDFMTTRK","FDGETDRVPRM","FDGETDRVSTAT","FDGETDRVTYP","FDGETFDCSTAT","FDGETMAXERRS","FDGETPRM","FDMSGOFF","FDMSGON","FDPOLLDRVSTAT","FDRAWCMD","FDRESET","FDSETDRVPRM","FDSETEMSGTRESH","FDSETMAXERRS","FDSETPRM","FDTWADDLE","FDWERRORCLR","FDWERRORGET","FIBMAP","FICLONE","FICLONERANGE","FIDEDUPERANGE","FIFREEZE","FIGETBSZ","FIOASYNC","FIOCLEX","FIOGETOWN","FIONBIO","FIONCLEX","FIONREAD","FIOQSIZE","FIOSETOWN","FITHAW","FITRIM","FSI_SCOM_CHECK","FSI_SCOM_READ","FSI_SCOM_RESET","FSI_SCOM_WRITE","FSL_HV_IOCTL_DOORBELL","FSL_HV_IOCTL_GETPROP","FSL_HV_IOCTL_MEMCPY","FSL_HV_IOCTL_PARTITION_GET_STATUS","FSL_HV_IOCTL_PARTITION_RESTART","FSL_HV_IOCTL_PARTITION_START","FSL_HV_IOCTL_PARTITION_STOP","FSL_HV_IOCTL_SETPROP","FSL_MC_SEND_MC_COMMAND","FS_IOC32_GETFLAGS","FS_IOC32_GETVERSION","FS_IOC32_SETFLAGS","FS_IOC32_SETVERSION","FS_IOC_ADD_ENCRYPTION_KEY","FS_IOC_ENABLE_VERITY","FS_IOC_FIEMAP","FS_IOC_FSGETXATTR","FS_IOC_FSSETXATTR","FS_IOC_GETFLAGS","FS_IOC_GETFSLABEL","FS_IOC_GETFSMAP","FS_IOC_GETVERSION","FS_IOC_GET_ENCRYPTION_KEY_STATUS","FS_IOC_GET_ENCRYPTION_NONCE","FS_IOC_GET_ENCRYPTION_POLICY","FS_IOC_GET_ENCRYPTION_POLICY_EX","FS_IOC_GET_ENCRYPTION_PWSALT","FS_IOC_MEASURE_VERITY","FS_IOC_READ_VERITY_METADATA","FS_IOC_REMOVE_ENCRYPTION_KEY","FS_IOC_REMOVE_ENCRYPTION_KEY_ALL_USERS","FS_IOC_SETFLAGS","FS_IOC_SETFSLABEL","FS_IOC_SETVERSION","FS_IOC_SET_ENCRYPTION_POLICY","FUSE_DEV_IOC_CLONE","FW_CDEV_IOC_ADD_DESCRIPTOR","FW_CDEV_IOC_ALLOCATE","FW_CDEV_IOC_ALLOCATE_ISO_RESOURCE","FW_CDEV_IOC_ALLOCATE_ISO_RESOURCE_ONCE","FW_CDEV_IOC_CREATE_ISO_CONTEXT","FW_CDEV_IOC_DEALLOCATE","FW_CDEV_IOC_DEALLOCATE_ISO_RESOURCE","FW_CDEV_IOC_DEALLOCATE_ISO_RESOURCE_ONCE","FW_CDEV_IOC_FLUSH_ISO","FW_CDEV_IOC_GET_CYCLE_TIMER","FW_CDEV_IOC_GET_CYCLE_TIMER2","FW_CDEV_IOC_GET_INFO","FW_CDEV_IOC_GET_SPEED","FW_CDEV_IOC_INITIATE_BUS_RESET","FW_CDEV_IOC_QUEUE_ISO","FW_CDEV_IOC_RECEIVE_PHY_PACKETS","FW_CDEV_IOC_REMOVE_DESCRIPTOR","FW_CDEV_IOC_SEND_BROADCAST_REQUEST","FW_CDEV_IOC_SEND_PHY_PACKET","FW_CDEV_IOC_SEND_REQUEST","FW_CDEV_IOC_SEND_RESPONSE","FW_CDEV_IOC_SEND_STREAM_PACKET","FW_CDEV_IOC_SET_ISO_CHANNELS","FW_CDEV_IOC_START_ISO","FW_CDEV_IOC_STOP_ISO","GIO_CMAP","GIO_FONT","GIO_FONTX","GIO_SCRNMAP","GIO_UNIMAP","GIO_UNISCRNMAP","GPIOHANDLE_GET_LINE_VALUES_IOCTL","GPIOHANDLE_SET_CONFIG_IOCTL","GPIOHANDLE_SET_LINE_VALUES_IOCTL","GPIO_GET_CHIPINFO_IOCTL","GPIO_GET_LINEEVENT_IOCTL","GPIO_GET_LINEHANDLE_IOCTL","GPIO_GET_LINEINFO_IOCTL","GPIO_GET_LINEINFO_UNWATCH_IOCTL","GPIO_GET_LINEINFO_WATCH_IOCTL","GPIO_V2_GET_LINEINFO_IOCTL","GPIO_V2_GET_LINEINFO_WATCH_IOCTL","GPIO_V2_GET_LINE_IOCTL","GPIO_V2_LINE_GET_VALUES_IOCTL","GPIO_V2_LINE_SET_CONFIG_IOCTL","GPIO_V2_LINE_SET_VALUES_IOCTL","GSMIOC_DISABLE_NET","GSMIOC_ENABLE_NET","GSMIOC_GETCONF","GSMIOC_GETFIRST","GSMIOC_SETCONF","HE_GET_REG","HIDIOCAPPLICATION","HIDIOCGCOLLECTIONINDEX","HIDIOCGCOLLECTIONINFO","HIDIOCGDEVINFO","HIDIOCGFIELDINFO","HIDIOCGFLAG","HIDIOCGRAWINFO","HIDIOCGRDESC","HIDIOCGRDESCSIZE","HIDIOCGREPORT","HIDIOCGREPORTINFO","HIDIOCGSTRING","HIDIOCGUCODE","HIDIOCGUSAGE","HIDIOCGUSAGES","HIDIOCGVERSION","HIDIOCINITREPORT","HIDIOCSFLAG","HIDIOCSREPORT","HIDIOCSUSAGE","HIDIOCSUSAGES","HPET_DPI","HPET_EPI","HPET_IE_OFF","HPET_IE_ON","HPET_INFO","HPET_IRQFREQ","I2OEVTGET","I2OEVTREG","I2OGETIOPS","I2OHRTGET","I2OHTML","I2OLCTGET","I2OPARMGET","I2OPARMSET","I2OPASSTHRU","I2OPASSTHRU32","I2OSWDEL","I2OSWDL","I2OSWUL","I2OVALIDATE","I8K_GET_FAN","I8K_GET_SPEED","I8K_SET_FAN","IDT77105_GETSTAT","IDT77105_GETSTATZ","INOTIFY_IOC_SETNEXTWD","IOCTL_MEI_CONNECT_CLIENT","IOCTL_MEI_CONNECT_CLIENT_VTAG","IOCTL_MEI_NOTIFY_GET","IOCTL_MEI_NOTIFY_SET","IOCTL_VM_SOCKETS_GET_LOCAL_CID","IOC_OPAL_ACTIVATE_LSP","IOC_OPAL_ACTIVATE_USR","IOC_OPAL_ADD_USR_TO_LR","IOC_OPAL_ENABLE_DISABLE_MBR","IOC_OPAL_ERASE_LR","IOC_OPAL_GENERIC_TABLE_RW","IOC_OPAL_LOCK_UNLOCK","IOC_OPAL_LR_SETUP","IOC_OPAL_MBR_DONE","IOC_OPAL_PSID_REVERT_TPR","IOC_OPAL_REVERT_TPR","IOC_OPAL_SAVE","IOC_OPAL_SECURE_ERASE_LR","IOC_OPAL_SET_PW","IOC_OPAL_TAKE_OWNERSHIP","IOC_OPAL_WRITE_SHADOW_MBR","IOC_PR_CLEAR","IOC_PR_PREEMPT","IOC_PR_PREEMPT_ABORT","IOC_PR_REGISTER","IOC_PR_RELEASE","IOC_PR_RESERVE","IOC_WATCH_QUEUE_SET_FILTER","IOC_WATCH_QUEUE_SET_SIZE","IPMICTL_GET_MAINTENANCE_MODE_CMD","IPMICTL_GET_MY_ADDRESS_CMD","IPMICTL_GET_MY_CHANNEL_ADDRESS_CMD","IPMICTL_GET_MY_CHANNEL_LUN_CMD","IPMICTL_GET_MY_LUN_CMD","IPMICTL_GET_TIMING_PARMS_CMD","IPMICTL_RECEIVE_MSG","IPMICTL_RECEIVE_MSG_TRUNC","IPMICTL_REGISTER_FOR_CMD","IPMICTL_REGISTER_FOR_CMD_CHANS","IPMICTL_SEND_COMMAND","IPMICTL_SEND_COMMAND_SETTIME","IPMICTL_SET_GETS_EVENTS_CMD","IPMICTL_SET_MAINTENANCE_MODE_CMD","IPMICTL_SET_MY_ADDRESS_CMD","IPMICTL_SET_MY_CHANNEL_ADDRESS_CMD","IPMICTL_SET_MY_CHANNEL_LUN_CMD","IPMICTL_SET_MY_LUN_CMD","IPMICTL_SET_TIMING_PARMS_CMD","IPMICTL_UNREGISTER_FOR_CMD","IPMICTL_UNREGISTER_FOR_CMD_CHANS","IPMI_BMC_IOCTL_CLEAR_SMS_ATN","IPMI_BMC_IOCTL_FORCE_ABORT","IPMI_BMC_IOCTL_SET_SMS_ATN","ISST_IF_GET_PHY_ID","ISST_IF_GET_PLATFORM_INFO","ISST_IF_IO_CMD","ISST_IF_MBOX_COMMAND","ISST_IF_MSR_COMMAND","IVTVFB_IOC_DMA_FRAME","JSIOCGAXES","JSIOCGAXMAP","JSIOCGBTNMAP","JSIOCGBUTTONS","JSIOCGCORR","JSIOCGVERSION","JSIOCSAXMAP","JSIOCSBTNMAP","JSIOCSCORR","KCOV_DISABLE","KCOV_ENABLE","KCOV_INIT_TRACE","KCOV_REMOTE_ENABLE","KDADDIO","KDDELIO","KDDISABIO","KDENABIO","KDGETKEYCODE","KDGETLED","KDGETMODE","KDGKBDIACR","KDGKBENT","KDGKBLED","KDGKBMETA","KDGKBMODE","KDGKBSENT","KDGKBTYPE","KDMKTONE","KDSETKEYCODE","KDSETLED","KDSETMODE","KDSIGACCEPT","KDSKBENT","KDSKBLED","KDSKBMETA","KDSKBMODE","KDSKBSENT","KIOCSOUND","KVM_ARM_SET_DEVICE_ADDR","KVM_ARM_VCPU_FINALIZE","KVM_ASSIGN_DEV_IRQ","KVM_ASSIGN_PCI_DEVICE","KVM_ASSIGN_SET_INTX_MASK","KVM_ASSIGN_SET_MSIX_ENTRY","KVM_ASSIGN_SET_MSIX_NR","KVM_CHECK_EXTENSION","KVM_CLEAR_DIRTY_LOG","KVM_CREATE_DEVICE","KVM_CREATE_IRQCHIP","KVM_CREATE_PIT","KVM_CREATE_PIT2","KVM_CREATE_VCPU","KVM_CREATE_VM","KVM_DEASSIGN_DEV_IRQ","KVM_DEASSIGN_PCI_DEVICE","KVM_DIRTY_TLB","KVM_ENABLE_CAP","KVM_GET_API_VERSION","KVM_GET_CLOCK","KVM_GET_DEVICE_ATTR","KVM_GET_DIRTY_LOG","KVM_GET_FPU","KVM_GET_IRQCHIP","KVM_GET_MP_STATE","KVM_GET_NR_MMU_PAGES","KVM_GET_ONE_REG","KVM_GET_REGS","KVM_GET_REG_LIST","KVM_GET_SREGS","KVM_GET_STATS_FD","KVM_GET_TSC_KHZ","KVM_GET_VCPU_MMAP_SIZE","KVM_HAS_DEVICE_ATTR","KVM_HYPERV_EVENTFD","KVM_INTERRUPT","KVM_IOEVENTFD","KVM_IRQFD","KVM_IRQ_LINE","KVM_IRQ_LINE_STATUS","KVM_KVMCLOCK_CTRL","KVM_MEMORY_ENCRYPT_OP","KVM_MEMORY_ENCRYPT_REG_REGION","KVM_MEMORY_ENCRYPT_UNREG_REGION","KVM_NMI","KVM_PPC_ALLOCATE_HTAB","KVM_PPC_GET_PVINFO","KVM_PPC_GET_SMMU_INFO","KVM_PPC_RESIZE_HPT_COMMIT","KVM_PPC_RESIZE_HPT_PREPARE","KVM_PPC_SVM_OFF","KVM_REGISTER_COALESCED_MMIO","KVM_REINJECT_CONTROL","KVM_RESET_DIRTY_RINGS","KVM_RUN","KVM_S390_CLEAR_RESET","KVM_S390_ENABLE_SIE","KVM_S390_GET_CMMA_BITS","KVM_S390_GET_IRQ_STATE","KVM_S390_GET_SKEYS","KVM_S390_INITIAL_RESET","KVM_S390_INTERRUPT","KVM_S390_IRQ","KVM_S390_MEM_OP","KVM_S390_NORMAL_RESET","KVM_S390_PV_COMMAND","KVM_S390_SET_CMMA_BITS","KVM_S390_SET_INITIAL_PSW","KVM_S390_SET_IRQ_STATE","KVM_S390_SET_SKEYS","KVM_S390_STORE_STATUS","KVM_S390_UCAS_MAP","KVM_S390_UCAS_UNMAP","KVM_S390_VCPU_FAULT","KVM_SET_BOOT_CPU_ID","KVM_SET_CLOCK","KVM_SET_DEVICE_ATTR","KVM_SET_FPU","KVM_SET_GSI_ROUTING","KVM_SET_GUEST_DEBUG","KVM_SET_IDENTITY_MAP_ADDR","KVM_SET_IRQCHIP","KVM_SET_MP_STATE","KVM_SET_NR_MMU_PAGES","KVM_SET_ONE_REG","KVM_SET_REGS","KVM_SET_SIGNAL_MASK","KVM_SET_SREGS","KVM_SET_TSC_KHZ","KVM_SET_TSS_ADDR","KVM_SET_USER_MEMORY_REGION","KVM_SET_VAPIC_ADDR","KVM_SIGNAL_MSI","KVM_SMI","KVM_TPR_ACCESS_REPORTING","KVM_TRANSLATE","KVM_UNREGISTER_COALESCED_MMIO","KVM_X86_GET_MCE_CAP_SUPPORTED","KVM_X86_SETUP_MCE","KVM_XEN_HVM_GET_ATTR","KVM_XEN_HVM_SET_ATTR","KVM_XEN_VCPU_GET_ATTR","KVM_XEN_VCPU_SET_ATTR","LIRC_GET_FEATURES","LIRC_GET_LENGTH","LIRC_GET_MAX_TIMEOUT","LIRC_GET_MIN_TIMEOUT","LIRC_GET_REC_MODE","LIRC_GET_REC_RESOLUTION","LIRC_GET_REC_TIMEOUT","LIRC_GET_SEND_MODE","LIRC_SET_MEASURE_CARRIER_MODE","LIRC_SET_REC_CARRIER","LIRC_SET_REC_CARRIER_RANGE","LIRC_SET_REC_MODE","LIRC_SET_REC_TIMEOUT","LIRC_SET_REC_TIMEOUT_REPORTS","LIRC_SET_SEND_CARRIER","LIRC_SET_SEND_DUTY_CYCLE","LIRC_SET_SEND_MODE","LIRC_SET_TRANSMITTER_MASK","LIRC_SET_WIDEBAND_RECEIVER","LPSETTIMEOUT_NEW","MATROXFB_GET_ALL_OUTPUTS","MATROXFB_GET_AVAILABLE_OUTPUTS","MATROXFB_GET_OUTPUT_CONNECTION","MATROXFB_GET_OUTPUT_MODE","MATROXFB_SET_OUTPUT_CONNECTION","MATROXFB_SET_OUTPUT_MODE","MEDIA_IOC_DEVICE_INFO","MEDIA_IOC_ENUM_ENTITIES","MEDIA_IOC_ENUM_LINKS","MEDIA_IOC_G_TOPOLOGY","MEDIA_IOC_SETUP_LINK","MEDIA_REQUEST_IOC_QUEUE","MEDIA_REQUEST_IOC_REINIT","MEYEIOC_SYNC","MGSL_IOCCLRMODCOUNT","MGSL_IOCGGPIO","MGSL_IOCGIF","MGSL_IOCGPARAMS","MGSL_IOCGSTATS","MGSL_IOCGTXIDLE","MGSL_IOCGXCTRL","MGSL_IOCGXSYNC","MGSL_IOCLOOPTXDONE","MGSL_IOCRXENABLE","MGSL_IOCSGPIO","MGSL_IOCSIF","MGSL_IOCSPARAMS","MGSL_IOCSTXIDLE","MGSL_IOCSXCTRL","MGSL_IOCSXSYNC","MGSL_IOCTXABORT","MGSL_IOCTXENABLE","MGSL_IOCWAITEVENT","MGSL_IOCWAITGPIO","MMTIMER_GETBITS","MMTIMER_GETCOUNTER","MMTIMER_GETFREQ","MMTIMER_GETOFFSET","MMTIMER_GETRES","MMTIMER_MMAPAVAIL","MTIOCGET","MTIOCPOS","MTIOCTOP","NBD_CLEAR_QUE","NBD_CLEAR_SOCK","NBD_DISCONNECT","NBD_DO_IT","NBD_PRINT_DEBUG","NBD_SET_BLKSIZE","NBD_SET_FLAGS","NBD_SET_SIZE","NBD_SET_SIZE_BLOCKS","NBD_SET_SOCK","NBD_SET_TIMEOUT","ND_IOCTL_ARS_CAP","ND_IOCTL_ARS_START","ND_IOCTL_ARS_STATUS","ND_IOCTL_CALL","ND_IOCTL_CLEAR_ERROR","ND_IOCTL_DIMM_FLAGS","ND_IOCTL_GET_CONFIG_DATA","ND_IOCTL_GET_CONFIG_SIZE","ND_IOCTL_SET_CONFIG_DATA","ND_IOCTL_VENDOR","NE_ADD_VCPU","NE_CREATE_VM","NE_GET_IMAGE_LOAD_INFO","NE_SET_USER_MEMORY_REGION","NE_START_ENCLAVE","NILFS_IOCTL_CHANGE_CPMODE","NILFS_IOCTL_CLEAN_SEGMENTS","NILFS_IOCTL_DELETE_CHECKPOINT","NILFS_IOCTL_GET_BDESCS","NILFS_IOCTL_GET_CPINFO","NILFS_IOCTL_GET_CPSTAT","NILFS_IOCTL_GET_SUINFO","NILFS_IOCTL_GET_SUSTAT","NILFS_IOCTL_GET_VINFO","NILFS_IOCTL_RESIZE","NILFS_IOCTL_SET_ALLOC_RANGE","NILFS_IOCTL_SET_SUINFO","NILFS_IOCTL_SYNC","NS_ADJBUFLEV","NS_GETPSTAT","NS_GET_NSTYPE","NS_GET_OWNER_UID","NS_GET_PARENT","NS_GET_USERNS","NS_SETBUFLEV","NVME_IOCTL_ADMIN64_CMD","NVME_IOCTL_ADMIN_CMD","NVME_IOCTL_ID","NVME_IOCTL_IO64_CMD","NVME_IOCTL_IO_CMD","NVME_IOCTL_RESCAN","NVME_IOCTL_RESET","NVME_IOCTL_SUBMIT_IO","NVME_IOCTL_SUBSYS_RESET","NVRAM_INIT","NVRAM_SETCKS","PACKET_CTRL_CMD","PCITEST_BAR","PCITEST_CLEAR_IRQ","PCITEST_COPY","PCITEST_GET_IRQTYPE","PCITEST_LEGACY_IRQ","PCITEST_MSI","PCITEST_MSIX","PCITEST_READ","PCITEST_SET_IRQTYPE","PCITEST_WRITE","PERF_EVENT_IOC_ID","PERF_EVENT_IOC_MODIFY_ATTRIBUTES","PERF_EVENT_IOC_PAUSE_OUTPUT","PERF_EVENT_IOC_PERIOD","PERF_EVENT_IOC_QUERY_BPF","PERF_EVENT_IOC_SET_BPF","PERF_EVENT_IOC_SET_FILTER","PHN_GETREG","PHN_GETREGS","PHN_GET_REG","PHN_GET_REGS","PHN_NOT_OH","PHN_SETREG","PHN_SETREGS","PHN_SET_REG","PHN_SET_REGS","PIO_CMAP","PIO_FONT","PIO_FONTRESET","PIO_FONTX","PIO_SCRNMAP","PIO_UNIMAP","PIO_UNIMAPCLR","PIO_UNISCRNMAP","PMU_IOC_CAN_SLEEP","PMU_IOC_GET_BACKLIGHT","PMU_IOC_GET_MODEL","PMU_IOC_GRAB_BACKLIGHT","PMU_IOC_HAS_ADB","PMU_IOC_SET_BACKLIGHT","PMU_IOC_SLEEP","PPCLAIM","PPCLRIRQ","PPDATADIR","PPEXCL","PPFCONTROL","PPGETFLAGS","PPGETMODE","PPGETMODES","PPGETPHASE","PPGETTIME","PPNEGOT","PPPIOCATTACH","PPPIOCATTCHAN","PPPIOCBRIDGECHAN","PPPIOCCONNECT","PPPIOCDETACH","PPPIOCDISCONN","PPPIOCGASYNCMAP","PPPIOCGCHAN","PPPIOCGDEBUG","PPPIOCGFLAGS","PPPIOCGIDLE","PPPIOCGIDLE32","PPPIOCGIDLE64","PPPIOCGL2TPSTATS","PPPIOCGMRU","PPPIOCGNPMODE","PPPIOCGRASYNCMAP","PPPIOCGUNIT","PPPIOCGXASYNCMAP","PPPIOCNEWUNIT","PPPIOCSACTIVE","PPPIOCSASYNCMAP","PPPIOCSCOMPRESS","PPPIOCSDEBUG","PPPIOCSFLAGS","PPPIOCSMAXCID","PPPIOCSMRRU","PPPIOCSMRU","PPPIOCSNPMODE","PPPIOCSPASS","PPPIOCSRASYNCMAP","PPPIOCSXASYNCMAP","PPPIOCUNBRIDGECHAN","PPPIOCXFERUNIT","PPPOEIOCDFWD","PPPOEIOCSFWD","PPRCONTROL","PPRDATA","PPRELEASE","PPRSTATUS","PPSETFLAGS","PPSETMODE","PPSETPHASE","PPSETTIME","PPS_FETCH","PPS_GETCAP","PPS_GETPARAMS","PPS_KC_BIND","PPS_SETPARAMS","PPWCONTROL","PPWCTLONIRQ","PPWDATA","PPYIELD","PTP_CLOCK_GETCAPS","PTP_CLOCK_GETCAPS2","PTP_ENABLE_PPS","PTP_ENABLE_PPS2","PTP_EXTTS_REQUEST","PTP_EXTTS_REQUEST2","PTP_PEROUT_REQUEST","PTP_PEROUT_REQUEST2","PTP_PIN_GETFUNC","PTP_PIN_GETFUNC2","PTP_PIN_SETFUNC","PTP_PIN_SETFUNC2","PTP_SYS_OFFSET","PTP_SYS_OFFSET2","PTP_SYS_OFFSET_EXTENDED","PTP_SYS_OFFSET_EXTENDED2","PTP_SYS_OFFSET_PRECISE","PTP_SYS_OFFSET_PRECISE2","REISERFS_IOC_UNPACK","RFKILL_IOCTL_NOINPUT","RIO_ALLOC_DMA","RIO_CM_CHAN_ACCEPT","RIO_CM_CHAN_BIND","RIO_CM_CHAN_CLOSE","RIO_CM_CHAN_CONNECT","RIO_CM_CHAN_CREATE","RIO_CM_CHAN_LISTEN","RIO_CM_CHAN_RECEIVE","RIO_CM_CHAN_SEND","RIO_CM_EP_GET_LIST","RIO_CM_EP_GET_LIST_SIZE","RIO_CM_MPORT_GET_LIST","RIO_DEV_ADD","RIO_DEV_DEL","RIO_DISABLE_DOORBELL_RANGE","RIO_DISABLE_PORTWRITE_RANGE","RIO_ENABLE_DOORBELL_RANGE","RIO_ENABLE_PORTWRITE_RANGE","RIO_FREE_DMA","RIO_GET_EVENT_MASK","RIO_MAP_INBOUND","RIO_MAP_OUTBOUND","RIO_MPORT_GET_PROPERTIES","RIO_MPORT_MAINT_COMPTAG_SET","RIO_MPORT_MAINT_HDID_SET","RIO_MPORT_MAINT_PORT_IDX_GET","RIO_MPORT_MAINT_READ_LOCAL","RIO_MPORT_MAINT_READ_REMOTE","RIO_MPORT_MAINT_WRITE_LOCAL","RIO_MPORT_MAINT_WRITE_REMOTE","RIO_SET_EVENT_MASK","RIO_TRANSFER","RIO_UNMAP_INBOUND","RIO_UNMAP_OUTBOUND","RIO_WAIT_FOR_ASYNC","RNDADDENTROPY","RNDADDTOENTCNT","RNDCLEARPOOL","RNDGETENTCNT","RNDGETPOOL","RNDRESEEDCRNG","RNDZAPENTCNT","RPMSG_CREATE_EPT_IOCTL","RPMSG_DESTROY_EPT_IOCTL","RPROC_GET_SHUTDOWN_ON_RELEASE","RPROC_SET_SHUTDOWN_ON_RELEASE","RTC_AIE_OFF","RTC_AIE_ON","RTC_ALM_READ","RTC_ALM_SET","RTC_EPOCH_READ","RTC_EPOCH_SET","RTC_IRQP_READ","RTC_IRQP_SET","RTC_PIE_OFF","RTC_PIE_ON","RTC_PLL_GET","RTC_PLL_SET","RTC_RD_TIME","RTC_SET_TIME","RTC_UIE_OFF","RTC_UIE_ON","RTC_VL_CLR","RTC_VL_READ","RTC_WIE_OFF","RTC_WIE_ON","RTC_WKALM_RD","RTC_WKALM_SET","SCIF_ACCEPTREG","SCIF_ACCEPTREQ","SCIF_BIND","SCIF_CONNECT","SCIF_FENCE_MARK","SCIF_FENCE_SIGNAL","SCIF_FENCE_WAIT","SCIF_GET_NODEIDS","SCIF_LISTEN","SCIF_READFROM","SCIF_RECV","SCIF_REG","SCIF_SEND","SCIF_UNREG","SCIF_VREADFROM","SCIF_VWRITETO","SCIF_WRITETO","SEV_ISSUE_CMD","SIOCADDDLCI","SIOCADDMULTI","SIOCADDRT","SIOCATMARK","SIOCDARP","SIOCDELDLCI","SIOCDELMULTI","SIOCDELRT","SIOCDEVPRIVATE","SIOCDIFADDR","SIOCDRARP","SIOCGARP","SIOCGIFADDR","SIOCGIFBR","SIOCGIFBRDADDR","SIOCGIFCONF","SIOCGIFCOUNT","SIOCGIFDSTADDR","SIOCGIFENCAP","SIOCGIFFLAGS","SIOCGIFHWADDR","SIOCGIFINDEX","SIOCGIFMAP","SIOCGIFMEM","SIOCGIFMETRIC","SIOCGIFMTU","SIOCGIFNAME","SIOCGIFNETMASK","SIOCGIFPFLAGS","SIOCGIFSLAVE","SIOCGIFTXQLEN","SIOCGPGRP","SIOCGRARP","SIOCGSTAMP","SIOCGSTAMPNS_NEW","SIOCGSTAMP_NEW","SIOCMKCLIP","SIOCPROTOPRIVATE","SIOCRTMSG","SIOCSARP","SIOCSIFADDR","SIOCSIFATMTCP","SIOCSIFBR","SIOCSIFBRDADDR","SIOCSIFDSTADDR","SIOCSIFENCAP","SIOCSIFFLAGS","SIOCSIFHWADDR","SIOCSIFHWBROADCAST","SIOCSIFLINK","SIOCSIFMAP","SIOCSIFMEM","SIOCSIFMETRIC","SIOCSIFMTU","SIOCSIFNAME","SIOCSIFNETMASK","SIOCSIFPFLAGS","SIOCSIFSLAVE","SIOCSIFTXQLEN","SIOCSPGRP","SIOCSRARP","SIOGIFINDEX","SNAPSHOT_ALLOC_SWAP_PAGE","SNAPSHOT_ATOMIC_RESTORE","SNAPSHOT_AVAIL_SWAP_SIZE","SNAPSHOT_CREATE_IMAGE","SNAPSHOT_FREE","SNAPSHOT_FREEZE","SNAPSHOT_FREE_SWAP_PAGES","SNAPSHOT_GET_IMAGE_SIZE","SNAPSHOT_PLATFORM_SUPPORT","SNAPSHOT_POWER_OFF","SNAPSHOT_PREF_IMAGE_SIZE","SNAPSHOT_S2RAM","SNAPSHOT_SET_SWAP_AREA","SNAPSHOT_UNFREEZE","SONET_CLRDIAG","SONET_GETDIAG","SONET_GETFRAMING","SONET_GETFRSENSE","SONET_GETSTAT","SONET_GETSTATZ","SONET_SETDIAG","SONET_SETFRAMING","SONYPI_IOCGBAT1CAP","SONYPI_IOCGBAT1REM","SONYPI_IOCGBAT2CAP","SONYPI_IOCGBAT2REM","SONYPI_IOCGBATFLAGS","SONYPI_IOCGBLUE","SONYPI_IOCGBRT","SONYPI_IOCGFAN","SONYPI_IOCGTEMP","SONYPI_IOCSBLUE","SONYPI_IOCSBRT","SONYPI_IOCSFAN","SPIOCSTYPE","STP_POLICY_ID_GET","STP_POLICY_ID_SET","STP_SET_OPTIONS","SWITCHTEC_IOCTL_EVENT_CTL","SWITCHTEC_IOCTL_EVENT_SUMMARY","SWITCHTEC_IOCTL_EVENT_SUMMARY_LEGACY","SWITCHTEC_IOCTL_FLASH_INFO","SWITCHTEC_IOCTL_FLASH_PART_INFO","SWITCHTEC_IOCTL_PFF_TO_PORT","SWITCHTEC_IOCTL_PORT_TO_PFF","SYNC_IOC_FILE_INFO","SYNC_IOC_MERGE","TCFLSH","TCGETA","TCGETS","TCGETS2","TCGETX","TCSBRK","TCSBRKP","TCSETA","TCSETAF","TCSETAW","TCSETS","TCSETS2","TCSETSF","TCSETSF2","TCSETSW","TCSETSW2","TCSETX","TCSETXF","TCSETXW","TCXONC","TEE_IOC_CANCEL","TEE_IOC_CLOSE_SESSION","TEE_IOC_INVOKE","TEE_IOC_OPEN_SESSION","TEE_IOC_SHM_ALLOC","TEE_IOC_SHM_REGISTER","TEE_IOC_SUPPL_RECV","TEE_IOC_SUPPL_SEND","TEE_IOC_VERSION","TFD_IOC_SET_TICKS","TIOCCBRK","TIOCCONS","TIOCEXCL","TIOCGDEV","TIOCGETD","TIOCGEXCL","TIOCGICOUNT","TIOCGLCKTRMIOS","TIOCGPGRP","TIOCGPKT","TIOCGPTLCK","TIOCGPTN","TIOCGPTPEER","TIOCGRS485","TIOCGSERIAL","TIOCGSID","TIOCGSOFTCAR","TIOCGWINSZ","TIOCINQ","TIOCLINUX","TIOCMBIC","TIOCMBIS","TIOCMGET","TIOCMIWAIT","TIOCMSET","TIOCNOTTY","TIOCNXCL","TIOCOUTQ","TIOCPKT","TIOCSBRK","TIOCSCTTY","TIOCSERCONFIG","TIOCSERGETLSR","TIOCSERGETMULTI","TIOCSERGSTRUCT","TIOCSERGWILD","TIOCSERSETMULTI","TIOCSERSWILD","TIOCSETD","TIOCSIG","TIOCSLCKTRMIOS","TIOCSPGRP","TIOCSPTLCK","TIOCSRS485","TIOCSSERIAL","TIOCSSOFTCAR","TIOCSTI","TIOCSWINSZ","TIOCVHANGUP","TOSHIBA_ACPI_SCI","TOSH_SMM","TUNATTACHFILTER","TUNDETACHFILTER","TUNGETDEVNETNS","TUNGETFEATURES","TUNGETFILTER","TUNGETIFF","TUNGETSNDBUF","TUNGETVNETBE","TUNGETVNETHDRSZ","TUNGETVNETLE","TUNSETCARRIER","TUNSETDEBUG","TUNSETFILTEREBPF","TUNSETGROUP","TUNSETIFF","TUNSETIFINDEX","TUNSETLINK","TUNSETNOCSUM","TUNSETOFFLOAD","TUNSETOWNER","TUNSETPERSIST","TUNSETQUEUE","TUNSETSNDBUF","TUNSETSTEERINGEBPF","TUNSETTXFILTER","TUNSETVNETBE","TUNSETVNETHDRSZ","TUNSETVNETLE","UDF_GETEABLOCK","UDF_GETEASIZE","UDF_GETVOLIDENT","UDF_RELOCATE_BLOCKS","UDMABUF_CREATE","UDMABUF_CREATE_LIST","UFFDIO_API","UFFDIO_CONTINUE","UFFDIO_COPY","UFFDIO_REGISTER","UFFDIO_UNREGISTER","UFFDIO_WAKE","UFFDIO_WRITEPROTECT","UFFDIO_ZEROPAGE","UI_ABS_SETUP","UI_BEGIN_FF_ERASE","UI_BEGIN_FF_UPLOAD","UI_DEV_CREATE","UI_DEV_DESTROY","UI_DEV_SETUP","UI_END_FF_ERASE","UI_END_FF_UPLOAD","UI_GET_VERSION","UI_SET_ABSBIT","UI_SET_EVBIT","UI_SET_FFBIT","UI_SET_KEYBIT","UI_SET_LEDBIT","UI_SET_MSCBIT","UI_SET_PHYS","UI_SET_PROPBIT","UI_SET_RELBIT","UI_SET_SNDBIT","UI_SET_SWBIT","USBDEVFS_ALLOC_STREAMS","USBDEVFS_ALLOW_SUSPEND","USBDEVFS_BULK","USBDEVFS_CLAIMINTERFACE","USBDEVFS_CLAIM_PORT","USBDEVFS_CLEAR_HALT","USBDEVFS_CONNECT","USBDEVFS_CONNECTINFO","USBDEVFS_CONTROL","USBDEVFS_DISCARDURB","USBDEVFS_DISCONNECT","USBDEVFS_DISCONNECT_CLAIM","USBDEVFS_DISCSIGNAL","USBDEVFS_DROP_PRIVILEGES","USBDEVFS_FORBID_SUSPEND","USBDEVFS_FREE_STREAMS","USBDEVFS_GETDRIVER","USBDEVFS_GET_CAPABILITIES","USBDEVFS_GET_SPEED","USBDEVFS_HUB_PORTINFO","USBDEVFS_IOCTL","USBDEVFS_REAPURB","USBDEVFS_REAPURB32","USBDEVFS_REAPURBNDELAY","USBDEVFS_REAPURBNDELAY32","USBDEVFS_RELEASEINTERFACE","USBDEVFS_RELEASE_PORT","USBDEVFS_RESET","USBDEVFS_RESETEP","USBDEVFS_SETCONFIGURATION","USBDEVFS_SETINTERFACE","USBDEVFS_SUBMITURB","USBDEVFS_WAIT_FOR_RESUME","UVCIOC_CTRL_MAP","UVCIOC_CTRL_QUERY","VBG_IOCTL_ACQUIRE_GUEST_CAPABILITIES","VBG_IOCTL_CHANGE_FILTER_MASK","VBG_IOCTL_CHANGE_GUEST_CAPABILITIES","VBG_IOCTL_CHECK_BALLOON","VBG_IOCTL_DRIVER_VERSION_INFO","VBG_IOCTL_HGCM_CONNECT","VBG_IOCTL_HGCM_DISCONNECT","VBG_IOCTL_INTERRUPT_ALL_WAIT_FOR_EVENTS","VBG_IOCTL_VMMDEV_REQUEST_BIG","VBG_IOCTL_WAIT_FOR_EVENTS","VBG_IOCTL_WRITE_CORE_DUMP","VDUSE_CREATE_DEV","VDUSE_DESTROY_DEV","VDUSE_DEV_GET_FEATURES","VDUSE_DEV_INJECT_CONFIG_IRQ","VDUSE_DEV_SET_CONFIG","VDUSE_GET_API_VERSION","VDUSE_IOTLB_GET_FD","VDUSE_SET_API_VERSION","VDUSE_VQ_GET_INFO","VDUSE_VQ_INJECT_IRQ","VDUSE_VQ_SETUP","VDUSE_VQ_SETUP_KICKFD","VFAT_IOCTL_READDIR_BOTH","VFAT_IOCTL_READDIR_SHORT","VFIO_CHECK_EXTENSION","VFIO_DEVICE_FEATURE","VFIO_DEVICE_GET_GFX_DMABUF","VFIO_DEVICE_GET_INFO","VFIO_DEVICE_GET_IRQ_INFO","VFIO_DEVICE_GET_PCI_HOT_RESET_INFO","VFIO_DEVICE_GET_REGION_INFO","VFIO_DEVICE_IOEVENTFD","VFIO_DEVICE_PCI_HOT_RESET","VFIO_DEVICE_QUERY_GFX_PLANE","VFIO_DEVICE_RESET","VFIO_DEVICE_SET_IRQS","VFIO_EEH_PE_OP","VFIO_GET_API_VERSION","VFIO_GROUP_GET_DEVICE_FD","VFIO_GROUP_GET_STATUS","VFIO_GROUP_SET_CONTAINER","VFIO_GROUP_UNSET_CONTAINER","VFIO_IOMMU_DIRTY_PAGES","VFIO_IOMMU_DISABLE","VFIO_IOMMU_ENABLE","VFIO_IOMMU_GET_INFO","VFIO_IOMMU_MAP_DMA","VFIO_IOMMU_SPAPR_REGISTER_MEMORY","VFIO_IOMMU_SPAPR_TCE_CREATE","VFIO_IOMMU_SPAPR_TCE_GET_INFO","VFIO_IOMMU_SPAPR_TCE_REMOVE","VFIO_IOMMU_SPAPR_UNREGISTER_MEMORY","VFIO_IOMMU_UNMAP_DMA","VFIO_SET_IOMMU","VHOST_GET_BACKEND_FEATURES","VHOST_GET_FEATURES","VHOST_GET_VRING_BASE","VHOST_GET_VRING_BUSYLOOP_TIMEOUT","VHOST_GET_VRING_ENDIAN","VHOST_NET_SET_BACKEND","VHOST_RESET_OWNER","VHOST_SCSI_CLEAR_ENDPOINT","VHOST_SCSI_GET_ABI_VERSION","VHOST_SCSI_GET_EVENTS_MISSED","VHOST_SCSI_SET_ENDPOINT","VHOST_SCSI_SET_EVENTS_MISSED","VHOST_SET_BACKEND_FEATURES","VHOST_SET_FEATURES","VHOST_SET_LOG_BASE","VHOST_SET_LOG_FD","VHOST_SET_MEM_TABLE","VHOST_SET_OWNER","VHOST_SET_VRING_ADDR","VHOST_SET_VRING_BASE","VHOST_SET_VRING_BUSYLOOP_TIMEOUT","VHOST_SET_VRING_CALL","VHOST_SET_VRING_ENDIAN","VHOST_SET_VRING_ERR","VHOST_SET_VRING_KICK","VHOST_SET_VRING_NUM","VHOST_VDPA_GET_CONFIG","VHOST_VDPA_GET_DEVICE_ID","VHOST_VDPA_GET_IOVA_RANGE","VHOST_VDPA_GET_STATUS","VHOST_VDPA_GET_VRING_NUM","VHOST_VDPA_SET_CONFIG","VHOST_VDPA_SET_CONFIG_CALL","VHOST_VDPA_SET_STATUS","VHOST_VDPA_SET_VRING_ENABLE","VHOST_VSOCK_SET_GUEST_CID","VHOST_VSOCK_SET_RUNNING","VIDIOC_AM437X_CCDC_CFG","VIDIOC_CREATE_BUFS","VIDIOC_CROPCAP","VIDIOC_DBG_G_CHIP_INFO","VIDIOC_DBG_G_REGISTER","VIDIOC_DBG_S_REGISTER","VIDIOC_DECODER_CMD","VIDIOC_DQBUF","VIDIOC_DQEVENT","VIDIOC_DV_TIMINGS_CAP","VIDIOC_ENCODER_CMD","VIDIOC_ENUMAUDIO","VIDIOC_ENUMAUDOUT","VIDIOC_ENUMINPUT","VIDIOC_ENUMOUTPUT","VIDIOC_ENUMSTD","VIDIOC_ENUM_DV_TIMINGS","VIDIOC_ENUM_FMT","VIDIOC_ENUM_FRAMEINTERVALS","VIDIOC_ENUM_FRAMESIZES","VIDIOC_ENUM_FREQ_BANDS","VIDIOC_EXPBUF","VIDIOC_G_AUDIO","VIDIOC_G_AUDOUT","VIDIOC_G_CROP","VIDIOC_G_CTRL","VIDIOC_G_DV_TIMINGS","VIDIOC_G_EDID","VIDIOC_G_ENC_INDEX","VIDIOC_G_EXT_CTRLS","VIDIOC_G_FBUF","VIDIOC_G_FMT","VIDIOC_G_FREQUENCY","VIDIOC_G_INPUT","VIDIOC_G_JPEGCOMP","VIDIOC_G_MODULATOR","VIDIOC_G_OUTPUT","VIDIOC_G_PARM","VIDIOC_G_PRIORITY","VIDIOC_G_SELECTION","VIDIOC_G_SLICED_VBI_CAP","VIDIOC_G_STD","VIDIOC_G_TUNER","VIDIOC_LOG_STATUS","VIDIOC_OMAP3ISP_AEWB_CFG","VIDIOC_OMAP3ISP_AF_CFG","VIDIOC_OMAP3ISP_CCDC_CFG","VIDIOC_OMAP3ISP_HIST_CFG","VIDIOC_OMAP3ISP_PRV_CFG","VIDIOC_OMAP3ISP_STAT_EN","VIDIOC_OMAP3ISP_STAT_REQ","VIDIOC_OVERLAY","VIDIOC_PREPARE_BUF","VIDIOC_QBUF","VIDIOC_QUERYBUF","VIDIOC_QUERYCAP","VIDIOC_QUERYCTRL","VIDIOC_QUERYMENU","VIDIOC_QUERYSTD","VIDIOC_QUERY_DV_TIMINGS","VIDIOC_QUERY_EXT_CTRL","VIDIOC_REQBUFS","VIDIOC_STREAMOFF","VIDIOC_STREAMON","VIDIOC_SUBDEV_DV_TIMINGS_CAP","VIDIOC_SUBDEV_ENUMSTD","VIDIOC_SUBDEV_ENUM_DV_TIMINGS","VIDIOC_SUBDEV_ENUM_FRAME_INTERVAL","VIDIOC_SUBDEV_ENUM_FRAME_SIZE","VIDIOC_SUBDEV_ENUM_MBUS_CODE","VIDIOC_SUBDEV_G_CROP","VIDIOC_SUBDEV_G_DV_TIMINGS","VIDIOC_SUBDEV_G_EDID","VIDIOC_SUBDEV_G_FMT","VIDIOC_SUBDEV_G_FRAME_INTERVAL","VIDIOC_SUBDEV_G_SELECTION","VIDIOC_SUBDEV_G_STD","VIDIOC_SUBDEV_QUERYCAP","VIDIOC_SUBDEV_QUERYSTD","VIDIOC_SUBDEV_QUERY_DV_TIMINGS","VIDIOC_SUBDEV_S_CROP","VIDIOC_SUBDEV_S_DV_TIMINGS","VIDIOC_SUBDEV_S_EDID","VIDIOC_SUBDEV_S_FMT","VIDIOC_SUBDEV_S_FRAME_INTERVAL","VIDIOC_SUBDEV_S_SELECTION","VIDIOC_SUBDEV_S_STD","VIDIOC_SUBSCRIBE_EVENT","VIDIOC_S_AUDIO","VIDIOC_S_AUDOUT","VIDIOC_S_CROP","VIDIOC_S_CTRL","VIDIOC_S_DV_TIMINGS","VIDIOC_S_EDID","VIDIOC_S_EXT_CTRLS","VIDIOC_S_FBUF","VIDIOC_S_FMT","VIDIOC_S_FREQUENCY","VIDIOC_S_HW_FREQ_SEEK","VIDIOC_S_INPUT","VIDIOC_S_JPEGCOMP","VIDIOC_S_MODULATOR","VIDIOC_S_OUTPUT","VIDIOC_S_PARM","VIDIOC_S_PRIORITY","VIDIOC_S_SELECTION","VIDIOC_S_STD","VIDIOC_S_TUNER","VIDIOC_TRY_DECODER_CMD","VIDIOC_TRY_ENCODER_CMD","VIDIOC_TRY_EXT_CTRLS","VIDIOC_TRY_FMT","VIDIOC_UNSUBSCRIBE_EVENT","VTPM_PROXY_IOC_NEW_DEV","VT_ACTIVATE","VT_DISALLOCATE","VT_GETMODE","VT_GETSTATE","VT_OPENQRY","VT_RELDISP","VT_RESIZE","VT_RESIZEX","VT_SETMODE","VT_WAITACTIVE","WDIOC_GETBOOTSTATUS","WDIOC_GETPRETIMEOUT","WDIOC_GETSTATUS","WDIOC_GETSUPPORT","WDIOC_GETTEMP","WDIOC_GETTIMELEFT","WDIOC_GETTIMEOUT","WDIOC_KEEPALIVE","WDIOC_SETOPTIONS","WDIOC_SETPRETIMEOUT","WDIOC_SETTIMEOUT","ZATM_GETPOOL","ZATM_GETPOOLZ","ZATM_SETPOOL","FD_CLR","FD_ISSET","FD_SET","FD_ZERO","SIG_DFL","sig_ign"],"q":[[0,"linux_raw_sys"],[7,"linux_raw_sys::ctypes"],[29,"linux_raw_sys::elf"],[202,"linux_raw_sys::errno"],[335,"linux_raw_sys::general"],[3689,"linux_raw_sys::ioctl"],[5280,"linux_raw_sys::select_macros"],[5284,"linux_raw_sys::signal_macros"]],"d":["","The ELF ABI. 🧝","","","","","","","","","","","","","","","","","","","","","Equivalent to C’s <code>void</code> type when used as a pointer.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeust doesn’t currently permit us to use <code>transmute</code> to …"],"i":[0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,143,9,9,144,145,146,147,143,10,7,8,9,144,145,146,147,143,10,7,8,9,7,8,9,8,7,7,8,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,145,146,147,143,10,7,8,9,144,145,146,147,143,10,7,8,9,145,145,145,145,145,145,145,145,10,10,10,146,146,146,146,146,146,144,145,146,147,143,10,7,8,9,144,145,146,147,143,10,7,8,9,10,144,145,146,147,143,10,7,8,9,147,147,147,147,147,147,147,143,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,108,108,108,108,108,108,108,108,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,110,109,109,109,109,109,109,109,109,109,109,109,109,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,69,75,116,105,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36,100,0,148,32,34,128,35,36,44,79,112,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,80,0,0,0,0,0,100,0,0,0,69,115,115,115,74,78,73,105,105,74,72,70,71,73,72,78,114,70,66,117,115,65,67,68,71,114,116,76,114,117,77,114,114,114,66,67,68,68,66,74,66,117,114,115,72,65,67,68,70,68,88,93,87,12,12,12,12,37,37,105,148,16,12,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,128,35,36,37,38,39,40,129,41,42,43,44,45,46,130,47,131,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,132,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,148,16,12,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,128,35,36,37,38,39,40,129,41,42,43,44,45,46,130,47,131,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,132,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,131,131,40,81,82,83,85,81,82,83,85,81,82,83,85,82,83,81,82,83,85,81,82,83,85,81,82,83,85,82,83,0,0,0,62,62,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,0,16,0,105,30,32,130,96,132,132,132,132,132,21,23,29,16,12,112,129,40,38,40,96,42,20,91,131,105,0,16,48,108,109,110,87,29,47,62,102,103,104,102,103,104,102,103,104,102,103,104,102,103,104,102,103,104,102,103,104,102,103,104,102,103,104,102,103,104,0,102,103,104,102,103,104,47,17,88,93,0,0,0,30,32,0,28,30,32,44,62,88,0,0,16,12,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,128,37,38,39,40,129,41,42,43,44,45,46,130,47,131,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,68,70,71,72,73,74,78,79,80,81,82,83,84,85,86,89,90,91,92,93,94,95,96,97,98,99,132,100,101,102,103,104,105,106,107,108,109,110,118,148,16,12,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,128,35,36,37,38,39,40,129,41,42,43,44,45,46,130,47,131,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,132,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,90,0,0,0,0,0,0,0,0,0,0,0,0,0,43,43,43,43,43,43,0,46,0,16,16,16,108,109,110,112,129,20,22,24,0,0,148,16,12,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,128,35,36,37,38,39,40,129,41,42,43,44,45,46,130,47,131,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,132,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,93,95,86,86,0,49,52,56,57,49,52,56,57,0,0,0,0,148,148,35,36,0,26,27,26,27,26,27,26,27,26,27,39,130,90,94,96,105,105,0,46,46,105,21,23,99,130,30,32,41,0,0,39,28,31,95,96,97,98,99,0,130,16,12,105,45,41,41,42,42,0,118,62,16,20,22,24,19,25,62,33,33,0,37,119,0,95,97,98,99,148,31,128,148,105,118,35,118,40,118,129,87,92,129,87,92,87,92,28,47,60,61,60,61,0,0,0,0,23,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,0,63,107,63,107,63,107,63,107,105,105,16,16,105,105,105,105,105,105,62,62,105,76,76,76,106,0,0,77,77,77,0,0,0,0,0,0,0,0,0,0,0,113,113,31,0,96,38,38,129,38,129,64,64,64,100,101,100,100,100,100,101,100,100,101,100,101,100,101,100,101,100,101,100,100,101,100,101,100,101,100,101,62,62,0,39,91,94,0,0,0,36,40,36,0,0,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,0,0,0,0,0,0,0,62,90,148,16,12,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,128,35,36,37,38,39,40,129,41,42,43,44,45,46,130,47,131,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,132,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,148,16,12,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,128,35,36,37,38,39,40,129,41,42,43,44,45,46,130,47,131,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,132,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,48,51,54,79,48,50,51,53,54,55,79,50,53,55,25,34,128,148,16,12,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,128,35,36,37,38,39,40,129,41,42,43,44,45,46,130,47,131,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,132,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,58,58,34,44,89,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,105,36,0,37,111,111,18,44,19,30,32,111,0,0,0,0,130,0,84,84,84,84,97,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2],[[4,[3]]]],[[]],[[]],[[],4],[[],4],[[],5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[6,6],[6,6],[6,6],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7,7],[8,8],[9,9],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[10,11],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[12],[[12,13],14],[12],[[12,13],14],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[16,[15]]],[[16,[15]]]],[17,17],[18,18],[19,19],[20,20],[21,21],[22,22],[23,23],[24,24],[25,25],[26,26],[27,27],[28,28],[29,29],[30,30],[31,31],[32,32],[33,33],[34,34],[35,35],[36,36],[37,37],[38,38],[39,39],[40,40],[41,41],[42,42],[43,43],[44,44],[45,45],[46,46],[47,47],[48,48],[49,49],[50,50],[51,51],[52,52],[53,53],[54,54],[55,55],[56,56],[57,57],[58,58],[59,59],[60,60],[61,61],[62,62],[63,63],[64,64],[65,65],[66,66],[67,67],[68,68],[69,69],[70,70],[71,71],[72,72],[73,73],[74,74],[75,75],[76,76],[77,77],[78,78],[79,79],[80,80],[81,81],[82,82],[83,83],[84,84],[85,85],[86,86],[87,87],[88,88],[89,89],[90,90],[91,91],[92,92],[93,93],[94,94],[95,95],[96,96],[97,97],[98,98],[99,99],[100,100],[101,101],[102,102],[103,103],[104,104],[105,105],[106,106],[107,107],[108,108],[109,109],[110,110],[111,111],[112,112],[113,113],[114,114],[115,115],[116,116],[117,117],[118,118],[119,119],0,[[[16,[120]],[16,[120]]],121],0,[105,122],0,0,0,0,0,0,0,0,0,0,0,0,[[],[[16,[123]]]],[[],[[12,[123]]]],0,0,0,0,0,0,0,0,0,0,0,0,[[[16,[124]],[16,[124]]],125],[[48,48],125],[[108,108],125],[[109,109],125],[[110,110],125],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[16,[126]],2],127],[[12,2],127],[[17,2],127],[[18,2],127],[[19,2],127],[[20,2],127],[[21,2],127],[[22,2],127],[[23,2],127],[[24,2],127],[[25,2],127],[[26,2],127],[[27,2],127],[[28,2],127],[[29,2],127],[[30,2],127],[[31,2],127],[[32,2],127],[[128,2],127],[[37,2],127],[[38,2],127],[[39,2],127],[[40,2],127],[[129,2],127],[[41,2],127],[[42,2],127],[[43,2],127],[[44,2],127],[[45,2],127],[[46,2],127],[[130,2],127],[[47,2],127],[[131,2],127],[[48,2],127],[[49,2],127],[[50,2],127],[[51,2],127],[[52,2],127],[[53,2],127],[[54,2],127],[[55,2],127],[[56,2],127],[[57,2],127],[[58,2],127],[[59,2],127],[[60,2],127],[[61,2],127],[[62,2],127],[[63,2],127],[[64,2],127],[[65,2],127],[[68,2],127],[[70,2],127],[[71,2],127],[[72,2],127],[[73,2],127],[[74,2],127],[[78,2],127],[[79,2],127],[[80,2],127],[[81,2],127],[[82,2],127],[[83,2],127],[[84,2],127],[[85,2],127],[[86,2],127],[[89,2],127],[[90,2],127],[[91,2],127],[[92,2],127],[[93,2],127],[[94,2],127],[[95,2],127],[[96,2],127],[[97,2],127],[[98,2],127],[[99,2],127],[[132,2],127],[[100,2],127],[[101,2],127],[[102,2],127],[[103,2],127],[[104,2],127],[[105,2],127],[[106,2],127],[[107,2],127],[[108,2],127],[[109,2],127],[[110,2],127],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[16,[[0,[[133,[[14,[6]]]],[134,[[14,[6]]]]]]]],13,6],135],[[[16,[[0,[[133,[[14,[6]]]],[134,[[14,[6]]]]]]]],13],125],[[[16,[136]],137]],[[108,137]],[[109,137]],[[110,137]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[105,122],0,0,0,[105,122],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],16],[[],12],[[122,122,122,122,122,122,122],[[16,[[138,[6]]]]]],0,0,0,0,0,0,0,0,[[[16,[139]],[16,[139]]],[[140,[121]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[105,122],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[105,122],[105,122],[[[16,[[0,[[133,[[14,[6]]]],[134,[[14,[6]]]]]]]],13,6,135]],[[[16,[[0,[[133,[[14,[6]]]],[134,[[14,[6]]]]]]]],13,125]],[[105,122]],[[105,122]],[[105,122]],[[105,122]],[[105,122]],[[105,122]],0,0,[[105,122]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[105,122],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[141,17]],[[141,17],125],[[141,17]],[17],0,[[],142]],"c":[],"p":[[4,"c_void"],[3,"Formatter"],[3,"Error"],[4,"Result"],[3,"TypeId"],[15,"u8"],[3,"Elf_Dyn"],[19,"Elf_Dyn_Union"],[3,"Elf_auxv_t"],[3,"Elf_Rela"],[15,"u32"],[3,"__IncompleteArrayField"],[15,"usize"],[15,"slice"],[8,"Clone"],[3,"__BindgenBitfieldUnit"],[3,"__kernel_fd_set"],[3,"__kernel_fsid_t"],[3,"__user_cap_header_struct"],[3,"__user_cap_data_struct"],[3,"vfs_cap_data"],[3,"vfs_cap_data__bindgen_ty_1"],[3,"vfs_ns_cap_data"],[3,"vfs_ns_cap_data__bindgen_ty_1"],[3,"f_owner_ex"],[3,"flock"],[3,"flock64"],[3,"open_how"],[3,"epoll_event"],[3,"fscrypt_policy_v1"],[3,"fscrypt_key"],[3,"fscrypt_policy_v2"],[3,"fscrypt_get_policy_ex_arg"],[3,"fscrypt_key_specifier"],[3,"fscrypt_remove_key_arg"],[3,"fscrypt_get_key_status_arg"],[3,"mount_attr"],[3,"file_clone_range"],[3,"fstrim_range"],[3,"file_dedupe_range_info"],[3,"files_stat_struct"],[3,"inodes_stat_t"],[3,"fsxattr"],[3,"futex_waitv"],[3,"robust_list"],[3,"robust_list_head"],[3,"pollfd"],[3,"__kernel_timespec"],[3,"__kernel_itimerspec"],[3,"__kernel_old_timeval"],[3,"__kernel_old_timespec"],[3,"__kernel_old_itimerval"],[3,"__kernel_sock_timeval"],[3,"timespec"],[3,"timeval"],[3,"itimerspec"],[3,"itimerval"],[3,"timezone"],[3,"rusage"],[3,"rlimit"],[3,"rlimit64"],[3,"clone_args"],[3,"sigaction"],[3,"sigaltstack"],[3,"__sifields__bindgen_ty_1"],[3,"__sifields__bindgen_ty_2"],[3,"__sifields__bindgen_ty_3"],[3,"__sifields__bindgen_ty_4"],[3,"__sifields__bindgen_ty_5"],[3,"__sifields__bindgen_ty_5__bindgen_ty_1__bindgen_ty_1"],[3,"__sifields__bindgen_ty_5__bindgen_ty_1__bindgen_ty_2"],[3,"__sifields__bindgen_ty_5__bindgen_ty_1__bindgen_ty_3"],[3,"__sifields__bindgen_ty_6"],[3,"__sifields__bindgen_ty_7"],[3,"siginfo"],[3,"siginfo__bindgen_ty_1__bindgen_ty_1"],[3,"sigevent"],[3,"sigevent__bindgen_ty_1__bindgen_ty_1"],[3,"statx_timestamp"],[3,"statx"],[3,"termios"],[3,"termios2"],[3,"ktermios"],[3,"winsize"],[3,"termio"],[3,"iovec"],[3,"uffd_msg"],[3,"uffd_msg__bindgen_ty_1__bindgen_ty_1"],[3,"uffd_msg__bindgen_ty_1__bindgen_ty_2"],[3,"uffd_msg__bindgen_ty_1__bindgen_ty_3"],[3,"uffd_msg__bindgen_ty_1__bindgen_ty_4"],[3,"uffd_msg__bindgen_ty_1__bindgen_ty_5"],[3,"uffdio_api"],[3,"uffdio_range"],[3,"uffdio_register"],[3,"uffdio_copy"],[3,"uffdio_zeropage"],[3,"uffdio_writeprotect"],[3,"uffdio_continue"],[3,"stat"],[3,"__old_kernel_stat"],[3,"statfs"],[3,"statfs64"],[3,"compat_statfs64"],[3,"user_desc"],[3,"kernel_sigset_t"],[3,"kernel_sigaction"],[4,"fsconfig_command"],[4,"membarrier_cmd"],[4,"membarrier_cmd_flag"],[19,"fscrypt_get_policy_ex_arg__bindgen_ty_1"],[19,"fscrypt_key_specifier__bindgen_ty_1"],[19,"sigval"],[19,"__sifields"],[19,"__sifields__bindgen_ty_5__bindgen_ty_1"],[19,"siginfo__bindgen_ty_1"],[19,"sigevent__bindgen_ty_1"],[19,"uffd_msg__bindgen_ty_1"],[19,"uffd_msg__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1"],[8,"Ord"],[4,"Ordering"],[6,"c_uint"],[8,"Default"],[8,"PartialEq"],[15,"bool"],[8,"Debug"],[6,"Result"],[3,"fscrypt_provisioning_key_payload"],[3,"file_dedupe_range"],[3,"inotify_event"],[3,"rand_pool_info"],[3,"linux_dirent64"],[8,"AsRef"],[8,"AsMut"],[15,"u64"],[8,"Hash"],[8,"Hasher"],[15,"array"],[8,"PartialOrd"],[4,"Option"],[6,"c_int"],[6,"__kernel_sighandler_t"],[3,"Elf_Verdaux"],[3,"Elf_Ehdr"],[3,"Elf_Phdr"],[3,"Elf_Sym"],[3,"Elf_Verdef"],[3,"fscrypt_add_key_arg"]]},\
"log":{"doc":"A lightweight logging facade.","t":"NNNNNNEEIDDNDDDRDNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOLLKLLLLLLLOLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLOLLLLLLLLLLLLLLLLKOOFLLFLLLLLLLLLLLLLLFFFFLLLLLLOLLLLLLLLLLLLLLLLLLLLLLLLO","n":["Debug","Debug","Error","Error","Info","Info","Level","LevelFilter","Log","Metadata","MetadataBuilder","Off","ParseLevelError","Record","RecordBuilder","STATIC_MAX_LEVEL","SetLoggerError","Trace","Trace","Warn","Warn","args","args","as_str","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","builder","builder","clone","clone","clone","clone","cmp","cmp","cmp","cmp","debug","default","default","enabled","eq","eq","eq","eq","eq","eq","eq","error","file","file","file_static","file_static","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_str","from_str","hash","hash","hash","hash","info","into","into","into","into","into","into","into","into","iter","iter","level","level","level","level","line","line","log","log","log_enabled","logger","max","max","max_level","metadata","metadata","module_path","module_path","module_path_static","module_path_static","new","new","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","set_logger","set_logger_racy","set_max_level","set_max_level_racy","target","target","target","target","to_level","to_level_filter","trace","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","warn"],"q":[[0,"log"]],"d":["The “debug” level.","Corresponds to the <code>Debug</code> log level.","The “error” level.","Corresponds to the <code>Error</code> log level.","The “info” level.","Corresponds to the <code>Info</code> log level.","An enum representing the available verbosity levels of the …","An enum representing the available verbosity level filters …","A trait encapsulating the operations required of a logger.","Metadata about a log message.","Builder for <code>Metadata</code>.","A level lower than all log levels.","The type returned by <code>from_str</code> when the string doesn’t …","The “payload” of a log message.","Builder for <code>Record</code>.","The statically resolved maximum log level.","The type returned by <code>set_logger</code> if <code>set_logger</code> has already …","The “trace” level.","Corresponds to the <code>Trace</code> log level.","The “warn” level.","Corresponds to the <code>Warn</code> log level.","The message body.","Set <code>args</code>.","Returns the string representation of the <code>Level</code>.","Returns the string representation of the <code>LevelFilter</code>.","","","","","","","","","","","","","","","","","Invoke the builder and return a <code>Record</code>","Returns a <code>Metadata</code> object.","Returns a new builder.","Returns a new builder.","","","","","","","","","Logs a message at the debug level.","","","Determines if a log message with the specified metadata …","","","","","","","","Logs a message at the error level.","The source file containing the message.","Set <code>file</code>","The module path of the message, if it is a <code>&#39;static</code> string.","Set <code>file</code> to a <code>&#39;static</code> string.","Flushes any buffered records.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Logs a message at the info level.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Iterate through all supported logging levels.","Iterate through all supported filtering levels.","The verbosity level of the message.","Set <code>Metadata::level</code>.","The verbosity level of the message.","Setter for <code>level</code>.","The line containing the message.","Set <code>line</code>","Logs the <code>Record</code>.","The standard logging macro.","Determines if a message logged at the specified level in …","Returns a reference to the logger.","Returns the most verbose logging level.","Returns the most verbose logging level filter.","Returns the current maximum log level.","Metadata about the log directive.","Set <code>metadata</code>. Construct a <code>Metadata</code> object with …","The module path of the message.","Set <code>module_path</code>","The module path of the message, if it is a <code>&#39;static</code> string.","Set <code>module_path</code> to a <code>&#39;static</code> string","Construct new <code>RecordBuilder</code>.","Construct a new <code>MetadataBuilder</code>.","","","","","","","Sets the global logger to a <code>&amp;&#39;static Log</code>.","A thread-unsafe version of <code>set_logger</code>.","Sets the global maximum log level.","A thread-unsafe version of <code>set_max_level</code>.","The name of the target of the directive.","Set <code>Metadata::target</code>","The name of the target of the directive.","Setter for <code>target</code>.","Converts <code>self</code> to the equivalent <code>Level</code>.","Converts the <code>Level</code> to the equivalent <code>LevelFilter</code>.","Logs a message at the trace level.","","","","","","","","","","","","","","","","","","","","","","","","","Logs a message at the warn level."],"i":[4,6,4,6,4,6,0,0,0,0,0,6,0,0,0,0,0,4,6,4,6,1,3,4,6,4,6,1,3,8,7,15,11,4,6,1,3,8,7,15,11,3,7,1,8,4,6,1,8,4,6,8,7,0,3,7,20,4,4,6,6,8,7,11,0,1,3,1,3,20,4,4,6,6,1,3,8,7,15,15,11,11,4,6,1,3,8,7,15,11,4,6,4,6,8,7,0,4,6,1,3,8,7,15,11,4,6,1,3,8,7,1,3,20,0,0,0,4,6,0,1,3,1,3,1,3,3,7,4,4,6,6,8,7,0,0,0,0,1,3,8,7,6,4,0,4,6,1,3,8,7,15,11,4,6,1,3,8,7,15,11,4,6,1,3,8,7,15,11,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[[3,2],3],[4,5],[6,5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3,1],[7,8],[[],3],[[],7],[4,4],[6,6],[1,1],[8,8],[[4,4],9],[[6,6],9],[[8,8],9],[[7,7],9],0,[[],3],[[],7],[8,10],[[4,6],10],[[4,4],10],[[6,6],10],[[6,4],10],[[8,8],10],[[7,7],10],[[11,11],10],0,[1,[[12,[5]]]],[[3,[12,[5]]],3],[1,[[12,[5]]]],[[3,[12,[5]]],3],[[]],[[4,13],14],[[4,13],14],[[6,13],14],[[6,13],14],[[1,13],14],[[3,13],14],[[8,13],14],[[7,13],14],[[15,13],14],[[15,13],14],[[11,13],14],[[11,13],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[5,[[16,[4]]]],[5,[[16,[6]]]],[[4,17]],[[6,17]],[[8,17]],[[7,17]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],18],[[],18],[1,4],[[3,4],3],[8,4],[[7,4],7],[1,[[12,[19]]]],[[3,[12,[19]]],3],[1],0,0,[[],20],[[],4],[[],6],[[],6],[1,8],[[3,8],3],[1,[[12,[5]]]],[[3,[12,[5]]],3],[1,[[12,[5]]]],[[3,[12,[5]]],3],[[],3],[[],7],[[4,4],[[12,[9]]]],[[4,6],[[12,[9]]]],[[6,4],[[12,[9]]]],[[6,6],[[12,[9]]]],[[8,8],[[12,[9]]]],[[7,7],[[12,[9]]]],[20,[[16,[15]]]],[20,[[16,[15]]]],[6],[6],[1,5],[[3,5],3],[8,5],[[7,5],7],[6,[[12,[4]]]],[4,6],0,[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],0],"c":[],"p":[[3,"Record"],[3,"Arguments"],[3,"RecordBuilder"],[4,"Level"],[15,"str"],[4,"LevelFilter"],[3,"MetadataBuilder"],[3,"Metadata"],[4,"Ordering"],[15,"bool"],[3,"ParseLevelError"],[4,"Option"],[3,"Formatter"],[6,"Result"],[3,"SetLoggerError"],[4,"Result"],[8,"Hasher"],[8,"Iterator"],[15,"u32"],[8,"Log"],[3,"TypeId"]]},\
"memchr":{"doc":"This library provides heavily optimized routines for …","t":"DDDALLLLLLLLLLLLLLLLLLLLLLLLLFFFFFFAFFFFFFLLLLLLLLLLLLLLLLLLLLLLLLAAFFFFAAAAADDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDIDLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLAAAADDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLAADDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLNDDDDDNELLLLLLLLLLLLLLLLLLLLLLLLLLLFLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLFLLLLLLLLLLLLLLLLLLLLLLLL","n":["Memchr","Memchr2","Memchr3","arch","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","count","fmt","fmt","fmt","from","from","from","into","into","into","into_iter","into_iter","into_iter","memchr","memchr2","memchr2_iter","memchr3","memchr3_iter","memchr_iter","memmem","memrchr","memrchr2","memrchr2_iter","memrchr3","memrchr3_iter","memrchr_iter","new","new","new","next","next","next","next_back","next_back","next_back","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","all","x86_64","is_equal","is_equal_raw","is_prefix","is_suffix","memchr","packedpair","rabinkarp","shiftor","twoway","One","OneIter","Three","ThreeIter","Two","TwoIter","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","count","count","count_raw","find","find","find","find_raw","find_raw","find_raw","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into","into","into_iter","into_iter","into_iter","iter","iter","iter","new","new","new","next","next","next","next_back","next_back","next_back","rfind","rfind","rfind","rfind_raw","rfind_raw","rfind_raw","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","Finder","HeuristicFrequencyRank","Pair","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","find_prefilter","fmt","fmt","from","from","index1","index2","into","into","new","new","pair","rank","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","with_indices","with_pair","with_ranker","Finder","FinderRev","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","find","find_raw","fmt","fmt","from","from","into","into","new","new","rfind","rfind_raw","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Finder","borrow","borrow_mut","find","fmt","from","into","new","try_from","try_into","type_id","Finder","FinderRev","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","find","fmt","fmt","from","from","into","into","new","new","rfind","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","avx2","sse2","memchr","packedpair","One","OneIter","Three","ThreeIter","Two","TwoIter","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","count","count","count_raw","find","find","find","find_raw","find_raw","find_raw","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into","into","into_iter","into_iter","into_iter","is_available","is_available","is_available","iter","iter","iter","new","new","new","new_unchecked","new_unchecked","new_unchecked","next","next","next","next_back","next_back","next_back","rfind","rfind","rfind","rfind_raw","rfind_raw","rfind_raw","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","Finder","borrow","borrow_mut","clone","clone_into","find","find_prefilter","fmt","from","into","is_available","min_haystack_len","new","pair","to_owned","try_from","try_into","type_id","with_pair","memchr","packedpair","One","OneIter","Three","ThreeIter","Two","TwoIter","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","count","count","count_raw","find","find","find","find_raw","find_raw","find_raw","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into","into","into_iter","into_iter","into_iter","is_available","is_available","is_available","iter","iter","iter","new","new","new","new_unchecked","new_unchecked","new_unchecked","next","next","next","next_back","next_back","next_back","rfind","rfind","rfind","rfind_raw","rfind_raw","rfind_raw","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","Finder","borrow","borrow_mut","clone","clone_into","find","find_prefilter","fmt","from","into","is_available","min_haystack_len","new","pair","to_owned","try_from","try_into","type_id","with_pair","Auto","FindIter","FindRevIter","Finder","FinderBuilder","FinderRev","None","Prefilter","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_forward","build_forward_with_ranker","build_reverse","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","find","find","find_iter","find_iter","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into","into","into_iter","into_iter","into_owned","into_owned","into_owned","into_owned","needle","needle","new","new","new","next","next","prefilter","rfind","rfind","rfind_iter","rfind_iter","size_hint","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id"],"q":[[0,"memchr"],[66,"memchr::arch"],[68,"memchr::arch::all"],[77,"memchr::arch::all::memchr"],[182,"memchr::arch::all::packedpair"],[217,"memchr::arch::all::rabinkarp"],[247,"memchr::arch::all::shiftor"],[258,"memchr::arch::all::twoway"],[286,"memchr::arch::x86_64"],[288,"memchr::arch::x86_64::avx2"],[290,"memchr::arch::x86_64::avx2::memchr"],[401,"memchr::arch::x86_64::avx2::packedpair"],[420,"memchr::arch::x86_64::sse2"],[422,"memchr::arch::x86_64::sse2::memchr"],[533,"memchr::arch::x86_64::sse2::packedpair"],[552,"memchr::memmem"]],"d":["An iterator over all occurrences of a single byte in a …","An iterator over all occurrences of two possible bytes in …","An iterator over all occurrences of three possible bytes …","A module with low-level architecture dependent routines.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Search for the first occurrence of a byte in a slice.","Search for the first occurrence of two possible bytes in a …","Returns an iterator over all occurrences of the needles in …","Search for the first occurrence of three possible bytes in …","Returns an iterator over all occurrences of the needles in …","Returns an iterator over all occurrences of the needle in …","This module provides forward and reverse substring search …","Search for the last occurrence of a byte in a slice.","Search for the last occurrence of two possible bytes in a …","Returns an iterator over all occurrences of the needles in …","Search for the last occurrence of three possible bytes in …","Returns an iterator over all occurrences of the needles in …","Returns an iterator over all occurrences of the needle in …","Returns an iterator over all occurrences of the needle …","Returns an iterator over all occurrences of the needle …","Returns an iterator over all occurrences of the needle …","","","","","","","","","","","","","","","","","","","","","","Contains architecture independent routines.","Vector algorithms for the <code>x86_64</code> target.","Compare corresponding bytes in <code>x</code> and <code>y</code> for equality.","Compare <code>n</code> bytes at the given pointers for equality.","Returns true if and only if <code>needle</code> is a prefix of <code>haystack</code>.","Returns true if and only if <code>needle</code> is a suffix of <code>haystack</code>.","Provides architecture independent implementations of <code>memchr</code>…","Provides an architecture independent implementation of the …","An implementation of the Rabin-Karp substring search …","An implementation of the Shift-Or substring search …","An implementation of the Two-Way substring search algorithm…","Finds all occurrences of a single byte in a haystack.","An iterator over all occurrences of a single byte in a …","Finds all occurrences of three bytes in a haystack.","An iterator over all occurrences of three possible bytes …","Finds all occurrences of two bytes in a haystack.","An iterator over all occurrences of two possible bytes in …","","","","","","","","","","","","","","","","","","","","","","","","","Counts all occurrences of this byte in the given haystack.","","Counts all occurrences of this byte in the given haystack …","Return the first occurrence of the needle in the given …","Return the first occurrence of one of the needle bytes in …","Return the first occurrence of one of the needle bytes in …","Like <code>find</code>, but accepts and returns raw pointers.","Like <code>find</code>, but accepts and returns raw pointers.","Like <code>find</code>, but accepts and returns raw pointers.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns an iterator over all occurrences of the needle …","Returns an iterator over all occurrences of one of the …","Returns an iterator over all occurrences of one of the …","Create a new searcher that finds occurrences of the byte …","Create a new searcher that finds occurrences of the two …","Create a new searcher that finds occurrences of the three …","","","","","","","Return the last occurrence of the needle in the given …","Return the last occurrence of one of the needle bytes in …","Return the last occurrence of one of the needle bytes in …","Like <code>rfind</code>, but accepts and returns raw pointers.","Like <code>rfind</code>, but accepts and returns raw pointers.","Like <code>rfind</code>, but accepts and returns raw pointers.","","","","","","","","","","","","","","","","","","","","","","","","","","","","An architecture independent “packed pair” finder.","This trait allows the user to customize the heuristic used …","A pair of byte offsets into a needle to use as a predicate.","","","","","","","","","Run this finder on the given haystack as a prefilter.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the first offset of the pair.","Returns the second offset of the pair.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new prefilter that reports possible locations …","Create a new pair of offsets from the given needle.","Returns the pair of offsets (into the needle) used to …","Return the heuristic frequency rank of the given byte. A …","","","","","","","","","Create a new pair using the offsets given for the needle …","Create a new prefilter using the pair given.","Create a new pair of offsets from the given needle and …","A forward substring searcher using the Rabin-Karp …","A reverse substring searcher using the Rabin-Karp …","","","","","","","","","Return the first occurrence of the <code>needle</code> in the <code>haystack</code> …","Like <code>find</code>, but accepts and returns raw pointers.","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new Rabin-Karp forward searcher for the given …","Create a new Rabin-Karp reverse searcher for the given …","Return the last occurrence of the <code>needle</code> in the <code>haystack</code> …","Like <code>rfind</code>, but accepts and returns raw pointers.","","","","","","","","","A forward substring searcher using the Shift-Or algorithm.","","","Return the first occurrence of the needle given to …","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Create a new Shift-Or forward searcher for the given <code>needle</code>…","","","","A forward substring searcher that uses the Two-Way …","A reverse substring searcher that uses the Two-Way …","","","","","","","","","Returns the first occurrence of <code>needle</code> in the given …","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a searcher that finds occurrences of the given …","Create a searcher that finds occurrences of the given …","Returns the last occurrence of <code>needle</code> in the given <code>haystack</code>…","","","","","","","","","Algorithms for the <code>x86_64</code> target using 256-bit vectors via …","Algorithms for the <code>x86_64</code> target using 128-bit vectors via …","This module defines 256-bit vector implementations of …","A 256-bit vector implementation of the “packed pair” …","Finds all occurrences of a single byte in a haystack.","An iterator over all occurrences of a single byte in a …","Finds all occurrences of three bytes in a haystack.","An iterator over all occurrences of three possible bytes …","Finds all occurrences of two bytes in a haystack.","An iterator over all occurrences of two possible bytes in …","","","","","","","","","","","","","","","","","","","","","","","","","Counts all occurrences of this byte in the given haystack.","","Counts all occurrences of this byte in the given haystack …","Return the first occurrence of one of the needle bytes in …","Return the first occurrence of one of the needle bytes in …","Return the first occurrence of one of the needle bytes in …","Like <code>find</code>, but accepts and returns raw pointers.","Like <code>find</code>, but accepts and returns raw pointers.","Like <code>find</code>, but accepts and returns raw pointers.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns true when this implementation is available in the …","Returns true when this implementation is available in the …","Returns true when this implementation is available in the …","Returns an iterator over all occurrences of the needle …","Returns an iterator over all occurrences of the needle …","Returns an iterator over all occurrences of the needle …","Create a new searcher that finds occurrences of the needle …","Create a new searcher that finds occurrences of the needle …","Create a new searcher that finds occurrences of the needle …","Create a new finder specific to AVX2 vectors and routines …","Create a new finder specific to AVX2 vectors and routines …","Create a new finder specific to AVX2 vectors and routines …","","","","","","","Return the last occurrence of one of the needle bytes in …","Return the last occurrence of one of the needle bytes in …","Return the last occurrence of one of the needle bytes in …","Like <code>rfind</code>, but accepts and returns raw pointers.","Like <code>rfind</code>, but accepts and returns raw pointers.","Like <code>rfind</code>, but accepts and returns raw pointers.","","","","","","","","","","","","","","","","","","","","","","","","","","","","A “packed pair” finder that uses 256-bit vector …","","","","","Execute a search using AVX2 vectors and routines.","Run this finder on the given haystack as a prefilter.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Returns true when this implementation is available in the …","Returns the minimum haystack length that this <code>Finder</code> can …","Create a new pair searcher. The searcher returned can …","Returns the pair of offsets (into the needle) used to …","","","","","Create a new “packed pair” finder using the pair of …","This module defines 128-bit vector implementations of …","A 128-bit vector implementation of the “packed pair” …","Finds all occurrences of a single byte in a haystack.","An iterator over all occurrences of a single byte in a …","Finds all occurrences of three bytes in a haystack.","An iterator over all occurrences of three possible bytes …","Finds all occurrences of two bytes in a haystack.","An iterator over all occurrences of two possible bytes in …","","","","","","","","","","","","","","","","","","","","","","","","","Counts all occurrences of this byte in the given haystack.","","Counts all occurrences of this byte in the given haystack …","Return the first occurrence of one of the needle bytes in …","Return the first occurrence of one of the needle bytes in …","Return the first occurrence of one of the needle bytes in …","Like <code>find</code>, but accepts and returns raw pointers.","Like <code>find</code>, but accepts and returns raw pointers.","Like <code>find</code>, but accepts and returns raw pointers.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns true when this implementation is available in the …","Returns true when this implementation is available in the …","Returns true when this implementation is available in the …","Returns an iterator over all occurrences of the needle …","Returns an iterator over all occurrences of the needle …","Returns an iterator over all occurrences of the needle …","Create a new searcher that finds occurrences of the needle …","Create a new searcher that finds occurrences of the needle …","Create a new searcher that finds occurrences of the needle …","Create a new finder specific to SSE2 vectors and routines …","Create a new finder specific to SSE2 vectors and routines …","Create a new finder specific to SSE2 vectors and routines …","","","","","","","Return the last occurrence of one of the needle bytes in …","Return the last occurrence of one of the needle bytes in …","Return the last occurrence of one of the needle bytes in …","Like <code>rfind</code>, but accepts and returns raw pointers.","Like <code>rfind</code>, but accepts and returns raw pointers.","Like <code>rfind</code>, but accepts and returns raw pointers.","","","","","","","","","","","","","","","","","","","","","","","","","","","","A “packed pair” finder that uses 128-bit vector …","","","","","Execute a search using SSE2 vectors and routines.","Run this finder on the given haystack as a prefilter.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Returns true when this implementation is available in the …","Returns the minimum haystack length that this <code>Finder</code> can …","Create a new pair searcher. The searcher returned can …","Returns the pair of offsets (into the needle) used to …","","","","","Create a new “packed pair” finder using the pair of …","Automatically detect whether a heuristic prefilter should …","An iterator over non-overlapping substring matches.","An iterator over non-overlapping substring matches in …","A single substring searcher fixed to a particular needle.","A builder for constructing non-default forward or reverse …","A single substring reverse searcher fixed to a particular …","Never used a prefilter in substring search.","Prefilter controls whether heuristics are used to …","Convert this finder into its borrowed variant.","Convert this finder into its borrowed variant.","","","","","","","","","","","","","Build a forward finder using the given needle from the …","Build a forward finder using the given needle and a custom …","Build a reverse finder using the given needle from the …","","","","","","","","","","","Returns the index of the first occurrence of the given …","Returns the index of the first occurrence of this needle …","Returns an iterator over all non-overlapping occurrences …","Returns an iterator over all occurrences of a substring in …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Convert this iterator into its owned variant, such that it …","Convert this iterator into its owned variant, such that it …","Convert this finder into its owned variant, such that it …","Convert this finder into its owned variant, such that it …","Returns the needle that this finder searches for.","Returns the needle that this finder searches for.","Create a new finder for the given needle.","Create a new reverse finder for the given needle.","Create a new finder builder with default settings.","","","Configure the prefilter setting for the finder.","Returns the index of the last occurrence of the given …","Returns the index of the last occurrence of this needle in …","Returns a reverse iterator over all non-overlapping …","Returns a reverse iterator over all occurrences of a …","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,1,2,3,1,2,3,1,2,3,1,2,3,1,1,2,3,1,2,3,1,2,3,1,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,15,16,17,18,19,14,15,16,17,18,19,14,15,16,17,18,19,14,15,16,17,18,19,14,15,14,14,16,18,14,16,18,14,15,16,17,18,19,14,15,16,17,18,19,14,15,16,17,18,19,15,17,19,14,16,18,14,16,18,15,17,19,15,17,19,14,16,18,14,16,18,15,17,19,14,15,16,17,18,19,14,15,16,17,18,19,14,15,16,17,18,19,14,15,16,17,18,19,0,0,0,20,21,20,21,20,21,20,21,20,20,21,20,21,21,21,20,21,20,21,20,22,20,21,20,21,20,21,20,21,21,20,21,0,0,23,24,23,24,23,24,23,24,23,23,23,24,23,24,23,24,23,24,24,24,23,24,23,24,23,24,23,24,0,25,25,25,25,25,25,25,25,25,25,0,0,26,27,26,27,26,27,26,27,26,26,27,26,27,26,27,26,27,27,26,27,26,27,26,27,26,27,0,0,0,0,0,0,0,0,0,0,28,29,30,31,32,33,28,29,30,31,32,33,28,29,30,31,32,33,28,29,30,31,32,33,28,29,28,28,30,32,28,30,32,28,29,30,31,32,33,28,29,30,31,32,33,28,29,30,31,32,33,29,31,33,28,30,32,28,30,32,28,30,32,28,30,32,29,31,33,29,31,33,28,30,32,28,30,32,29,31,33,28,29,30,31,32,33,28,29,30,31,32,33,28,29,30,31,32,33,28,29,30,31,32,33,0,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,0,0,0,0,0,0,0,0,35,36,37,38,39,40,35,36,37,38,39,40,35,36,37,38,39,40,35,36,37,38,39,40,35,36,35,35,37,39,35,37,39,35,36,37,38,39,40,35,36,37,38,39,40,35,36,37,38,39,40,36,38,40,35,37,39,35,37,39,35,37,39,35,37,39,36,38,40,36,38,40,35,37,39,35,37,39,36,38,40,35,36,37,38,39,40,35,36,37,38,39,40,35,36,37,38,39,40,35,36,37,38,39,40,0,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,47,0,0,0,0,0,47,0,42,43,47,48,49,42,43,44,47,48,49,42,43,44,44,44,44,47,42,43,44,47,42,43,44,47,44,0,42,0,42,47,48,49,42,43,44,47,48,49,42,43,44,47,48,49,42,43,44,48,49,48,49,42,43,42,43,42,43,44,48,49,44,0,43,0,43,48,47,42,43,44,47,48,49,42,43,44,47,48,49,42,43,44,47,48,49,42,43,44],"f":[0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[3,3],[[]],[[]],[[]],[1,4],[[1,5],6],[[2,5],6],[[3,5],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[7,[8,[7]]],[[9,[4]]]],[[7,7,[8,[7]]],[[9,[4]]]],[[7,7,[8,[7]]],2],[[7,7,7,[8,[7]]],[[9,[4]]]],[[7,7,7,[8,[7]]],3],[[7,[8,[7]]],1],0,[[7,[8,[7]]],[[9,[4]]]],[[7,7,[8,[7]]],[[9,[4]]]],[[7,7,[8,[7]]],[[10,[2]]]],[[7,7,7,[8,[7]]],[[9,[4]]]],[[7,7,7,[8,[7]]],[[10,[3]]]],[[7,[8,[7]]],[[10,[1]]]],[[7,[8,[7]]],1],[[7,7,[8,[7]]],2],[[7,7,7,[8,[7]]],3],[1,[[9,[4]]]],[2,[[9,[4]]]],[3,[[9,[4]]]],[1,[[9,[4]]]],[2,[[9,[4]]]],[3,[[9,[4]]]],[1],[2],[3],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],0,0,[[[8,[7]],[8,[7]]],13],[[7,7,4],13],[[[8,[7]],[8,[7]]],13],[[[8,[7]],[8,[7]]],13],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[14,14],[15,15],[16,16],[17,17],[18,18],[19,19],[[]],[[]],[[]],[[]],[[]],[[]],[[14,[8,[7]]],4],[15,4],[[14,7,7],4],[[14,[8,[7]]],[[9,[4]]]],[[16,[8,[7]]],[[9,[4]]]],[[18,[8,[7]]],[[9,[4]]]],[[14,7,7],[[9,[7]]]],[[16,7,7],[[9,[7]]]],[[18,7,7],[[9,[7]]]],[[14,5],6],[[15,5],6],[[16,5],6],[[17,5],6],[[18,5],6],[[19,5],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[14,[8,[7]]],15],[[16,[8,[7]]],17],[[18,[8,[7]]],19],[7,14],[[7,7],16],[[7,7,7],18],[15,[[9,[4]]]],[17,[[9,[4]]]],[19,[[9,[4]]]],[15,[[9,[4]]]],[17,[[9,[4]]]],[19,[[9,[4]]]],[[14,[8,[7]]],[[9,[4]]]],[[16,[8,[7]]],[[9,[4]]]],[[18,[8,[7]]],[[9,[4]]]],[[14,7,7],[[9,[7]]]],[[16,7,7],[[9,[7]]]],[[18,7,7],[[9,[7]]]],[15],[17],[19],[[]],[[]],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,0,0,[[]],[[]],[[]],[[]],[20,20],[21,21],[[]],[[]],[[20,[8,[7]]],[[9,[4]]]],[[20,5],6],[[21,5],6],[[]],[[]],[21,7],[21,7],[[]],[[]],[[[8,[7]]],[[9,[20]]]],[[[8,[7]]],[[9,[21]]]],[20,21],[7,7],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[[8,[7]],7,7],[[9,[21]]]],[[[8,[7]],21],[[9,[20]]]],[[[8,[7]],22],[[9,[21]]]],0,0,[[]],[[]],[[]],[[]],[23,23],[24,24],[[]],[[]],[[23,[8,[7]],[8,[7]]],[[9,[4]]]],[[23,7,7,7,7],[[9,[7]]]],[[23,5],6],[[24,5],6],[[]],[[]],[[]],[[]],[[[8,[7]]],23],[[[8,[7]]],24],[[24,[8,[7]],[8,[7]]],[[9,[4]]]],[[24,7,7,7,7],[[9,[7]]]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],0,[[]],[[]],[[25,[8,[7]]],[[9,[4]]]],[[25,5],6],[[]],[[]],[[[8,[7]]],[[9,[25]]]],[[],11],[[],11],[[],12],0,0,[[]],[[]],[[]],[[]],[26,26],[27,27],[[]],[[]],[[26,[8,[7]],[8,[7]]],[[9,[4]]]],[[26,5],6],[[27,5],6],[[]],[[]],[[]],[[]],[[[8,[7]]],26],[[[8,[7]]],27],[[27,[8,[7]],[8,[7]]],[[9,[4]]]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[28,28],[29,29],[30,30],[31,31],[32,32],[33,33],[[]],[[]],[[]],[[]],[[]],[[]],[[28,[8,[7]]],4],[29,4],[[28,7,7],4],[[28,[8,[7]]],[[9,[4]]]],[[30,[8,[7]]],[[9,[4]]]],[[32,[8,[7]]],[[9,[4]]]],[[28,7,7],[[9,[7]]]],[[30,7,7],[[9,[7]]]],[[32,7,7],[[9,[7]]]],[[28,5],6],[[29,5],6],[[30,5],6],[[31,5],6],[[32,5],6],[[33,5],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[28,[8,[7]]],29],[[30,[8,[7]]],31],[[32,[8,[7]]],33],[7,[[9,[28]]]],[[7,7],[[9,[30]]]],[[7,7,7],[[9,[32]]]],[7,28],[[7,7],30],[[7,7,7],32],[29,[[9,[4]]]],[31,[[9,[4]]]],[33,[[9,[4]]]],[29,[[9,[4]]]],[31,[[9,[4]]]],[33,[[9,[4]]]],[[28,[8,[7]]],[[9,[4]]]],[[30,[8,[7]]],[[9,[4]]]],[[32,[8,[7]]],[[9,[4]]]],[[28,7,7],[[9,[7]]]],[[30,7,7],[[9,[7]]]],[[32,7,7],[[9,[7]]]],[29],[31],[33],[[]],[[]],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,[[]],[[]],[34,34],[[]],[[34,[8,[7]],[8,[7]]],[[9,[4]]]],[[34,[8,[7]]],[[9,[4]]]],[[34,5],6],[[]],[[]],[[],13],[34,4],[[[8,[7]]],[[9,[34]]]],[34,21],[[]],[[],11],[[],11],[[],12],[[[8,[7]],21],[[9,[34]]]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[35,35],[36,36],[37,37],[38,38],[39,39],[40,40],[[]],[[]],[[]],[[]],[[]],[[]],[[35,[8,[7]]],4],[36,4],[[35,7,7],4],[[35,[8,[7]]],[[9,[4]]]],[[37,[8,[7]]],[[9,[4]]]],[[39,[8,[7]]],[[9,[4]]]],[[35,7,7],[[9,[7]]]],[[37,7,7],[[9,[7]]]],[[39,7,7],[[9,[7]]]],[[35,5],6],[[36,5],6],[[37,5],6],[[38,5],6],[[39,5],6],[[40,5],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[35,[8,[7]]],36],[[37,[8,[7]]],38],[[39,[8,[7]]],40],[7,[[9,[35]]]],[[7,7],[[9,[37]]]],[[7,7,7],[[9,[39]]]],[7,35],[[7,7],37],[[7,7,7],39],[36,[[9,[4]]]],[38,[[9,[4]]]],[40,[[9,[4]]]],[36,[[9,[4]]]],[38,[[9,[4]]]],[40,[[9,[4]]]],[[35,[8,[7]]],[[9,[4]]]],[[37,[8,[7]]],[[9,[4]]]],[[39,[8,[7]]],[[9,[4]]]],[[35,7,7],[[9,[7]]]],[[37,7,7],[[9,[7]]]],[[39,7,7],[[9,[7]]]],[36],[38],[40],[[]],[[]],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,[[]],[[]],[41,41],[[]],[[41,[8,[7]],[8,[7]]],[[9,[4]]]],[[41,[8,[7]]],[[9,[4]]]],[[41,5],6],[[]],[[]],[[],13],[41,4],[[[8,[7]]],[[9,[41]]]],[41,21],[[]],[[],11],[[],11],[[],12],[[[8,[7]],21],[[9,[41]]]],0,0,0,0,0,0,0,0,[42,42],[43,43],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[44,[0,[45,[46,[[8,[7]]]]]]],42],[[44,22,[0,[45,[46,[[8,[7]]]]]]],42],[[44,[0,[45,[46,[[8,[7]]]]]]],43],[47,47],[42,42],[43,43],[44,44],[[]],[[]],[[]],[[]],[[],47],[[],44],[[[8,[7]],[8,[7]]],[[9,[4]]]],[[42,[8,[7]]],[[9,[4]]]],[[[8,[7]],[0,[45,[46,[[8,[7]]]]]]],48],[[42,[8,[7]]],48],[[47,5],6],[[48,5],6],[[49,5],6],[[42,5],6],[[43,5],6],[[44,5],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[48,48],[49,49],[42,42],[43,43],[42,[[8,[7]]]],[43,[[8,[7]]]],[[[0,[45,[46,[[8,[7]]]]]]],42],[[[0,[45,[46,[[8,[7]]]]]]],43],[[],44],[48,[[9,[4]]]],[49,[[9,[4]]]],[[44,47],44],[[[8,[7]],[8,[7]]],[[9,[4]]]],[[43,[46,[[8,[7]]]]],[[9,[4]]]],[[[8,[7]],[0,[45,[46,[[8,[7]]]]]]],49],[[43,[8,[7]]],49],[48],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12]],"c":[],"p":[[3,"Memchr"],[3,"Memchr2"],[3,"Memchr3"],[15,"usize"],[3,"Formatter"],[6,"Result"],[15,"u8"],[15,"slice"],[4,"Option"],[3,"Rev"],[4,"Result"],[3,"TypeId"],[15,"bool"],[3,"One"],[3,"OneIter"],[3,"Two"],[3,"TwoIter"],[3,"Three"],[3,"ThreeIter"],[3,"Finder"],[3,"Pair"],[8,"HeuristicFrequencyRank"],[3,"Finder"],[3,"FinderRev"],[3,"Finder"],[3,"Finder"],[3,"FinderRev"],[3,"One"],[3,"OneIter"],[3,"Two"],[3,"TwoIter"],[3,"Three"],[3,"ThreeIter"],[3,"Finder"],[3,"One"],[3,"OneIter"],[3,"Two"],[3,"TwoIter"],[3,"Three"],[3,"ThreeIter"],[3,"Finder"],[3,"Finder"],[3,"FinderRev"],[3,"FinderBuilder"],[8,"Sized"],[8,"AsRef"],[4,"Prefilter"],[3,"FindIter"],[3,"FindRevIter"]]},\
"memoffset":{"doc":"A crate used for calculating offsets of struct members and …","t":"OOOOOOO","n":["offset_of","offset_of_tuple","offset_of_union","raw_field","raw_field_tuple","raw_field_union","span_of"],"q":[[0,"memoffset"]],"d":["Calculates the offset of the specified field from the …","Calculates the offset of the specified field from the …","Calculates the offset of the specified union member from …","Computes a const raw pointer to the given field of the …","Computes a const raw pointer to the given field of the …","Computes a const raw pointer to the given field of the …","Produces a range instance representing the sub-slice …"],"i":[0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0],"c":[],"p":[]},\
"minimal_lexical":{"doc":"Fast, minimal float-parsing algorithm.","t":"SSSSISSSSSSSSSSSSSSSSSLKKLLLFKK","n":["CARRY_MASK","DENORMAL_EXPONENT","EXPONENT_BIAS","EXPONENT_MASK","Float","HIDDEN_BIT_MASK","INFINITE_POWER","INVALID_FP","LARGEST_POWER_OF_TEN","MANTISSA_MASK","MANTISSA_SIZE","MAX_DIGITS","MAX_EXPONENT","MAX_EXPONENT_DISGUISED_FAST_PATH","MAX_EXPONENT_FAST_PATH","MAX_EXPONENT_ROUND_TO_EVEN","MAX_MANTISSA_FAST_PATH","MINIMUM_EXPONENT","MIN_EXPONENT_FAST_PATH","MIN_EXPONENT_ROUND_TO_EVEN","SIGN_MASK","SMALLEST_POWER_OF_TEN","exponent","from_bits","from_u64","int_pow_fast_path","is_denormal","mantissa","parse_float","pow_fast_path","to_bits"],"q":[[0,"minimal_lexical"]],"d":["Mask to determine if a full-carry occurred (1 in bit above …","Exponent portion of a denormal float.","Bias of the exponet","Bitmask for the exponent, including the hidden bit.","Generic floating-point type, to be used in generic code …","Bitmask for the hidden bit in exponent, which is an …","","Bias for marking an invalid extended float.","Largest decimal exponent for a non-infinite value.","Bitmask for the mantissa (fraction), excluding the hidden …","Size of the significand (mantissa) without hidden bit.","Maximum number of digits that can contribute in the …","Maximum exponent value in float.","Maximum exponent that can be represented for a …","Maximum exponent that for a fast path case, or …","","","Minimum normal exponent value …","Minimum exponent that for a fast path case, or …","","Bitmask for the sign bit.","Smallest decimal exponent for a non-zero value.","Get exponent component from the float.","","Convert 64-bit integer to float.","Get a small, integral power-of-radix for fast-path …","Returns true if the float is a denormal.","Get mantissa (significand) component from float.","Parse float from extracted float components.","Get a small power-of-radix for fast-path multiplication.",""],"i":[8,8,8,8,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,0,8,8],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[2],[2],[[3,4],2],[[],5],[[],2],[[[0,[6,7]],[0,[6,7]],1],8],[3],[[],2]],"c":[],"p":[[15,"i32"],[15,"u64"],[15,"usize"],[15,"u32"],[15,"bool"],[8,"Iterator"],[8,"Clone"],[8,"Float"]]},\
"nix":{"doc":"Rust friendly bindings to the various *nix system …","t":"GIGOAAAAAAOOOOOOOOOOOOOKAKCAAAAAOOOOAAAAAKNNDNDNNDDNNELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLFLLLLLLLLLLLLNNNNNNNNNNNNNNNNNNNNNNNNNSNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNSNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNSNNEINLLLLLLLLFLLLFLLLLLKLLLLLLSSSSSDSSSSSSSNNNNNNNNNNNSSSSNNNNNDEDENNNNDSSSSSSSSSSSSSSSSSSSSSSSSNNNNNNESSSDSSSSDDNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLFFFFLLLLLLLFFLLLLLLLFLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFDDMLLLLMLLMLLLLLMLLLLFLLMLLLMLLLLLLLLDSSDSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSDDSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLFFLLDDDSSSSSSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGFFFFFFFFFLLLLLLLLLLLLLLLLLLLLLLASSSSSSSSSSSSSSSSSSSSSSDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSSSSSSSSSSDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLLLLLLDDDGDLLLLLLLLLLLLLLLLLLLLLLLLLLLLMFLLLLLFLLLLLLLLMMFFFFLLMLLLLLLLLLLLLLLLFLLMMMMSSSSSSSSSSSSSSSSSSSGDDLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFLLFLLLLLLLLLLLLLLFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAINENDENDDNNENNQFKLLLFLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLKLLLKLLLLLLLLLLLLLLLLLLKLLLLLLLLLFLLLLLLLLLLKLLLKLLLKLLLKLLLLLLLLLLLLLLLLLLLLLLLLLSSSSSSSSSSSSSSSSDNNNDDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSSSDLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDSSSSSSSSSSSSSSSSSSSSSSSSDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMOOOOSSDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLNNNNNNNNNNNNNNNNNSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSDSSSDDEDSSSSSSDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFFFFFFFLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSSSSSSDSSSSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLFLLLLLLLLLLGFFGEDNNNNNNNNNNNNNNNNNNNNSSSSSSSSSNNNNNNNNNNNNNNNNNNNELFLLLLLLLLLLLLLLLLLLLLLLLFLFLLLLLLLLLLLLLLLLLLLLLLLFFFLLLLFLLLLLLLFLLLLFFLFLFFFFLLLFFFLLLLFLLLLLLLLLLFFDNNNNSSSSSSSSSSEEDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNNELLLLLLLLLLLLFFLLLLNNNNNNNNNNNNNNNNRNNNEDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLLLGFLLLLLLLLLLLLLLLLLLLRDDLLLLLLLLLLLLLLLLLLLLLLLLLFLFLLLLLLLLFFNSSSSSSSNNNNNNNNNNRNNRNNNNNNNNNNNNRNNNNNNNNNNDDNNDENDDNENNEEDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLFFLLLFLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGLLMMMMMSSRRDCDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDCFMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLENNDNNNNNNNNNNNNNDEENNNNINNNNNEDEDDNNNNDDNNNNNNNNNNDNSSSSSSSSSSNDDDNNNNDNNNNNNNNNNNNNNNNNNNNNNNDNNNNSSSSSSSSNNNNNNNNNIENEDEEDDITNNDDNNNNNNNDDNNNNNQQNNDNNNFFLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMDLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLKFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFMMMMMMMDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFLLLMMGLLFFFFKLLLFFMMMMMMMMMLLLDDDDFDFFAMLLLLLLMMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLEDFNNDNNDSSSSSSSSSSSSSSSSSSSSSSSELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGLLLLLLLLLLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLLFFFLLLLLLLLLLLLLLLLLLFFFFFFFFGLLLLLLLLMMMMMMMMMMMMMMMMFLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLFFRRRRRRRRRRRRRRRRRRRRDRRRRRRRRRRRRRRRRRRRRRRRRRRRRDRRRRRRLLLLLLLLLLLLLLLLLLLLLLLGFLLLLFLLLLLLLLDSSSSSSSSSSSSDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLFLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLFLLLLLNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNSSSSESSSSSSSSSSSSSSSSSSDSSSSSSSSSSSSEESSSSSSSSSSSSSSSSDDRSSSSSSSSSSSSDSSSSEESSSSSNNNNNNNNNNSDNNNNNNNNNNNNNNNSSSNNSRLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDILLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLKLLLLLKLLLLLLLKLLKLLLKLLKLLLLKLLLLGGLLLLLLLLLLLLLLLENNNDDLLLLLLLLLLLLLNNNNNEENNNSSSDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLMLLLLLLLLLLLLLLLLLLLLLLMFFFFFFFLLLLLLLLFDLLLLLLLLLLLLLLLLLLLFLNNNENNNNNNNNSSSSSSDESSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFSSSSSSSSSSSDLLLFFFFLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLNNNNNDNNNNNNNNNNNSENENNDDNNNNNENNNNNNNNNNNNNNNNNNNNNNNNEDNRNSNDDNNNNNNNNNNNNENNNDEDSESNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFAALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLFLMFFFFLLMMLLLLLLLLLLLLLLLLLLLLLFFFFFLFFFFFFLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFMFFFFFFFFFFFFFFFFMMLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLFFFFMFFFFMMLLLLMMFFFFFFMMLMMLFFFFFFFFFFFFMFLLFLFFFFFLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLMLFFFMFFFF","n":["Error","NixPath","Result","cmsg_space","dir","env","errno","fcntl","features","ifaddrs","ioctl_none","ioctl_none_bad","ioctl_read","ioctl_read_bad","ioctl_read_buf","ioctl_readwrite","ioctl_readwrite_bad","ioctl_readwrite_buf","ioctl_write_buf","ioctl_write_int","ioctl_write_int_bad","ioctl_write_ptr","ioctl_write_ptr_bad","is_empty","kmod","len","libc","mount","mqueue","net","poll","pty","request_code_none","request_code_read","request_code_readwrite","request_code_write","sched","sys","time","ucontext","unistd","with_nix_path","BlockDevice","CharacterDevice","Dir","Directory","Entry","Fifo","File","Iter","OwningIter","Socket","Symlink","Type","as_raw_fd","as_raw_fd","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","drop","drop","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","file_name","file_type","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_fd","hash","hash","hash","hash","hash","ino","into","into","into","into","into","into_iter","into_iter","into_iter","iter","next","next","open","openat","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","ClearEnvError","borrow","borrow_mut","clearenv","clone","clone_into","fmt","fmt","from","into","provide","to_owned","to_string","try_from","try_into","type_id","E2BIG","EACCES","EADDRINUSE","EADDRNOTAVAIL","EADV","EAFNOSUPPORT","EAGAIN","EALREADY","EBADE","EBADF","EBADFD","EBADMSG","EBADR","EBADRQC","EBADSLT","EBFONT","EBUSY","ECANCELED","ECHILD","ECHRNG","ECOMM","ECONNABORTED","ECONNREFUSED","ECONNRESET","EDEADLK","EDEADLOCK","EDESTADDRREQ","EDOM","EDOTDOT","EDQUOT","EEXIST","EFAULT","EFBIG","EHOSTDOWN","EHOSTUNREACH","EHWPOISON","EIDRM","EILSEQ","EINPROGRESS","EINTR","EINVAL","EIO","EISCONN","EISDIR","EISNAM","EKEYEXPIRED","EKEYREJECTED","EKEYREVOKED","EL2HLT","EL2NSYNC","EL3HLT","EL3RST","ELIBACC","ELIBBAD","ELIBEXEC","ELIBMAX","ELIBSCN","ELNRNG","ELOOP","EMEDIUMTYPE","EMFILE","EMLINK","EMSGSIZE","EMULTIHOP","ENAMETOOLONG","ENAVAIL","ENETDOWN","ENETRESET","ENETUNREACH","ENFILE","ENOANO","ENOBUFS","ENOCSI","ENODATA","ENODEV","ENOENT","ENOEXEC","ENOKEY","ENOLCK","ENOLINK","ENOMEDIUM","ENOMEM","ENOMSG","ENONET","ENOPKG","ENOPROTOOPT","ENOSPC","ENOSR","ENOSTR","ENOSYS","ENOTBLK","ENOTCONN","ENOTDIR","ENOTEMPTY","ENOTNAM","ENOTRECOVERABLE","ENOTSOCK","ENOTSUP","ENOTTY","ENOTUNIQ","ENXIO","EOPNOTSUPP","EOVERFLOW","EOWNERDEAD","EPERM","EPFNOSUPPORT","EPIPE","EPROTO","EPROTONOSUPPORT","EPROTOTYPE","ERANGE","EREMCHG","EREMOTE","EREMOTEIO","ERESTART","ERFKILL","EROFS","ESHUTDOWN","ESOCKTNOSUPPORT","ESPIPE","ESRCH","ESRMNT","ESTALE","ESTRPIPE","ETIME","ETIMEDOUT","ETOOMANYREFS","ETXTBSY","EUCLEAN","EUNATCH","EUSERS","EWOULDBLOCK","EXDEV","EXFULL","Errno","ErrnoSentinel","UnknownErrno","borrow","borrow_mut","clear","clone","clone_into","desc","eq","equivalent","errno","fmt","fmt","from","from_i32","from_i32","into","last","provide","result","sentinel","to_owned","to_string","try_from","try_from","try_into","type_id","AT_EMPTY_PATH","AT_NO_AUTOMOUNT","AT_REMOVEDIR","AT_SYMLINK_FOLLOW","AT_SYMLINK_NOFOLLOW","AtFlags","FALLOC_FL_COLLAPSE_RANGE","FALLOC_FL_INSERT_RANGE","FALLOC_FL_KEEP_SIZE","FALLOC_FL_PUNCH_HOLE","FALLOC_FL_UNSHARE_RANGE","FALLOC_FL_ZERO_RANGE","FD_CLOEXEC","F_ADD_SEALS","F_DUPFD","F_DUPFD_CLOEXEC","F_GETFD","F_GETFL","F_GETLK","F_GETPIPE_SZ","F_GET_SEALS","F_OFD_GETLK","F_OFD_SETLK","F_OFD_SETLKW","F_SEAL_GROW","F_SEAL_SEAL","F_SEAL_SHRINK","F_SEAL_WRITE","F_SETFD","F_SETFL","F_SETLK","F_SETLKW","F_SETPIPE_SZ","FallocateFlags","FcntlArg","FdFlag","FlockArg","LockExclusive","LockExclusiveNonblock","LockShared","LockSharedNonblock","OFlag","O_ACCMODE","O_APPEND","O_ASYNC","O_CLOEXEC","O_CREAT","O_DIRECT","O_DIRECTORY","O_DSYNC","O_EXCL","O_FSYNC","O_LARGEFILE","O_NDELAY","O_NOATIME","O_NOCTTY","O_NOFOLLOW","O_NONBLOCK","O_PATH","O_RDONLY","O_RDWR","O_RSYNC","O_SYNC","O_TMPFILE","O_TRUNC","O_WRONLY","POSIX_FADV_DONTNEED","POSIX_FADV_NOREUSE","POSIX_FADV_NORMAL","POSIX_FADV_RANDOM","POSIX_FADV_SEQUENTIAL","POSIX_FADV_WILLNEED","PosixFadviseAdvice","RENAME_EXCHANGE","RENAME_NOREPLACE","RENAME_WHITEOUT","RenameFlags","SPLICE_F_GIFT","SPLICE_F_MORE","SPLICE_F_MOVE","SPLICE_F_NONBLOCK","SealFlag","SpliceFFlags","Unlock","UnlockNonblock","all","all","all","all","all","all","all","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","complement","complement","complement","complement","complement","complement","complement","contains","contains","contains","contains","contains","contains","contains","copy_file_range","difference","difference","difference","difference","difference","difference","difference","empty","empty","empty","empty","empty","empty","empty","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","extend","extend","extend","extend","extend","extend","fallocate","fcntl","flock","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","insert","insert","insert","insert","insert","insert","insert","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","not","not","not","not","not","not","not","open","openat","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","posix_fadvise","posix_fallocate","readlink","readlinkat","remove","remove","remove","remove","remove","remove","remove","renameat","renameat2","set","set","set","set","set","set","set","splice","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","tee","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","toggle","toggle","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","union","union","union","union","union","vmsplice","socket_atomic_cloexec","InterfaceAddress","InterfaceAddressIterator","address","borrow","borrow","borrow_mut","borrow_mut","broadcast","clone","clone_into","destination","drop","eq","eq","equivalent","equivalent","flags","fmt","fmt","from","from","getifaddrs","hash","hash","interface_name","into","into","into_iter","netmask","next","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","DeleteModuleFlags","MODULE_INIT_IGNORE_MODVERSIONS","MODULE_INIT_IGNORE_VERMAGIC","ModuleInitFlags","O_NONBLOCK","O_TRUNC","all","all","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","complement","complement","contains","contains","delete_module","difference","difference","empty","empty","eq","eq","equivalent","equivalent","extend","extend","finit_module","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","hash","hash","init_module","insert","insert","intersection","intersection","intersects","intersects","into","into","is_all","is_all","is_empty","is_empty","not","not","partial_cmp","partial_cmp","remove","remove","set","set","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","toggle","toggle","try_from","try_from","try_into","try_into","type_id","type_id","union","union","MNT_DETACH","MNT_EXPIRE","MNT_FORCE","MS_ACTIVE","MS_BIND","MS_DIRSYNC","MS_I_VERSION","MS_KERNMOUNT","MS_LAZYTIME","MS_MANDLOCK","MS_MGC_MSK","MS_MGC_VAL","MS_MOVE","MS_NOATIME","MS_NODEV","MS_NODIRATIME","MS_NOEXEC","MS_NOSUID","MS_NOUSER","MS_POSIXACL","MS_PRIVATE","MS_RDONLY","MS_REC","MS_RELATIME","MS_REMOUNT","MS_RMT_MASK","MS_SHARED","MS_SILENT","MS_SLAVE","MS_STRICTATIME","MS_SYNCHRONOUS","MS_UNBINDABLE","MntFlags","MsFlags","UMOUNT_NOFOLLOW","all","all","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","complement","complement","contains","contains","difference","difference","empty","empty","eq","eq","equivalent","equivalent","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","hash","hash","insert","insert","intersection","intersection","intersects","intersects","into","into","is_all","is_all","is_empty","is_empty","mount","not","not","partial_cmp","partial_cmp","remove","remove","set","set","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","toggle","toggle","try_from","try_from","try_into","try_into","type_id","type_id","umount","umount2","union","union","MQ_OFlag","MqAttr","MqdT","O_CLOEXEC","O_CREAT","O_EXCL","O_NONBLOCK","O_RDONLY","O_RDWR","O_WRONLY","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","complement","contains","curmsgs","difference","empty","eq","eq","equivalent","equivalent","extend","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","hash","insert","intersection","intersects","into","into","into","is_all","is_empty","maxmsg","mq_attr_member_t","mq_close","mq_getattr","mq_open","mq_receive","mq_remove_nonblock","mq_send","mq_set_nonblock","mq_setattr","mq_unlink","msgsize","new","not","partial_cmp","remove","set","sub","sub_assign","symmetric_difference","to_owned","to_owned","toggle","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","union","if_","IFF_ALLMULTI","IFF_AUTOMEDIA","IFF_BROADCAST","IFF_DEBUG","IFF_DORMANT","IFF_DYNAMIC","IFF_ECHO","IFF_LOOPBACK","IFF_LOWER_UP","IFF_MASTER","IFF_MULTICAST","IFF_NOARP","IFF_NOTRAILERS","IFF_NO_PI","IFF_POINTOPOINT","IFF_PORTSEL","IFF_PROMISC","IFF_RUNNING","IFF_SLAVE","IFF_TAP","IFF_TUN","IFF_UP","Interface","InterfaceFlags","Interfaces","InterfacesIter","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","complement","contains","difference","drop","empty","eq","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","if_nameindex","if_nametoindex","index","insert","intersection","intersects","into","into","into","into","into_iter","into_iter","is_all","is_empty","iter","name","next","not","partial_cmp","remove","set","sub","sub_assign","symmetric_difference","to_owned","to_slice","toggle","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","union","POLLERR","POLLHUP","POLLIN","POLLNVAL","POLLOUT","POLLPRI","POLLRDBAND","POLLRDNORM","POLLWRBAND","POLLWRNORM","PollFd","PollFlags","all","all","any","as_raw_fd","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","complement","contains","difference","empty","eq","eq","equivalent","equivalent","events","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","hash","insert","intersection","intersects","into","into","is_all","is_empty","new","not","partial_cmp","poll","ppoll","remove","revents","set","set_events","sub","sub_assign","symmetric_difference","to_owned","to_owned","toggle","try_from","try_from","try_into","try_into","type_id","type_id","union","ForkptyResult","OpenptyResult","PtyMaster","SessionId","Winsize","as_raw_fd","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","drop","eq","eq","eq","equivalent","equivalent","equivalent","flush","flush","fmt","fmt","fmt","fmt","fork_result","forkpty","from","from","from","from","from","grantpt","hash","hash","hash","into","into","into","into","into_raw_fd","master","master","openpty","posix_openpt","ptsname","ptsname_r","read","read","slave","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unlockpt","write","write","ws_col","ws_row","ws_xpixel","ws_ypixel","CLONE_DETACHED","CLONE_FILES","CLONE_FS","CLONE_IO","CLONE_NEWCGROUP","CLONE_NEWIPC","CLONE_NEWNET","CLONE_NEWNS","CLONE_NEWPID","CLONE_NEWUSER","CLONE_NEWUTS","CLONE_PARENT","CLONE_PTRACE","CLONE_SIGHAND","CLONE_SYSVSEM","CLONE_THREAD","CLONE_UNTRACED","CLONE_VFORK","CLONE_VM","CloneCb","CloneFlags","CpuSet","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","cmp","complement","contains","count","default","difference","empty","eq","eq","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","hash","insert","intersection","intersects","into","into","is_all","is_empty","is_set","new","not","partial_cmp","remove","sched_getaffinity","sched_getcpu","sched_setaffinity","sched_yield","set","set","setns","sub","sub_assign","symmetric_difference","to_owned","to_owned","toggle","try_from","try_from","try_into","try_into","type_id","type_id","union","unset","unshare","aio","epoll","eventfd","inotify","ioctl","memfd","mman","personality","pthread","ptrace","quota","reboot","resource","select","sendfile","signal","signalfd","socket","stat","statfs","statvfs","sysinfo","termios","time","timer","timerfd","uio","utsname","wait","Aio","AioAllDone","AioCancelStat","AioCanceled","AioFsync","AioFsyncMode","AioNotCanceled","AioRead","AioWrite","LIO_NOWAIT","LIO_WAIT","LioMode","O_DSYNC","O_SYNC","Output","aio_cancel_all","aio_return","aio_return","aio_return","aio_return","aio_suspend","as_mut","as_mut","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cancel","cancel","cancel","cancel","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","eq","eq","eq","equivalent","equivalent","equivalent","error","error","error","error","fd","fd","fd","fd","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","hash","hash","hash","in_progress","in_progress","in_progress","in_progress","into","into","into","into","into","into","lio_listio","mode","nbytes","nbytes","new","new","new","offset","offset","partial_cmp","partial_cmp","priority","priority","priority","priority","set_sigev_notify","set_sigev_notify","set_sigev_notify","set_sigev_notify","sigevent","sigevent","sigevent","sigevent","submit","submit","submit","submit","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","EPOLLERR","EPOLLET","EPOLLEXCLUSIVE","EPOLLHUP","EPOLLIN","EPOLLMSG","EPOLLONESHOT","EPOLLOUT","EPOLLPRI","EPOLLRDBAND","EPOLLRDHUP","EPOLLRDNORM","EPOLLWAKEUP","EPOLLWRBAND","EPOLLWRNORM","EPOLL_CLOEXEC","EpollCreateFlags","EpollCtlAdd","EpollCtlDel","EpollCtlMod","EpollEvent","EpollFlags","EpollOp","all","all","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","complement","complement","contains","contains","data","difference","difference","empty","empty","empty","epoll_create","epoll_create1","epoll_ctl","epoll_wait","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","events","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","hash","hash","hash","hash","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","is_all","is_all","is_empty","is_empty","new","not","not","partial_cmp","partial_cmp","remove","remove","set","set","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","union","union","EFD_CLOEXEC","EFD_NONBLOCK","EFD_SEMAPHORE","EfdFlags","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow_mut","clone","clone_into","cmp","complement","contains","difference","empty","eq","equivalent","eventfd","extend","fmt","fmt","fmt","fmt","fmt","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","insert","intersection","intersects","into","is_all","is_empty","not","partial_cmp","remove","set","sub","sub_assign","symmetric_difference","to_owned","toggle","try_from","try_into","type_id","union","AddWatchFlags","IN_ACCESS","IN_ALL_EVENTS","IN_ATTRIB","IN_CLOEXEC","IN_CLOSE","IN_CLOSE_NOWRITE","IN_CLOSE_WRITE","IN_CREATE","IN_DELETE","IN_DELETE_SELF","IN_DONT_FOLLOW","IN_IGNORED","IN_ISDIR","IN_MODIFY","IN_MOVE","IN_MOVED_FROM","IN_MOVED_TO","IN_MOVE_SELF","IN_NONBLOCK","IN_ONESHOT","IN_ONLYDIR","IN_OPEN","IN_Q_OVERFLOW","IN_UNMOUNT","InitFlags","Inotify","InotifyEvent","WatchDescriptor","add_watch","all","all","as_raw_fd","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","complement","complement","contains","contains","cookie","difference","difference","empty","empty","eq","eq","eq","equivalent","equivalent","equivalent","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_raw_fd","hash","hash","hash","init","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","is_all","is_all","is_empty","is_empty","mask","name","not","not","partial_cmp","partial_cmp","partial_cmp","read_events","remove","remove","rm_watch","set","set","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","union","wd","request_code_none","request_code_read","request_code_readwrite","request_code_write","MFD_ALLOW_SEALING","MFD_CLOEXEC","MemFdCreateFlag","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow_mut","clone","clone_into","cmp","complement","contains","difference","empty","eq","equivalent","extend","fmt","fmt","fmt","fmt","fmt","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","insert","intersection","intersects","into","is_all","is_empty","memfd_create","not","partial_cmp","remove","set","sub","sub_assign","symmetric_difference","to_owned","toggle","try_from","try_into","type_id","union","MADV_DODUMP","MADV_DOFORK","MADV_DONTDUMP","MADV_DONTFORK","MADV_DONTNEED","MADV_FREE","MADV_HUGEPAGE","MADV_HWPOISON","MADV_MERGEABLE","MADV_NOHUGEPAGE","MADV_NORMAL","MADV_RANDOM","MADV_REMOVE","MADV_SEQUENTIAL","MADV_SOFT_OFFLINE","MADV_UNMERGEABLE","MADV_WILLNEED","MAP_32BIT","MAP_ANON","MAP_ANONYMOUS","MAP_DENYWRITE","MAP_EXECUTABLE","MAP_FILE","MAP_FIXED","MAP_FIXED_NOREPLACE","MAP_GROWSDOWN","MAP_HUGETLB","MAP_HUGE_16GB","MAP_HUGE_16MB","MAP_HUGE_1GB","MAP_HUGE_1MB","MAP_HUGE_256MB","MAP_HUGE_2GB","MAP_HUGE_2MB","MAP_HUGE_32MB","MAP_HUGE_512KB","MAP_HUGE_512MB","MAP_HUGE_64KB","MAP_HUGE_8MB","MAP_LOCKED","MAP_NONBLOCK","MAP_NORESERVE","MAP_POPULATE","MAP_PRIVATE","MAP_SHARED","MAP_STACK","MCL_CURRENT","MCL_FUTURE","MREMAP_FIXED","MREMAP_MAYMOVE","MRemapFlags","MS_ASYNC","MS_INVALIDATE","MS_SYNC","MapFlags","MlockAllFlags","MmapAdvise","MsFlags","PROT_EXEC","PROT_GROWSDOWN","PROT_GROWSUP","PROT_NONE","PROT_READ","PROT_WRITE","ProtFlags","all","all","all","all","all","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","complement","complement","complement","complement","complement","contains","contains","contains","contains","contains","difference","difference","difference","difference","difference","empty","empty","empty","empty","empty","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","extend","extend","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_iter","from_iter","from_iter","hash","hash","hash","hash","hash","hash","insert","insert","insert","insert","insert","intersection","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","intersects","into","into","into","into","into","into","is_all","is_all","is_all","is_all","is_all","is_empty","is_empty","is_empty","is_empty","is_empty","madvise","mlock","mlockall","mmap","mprotect","mremap","msync","munlock","munlockall","munmap","not","not","not","not","not","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","remove","remove","remove","remove","remove","set","set","set","set","set","shm_open","shm_unlink","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","union","union","union","union","union","ADDR_COMPAT_LAYOUT","ADDR_LIMIT_32BIT","ADDR_LIMIT_3GB","ADDR_NO_RANDOMIZE","FDPIC_FUNCPTRS","MMAP_PAGE_ZERO","Persona","READ_IMPLIES_EXEC","SHORT_INODE","STICKY_TIMEOUTS","UNAME26","WHOLE_SECONDS","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow_mut","clone","clone_into","cmp","complement","contains","difference","empty","eq","equivalent","extend","fmt","fmt","fmt","fmt","fmt","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","get","hash","insert","intersection","intersects","into","is_all","is_empty","not","partial_cmp","remove","set","set","sub","sub_assign","symmetric_difference","to_owned","toggle","try_from","try_into","type_id","union","Pthread","pthread_kill","pthread_self","AddressType","Event","Options","PTRACE_ATTACH","PTRACE_CONT","PTRACE_DETACH","PTRACE_EVENT_CLONE","PTRACE_EVENT_EXEC","PTRACE_EVENT_EXIT","PTRACE_EVENT_FORK","PTRACE_EVENT_SECCOMP","PTRACE_EVENT_STOP","PTRACE_EVENT_VFORK","PTRACE_EVENT_VFORK_DONE","PTRACE_GETEVENTMSG","PTRACE_GETFPREGS","PTRACE_GETFPXREGS","PTRACE_GETREGS","PTRACE_GETREGSET","PTRACE_GETSIGINFO","PTRACE_INTERRUPT","PTRACE_KILL","PTRACE_LISTEN","PTRACE_O_EXITKILL","PTRACE_O_TRACECLONE","PTRACE_O_TRACEEXEC","PTRACE_O_TRACEEXIT","PTRACE_O_TRACEFORK","PTRACE_O_TRACESECCOMP","PTRACE_O_TRACESYSGOOD","PTRACE_O_TRACEVFORK","PTRACE_O_TRACEVFORKDONE","PTRACE_PEEKDATA","PTRACE_PEEKSIGINFO","PTRACE_PEEKTEXT","PTRACE_PEEKUSER","PTRACE_POKEDATA","PTRACE_POKETEXT","PTRACE_POKEUSER","PTRACE_SEIZE","PTRACE_SETFPREGS","PTRACE_SETFPXREGS","PTRACE_SETOPTIONS","PTRACE_SETREGS","PTRACE_SETREGSET","PTRACE_SETSIGINFO","PTRACE_SINGLESTEP","PTRACE_SYSCALL","PTRACE_SYSEMU","PTRACE_SYSEMU_SINGLESTEP","PTRACE_TRACEME","Request","all","attach","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","cmp","complement","cont","contains","detach","difference","empty","eq","eq","eq","equivalent","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","getevent","getregs","getsiginfo","hash","hash","hash","insert","interrupt","intersection","intersects","into","into","into","is_all","is_empty","kill","not","partial_cmp","partial_cmp","partial_cmp","read","read_user","remove","seize","set","setoptions","setregs","setsiginfo","step","sub","sub_assign","symmetric_difference","syscall","sysemu","sysemu_step","to_owned","to_owned","to_owned","toggle","traceme","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","union","write","write_user","Dqblk","GRPQUOTA","QFMT_VFS_OLD","QFMT_VFS_V0","QFMT_VFS_V1","QIF_ALL","QIF_BLIMITS","QIF_BTIME","QIF_ILIMITS","QIF_INODES","QIF_ITIME","QIF_LIMITS","QIF_SPACE","QIF_TIMES","QIF_USAGE","QuotaFmt","QuotaType","QuotaValidFlags","USRQUOTA","all","allocated_inodes","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","block_time_limit","blocks_hard_limit","blocks_soft_limit","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","complement","contains","default","default","difference","empty","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","hash","hash","hash","inode_time_limit","inodes_hard_limit","inodes_soft_limit","insert","intersection","intersects","into","into","into","into","is_all","is_empty","not","occupied_space","partial_cmp","partial_cmp","partial_cmp","quotactl_get","quotactl_off","quotactl_on","quotactl_set","quotactl_sync","remove","set","set_block_time_limit","set_blocks_hard_limit","set_blocks_soft_limit","set_inode_time_limit","set_inodes_hard_limit","set_inodes_soft_limit","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","to_owned","toggle","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","union","RB_AUTOBOOT","RB_HALT_SYSTEM","RB_KEXEC","RB_POWER_OFF","RB_SW_SUSPEND","RebootMode","borrow","borrow_mut","clone","clone_into","cmp","eq","equivalent","fmt","from","hash","into","partial_cmp","reboot","set_cad_enabled","to_owned","try_from","try_into","type_id","RLIMIT_AS","RLIMIT_CORE","RLIMIT_CPU","RLIMIT_DATA","RLIMIT_FSIZE","RLIMIT_LOCKS","RLIMIT_MEMLOCK","RLIMIT_MSGQUEUE","RLIMIT_NICE","RLIMIT_NOFILE","RLIMIT_NPROC","RLIMIT_RSS","RLIMIT_RTPRIO","RLIMIT_RTTIME","RLIMIT_SIGPENDING","RLIMIT_STACK","RLIM_INFINITY","RUSAGE_CHILDREN","RUSAGE_SELF","RUSAGE_THREAD","Resource","Usage","UsageWho","as_mut","as_ref","block_reads","block_writes","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","full_swaps","getrlimit","getrusage","hash","hash","hash","into","into","into","involuntary_context_switches","ipc_receives","ipc_sends","major_page_faults","max_rss","minor_page_faults","partial_cmp","partial_cmp","rlim_t","setrlimit","shared_integral","signals","system_time","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unshared_data_integral","unshared_stack_integral","user_time","voluntary_context_switches","FD_SETSIZE","FdSet","Fds","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone_into","contains","default","eq","equivalent","fds","fmt","fmt","from","from","hash","highest","insert","into","into","into_iter","new","next","next_back","pselect","remove","select","size_hint","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","sendfile","sendfile64","Handler","SA_NOCLDSTOP","SA_NOCLDWAIT","SA_NODEFER","SA_ONSTACK","SA_RESETHAND","SA_RESTART","SA_SIGINFO","SIGABRT","SIGALRM","SIGBUS","SIGCHLD","SIGCONT","SIGFPE","SIGHUP","SIGILL","SIGINT","SIGIO","SIGIOT","SIGKILL","SIGPIPE","SIGPOLL","SIGPROF","SIGPWR","SIGQUIT","SIGSEGV","SIGSTKFLT","SIGSTOP","SIGSYS","SIGTERM","SIGTRAP","SIGTSTP","SIGTTIN","SIGTTOU","SIGUNUSED","SIGURG","SIGUSR1","SIGUSR2","SIGVTALRM","SIGWINCH","SIGXCPU","SIGXFSZ","SIG_BLOCK","SIG_SETMASK","SIG_UNBLOCK","SaFlags","SigAction","SigAction","SigDfl","SigEvent","SigHandler","SigIgn","SigSet","SigSetIter","SigevNone","SigevNotify","SigevSignal","SigevThreadId","SigmaskHow","Signal","SignalIterator","add","all","all","as_mut_ptr","as_ref","as_ref","as_str","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","complement","contains","contains","difference","empty","empty","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","extend","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_iter","from_sigset_t_unchecked","from_str","handler","hash","hash","hash","hash","hash","hash","hash","hash","hash","insert","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","is_all","is_empty","iter","iterator","kill","killpg","mask","new","new","next","next","not","partial_cmp","partial_cmp","partial_cmp","pthread_sigmask","raise","remove","remove","set","sigaction","sigevent","signal","sigprocmask","sub","sub_assign","symmetric_difference","thread_block","thread_get_mask","thread_set_mask","thread_swap_mask","thread_unblock","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_of_thread_id","union","wait","si_value","si_value","signal","signal","thread_id","SFD_CLOEXEC","SFD_NONBLOCK","SIGNALFD_NEW","SIGNALFD_SIGINFO_SIZE","SfdFlags","SigSet","SignalFd","all","as_raw_fd","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","complement","contains","difference","drop","empty","eq","eq","eq","equivalent","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","hash","hash","insert","intersection","intersects","into","into","into","into_iter","is_all","is_empty","new","next","not","partial_cmp","read_signal","remove","set","set_mask","siginfo","signal","signalfd","ssi_addr","ssi_addr_lsb","ssi_arch","ssi_band","ssi_call_addr","ssi_code","ssi_errno","ssi_fd","ssi_int","ssi_overrun","ssi_pid","ssi_ptr","ssi_signo","ssi_status","ssi_stime","ssi_syscall","ssi_tid","ssi_trapno","ssi_uid","ssi_utime","sub","sub_assign","symmetric_difference","to_owned","to_owned","toggle","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","union","with_flags","AddressFamily","Alg","Alg","AlgAddr","AlgSetAeadAssoclen","AlgSetIv","AlgSetOp","AppleTalk","Ash","AtmPvc","AtmSvc","Ax25","Bluetooth","Both","Bridge","Caif","Can","CmsgIterator","ControlMessage","ControlMessageOwned","Datagram","Decnet","Econet","EthAll","GetSockOpt","Ib","Ieee802154","Inet","Inet","Inet6","InetAddr","IoSliceIterator","IpAddr","IpMembershipRequest","Ipv4Addr","Ipv4OrigDstAddr","Ipv4PacketInfo","Ipv4PacketInfo","Ipv4RecvErr","Ipv6Addr","Ipv6MembershipRequest","Ipv6OrigDstAddr","Ipv6PacketInfo","Ipv6PacketInfo","Ipv6RecvErr","Ipx","Irda","Isdn","Iucv","Key","Link","LinkAddr","Llc","MSG_CMSG_CLOEXEC","MSG_CTRUNC","MSG_DONTWAIT","MSG_EOR","MSG_ERRQUEUE","MSG_NOSIGNAL","MSG_OOB","MSG_PEEK","MSG_TRUNC","MSG_WAITALL","Mpls","MsgFlags","MultiHeaders","MultiResults","NetBeui","NetRom","Netlink","Netlink","NetlinkAddr","NetlinkAudit","NetlinkCrypto","NetlinkDECNetRoutingMessage","NetlinkFIBLookup","NetlinkIPv6Firewall","NetlinkISCSI","NetlinkKObjectUEvent","NetlinkNetFilter","NetlinkRDMA","NetlinkRoute","NetlinkSCSITransport","NetlinkSELinux","NetlinkSockDiag","NetlinkUserSock","Nfc","Packet","Phonet","Pppox","Raw","Raw","Rdm","Rds","Read","RecvMsg","Rose","RxRpc","RxqOvfl","RxqOvfl","SOCK_CLOEXEC","SOCK_NONBLOCK","SOF_TIMESTAMPING_RAW_HARDWARE","SOF_TIMESTAMPING_RX_HARDWARE","SOF_TIMESTAMPING_RX_SOFTWARE","SOF_TIMESTAMPING_SOFTWARE","SOF_TIMESTAMPING_TX_HARDWARE","SOF_TIMESTAMPING_TX_SOFTWARE","ScmCredentials","ScmCredentials","ScmRights","ScmRights","ScmTimestamp","ScmTimestampns","ScmTimestampsns","Security","SeqPacket","SetSockOpt","Shutdown","Sna","SockAddr","SockFlag","SockProtocol","SockType","SockaddrIn","SockaddrIn6","SockaddrLike","SockaddrStorage","Stream","Tcp","TimestampingFlag","Timestamps","Tipc","TxTime","Udp","UdpGroSegments","UdpGsoSegments","Unix","Unix","UnixAddr","UnixCredentials","Unspec","V4","V4","V6","V6","Val","Val","Vsock","Vsock","VsockAddr","Wanpipe","Write","X25","accept","accept4","addr","address","alg_name","alg_type","all","all","all","any","as_abstract","as_alg_addr","as_alg_addr_mut","as_ffi_pair","as_link_addr","as_link_addr_mut","as_mut_ptr","as_netlink_addr","as_netlink_addr_mut","as_ptr","as_ptr","as_ptr","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_sockaddr_in","as_sockaddr_in6","as_sockaddr_in6_mut","as_sockaddr_in_mut","as_unix_addr","as_unix_addr_mut","as_vsock_addr","as_vsock_addr_mut","bind","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","cid","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmsg_len","cmsg_level","cmsg_type","cmsghdr","cmsgs","complement","complement","complement","connect","contains","contains","contains","default","difference","difference","difference","empty","empty","empty","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","extend","extend","family","family","family","flags","flowinfo","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_i32","from_iter","from_iter","from_iter","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw","from_std","from_std","from_std","from_std","from_str","from_str","get","getpeername","getsockname","getsockopt","gid","groups","halen","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hatype","hw_raw","hw_trans","ifindex","insert","insert","insert","intersection","intersection","intersection","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","iovs","ip","ip","ip","is_all","is_all","is_all","is_empty","is_empty","is_empty","is_unnamed","len","len","len","len","listen","msg_control","msg_controllen","msg_flags","msg_iov","msg_iovlen","msg_name","msg_namelen","msghdr","new","new","new","new","new","new","new","new","new","new","new","new_abstract","new_alg","new_inet","new_netlink","new_unix","new_unnamed","new_v4","new_v6","new_vsock","next","next","next","not","not","not","octets","partial_cmp","partial_cmp","partial_cmp","path","path_len","pid","pid","pkttype","port","port","port","port","preallocate","protocol","recv","recvfrom","recvmmsg","recvmsg","remove","remove","remove","sa_data","sa_family","sa_family_t","scope_id","segments","send","sendmmsg","sendmsg","sendto","set","set","set","set","setsockopt","shutdown","sin6_addr","sin6_family","sin6_flowinfo","sin6_port","sin6_scope_id","sin_addr","sin_family","sin_port","sin_zero","size","size","size","sockaddr","sockaddr_in","sockaddr_in6","sockaddr_storage","sockaddr_storage_to_addr","sockaddr_un","socket","socketpair","sockopt","ss_family","sub","sub","sub","sub_assign","sub_assign","sub_assign","sun_family","sun_path","symmetric_difference","symmetric_difference","symmetric_difference","system","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_std","to_std","to_std","to_std","to_str","to_str","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uid","union","union","union","AcceptConn","AlgSetAeadAuthSize","AlgSetKey","BindToDevice","Broadcast","DontRoute","Ip6tOriginalDst","IpAddMembership","IpDropMembership","IpFreebind","IpMtu","IpMulticastLoop","IpMulticastTtl","IpTos","IpTransparent","Ipv4OrigDstAddr","Ipv4PacketInfo","Ipv4RecvErr","Ipv4Ttl","Ipv6AddMembership","Ipv6DontFrag","Ipv6DropMembership","Ipv6OrigDstAddr","Ipv6RecvErr","Ipv6RecvPacketInfo","Ipv6TClass","Ipv6Ttl","Ipv6V6Only","KeepAlive","Linger","Mark","OobInline","OriginalDst","PassCred","PeerCredentials","Priority","RcvBuf","RcvBufForce","ReceiveTimeout","ReceiveTimestamp","ReceiveTimestampns","ReuseAddr","ReusePort","RxqOvfl","SendTimeout","SndBuf","SndBufForce","SockType","SocketError","TcpCongestion","TcpKeepCount","TcpKeepIdle","TcpKeepInterval","TcpMaxSeg","TcpNoDelay","TcpRepair","TcpUserTimeout","Timestamping","TxTime","UdpGroSegment","UdpGsoSegment","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","FchmodatFlags","FileStat","FileStat","FollowSymlink","FollowSymlink","Mode","NoFollowSymlink","NoFollowSymlink","SFlag","S_IFBLK","S_IFCHR","S_IFDIR","S_IFIFO","S_IFLNK","S_IFMT","S_IFREG","S_IFSOCK","S_IRGRP","S_IROTH","S_IRUSR","S_IRWXG","S_IRWXO","S_IRWXU","S_ISGID","S_ISUID","S_ISVTX","S_IWGRP","S_IWOTH","S_IWUSR","S_IXGRP","S_IXOTH","S_IXUSR","UtimensatFlags","all","all","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","complement","complement","contains","contains","dev_t","difference","difference","empty","empty","eq","eq","eq","equivalent","equivalent","equivalent","extend","extend","fchmod","fchmodat","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","fstat","fstatat","futimens","hash","hash","hash","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","is_all","is_all","is_empty","is_empty","lstat","lutimes","major","makedev","minor","mkdirat","mknod","mknodat","mode_t","not","not","partial_cmp","partial_cmp","remove","remove","set","set","st_atime","st_atime_nsec","st_blksize","st_blocks","st_ctime","st_ctime_nsec","st_dev","st_gid","st_ino","st_mode","st_mtime","st_mtime_nsec","st_nlink","st_rdev","st_size","st_uid","stat","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","umask","union","union","utimensat","utimes","ADFS_SUPER_MAGIC","AFFS_SUPER_MAGIC","AFS_SUPER_MAGIC","AUTOFS_SUPER_MAGIC","BPF_FS_MAGIC","BTRFS_SUPER_MAGIC","CGROUP2_SUPER_MAGIC","CGROUP_SUPER_MAGIC","CODA_SUPER_MAGIC","CRAMFS_MAGIC","DEBUGFS_MAGIC","DEVPTS_SUPER_MAGIC","ECRYPTFS_SUPER_MAGIC","EFS_SUPER_MAGIC","EXT2_SUPER_MAGIC","EXT3_SUPER_MAGIC","EXT4_SUPER_MAGIC","F2FS_SUPER_MAGIC","FUSE_SUPER_MAGIC","FUTEXFS_SUPER_MAGIC","FsType","HOSTFS_SUPER_MAGIC","HPFS_SUPER_MAGIC","HUGETLBFS_MAGIC","ISOFS_SUPER_MAGIC","JFFS2_SUPER_MAGIC","MINIX2_SUPER_MAGIC","MINIX2_SUPER_MAGIC2","MINIX3_SUPER_MAGIC","MINIX_SUPER_MAGIC","MINIX_SUPER_MAGIC2","MSDOS_SUPER_MAGIC","NCP_SUPER_MAGIC","NFS_SUPER_MAGIC","NILFS_SUPER_MAGIC","NSFS_MAGIC","OCFS2_SUPER_MAGIC","OPENPROM_SUPER_MAGIC","OVERLAYFS_SUPER_MAGIC","PROC_SUPER_MAGIC","QNX4_SUPER_MAGIC","QNX6_SUPER_MAGIC","RDTGROUP_SUPER_MAGIC","REISERFS_SUPER_MAGIC","SECURITYFS_MAGIC","SELINUX_MAGIC","SMACK_MAGIC","SMB_SUPER_MAGIC","SYSFS_MAGIC","Statfs","TMPFS_MAGIC","TRACEFS_MAGIC","UDF_SUPER_MAGIC","USBDEVICE_SUPER_MAGIC","XENFS_SUPER_MAGIC","XFS_SUPER_MAGIC","block_size","blocks","blocks_available","blocks_free","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","equivalent","files","files_free","filesystem_id","filesystem_type","flags","fmt","fmt","from","from","fsid_t","fstatfs","into","into","maximum_name_length","optimal_transfer_size","statfs","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","FsFlags","ST_APPEND","ST_IMMUTABLE","ST_MANDLOCK","ST_NOATIME","ST_NODEV","ST_NODIRATIME","ST_NOEXEC","ST_NOSUID","ST_RDONLY","ST_RELATIME","ST_SYNCHRONOUS","ST_WRITE","Statvfs","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","block_size","blocks","blocks_available","blocks_free","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","complement","contains","default","difference","empty","eq","eq","equivalent","equivalent","extend","files","files_available","files_free","filesystem_id","flags","fmt","fmt","fmt","fmt","fmt","fmt","fragment_size","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","fstatvfs","hash","hash","insert","intersection","intersects","into","into","is_all","is_empty","name_max","not","partial_cmp","remove","set","statvfs","sub","sub_assign","symmetric_difference","to_owned","to_owned","toggle","try_from","try_from","try_into","try_into","type_id","type_id","union","SysInfo","borrow","borrow_mut","clone","clone_into","eq","equivalent","fmt","from","hash","into","load_average","process_count","ram_total","ram_unused","swap_free","swap_total","sysinfo","to_owned","try_from","try_into","type_id","uptime","B0","B1000000","B110","B115200","B1152000","B1200","B134","B150","B1500000","B1800","B19200","B200","B2000000","B230400","B2400","B2500000","B300","B3000000","B3500000","B38400","B4000000","B460800","B4800","B50","B500000","B57600","B576000","B600","B75","B921600","B9600","BRKINT","BS0","BS1","BSDLY","BaudRate","CBAUD","CBAUDEX","CIBAUD","CLOCAL","CMSPAR","CR0","CR1","CR2","CR3","CRDLY","CREAD","CRTSCTS","CS5","CS6","CS7","CS8","CSIZE","CSTOPB","ControlFlags","ECHO","ECHOCTL","ECHOE","ECHOK","ECHOKE","ECHONL","ECHOPRT","EXTPROC","FF0","FF1","FFDLY","FLUSHO","FlowArg","FlushArg","HUPCL","ICANON","ICRNL","IEXTEN","IGNBRK","IGNCR","IGNPAR","IMAXBEL","INLCR","INPCK","ISIG","ISTRIP","IUTF8","IXANY","IXOFF","IXON","InputFlags","LocalFlags","NCCS","NL0","NL1","NLDLY","NOFLSH","OCRNL","OFDEL","OFILL","OLCUC","ONLCR","ONLRET","ONOCR","OPOST","OutputFlags","PARENB","PARMRK","PARODD","PENDIN","SetArg","SpecialCharacterIndices","TAB0","TAB1","TAB2","TAB3","TABDLY","TCIFLUSH","TCIOFF","TCIOFLUSH","TCION","TCOFLUSH","TCOOFF","TCOON","TCSADRAIN","TCSAFLUSH","TCSANOW","TOSTOP","Termios","VDISCARD","VEOF","VEOL","VEOL2","VERASE","VINTR","VKILL","VLNEXT","VMIN","VQUIT","VREPRINT","VSTART","VSTOP","VSUSP","VSWTC","VT0","VT1","VTDLY","VTIME","VWERASE","XTABS","_POSIX_VDISABLE","all","all","all","all","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cfgetispeed","cfgetospeed","cfmakeraw","cfsetispeed","cfsetospeed","cfsetspeed","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","complement","complement","complement","complement","contains","contains","contains","contains","control_chars","control_flags","difference","difference","difference","difference","empty","empty","empty","empty","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","extend","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_iter","from_iter","hash","hash","hash","hash","hash","hash","hash","hash","hash","input_flags","insert","insert","insert","insert","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","is_all","is_all","is_all","is_all","is_empty","is_empty","is_empty","is_empty","line_discipline","local_flags","not","not","not","not","output_flags","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","remove","remove","remove","remove","set","set","set","set","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","tcdrain","tcflow","tcflush","tcgetattr","tcgetsid","tcsendbreak","tcsetattr","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","union","union","TimeSpec","TimeVal","TimeValLike","add","add","as_mut","as_mut","as_ref","as_ref","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","div","div","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_duration","from_timespec","hash","hash","hours","into","into","microseconds","microseconds","microseconds","milliseconds","milliseconds","milliseconds","minutes","mul","mul","nanoseconds","nanoseconds","nanoseconds","neg","neg","new","new","num_hours","num_microseconds","num_microseconds","num_microseconds","num_milliseconds","num_milliseconds","num_milliseconds","num_minutes","num_nanoseconds","num_nanoseconds","num_nanoseconds","num_seconds","num_seconds","num_seconds","partial_cmp","partial_cmp","seconds","seconds","seconds","sub","sub","suseconds_t","time_t","to_owned","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","tv_nsec","tv_sec","tv_sec","tv_usec","type_id","type_id","zero","Expiration","Interval","IntervalDelayed","OneShot","Timer","TimerSetTimeFlags","borrow","borrow_mut","drop","fmt","from","get","into","new","overruns","set","try_from","try_into","type_id","CLOCK_BOOTTIME","CLOCK_BOOTTIME_ALARM","CLOCK_MONOTONIC","CLOCK_REALTIME","CLOCK_REALTIME_ALARM","ClockId","Expiration","Interval","IntervalDelayed","OneShot","TFD_CLOEXEC","TFD_NONBLOCK","TFD_TIMER_ABSTIME","TimerFd","TimerFlags","TimerSetTimeFlags","all","all","as_raw_fd","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","complement","complement","contains","contains","difference","difference","drop","empty","empty","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_raw_fd","get","hash","hash","hash","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","is_all","is_all","is_empty","is_empty","new","not","not","partial_cmp","partial_cmp","partial_cmp","remove","remove","set","set","set","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","union","unset","wait","IoVec","RemoteIoVec","as_slice","base","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","eq","equivalent","equivalent","fmt","fmt","from","from","from_mut_slice","from_slice","hash","hash","into","into","len","pread","preadv","process_vm_readv","process_vm_writev","pwrite","pwritev","readv","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","writev","UtsName","borrow","borrow_mut","clone","clone_into","domainname","eq","equivalent","fmt","from","hash","into","machine","nodename","release","sysname","to_owned","try_from","try_into","type_id","uname","version","All","Continued","Exited","Id","PGid","PIDFd","Pid","PtraceEvent","PtraceSyscall","Signaled","StillAlive","Stopped","WCONTINUED","WEXITED","WNOHANG","WNOWAIT","WSTOPPED","WUNTRACED","WaitPidFlag","WaitStatus","__WALL","__WCLONE","__WNOTHREAD","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","complement","contains","difference","empty","eq","eq","eq","equivalent","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_raw","hash","hash","hash","insert","intersection","intersects","into","into","into","is_all","is_empty","not","partial_cmp","partial_cmp","pid","remove","set","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","toggle","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","union","wait","waitid","waitpid","CLOCK_BOOTTIME","CLOCK_BOOTTIME_ALARM","CLOCK_MONOTONIC","CLOCK_MONOTONIC_COARSE","CLOCK_MONOTONIC_RAW","CLOCK_PROCESS_CPUTIME_ID","CLOCK_REALTIME","CLOCK_REALTIME_ALARM","CLOCK_REALTIME_COARSE","CLOCK_TAI","CLOCK_THREAD_CPUTIME_ID","ClockId","as_raw","borrow","borrow_mut","clock_getcpuclockid","clock_getres","clock_gettime","clock_settime","clone","clone_into","cmp","eq","equivalent","fmt","fmt","from","from","from_raw","hash","into","now","partial_cmp","pid_cpu_clock_id","res","set_time","to_owned","to_string","try_from","try_into","type_id","UContext","borrow","borrow_mut","clone","clone_into","eq","equivalent","fmt","from","get","hash","into","set","sigmask","sigmask_mut","to_owned","try_from","try_into","type_id","AIO_LISTIO_MAX","AIO_MAX","AIO_PRIO_DELTA_MAX","ARG_MAX","ATEXIT_MAX","AccessFlags","BC_BASE_MAX","BC_DIM_MAX","BC_SCALE_MAX","BC_STRING_MAX","CHILD_MAX","CLK_TCK","COLL_WEIGHTS_MAX","Child","DELAYTIMER_MAX","EXPR_NEST_MAX","FILESIZEBITS","F_OK","FchownatFlags","FollowSymlink","ForkResult","GETGR_R_SIZE_MAX","GETPW_R_SIZE_MAX","Gid","Group","HOST_NAME_MAX","IOV_MAX","LINE_MAX","LINK_MAX","LOGIN_NAME_MAX","LinkatFlags","MAX_CANON","MAX_INPUT","MQ_OPEN_MAX","MQ_PRIO_MAX","NAME_MAX","NGROUPS_MAX","NoFollowSymlink","NoRemoveDir","NoSymlinkFollow","OPEN_MAX","PAGE_SIZE","PATH_MAX","PIPE_BUF","POSIX2_SYMLINKS","POSIX_ALLOC_SIZE_MIN","POSIX_REC_INCR_XFER_SIZE","POSIX_REC_MAX_XFER_SIZE","POSIX_REC_MIN_XFER_SIZE","POSIX_REC_XFER_ALIGN","PTHREAD_DESTRUCTOR_ITERATIONS","PTHREAD_KEYS_MAX","PTHREAD_STACK_MIN","PTHREAD_THREADS_MAX","Parent","PathconfVar","Pid","RE_DUP_MAX","ROOT","RTSIG_MAX","R_OK","RemoveDir","ResGid","ResUid","SEM_NSEMS_MAX","SEM_VALUE_MAX","SIGQUEUE_MAX","STREAM_MAX","SYMLINK_MAX","SYMLOOP_MAX","SeekCur","SeekData","SeekEnd","SeekHole","SeekSet","SymlinkFollow","SysconfVar","TIMER_MAX","TTY_NAME_MAX","TZNAME_MAX","Uid","UnlinkatFlags","User","W_OK","Whence","X_OK","_AVPHYS_PAGES","_NPROCESSORS_CONF","_NPROCESSORS_ONLN","_PHYS_PAGES","_POSIX2_CHAR_TERM","_POSIX2_C_BIND","_POSIX2_C_DEV","_POSIX2_FORT_DEV","_POSIX2_FORT_RUN","_POSIX2_LOCALEDEF","_POSIX2_PBS","_POSIX2_PBS_ACCOUNTING","_POSIX2_PBS_CHECKPOINT","_POSIX2_PBS_LOCATE","_POSIX2_PBS_MESSAGE","_POSIX2_PBS_TRACK","_POSIX2_SW_DEV","_POSIX2_UPE","_POSIX2_VERSION","_POSIX_ADVISORY_INFO","_POSIX_ASYNCHRONOUS_IO","_POSIX_ASYNC_IO","_POSIX_BARRIERS","_POSIX_CHOWN_RESTRICTED","_POSIX_CLOCK_SELECTION","_POSIX_CPUTIME","_POSIX_FSYNC","_POSIX_IPV6","_POSIX_JOB_CONTROL","_POSIX_MAPPED_FILES","_POSIX_MEMLOCK","_POSIX_MEMLOCK_RANGE","_POSIX_MEMORY_PROTECTION","_POSIX_MESSAGE_PASSING","_POSIX_MONOTONIC_CLOCK","_POSIX_NO_TRUNC","_POSIX_PRIORITIZED_IO","_POSIX_PRIORITY_SCHEDULING","_POSIX_PRIO_IO","_POSIX_RAW_SOCKETS","_POSIX_READER_WRITER_LOCKS","_POSIX_REALTIME_SIGNALS","_POSIX_REGEXP","_POSIX_SAVED_IDS","_POSIX_SEMAPHORES","_POSIX_SHARED_MEMORY_OBJECTS","_POSIX_SHELL","_POSIX_SPAWN","_POSIX_SPIN_LOCKS","_POSIX_SPORADIC_SERVER","_POSIX_SS_REPL_MAX","_POSIX_SYNCHRONIZED_IO","_POSIX_SYNC_IO","_POSIX_THREADS","_POSIX_THREAD_ATTR_STACKADDR","_POSIX_THREAD_ATTR_STACKSIZE","_POSIX_THREAD_CPUTIME","_POSIX_THREAD_PRIORITY_SCHEDULING","_POSIX_THREAD_PRIO_INHERIT","_POSIX_THREAD_PRIO_PROTECT","_POSIX_THREAD_PROCESS_SHARED","_POSIX_THREAD_ROBUST_PRIO_INHERIT","_POSIX_THREAD_ROBUST_PRIO_PROTECT","_POSIX_THREAD_SAFE_FUNCTIONS","_POSIX_THREAD_SPORADIC_SERVER","_POSIX_TIMEOUTS","_POSIX_TIMERS","_POSIX_TRACE","_POSIX_TRACE_EVENT_FILTER","_POSIX_TRACE_EVENT_NAME_MAX","_POSIX_TRACE_INHERIT","_POSIX_TRACE_LOG","_POSIX_TRACE_NAME_MAX","_POSIX_TRACE_SYS_MAX","_POSIX_TRACE_USER_EVENT_MAX","_POSIX_TYPED_MEMORY_OBJECTS","_POSIX_V6_ILP32_OFF32","_POSIX_V6_ILP32_OFFBIG","_POSIX_V6_LP64_OFF64","_POSIX_V6_LPBIG_OFFBIG","_POSIX_VDISABLE","_POSIX_VERSION","_XOPEN_CRYPT","_XOPEN_ENH_I18N","_XOPEN_LEGACY","_XOPEN_REALTIME","_XOPEN_REALTIME_THREADS","_XOPEN_SHM","_XOPEN_STREAMS","_XOPEN_UNIX","_XOPEN_VERSION","access","acct","alarm","all","as_raw","as_raw","as_raw","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chdir","chown","chroot","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close","cmp","cmp","complement","contains","current","current","daemon","difference","dir","dup","dup2","dup3","eaccess","effective","effective","effective","effective","empty","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","execv","execve","execveat","execvp","execvpe","extend","faccessat","fchdir","fchown","fchownat","fdatasync","fexecve","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fork","fpathconf","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_gid","from_iter","from_name","from_name","from_raw","from_raw","from_raw","from_uid","fsync","ftruncate","gecos","getcwd","getegid","geteuid","getgid","getgrouplist","getgroups","gethostname","getpgid","getpgrp","getpid","getppid","getresgid","getresuid","getsid","gettid","getuid","gid","gid","hash","hash","hash","hash","hash","hash","initgroups","insert","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_all","is_child","is_empty","is_parent","is_root","isatty","linkat","lseek","lseek64","mem","mkdir","mkfifo","mkfifoat","mkstemp","name","name","not","parent","partial_cmp","partial_cmp","passwd","passwd","pathconf","pause","pipe","pipe2","pivot_root","read","real","real","remove","saved","saved","set","setegid","seteuid","setfsgid","setfsuid","setgid","setgroups","sethostname","setpgid","setresgid","setresuid","setsid","setuid","shell","sleep","sub","sub_assign","symlinkat","symmetric_difference","sync","syncfs","sysconf","tcgetpgrp","tcsetpgrp","this","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","toggle","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ttyname","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uid","union","unlink","unlinkat","write","child","disable","enable","cancel","set"],"q":[[0,"nix"],[42,"nix::dir"],[132,"nix::env"],[148,"nix::errno"],[310,"nix::fcntl"],[801,"nix::features"],[802,"nix::ifaddrs"],[839,"nix::kmod"],[948,"nix::mount"],[1086,"nix::mqueue"],[1183,"nix::net"],[1184,"nix::net::if_"],[1294,"nix::poll"],[1379,"nix::pty"],[1459,"nix::sched"],[1558,"nix::sys"],[1587,"nix::sys::aio"],[1725,"nix::sys::epoll"],[1884,"nix::sys::eventfd"],[1939,"nix::sys::inotify"],[2113,"nix::sys::ioctl"],[2117,"nix::sys::memfd"],[2171,"nix::sys::mman"],[2514,"nix::sys::personality"],[2578,"nix::sys::pthread"],[2581,"nix::sys::ptrace"],[2736,"nix::sys::quota"],[2872,"nix::sys::reboot"],[2896,"nix::sys::resource"],[2987,"nix::sys::select"],[3026,"nix::sys::sendfile"],[3028,"nix::sys::signal"],[3311,"nix::sys::signal::SigevNotify"],[3316,"nix::sys::signalfd"],[3429,"nix::sys::socket"],[4410,"nix::sys::socket::sockopt"],[5427,"nix::sys::stat"],[5631,"nix::sys::statfs"],[5725,"nix::sys::statvfs"],[5817,"nix::sys::sysinfo"],[5840,"nix::sys::termios"],[6300,"nix::sys::time"],[6395,"nix::sys::timer"],[6414,"nix::sys::timerfd"],[6575,"nix::sys::uio"],[6618,"nix::sys::utsname"],[6640,"nix::sys::wait"],[6748,"nix::time"],[6789,"nix::ucontext"],[6808,"nix::unistd"],[7342,"nix::unistd::ForkResult"],[7343,"nix::unistd::acct"],[7345,"nix::unistd::alarm"]],"d":["Nix’s main error type.","Common trait used to represent file system paths by many …","Nix Result Type","Create a buffer large enough for storing some control …","List directory contents","Environment variables","","","Feature tests for OS functionality","Query network interface addresses","Generates a wrapper function for an ioctl that passes no …","Generates a wrapper function for a “bad” ioctl that …","Generates a wrapper function for an ioctl that reads data …","Generates a wrapper function for a “bad” ioctl that …","Generates a wrapper function for an ioctl that reads an …","Generates a wrapper function for an ioctl that reads and …","Generates a wrapper function for a “bad” ioctl that …","Generates a wrapper function for an ioctl that reads and …","Generates a wrapper function for an ioctl that writes an …","Generates a wrapper function for a ioctl that writes an …","Generates a wrapper function for a “bad” ioctl that …","Generates a wrapper function for an ioctl that writes data …","Generates a wrapper function for a “bad” ioctl that …","Is the path empty?","Load and unload kernel modules.","Length of the path in bytes","","Mount file systems","Posix Message Queue functions","Functionality involving network interfaces","Wait for events to trigger on specific file descriptors","Create master and slave virtual pseudo-terminals (PTYs)","Generate an ioctl request code for a command that passes …","Generate an ioctl request code for a command that reads.","Generate an ioctl request code for a command that reads …","Generate an ioctl request code for a command that writes.","Execution scheduling","Mostly platform-specific functionality","","","Safe wrappers around functions found in libc “unistd.h”…","Execute a function with this path as a <code>CStr</code>.","Block device","Character device","An open directory.","Directory","A directory entry, similar to <code>std::fs::DirEntry</code>.","FIFO (Named pipe)","Regular file","Return type of <code>Dir::iter</code>.","The return type of Dir::into_iter","Unix-domain socket","Symbolic link","Type of file referenced by a directory entry","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the bare file name of this directory entry without …","Returns the type of this directory entry, if known.","","","","","","Converts from a descriptor-based object, closing the …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts from a file descriptor, closing it on success or …","","","","","","Returns the inode number (<code>d_ino</code>) of the underlying <code>dirent</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a owning iterator, that is, one that takes …","","","Returns an iterator of <code>Result&lt;Entry&gt;</code> which rewinds when …","","","Opens the given path as with <code>fcntl::open</code>.","Opens the given path as with <code>fcntl::openat</code>.","","","","","","","","","","","","","","","","","","Indicates that <code>clearenv</code> failed for some unknown reason","","","Clear the environment of all name-value pairs.","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The sentinel value indicates that a function failed and …","","","","","","","","","","Returns the platform-specific value of errno","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","Returns <code>Ok(value)</code> if it does not contain the sentinel …","","","","","","","","","","","","","","Removes byte range from a file without leaving a hole.","Increases file space by inserting a hole within the file …","File size is not changed.","Deallocates space by creating a hole.","Shared file data extants are made private to the file.","Zeroes space in specified byte range.","The file descriptor will automatically be closed during a …","","","","","","","","","","","","The size of the file cannot be increased.","Prevents further calls to <code>fcntl()</code> with <code>F_ADD_SEALS</code>.","The file cannot be reduced in size.","The file contents cannot be modified.","","","","","","Mode argument flags for fallocate determining operation …","","Additional configuration flags for <code>fcntl</code>’s <code>F_SETFD</code>.","","","","","","Configuration options for opened files.","Mask for the access mode of the file.","Open the file in append-only mode.","Generate a signal when input or output becomes possible.","Closes the file descriptor once an <code>execve</code> call is made.","Create the file if it does not exist.","Try to minimize cache effects of the I/O for this file.","If the specified path isn’t a directory, fail.","Implicitly follow each <code>write()</code> with an <code>fdatasync()</code>.","Error out if a file was not created.","Same as <code>O_SYNC</code>.","Allow files whose sizes can’t be represented in an <code>off_t</code> …","Same as <code>O_NONBLOCK</code>.","Do not update the file last access time during <code>read(2)</code>s.","Don’t attach the device as the process’ controlling …","<code>open()</code> will fail if the given path is a symbolic link.","When possible, open the file in nonblocking mode.","Obtain a file descriptor for low-level access.","Only allow reading.","Allow both reading and writing.","Similar to <code>O_DSYNC</code> but applies to <code>read</code>s instead.","Implicitly follow each <code>write()</code> with an <code>fsync()</code>.","Create an unnamed temporary file.","Truncate an existing regular file to 0 length if it allows …","Only allow writing.","","","","","","","","","","","","Gift the user pages to the kernel.","Hint that more data will be coming in a subsequent splice.","Request that pages be moved instead of copied.","Do not block on I/O.","Additional flags for file sealing, which allows for …","Additional flags to <code>splice</code> and friends.","","","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Copy a range of data from one file to another","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Manipulates file space.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","","","","","","","","","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","","","","","","","","","","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","","","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","Check if the OS supports atomic close-on-exec for sockets","Describes a single address for an interface as returned by …","Holds the results of <code>getifaddrs</code>.","Network address of this interface","","","","","Broadcast address of this interface, if applicable","","","Point-to-point destination address","","","","","","Flags as from <code>SIOCGIFFLAGS</code> ioctl","","","Returns the argument unchanged.","Returns the argument unchanged.","Get interface addresses using libc’s <code>getifaddrs</code>","","","Name of the network interface","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Netmask of this interface","","","","","","","","","Flags used by <code>delete_module</code>.","Ignore symbol version hashes.","Ignore kernel version magic.","Flags used by the <code>finit_module</code> function.","","","Returns the set containing all flags.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Unloads the kernel module with the given name.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","Loads a kernel module from a given file descriptor.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","Loads a kernel module from a buffer.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","Linux 2.4.0 - Bind directory at different place","Directory modifications are synchronous","","","","Allow mandatory locks on a FS","","","","Do not update access times","Disallow access to device special files","Do not update directory access times","Disallow program execution","Ignore suid and sgid bits","","","","Mount read-only","","","Alter flags of a mounted FS","","","","","","Writes are synced at once","","","","","Returns the set containing all flags.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Used with <code>mq_open</code>.","A message-queue attribute, optionally used with <code>mq_setattr</code> …","Identifies an open POSIX Message Queue","Set the close-on-exec flag for the message queue …","Create a message queue.","If set along with <code>O_CREAT</code>, <code>mq_open</code> will fail if the message","<code>mq_send</code> and <code>mq_receive</code> should fail with <code>EAGAIN</code> rather than …","Open the message queue for receiving messages.","Open the queue for both receiving and sending messages","Open the queue for sending messages.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","The number of messages currently held in the queue","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","The current flags, either <code>0</code> or <code>O_NONBLOCK</code>.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","The max number of messages that can be held by the queue","Size of a message queue attribute member","Close a message queue","Get message queue attributes","Open a message queue","Receive a message from a message queue","Convenience function. Removes <code>O_NONBLOCK</code> attribute for a …","Send a message to a message queue","Convenience function. Sets the <code>O_NONBLOCK</code> attribute for a …","Set the attributes of the message queue. Only <code>O_NONBLOCK</code> …","Remove a message queue","The maximum size of each message (in bytes)","Create a new message queue attribute","Returns the complement of this set of flags.","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","Toggles the specified flags in-place.","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Network interface name resolution.","Receive all multicast packets. (see <code>netdevice(7)</code>)","Auto media selection active. (see <code>netdevice(7)</code>)","Valid broadcast address set. (see <code>netdevice(7)</code>)","Internal debugging flag. (see <code>netdevice(7)</code>)","Driver signals dormant. Volatile.","The addresses are lost when the interface goes down. (see …","Echo sent packets. Volatile.","Interface is a loopback interface. (see <code>netdevice(7)</code>)","Driver signals L1 up. Volatile.","Master of a load balancing bundle. (see <code>netdevice(7)</code>)","Supports multicast. (see <code>netdevice(7)</code>)","No arp protocol, L2 destination address not set. (see …","Avoid use of trailers. (see <code>netdevice(7)</code>)","Do not provide packet information","Interface is a point-to-point link. (see <code>netdevice(7)</code>)","Is able to select media type via ifmap. (see <code>netdevice(7)</code>)","Interface is in promiscuous mode. (see <code>netdevice(7)</code>)","Resources allocated. (see <code>netdevice(7)</code>)","Slave of a load balancing bundle. (see <code>netdevice(7)</code>)","TAP device","TUN device (no Ethernet headers)","Interface is running. (see <code>netdevice(7)</code>)","A network interface. Has a name like “eth0” or “…","Standard interface flags, used by <code>getifaddrs</code>","A list of the network interfaces available on this system. …","An iterator over the interfaces in an <code>Interfaces</code>.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","Returns an empty set of flags.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","Retrieve a list of the network interfaces available on the …","Resolve an interface into a interface number.","Obtain the index of this interface.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Iterate over the interfaces in this list.","Obtain the name of this interface.","","Returns the complement of this set of flags.","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","Convert this to a slice of interfaces. Note that the …","Toggles the specified flags in-place.","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Error condition (only returned in <code>PollFd::revents</code>; ignored …","Hang up (only returned in <code>PollFd::revents</code>; ignored in …","There is data to read.","Invalid request: <code>fd</code> not open (only returned in …","Writing is now possible, though a write larger that the …","There is some exceptional condition on the file descriptor.","Priority band data can be read (generally unused on Linux).","Equivalent to <code>POLLIN</code>","Priority data may be written.","Equivalent to <code>POLLOUT</code>","This is a wrapper around <code>libc::pollfd</code>.","These flags define the different events that can be …","Returns if all the events of interest occured in the last …","Returns the set containing all flags.","Returns if any of the events of interest occured in the …","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","The events of interest for this <code>PollFd</code>.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Creates a new <code>PollFd</code> specifying the events of interest for …","Returns the complement of this set of flags.","","<code>poll</code> waits for one of a set of file descriptors to become …","<code>ppoll()</code> allows an application to safely wait until either …","Removes the specified flags in-place.","Returns the events that occurred in the last call to <code>poll</code> …","Inserts or removes the specified flags depending on the …","Modify the events of interest for this <code>PollFd</code>.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","Toggles the specified flags in-place.","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Representation of a master with a forked pty","Representation of a master/slave pty pair","Representation of the Master device in a master/slave pty …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Metadata about forked process","Create a new pseudoterminal, returning the master file …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Grant access to a slave pseudoterminal (see <code>grantpt(3)</code>)","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","The master port in a virtual pty pair","The master port in a virtual pty pair","Create a new pseudoterminal, returning the slave and …","Open a pseudoterminal device (see <code>posix_openpt(3)</code>)","Get the name of the slave pseudoterminal (see <code>ptsname(3)</code>)","Get the name of the slave pseudoterminal (see <code>ptsname(3)</code>)","","","The slave port in a virtual pty pair","","","","","","","","","","","","","","","","Unlock a pseudoterminal master/slave pseudoterminal pair …","","","","","","","Unused since Linux 2.6.2","The calling process and the child process share the same …","The caller and the child process share the same  filesystem","The new process shares an I/O context with the calling …","Create the process in a new cgroup namespace.","Create the process in a new IPC namespace.","Create the process in a new network namespace.","The cloned child is started in a new mount namespace.","Create the process in a new PID namespace.","Create the process in a new user namespace.","Create the process in a new UTS namespace.","The parent of the new child  (as returned by getppid(2)) …","If the calling process is being traced, then trace the …","The calling process and the child process share the same …","The child and the calling process share a single list of …","The child is placed in the same thread group as the calling","A tracing process cannot force <code>CLONE_PTRACE</code> on this child …","The execution of the calling process is suspended until the","The calling process and the child process run in the same …","Type for the function executed by <code>clone</code>.","Options for use with <code>clone</code>","CpuSet represent a bit-mask of CPUs. CpuSets are used by …","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","<code>clone</code> create a child process (<code>clone(2)</code>)","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Return the maximum number of CPU in CpuSet","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Test to see if a CPU is in the CpuSet. <code>field</code> is the CPU id …","Create a new and empty CpuSet.","Returns the complement of this set of flags.","","Removes the specified flags in-place.","<code>sched_getaffinity</code> get a thread’s CPU affinity mask (…","Determines the CPU on which the calling thread is running.","<code>sched_setaffinity</code> set a thread’s CPU affinity mask (…","Explicitly yield the processor to other threads.","Inserts or removes the specified flags depending on the …","Add a CPU to CpuSet. <code>field</code> is the CPU id to add","reassociate thread with a namespace","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","Toggles the specified flags in-place.","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Remove a CPU from CpuSet. <code>field</code> is the CPU id to remove","disassociate parts of the process execution context","POSIX Asynchronous I/O","","","Monitoring API for filesystem events.","Provide helpers for making ioctl system calls.","Interfaces for managing memory-backed files.","Memory management declarations.","Process execution domains","Low level threading primitives","Provides helpers for making ptrace system calls","Set and configure disk quotas for users, groups, or …","Reboot/shutdown or enable/disable Ctrl-Alt-Delete.","Configure the process resource limits.","Portably monitor a group of file descriptors for readiness.","Send data from a file to a socket, bypassing userland.","Operating system signals.","Interface for the <code>signalfd</code> syscall.","Socket interface functions","","Get filesystem statistics, non-portably","Get filesystem statistics","","An interface for controlling asynchronous communication …","","Timer API via signals.","Timer API via file descriptors.","Vectored I/O","Get system identification","Wait for a process to change status","Methods common to all AIO operations","All of the requests have already finished","Return values for <code>AioCb::cancel</code> and <code>aio_cancel_all</code>","All outstanding requests were canceled","An asynchronous version of <code>fsync(2)</code>.","Mode for <code>AioCb::fsync</code>.  Controls whether only data or both …","Some requests were not canceled.  Their status should be …","Asynchronously reads from a file descriptor into a buffer","Asynchronously writes from a buffer to a file descriptor","Requests that <code>lio_listio</code> return immediately","Requests that <code>lio_listio</code> block until all requested …","Mode for <code>lio_listio</code>","on supported operating systems only, do it like <code>fdatasync</code>","do it like <code>fsync</code>","The return type of <code>Aio::aio_return</code>.","Cancels outstanding AIO requests for a given file …","Retrieve return status of an asynchronous operation.","","","","Suspends the calling process until at least one of the …","","","","","","","","","","","","","","","","","","Cancels an outstanding AIO request.","","","","","","","","","","","","","","","","","","Retrieve error status of an asynchronous operation.","","","","Returns the underlying file descriptor associated with the …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Does this operation currently have any in-kernel state?","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Submits multiple asynchronous I/O requests with a single …","Returns the operation’s fsync mode: data and metadata or …","Returns the requested length of the aio operation in bytes","Returns the requested length of the aio operation in bytes","Construct a new <code>AioWrite</code>.","Create a new <code>AioRead</code>, placing the data in a mutable slice.","Create a new <code>AioFsync</code>.","Returns the file offset of the operation.","Returns the file offset of the operation.","","","Returns the priority of the <code>AioCb</code>","","","","Update the notification settings for an existing AIO …","","","","Returns the <code>SigEvent</code> that will be used for notification.","","","","Actually start the I/O operation.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the set containing all flags.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","Toggles the specified flags in-place.","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Configuration options for <code>inotify_add_watch</code>.","File was accessed.","All of the events.","Metadata changed.","Set the <code>FD_CLOEXEC</code> flag on the file descriptor.","Combination of <code>IN_CLOSE_WRITE</code> and <code>IN_CLOSE_NOWRITE</code>.","Nonwritable file was closed.","Writable file was closed.","Subfile was created.","Subfile was deleted.","Self was deleted.","Don’t follow symlinks.","File was ignored.","Event occurred against directory.","File was modified.","Combination of <code>IN_MOVED_FROM</code> and <code>IN_MOVED_TO</code>.","File was moved from X.","File was moved to Y.","Self was moved.","Set the <code>O_NONBLOCK</code> flag on the open file description …","Only send event once.","Only watch the path if it is a directory.","File was opened.","Event queue overflowed.","Backing filesystem was unmounted.","Configuration options for <code>inotify_init1</code>.","An inotify instance. This is also a file descriptor, you …","A single inotify event.","This object is returned when you create a new watch on an …","Adds a new watch on the target file or directory.","Returns the set containing all flags.","Returns the set containing all flags.","","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","This cookie is a number that allows you to connect related …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","","Initialize a new inotify instance.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Event mask. This field is a bitfield describing the exact …","Filename. This field exists only if the event was …","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","Reads a collection of events from the inotify file …","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes an existing watch using the watch descriptor …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Watch descriptor. This field corresponds to the watch …","Generate an ioctl request code for a command that passes …","Generate an ioctl request code for a command that reads.","Generate an ioctl request code for a command that reads …","Generate an ioctl request code for a command that writes.","Allow sealing operations on this file.","Set the close-on-exec (<code>FD_CLOEXEC</code>) flag on the new file …","Options that change the behavior of <code>memfd_create</code>.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Creates an anonymous file that lives in memory, and return …","Returns the complement of this set of flags.","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","Toggles the specified flags in-place.","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Undo the effect of an earlier <code>MADV_DONTDUMP</code>.","Undo the effect of <code>MADV_DONTFORK</code>.","Exclude the given range from a core dump.","Do not make pages in this range available to the child …","Do not expect access in the near future.","Specify that the application no longer needs the pages in …","Enable Transparent Huge Pages (THP) for pages in the given …","Poison the given pages.","Enable Kernel Samepage Merging (KSM) for the given pages.","Undo the effect of <code>MADV_HUGEPAGE</code>.","No further special treatment. This is the default.","Expect random page references.","Free up a given range of pages and its associated backing …","Expect sequential page references.","Preserve the memory of each page but offline the original …","Undo the effect of <code>MADV_MERGEABLE</code>","Expect access in the near future.","Put the mapping into the first 2GB of the process address …","Synonym for <code>MAP_ANONYMOUS</code>.","The mapping is not backed by any file.","Compatibility flag. Ignored.","Compatibility flag. Ignored.","Compatibility flag. Ignored.","Place the mapping at exactly the address specified in <code>addr</code>.","Place the mapping at exactly the address specified in <code>addr</code>…","Used for stacks; indicates to the kernel that the mapping …","Allocate the mapping using “huge pages.”","Make use of 16GB huge page (must be supported by the …","Make use of 16MB huge page (must be supported by the …","Make use of 1GB huge page (must be supported by the system)","Make use of 1MB huge page (must be supported by the system)","Make use of 256MB huge page (must be supported by the …","Make use of 2GB huge page (must be supported by the system)","Make use of 2MB huge page (must be supported by the system)","Make use of 32MB huge page (must be supported by the …","Make use of 512KB huge page (must be supported by the …","Make use of 512MB huge page (must be supported by the …","Make use of 64KB huge page (must be supported by the …","Make use of 8MB huge page (must be supported by the system)","Mark the mmaped region to be locked in the same way as …","Only meaningful when used with <code>MAP_POPULATE</code>. Don’t …","Do not reserve swap space for this mapping.","Populate page tables for a mapping.","Create a private copy-on-write mapping. Mutually exclusive …","Share this mapping. Mutually exclusive with <code>MAP_PRIVATE</code>.","Region grows down, like a stack.","Lock pages that are currently mapped into the address …","Lock pages which will become mapped into the address space …","Place the mapping at exactly the address specified in …","Permit the kernel to relocate the mapping to a new virtual …","Options for <code>mremap</code>.","Schedule an update but return immediately.","Invalidate all cached data.","Perform an update and wait for it to complete.","Additional parameters for <code>mmap</code>.","Flags for <code>mlockall</code>.","Usage information for a range of memory to allow for …","Configuration flags for <code>msync</code>.","Pages can be executed","Apply protection up to the end of a mapping that grows …","Apply protection down to the beginning of a mapping that …","Pages cannot be accessed.","Pages can be read.","Pages can be written.","Desired memory protection of a memory mapping.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","","","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","give advice about use of memory","Locks all memory pages that contain part of the address …","Locks all memory pages mapped into this process’ address …","allocate memory, or map files or devices into memory","Set protection of memory mapping.","Expands (or shrinks) an existing memory mapping, …","synchronize a mapped region","Unlocks all memory pages that contain part of the address …","Unlocks all memory pages mapped into this process’ …","remove a mapping","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Creates and opens a new, or opens an existing, POSIX …","Performs the converse of <code>shm_open</code>, removing an object …","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Provide the legacy virtual address space layout.","Limit the address space to 32 bits.","Use <code>0xc0000000</code> as the offset at which to search a virtual …","Disable address-space-layout randomization.","User-space function pointers to signal handlers point to …","Map page 0 as read-only.","Flags used and returned by <code>get()</code> and <code>set()</code>.","<code>PROT_READ</code> implies <code>PROT_EXEC</code> for <code>mmap(2)</code>.","No effects.","<code>select(2)</code>, <code>pselect(2)</code>, and <code>ppoll(2)</code> do not modify the …","Have <code>uname(2)</code> report a 2.6.40+ version number rather than …","No effects.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","Retrieve the current process personality.","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","","Removes the specified flags in-place.","Set the current process personality.","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","Toggles the specified flags in-place.","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Identifies an individual thread.","Send a signal to a thread (see <code>pthread_kill(3)</code>).","Obtain ID of the calling thread (see <code>pthread_self(3)</code>","","Using the ptrace options the tracer can configure the …","Ptrace options used in conjunction with the …","","","","Event that stops before a return from clone.","Event that stops before a return from execve.","Event for a stop before an exit. Unlike the waitpid Exit …","Event that stops before a return from fork or clone.","Stop triggered by a seccomp rule on a tracee.","Stop triggered by the <code>INTERRUPT</code> syscall, or a group stop, …","Event that stops before a return from vfork or clone.","Event for a return from vfork.","","","","","","","","","","Send a SIGKILL to the tracee if the tracer exits.  This is …","Stop tracee at next clone call and trace the cloned …","Stop tracee at next execve call.","Stop tracee at next exit call. Stops before exit commences …","Stop tracee at next fork and start tracing the forked …","Stop tracee when a SECCOMP_RET_TRACE rule is triggered. …","When delivering system call traps set a bit to allow …","Stop tracee at next vfork call and trace the vforked …","Stop tracee at vfork completion.","","","","","","","","","","","","","","","","","","","","Ptrace Request enum defining the action to be taken.","Returns the set containing all flags.","Attach to a running process, as with …","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Restart the stopped tracee process, as with …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Detaches the current running process, as with …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","Gets a ptrace event as described by …","Get user registers, as with <code>ptrace(PTRACE_GETREGS, ...)</code>","Get siginfo as with <code>ptrace(PTRACE_GETSIGINFO,...)</code>","","","","Inserts the specified flags in-place.","Stop a tracee, as with <code>ptrace(PTRACE_INTERRUPT, ...)</code>","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Issues a kill request as with <code>ptrace(PTRACE_KILL, ...)</code>","Returns the complement of this set of flags.","","","","Reads a word from a processes memory at the given address","Reads a word from a user area at <code>offset</code>. The user struct …","Removes the specified flags in-place.","Attach to a running process, as with …","Inserts or removes the specified flags depending on the …","Set options, as with <code>ptrace(PTRACE_SETOPTIONS,...)</code>.","Set user registers, as with <code>ptrace(PTRACE_SETREGS, ...)</code>","Set siginfo as with <code>ptrace(PTRACE_SETSIGINFO,...)</code>","Move the stopped tracee process forward by a single step …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Continue execution until the next syscall, as with …","Continue execution until the next syscall, as with …","Move the stopped tracee process forward by a single step …","","","","Toggles the specified flags in-place.","Sets the process as traceable, as with …","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Writes a word into the processes memory at the given …","Writes a word to a user area at <code>offset</code>. The user struct …","Wrapper type for <code>if_dqblk</code>","Specify a group quota","Use the original quota format.","Use the standard VFS v0 quota format.","Use the VFS v1 quota format.","All fields.","The block hard &amp; soft limit fields.","The disk use time limit field.","The inode hard &amp; soft limit fields.","The current inodes field.","The file quote time limit field.","All block &amp; inode limits.","The current space field.","The time limit fields.","The space &amp; inodes usage fields.","The type of quota format to use.","The scope of the quota.","Indicates the quota fields that are valid to read from.","Specify a user quota","Returns the set containing all flags.","Current number of allocated inodes.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Time limit for excessive disk use.","The absolute limit on disk quota blocks allocated.","Preferred limit on disk quota blocks","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","","Time limit for excessive files.","Maximum number of allocated inodes.","Preferred inode limit","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","Current occupied space (bytes).","","","","Get disk quota limits and current usage for the given …","Disable disk quotas for a block device.","Turn on disk quotas for a block device.","Configure quota values for the specified fields for a …","Update the on-disk copy of quota usages for a filesystem.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Set the time limit for excessive disk use.","Set the absolute limit on disk quota blocks allocated.","Set the preferred limit on disk quota blocks allocated.","Set the time limit for excessive files.","Set the maximum number of allocated inodes.","Set the preferred limit of allocated inodes.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Restart the system.","Halt the system.","Execute a kernel that has been loaded earlier with …","Stop the system and switch off power, if possible.","Suspend the system using software suspend.","How exactly should the system be rebooted.","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Reboots or shuts down the system.","Enable or disable the reboot keystroke (Ctrl-Alt-Delete).","","","","","The maximum amount (in bytes) of virtual memory the …","The largest size (in bytes) core(5) file that may be …","The maximum amount of cpu time (in seconds) to be used by …","The maximum size (in bytes) of the data segment for a …","The largest size (in bytes) file that may be created.","A limit on the combined number of flock locks and fcntl …","The maximum size (in bytes) which a process may lock into …","A limit on the number of bytes that can be allocated for …","A ceiling to which the process’s nice value can be …","The maximum number of open files for this process.","The maximum number of simultaneous processes for this user …","When there is memory pressure and swap is available, …","A ceiling on the real-time priority that may be set for …","A limit (in microseconds) on the amount of CPU time that a …","A limit on the number of signals that may be queued for …","The maximum size (in bytes) of the stack segment for a …","","Resource usage for all the children that have terminated …","Resource usage for the current process.","Resource usage for the calling thread.","Types of process resources.","Output of <code>getrusage</code> with information about resource usage. …","Whose resource usage should be returned by <code>getrusage</code>.","","","Number of times a read was done from a block device.","Number of times a write was done to a block device.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Number of times all of the memory was fully swapped out.","Get the current processes resource limits","Get usage information for a process, its children or the …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Number of times a context switch was imposed by the kernel …","Number of IPC messages received.","Number of IPC messages sent.","Number of page faults that were served through I/O (i.e. …","The resident set size at its peak, in kilobytes.","Number of page faults that were served without resorting …","","","","Set the current processes resource limits","Integral value expressed in kilobytes times ticks of …","Number of signals received.","Total amount of time spent executing in kernel mode.","","","","","","","","","","","","","Integral value expressed in kilobytes times ticks of …","Integral value expressed in kilobytes times ticks of …","Total amount of time spent executing in user mode.","Number of times a context switch was voluntarily invoked.","","Contains a set of file descriptors used by <code>select</code>","Iterator over <code>FdSet</code>.","","","","","Remove all file descriptors from this <code>FdSet</code>.","","","Test an <code>FdSet</code> for the presence of a certain file …","","","","Returns an iterator over the file descriptors in the set.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Finds the highest file descriptor in the set.","Add a file descriptor to an <code>FdSet</code>","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Create an empty <code>FdSet</code>","","","Monitors file descriptors for readiness with an altered …","Remove a file descriptor from an <code>FdSet</code>","Monitors file descriptors for readiness","","","","","","","","","Copy up to <code>count</code> bytes to <code>out_fd</code> from <code>in_fd</code> starting at …","Copy up to <code>count</code> bytes to <code>out_fd</code> from <code>in_fd</code> starting at …","Use the given signal-catching function, which takes in the …","When catching a <code>Signal::SIGCHLD</code> signal, the signal will be …","When catching a <code>Signal::SIGCHLD</code> signal, the system will not","Further occurrences of the delivered signal are not masked …","The system will deliver the signal to the process on a …","The handler is reset back to the default at the moment the …","Requests that certain system calls restart if interrupted …","This flag is controlled internally by Nix.","Abort","Alarm clock","Bus error","To parent on child stop or exit","Continue a stopped process","Floating point exception","Hangup","Illegal instruction (not reset when caught)","Interrupt","Input/output possible signal","Alias for <code>SIGABRT</code>","Kill (cannot be caught or ignored)","Write on a pipe with no one to read it","Alias for <code>SIGIO</code>","Profiling time alarm","Power failure imminent.","Quit","Segmentation violation","Stack fault (obsolete)","Sendable stop signal not from tty","Bad system call","Software termination signal from kill","Trace trap (not reset when caught)","Stop signal from tty","To readers pgrp upon background tty read","Like TTIN if (tp-&gt;t_local&amp;LTOSTOP)","Alias for <code>SIGSYS</code>","Urgent condition on IO channel","User defined signal 1","User defined signal 2","Virtual time alarm","Window size changes","Exceeded CPU time limit","Exceeded file size limit","The new mask is the union of the current mask and the …","The current mask is replaced by the specified set.","The new mask is the intersection of the current mask and …","Controls the behavior of a <code>SigAction</code>","Action to take on receipt of a signal. Corresponds to …","Use the given signal-catching function, which takes in the …","Default signal handling.","Used to request asynchronous notification of the …","A signal handler.","Request that the signal be ignored.","Specifies a set of <code>Signal</code>s that may be blocked, waited …","Iterator for a <code>SigSet</code>.","No notification will be delivered","Specifies the notification method used by a <code>SigEvent</code>","Notify by delivering a signal to the process.","Notify by delivering a signal to a thread.","Specifies how certain functions should manipulate a signal …","Types of operating system signals","Iterate through all signals defined by this operating …","Add the specified signal to the set.","Returns the set containing all flags.","Initialize to include all signals.","Returns a mutable pointer to the <code>sigevent</code> wrapped by <code>self</code>","","","Returns name of signal.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","Remove all signals from this set.","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Return whether this set includes the specified signal.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Initialize to include nothing.","","","","","","","","","","","","","","","","","","","","","Returns the flags set on the action.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","Converts a <code>libc::sigset_t</code> object to a <code>SigSet</code> without …","","Returns the action’s handler.","","","","","","","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns an iterator that yields the signals contained in …","Iterate through all signals defined by this OS","Send a signal to a process","Send a signal to a process group","Returns the set of signals that are blocked during …","Creates a new action.","<strong>Note:</strong> this constructor does not allow the user to set the …","","","Returns the complement of this set of flags.","","","","Manages the signal mask (set of blocked signals) for the …","Send a signal to the current thread","Removes the specified flags in-place.","Remove the specified signal from this set.","Inserts or removes the specified flags depending on the …","Changes the action taken by a process on receipt of a …","Return a copy of the inner structure","Signal management (see signal(3p))","Examine and change blocked signals.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Adds the set of signals to the signal mask for the calling …","Gets the currently blocked (masked) set of signals for the …","Sets the set of signals as the signal mask for the calling …","Sets the set of signals as the signal mask, and returns …","Removes the set of signals from the signal mask for the …","","","","","","","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Identifies a thread for <code>SigevNotify::SigevThreadId</code>","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Suspends execution of the calling thread until one of the …","Will be present in the <code>si_value</code> field of the …","Will be present in the <code>si_value</code> field of the …","Signal to deliver","Signal to send","LWP ID of the thread to notify","","","","","","","A helper struct for creating, reading and closing a …","Returns the set containing all flags.","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","Returns an empty set of flags.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","","Returns the complement of this set of flags.","","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","","","","Creates a new file descriptor for reading signals.","","","","","","","","","","","","","","","","","","","","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","Toggles the specified flags in-place.","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","These constants specify the protocol family to be used in …","","Interface to kernel crypto API","Socket address for the Linux kernel crypto API","Set the length of associated authentication data (AAD) …","Set IV for <code>AF_ALG</code> crypto API.","Set crypto operation for <code>AF_ALG</code> crypto API. It may be one …","AppleTalk","","Access to raw ATM PVCs","Access to ATM Switched Virtual Circuits","Amateur radio AX.25 protocol","Bluetooth low-level socket protocol","Further receptions and transmissions will be disallowed.","Can’t be used for creating sockets; mostly used for …","Ericsson’s Communication CPU to Application CPU …","Controller Area Network automotive bus protocol","","A type-safe zero-copy wrapper around a single control …","A type-safe wrapper around a single control message, as …","Supports datagrams (connectionless, unreliable messages of …","DECet protocol sockets.","Acorn Econet protocol","Non-DIX type protocol number defined for the Ethernet IEEE …","Represents a socket option that can be retrieved.","InfiniBand native addressing","IEEE 802.15.4 WPAN (wireless personal area network) raw …","","IPv4 Internet protocols (see <code>ip(7)</code>)","IPv6 Internet protocols (see <code>ipv6(7)</code>)","","","","Request for multicast socket operations","","","","Configure the sending addressing and interface for v4","Socket error queue control messages read with the …","","Request for ipv6 multicast socket operations","","","Configure the sending addressing and interface for v6","Socket error queue control messages read with the …","IPX - Novell protocols","Socket interface over IrDA","New “modular ISDN” driver interface protocol","IUCV (inter-user communication vehicle) z/VM protocol for …","Key management protocol.","Datalink address (MAC)","Hardware Address","Logical link control (IEEE 802.2 LLC) protocol","Set the <code>close-on-exec</code> flag for the file descriptor …","Receive flags: Control Data was discarded (buffer too …","Enables nonblocking operation; if the operation would …","Terminates a record (when this notion is supported, as for …","This flag specifies that queued errors should be received …","Requests not to send <code>SIGPIPE</code> errors when the other end …","Sends or requests out-of-band data on sockets that support …","Peeks at an incoming message. The data is treated as …","For raw (<code>Packet</code>), Internet datagram (since Linux …","Receive operation blocks until the full amount of data can …","Multiprotocol Label Switching","Flags for send/recv and their relatives","Preallocated structures needed for <code>recvmmsg</code> and <code>sendmmsg</code> …","Iterator over results of <code>recvmmsg</code>/<code>sendmmsg</code>","Reserved for “802.2LLC project”; never used.","AX.25 packet layer protocol. (see netrom(4))","","Kernel user interface device (see <code>netlink(7)</code>)","Address for the Linux kernel user interface device.","Auditing (ref)","Netlink interface to request information about ciphers …","DECnet routing messages (ref)","Access to FIB lookup from user space (ref)","Transport IPv6 packets from netfilter to user space.  Used …","Open-iSCSI (ref)","Kernel messages to user space (ref)","Netfilter subsystem (ref)","Infiniband RDMA (ref)","Receives routing and link updates and may be used to …","SCSI Transports (ref)","SELinux event notifications. (ref)","Query information about sockets of various protocol …","Reserved for user-mode socket protocols (ref)","Near field communication","Low level packet interface (see <code>packet(7)</code>)","Nokia cellular modem IPC/RPC interface","Generic PPP transport layer, for setting up L2 tunnels …","Provides raw network protocol access.","Raw sockets (raw(7))","Provides a reliable datagram layer that does not guarantee …","Reliable Datagram Sockets (RDS) protocol","Further receptions will be disallowed.","Contains outcome of sending or receiving a message","RATS (Radio Amateur Telecommunications Society) Open …","Rx, Andrew File System remote procedure call protocol","SO_RXQ_OVFL indicates that an unsigned 32 bit value …","SO_RXQ_OVFL indicates that an unsigned 32 bit value …","Set close-on-exec on the new descriptor","Set non-blocking mode on the new socket","Report hardware timestamps as generated by …","Collect receiving timestamps as reported by hardware","Collect receiving timestamps as reported by software","Report any software timestamps when available.","Collect transmiting timestamps as reported by hardware","Collect transmiting timestamps as reported by software","Received version of <code>ControlMessage::ScmCredentials</code>","A message of type <code>SCM_CREDENTIALS</code>, containing the pid, uid …","Received version of <code>ControlMessage::ScmRights</code>","A message of type <code>SCM_RIGHTS</code>, containing an array of file …","A message of type <code>SCM_TIMESTAMP</code>, containing the time the …","Nanoseconds resolution timestamp","A set of nanosecond resolution timestamps","This was a short-lived (between Linux 2.1.30 and …","Provides a sequenced, reliable, two-way connection- based …","Represents a socket option that can be set.","","IBM SNA","Represents a socket address","Additional socket options","Constants used in <code>socket</code> and <code>socketpair</code> to specify the …","These constants are used to specify the communication …","An IPv4 socket address","An IPv6 socket address","Anything that, in C, can be cast back and forth to <code>sockaddr</code>…","A container for any sockaddr type","Provides sequenced, reliable, two-way, connection- based …","TCP protocol (ip(7))","Configuration flags for <code>SO_TIMESTAMPING</code> interface","For representing packet timestamps via <code>SO_TIMESTAMPING</code> …","TIPC, “cluster domain sockets” protocol","Configure the transmission time of packets.","UDP protocol (ip(7))","UDP Generic Receive Offload (GRO) allows receiving …","UDP GSO makes it possible for applications to generate …","","Local communication (see <code>unix(7)</code>)","A wrapper around <code>sockaddr_un</code>.","Unix credentials of the sending process.","Unspecified address family, (see <code>getaddrinfo(3)</code>)","","","","","","","","VMWare VSockets protocol for hypervisor-guest interaction.","Socket address for VMWare VSockets protocol","Legacy protocol for wide area network (WAN) connectivity …","Further  transmissions will be disallowed.","ITU-T X.25 / ISO-8208 protocol (see <code>x25(7)</code>)","Accept a connection on a socket","Accept a connection on a socket","Physical-layer address (MAC)","","Return the socket’s cipher name, for example <code>sha1</code>.","Return the socket’s cipher type, for example <code>hash</code> or <code>aead</code>…","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","","If this address represents an abstract socket, return its …","Safely and falliably downcast to an immutable reference","Safely and falliably downcast to a mutable reference","Conversion from nix’s SockAddr type to the underlying …","Safely and falliably downcast to an immutable reference","Safely and falliably downcast to a mutable reference","Returns a mutable pointer to the raw <code>sockaddr_un</code> struct","Safely and falliably downcast to an immutable reference","Safely and falliably downcast to a mutable reference","Returns a raw pointer to the inner structure.  Useful for …","Returns a raw pointer to the inner structure.  Useful for …","Returns a pointer to the raw <code>sockaddr_un</code> struct","","","","","","","","Safely and falliably downcast to an immutable reference","Safely and falliably downcast to an immutable reference","Safely and falliably downcast to a mutable reference","Safely and falliably downcast to a mutable reference","Downcast to an immutable <code>[UnixAddr]</code> reference.","Downcast to a mutable <code>[UnixAddr]</code> reference.","Safely and falliably downcast to an immutable reference","Safely and falliably downcast to a mutable reference","Bind a name to a socket","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Context Identifier (CID)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Iterate over the valid control messages pointed to by this …","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Initiate a connection on a socket","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the address family of this socket","Return the address family of this socket","","","Returns the flow information associated with this address.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Create a new <code>AddressFamily</code> from an integer value retrieved …","","","","Unsafe constructor from a variable length source","","","","","","","","","","","","","","","","Look up the value of this socket option on the given …","Get the address of the peer connected to the socket <code>fd</code>.","Get the current address to which the socket <code>fd</code> is bound.","Get the current value for the requested socket option","Returns the group identifier","Return the socket’s multicast groups mask","Length of MAC address","","","","","","","","","","","","","","","","","","","","","","","","","","","ARP hardware type","hardware based timestamp","legacy timestamp, usually empty","Interface number","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Iterate over the filled io slices pointed by this msghdr","Returns the IP address associated with this socket address.","Returns the IP address associated with this socket …","Gets the IP address associated with this socket address.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Check if this address is an “unnamed” unix socket …","Return the length of valid data in the sockaddr structure.","Return the length of valid data in the sockaddr structure.","","","Listen for connections on a socket","","","","","","","","","Create a new sockaddr_un representing a filesystem path.","Construct a new socket address from its port ID and …","Construct an <code>AF_ALG</code> socket from its cipher name and type.","Construct a <code>VsockAddr</code> from its raw fields.","Instantiate a new <code>IpMembershipRequest</code>","Instantiate a new <code>Ipv6MembershipRequest</code>","Creates a new instance with the credentials of the current …","Creates a new socket address from IPv4 octets and a port …","","","","Create a new <code>sockaddr_un</code> representing an address in the “…","","","","","Create a new <code>sockaddr_un</code> representing an “unnamed” …","Create a new IpAddr that contains an IPv4 address.","Create a new IpAddr that contains an IPv6 address.","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","","If this address represents a filesystem path, return that …","Returns the addrlen of this socket - …","Return the socket’s port ID.","Returns the process identifier","Packet type","Port number","Returns the port number associated with this socket …","Returns the port number associated with this socket …","Gets the port number associated with this socket address","Preallocate structure used by <code>recvmmsg</code> and <code>sendmmsg</code> takes …","Physical-layer protocol","Receive data from a connection-oriented socket. Returns …","Receive data from a connectionless or connection-oriented …","An extension of recvmsg that allows the caller to receive …","Receive message in scatter-gather vectors from a socket, …","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","","","","Returns the scope ID associated with this address.","Return the eight 16-bit segments that make up this address","Send data to a connection-oriented socket. Returns the …","An extension of <code>sendmsg</code> that allows the caller to transmit …","Send data in scatter-gather vectors to a socket, possibly …","Send a message to a socket","Set the value of this socket option on the given socket.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Sets the value for the requested socket option","Shut down part of a full-duplex connection.","","","","","","","","","","Return the available space in the structure","Return the available space in the structure","","","","","","Return the appropriate <code>SockAddr</code> type from a …","","Create an endpoint for communication","Create a pair of connected sockets","Socket options as used by <code>setsockopt</code> and <code>getsockopt</code>.","","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","","","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","software based timestamp, usually one containing data","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the user identifier","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns a value indicating whether or not this socket has …","","","Bind this socket to a particular device like “eth0”.","Set or get the broadcast flag.","Set or get the don’t route flag.","","Join a multicast group","Leave a multicast group.","If enabled, this boolean option allows binding to an IP …","Fetch the current system-estimated Path MTU.","Set or read a boolean integer argument that determines …","Set or read the time-to-live value of outgoing multicast …","Set or receive the Type-Of-Service (TOS) field that is …","Setting this boolean option enables transparent proxying …","The <code>recvmsg(2)</code> call will return the destination IP address …","Pass an <code>IP_PKTINFO</code> ancillary message that contains a …","Enable extended reliable error message passing.","Set or retrieve the current time-to-live field that is …","Join an IPv6 multicast group.","Set “don’t fragment packet” flag on the IPv6 packet.","Leave an IPv6 multicast group.","The <code>recvmsg(2)</code> call will return the destination IP address …","Control receiving of asynchronous error options.","Set delivery of the <code>IPV6_PKTINFO</code> control message on …","Traffic class associated with outgoing packets","Set the unicast hop limit for the socket.","The socket is restricted to sending and receiving IPv6 …","Enable sending of keep-alive messages on …","When enabled,  a close(2) or shutdown(2) will not return …","Set the mark for each packet sent through this socket …","If this option is enabled, out-of-band data is directly …","","Enable or disable the receiving of the <code>SCM_CREDENTIALS</code> …","Return the credentials of the foreign process connected to …","Set the protocol-defined priority for all packets to be …","Sets or gets the maximum socket receive buffer in bytes.","Using this socket option, a privileged (<code>CAP_NET_ADMIN</code>) …","Specify the receiving timeout until reporting an error.","Enable or disable the receiving of the <code>SO_TIMESTAMP</code> …","Enable or disable the receiving of the <code>SO_TIMESTAMPNS</code> …","Enables local address reuse","Permits multiple AF_INET or AF_INET6 sockets to be bound …","Indicates that an unsigned 32-bit value ancillary message …","Specify the sending timeout until reporting an error.","Sets or gets the maximum socket send buffer in bytes.","Using this socket option, a privileged (<code>CAP_NET_ADMIN</code>)  …","Gets the socket type as an integer.","Get and clear the pending socket error.","This option allows the caller to set the TCP congestion …","The maximum number of keepalive probes TCP should send …","The time (in seconds) the connection needs to remain idle …","The time (in seconds) between individual keepalive probes.","The maximum segment size for outgoing TCP packets.","Under most circumstances, TCP sends data when it is …","","Specifies the maximum amount of time in milliseconds that …","Specifies exact type of timestamping information collected …","Configures the behavior of time-based transmission of …eturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codelags for <code>fchmodat</code> function.","","","","","“File mode / permissions” flags.","","","“File type” flags for <code>mknod</code> and related functions.","","","","","","","","","Read fr group.","Read for other.","Read for owner.","Read write and execute for group.","Read, write and execute for other.","Read, write and execute for owner.","Set group id on execution.","Set user id on execution.","","Write for group.","Write for other.","Write for owner.","Execute for group.","Execute for other.","Execute for owner.","Flags for <code>utimensat</code> function.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","Change the file permission bits of the file specified by a …","Change the file permission bits.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","Change the access and modification times of the file …","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","","Change the access and modification times of a file without …","","","","","Create a special or ordinary file, by pathname.","Create a special or ordinary file, relative to a given …","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","","","","","","","","","","","","","","","","","","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Change the access and modification times of a file.","Change the access and modification times of a file.","","","","","","","","","","","","","","","","","","","","","Describes the file system type as known by the operating …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Describes a mounted file system","","","","","","","Size of a block","Total data blocks in filesystem","Free blocks available to unprivileged user","Free blocks in filesystem","","","","","","","","","","","Total file nodes in filesystem","Free file nodes in filesystem","Filesystem ID","Magic code defining system type","Get the mount flags","","","Returns the argument unchanged.","Returns the argument unchanged.","Identifies a mounted file system","Describes a mounted file system.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Maximum length of filenames","Optimal transfer block size","Describes a mounted file system.","","","","","","","","","File system mount Flags","Append-only file","Immutable file","Allow mandatory locks on the filesystem","Do not update access times on files","Do not interpret character or block-special devices","Do not update access times on files","Do not allow execution of binaries on the filesystem","Do not allow the set-uid bits to have an effect","Read Only","Update access time relative to modify/change time","All IO should be done synchronously","Write on file/directory/symlink","Wrapper around the POSIX <code>statvfs</code> struct","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","get the file system block size","Get the number of blocks.","Get the number of free blocks for unprivileged users","Get the number of free blocks in the file system","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","Get the total number of file inodes","Get the number of free file inodes for unprivileged users","Get the number of free file inodes","Get the file system id","Get the mount flags","","","","","","","Get the fundamental file system block size","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","Return a <code>Statvfs</code> object with information about <code>fd</code>","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Get the maximum filename length","Returns the complement of this set of flags.","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Return a <code>Statvfs</code> object with information about the <code>path</code>","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","Toggles the specified flags in-place.","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","System info structure returned by <code>sysinfo</code>.","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Returns the load average tuple.","Current number of processes.","Returns the total amount of installed RAM in Bytes.","Returns the amount of completely unused RAM in Bytes.","Returns the amount of unused swap memory in Bytes.","Returns the amount of swap memory in Bytes.","Returns system information.","","","","","Returns the time since system boot.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Baud rates supported by the system.","","","","","","","","","","","","","","","","","","","Flags for setting the control mode of a terminal","","","","","","","","","","","","","Specify how transmission flow should be altered","Specify a combination of the input and output buffers to …","","","","","","","","","","","","","","","","","Flags for configuring the input mode of a terminal","Flags for setting any local modes","","","","","","","","","","","","","","Flags for configuring the output mode of a terminal","","","","","Specify when a port configuration change should occur.","Indices into the <code>termios.c_cc</code> array for special characters.","","","","","","Flush data that was received but not read","Transmit a STOP character, which should disable a …","Flush both received data not read and written data not …","Transmit a START character, which should re-enable a …","Flush data written but not transmitted","Suspend transmission","Resume transmission","The change occurs after all output has been written","Same as <code>TCSADRAIN</code>, but will also flush the input buffer","The change will occur immediately","","Stores settings for the termios API","","","","","","","","","","","","","","","","","","","","","","","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","Get input baud rate (see cfgetispeed(3p)).","Get output baud rate (see cfgetospeed(3p)).","Configures the port to something like the “raw” mode …","Set input baud rate (see cfsetispeed(3p)).","Set output baud rate (see cfsetospeed(3p)).","Set both the input and output baud rates (see termios(3)).","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Control characters (see <code>termios.c_cc</code> documentation)","Control mode flags (see <code>termios.c_cflag</code> documentation)","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","","","","","","","","","Input mode flags (see <code>termios.c_iflag</code> documentation)","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Line discipline (see <code>termios.c_line</code> documentation)","Local mode flags (see <code>termios.c_lflag</code> documentation)","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Output mode flags (see <code>termios.c_oflag</code> documentation)","","","","","","","","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Block until all output data is written (see tcdrain(3p)).","Suspend or resume the transmission or reception of data …","Discard data in the output or input queue (see tcflush(3p)…","Return the configuration of a port tcgetattr(3p)).","Get the session controlled by the given terminal (see …","Send a break for a specific duration (see tcsendbreak(3p)).","Set the configuration for a terminal (see tcsetattr(3p)).","","","","","","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Makes a new <code>TimeSpec</code> with given number of microseconds.","Makes a new <code>TimeVal</code> with given number of microseconds.","","","","","","","","Makes a new <code>TimeSpec</code> with given number of nanoseconds.","Makes a new <code>TimeVal</code> with given number of nanoseconds.  …","","","Construct a new <code>TimeSpec</code> from its components","Construct a new <code>TimeVal</code> from its components","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An enumeration allowing the definition of the expiration …","Alarm will trigger every specified interval of time.","Alarm will trigger after a specified delay and then every …","Alarm will trigger once after the time given in <code>TimeSpec</code>","A Unix signal per-process timer.","Flags that are used for arming the timer.","","","","","Returns the argument unchanged.","Get the parameters for the alarm currently set, if any.","Calls <code>U::from(self)</code>.","Creates a new timer based on the clock defined by <code>clockid</code>. …","Return the number of timers that have overrun","Set a new alarm on the timer.","","","","Like <code>CLOCK_MONOTONIC</code>, except that <code>CLOCK_BOOTTIME</code> includes …","Like <code>CLOCK_BOOTTIME</code>, but will wake the system if it is …","A non-settable monotonically increasing clock.","A settable system-wide real-time clock.","Like <code>CLOCK_REALTIME</code>, but will wake the system if it is …","The type of the clock used to mark the progress of the …","An enumeration allowing the definition of the expiration …","Alarm will trigger every specified interval of time.","Alarm will trigger after a specified delay and then every …","Alarm will trigger once after the time given in <code>TimeSpec</code>","Set the <code>FD_CLOEXEC</code> flag on the file descriptor.","Set the <code>O_NONBLOCK</code> flag on the open file description …","","A timerfd instance. This is also a file descriptor, you …","Additional flags to change the behaviour of the file …","Flags that are used for arming the timer.","Returns the set containing all flags.","Returns the set containing all flags.","","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","Get the parameters for the alarm currently set, if any.","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Creates a new timer based on the clock defined by <code>clockid</code>. …","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Sets a new alarm on the timer.","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Remove the alarm if any is set.","Wait for the configured alarm to expire.","A vector of buffers.","A slice of memory in a remote process, starting at address …","View the <code>IoVec</code> as a Rust slice.","The starting address of this slice (<code>iov_base</code>).","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Create an <code>IoVec</code> from a mutable Rust slice.","Create an <code>IoVec</code> from a Rust slice.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The number of bytes in this slice (<code>iov_len</code>).","Low-level read from a file, with specified offset.","Read from <code>fd</code> at <code>offset</code> filling buffers in <code>iov</code>.","Read data directly from another process’s virtual memory …","Write data directly to another process’s virtual memory …","Low-level write to a file, with specified offset.","Write to <code>fd</code> at <code>offset</code> from buffers in <code>iov</code>.","Low-level vectored read from a raw file descriptor","","","","","","","","","Low-level vectored write to a raw file descriptor","Describes the running system.  Return type of <code>uname</code>.","","","","","NIS or YP domain name of this machine.","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Machine hardware platform.","Network name of this machine.","Release level of the operating system.","Name of the operating system implementation.","","","","","Get system identification","Version level of the operating system.","Wait for any child","The process was previously stopped but has resumed …","The process exited normally (as with <code>exit()</code> or returning …","The ID argument for <code>waitid</code>","Wait for the child whose process group ID matches the …","Wait for the child referred to by the given PID file …","Wait for the child whose process ID matches the given PID","The traced process was stopped by a <code>PTRACE_EVENT_*</code> event. …","The traced process was stopped by execution of a system …","The process was killed by the given signal. The third field","There are currently no state changes to report in any …","The process is alive, but was stopped by the given signal. …","Report the status of selected processes that have …","Report the status of selected processes which have …","Do not block when there are no processes wishing to report …","Don’t reap, just poll status.","An alias for WUNTRACED.","Report the status of selected processes which are stopped …","Controls the behavior of <code>waitpid</code>.","Possible return values from <code>wait()</code> or <code>waitpid()</code>.","Wait on all children, regardless of type","Wait for “clone” children only.","Don’t wait on children of other threads in this group","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","Convert a raw <code>wstatus</code> as returned by <code>waitpid</code>/<code>wait</code> into a …","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","","","Extracts the PID from the WaitStatus unless it equals …","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","Toggles the specified flags in-place.","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Wait for any child process to change status or a signal is …","Wait for a process to change status","Wait for a process to change status","","","","","","","","","","","","Clock identifier","Gets the raw <code>clockid_t</code> wrapped by <code>self</code>","","","Get the clock id of the specified process id, (see …","Get the resolution of the specified clock, (see …","Get the time of the specified clock, (see clock_gettime(2)…","Set the time of the specified clock, (see clock_settime(2)…","","","","","","","","Returns the argument unchanged.","","Creates <code>ClockId</code> from raw <code>clockid_t</code>","","Calls <code>U::from(self)</code>.","Returns the current time on the clock id","","Returns <code>ClockId</code> of a <code>pid</code> CPU-time clock","Returns resolution of the clock id","Sets time to <code>timespec</code> on the clock id","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","Maximum number of I/O operations in a single list I/O call …","Maximum number of outstanding asynchronous I/O operations …","The maximum amount by which a process can decrease its …","Maximum length of argument to the exec functions including …","Maximum number of functions that may be registered with …","Options for access()","Maximum obase values allowed by the bc utility.","Maximum number of elements permitted in an array by the bc …","Maximum scale value allowed by the bc utility.","Maximum length of a string constant accepted by the bc …","Maximum number of simultaneous processes per real user ID.","","Maximum number of weights that can be assigned to an entry …","","Maximum number of timer expiration overruns.","Maximum number of expressions that can be nested within …","Minimum number of bits needed to represent, as a signed …","Test for existence of file.","Flags for <code>fchownat</code> function.","","Represents the successful result of calling <code>fork</code>","Initial size of <code>getgrgid_r</code> and <code>getgrnam_r</code> data buffers","Initial size of <code>getpwuid_r</code> and <code>getpwnam_r</code> data buffers","Group identifier","Representation of a Group, based on <code>libc::group</code>","Maximum length of a host name (not including the …","Maximum number of iovec structures that one process has …","Unless otherwise noted, the maximum length, in bytes, of a …","Maximum number of links to a single file.","Maximum length of a login name.","Flags for <code>linkat</code> function.","Maximum number of bytes in a terminal canonical input line.","Minimum number of bytes for which space is available in a …","The maximum number of open message queue descriptors a …","The maximum number of message priorities supported by the …","Maximum number of bytes in a filename (not including the …","Maximum number of simultaneous supplementary group IDs per …","","","","A value one greater than the maximum value that the system …","The size of a system page in bytes.","Maximum number of bytes the implementation will store as a …","Maximum number of bytes that is guaranteed to be atomic …","Symbolic links can be created.","Minimum number of bytes of storage actually allocated for …","Recommended increment for file transfer sizes between the …","Maximum recommended file transfer size.","Minimum recommended file transfer size.","Recommended file transfer buffer alignment.","","","","","","Variable names for <code>pathconf</code>","Process identifier","","Constant for UID = 0","","Test for read permission.","","Real, effective and saved group IDs.","Real, effective and saved user IDs.","","","","","Maximum number of bytes in a symbolic link.","","Specify an offset relative to the current file location.","Specify an offset relative to the next location in the …","Specify an offset relative to the end of the file.","Specify an offset relative to the next hole in the file …","Specify an offset relative to the start of the file.","","Variable names for <code>sysconf</code>","","","","User identifier","Flags for <code>unlinkat</code> function.","Representation of a User, based on <code>libc::passwd</code>","Test for write permission.","Directive that tells <code>lseek</code> and <code>lseek64</code> what the offset is …","Test for execute (search) permission.","The number of currently available pages of physical memory.","The number of processors configured.","The number of processors currently online (available).","The number of pages of physical memory. Note that it is …","The implementation supports the Terminal Characteristics …","The implementation supports the C-Language Binding option.","The implementation supports the C-Language Development …","The implementation supports the FORTRAN Development …","The implementation supports the FORTRAN Runtime Utilities …","The implementation supports the creation of locales by the …","The implementation supports the Batch Environment Services …","The implementation supports the Batch Accounting option.","The implementation supports the Batch Checkpoint/Restart …","The implementation supports the Locate Batch Job Request …","The implementation supports the Batch Job Message Request …","The implementation supports the Track Batch Job Request …","The implementation supports the Software Development …","The implementation supports the User Portability Utilities …","Integer value indicating version of the Shell and …","The implementation supports the Advisory Information …","The implementation supports asynchronous input and output.","Asynchronous input or output operations may be performed …","The implementation supports barriers.","The use of <code>chown</code> and <code>fchown</code> is restricted to a process with","The implementation supports clock selection.","The implementation supports the Process CPU-Time Clocks …","The implementation supports the File Synchronization …","The implementation supports the IPv6 option.","The implementation supports job control.","The implementation supports memory mapped Files.","The implementation supports the Process Memory Locking …","The implementation supports the Range Memory Locking …","The implementation supports memory protection.","The implementation supports the Message Passing option.","The implementation supports the Monotonic Clock option.","Pathname components longer than {NAME_MAX} generate an …","The implementation supports the Prioritized Input and …","The implementation supports the Process Scheduling option.","Prioritized input or output operations may be performed …","The implementation supports the Raw Sockets option.","The implementation supports read-write locks.","The implementation supports realtime signals.","The implementation supports the Regular Expression …","Each process has a saved set-user-ID and a saved …","The implementation supports semaphores.","The implementation supports the Shared Memory Objects …","The implementation supports the POSIX shell.","The implementation supports the Spawn option.","The implementation supports spin locks.","The implementation supports the Process Sporadic Server …","","The implementation supports the Synchronized Input and …","Synchronized input or output operations may be performed …","The implementation supports threads.","The implementation supports the Thread Stack Address …","The implementation supports the Thread Stack Size …","The implementation supports the Thread CPU-Time Clocks …","The implementation supports the Thread Execution …","The implementation supports the Non-Robust Mutex Priority …","The implementation supports the Non-Robust Mutex Priority …","The implementation supports the Thread Process-Shared …","The implementation supports the Robust Mutex Priority …","The implementation supports the Robust Mutex Priority …","The implementation supports thread-safe functions.","The implementation supports the Thread Sporadic Server …","The implementation supports timeouts.","The implementation supports timers.","The implementation supports the Trace option.","The implementation supports the Trace Event Filter option.","","The implementation supports the Trace Inherit option.","The implementation supports the Trace Log option.","","","","The implementation supports the Typed Memory Objects …","The implementation provides a C-language compilation …","The implementation provides a C-language compilation …","The implementation provides a C-language compilation …","The implementation provides a C-language compilation …","This symbol shall be defined to be the value of a …","Integer value indicating version of this standard …","The implementation supports the X/Open Encryption Option …","The implementation supports the Issue 4, Version 2 Enhanced","","The implementation supports the X/Open Realtime Option …","The implementation supports the X/Open Realtime Threads …","The implementation supports the Issue 4, Version 2 Shared …","The implementation supports the XSI STREAMS Option Group.","The implementation supports the XSI option","Integer value indicating version of the X/Open Portability …","Checks the file named by <code>path</code> for accessibility according …","","Alarm signal scheduling.","Returns the set containing all flags.","Get the raw <code>uid_t</code> wrapped by <code>self</code>.","Get the raw <code>gid_t</code> wrapped by <code>self</code>.","Get the raw <code>pid_t</code> wrapped by <code>self</code>.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Change the current working directory of the calling …","Change the ownership of the file at <code>path</code> to be owned by …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Close a raw file descriptor","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns Uid of calling process. This is practically a more …","Returns Gid of calling process. This is practically a more …","Daemonize this process by detaching from the controlling …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Home directory","Create a copy of the specified file descriptor (see dup(2)…","Create a copy of the specified file descriptor using the …","Create a new copy of the specified file descriptor using …","Checks the file named by <code>path</code> for accessibility according …","Returns effective Uid of calling process. This is …","Returns effective Gid of calling process. This is …","","","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","Replace the current process image with a new one (see …","Replace the current process image with a new one (see …","Execute program relative to a directory file descriptor …","Replace the current process image with a new one and …","Replace the current process image with a new one and …","","Checks the file named by <code>path</code> for accessibility according …","Change the current working directory of the process to the …","Change the ownership of the file referred to by the open …","Change the ownership of the file at <code>path</code> to be owned by …","Synchronize the data of a file","Replace the current process image with a new one (see …","","","","","","","","","","","","","","","","","","","","","","","Create a new child process duplicating the parent process (…","Like <code>pathconf</code>, but works with file descriptors instead of …","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Get a group by GID.","","Get a user by name.","Get a group by name.","Creates <code>Uid</code> from raw <code>uid_t</code>.","Creates <code>Gid</code> from raw <code>gid_t</code>.","Creates <code>Pid</code> from raw <code>pid_t</code>.","Get a user by UID.","Synchronize changes to a file","Truncate a file to a specified length","User information","Returns the current directory as a <code>PathBuf</code>","Get the effective group ID","Get the effective user ID","Get the real group ID","Calculate the supplementary group access list.","Get the list of supplementary group IDs of the calling …","Get the host name and store it in an internally allocated …","","Get the group id of the calling process (see getpgrp(3)).","Get the pid of this process (see getpid(2)).","Get the pid of this processes’ parent (see getpid(2)).","Gets the real, effective, and saved group IDs.","Gets the real, effective, and saved user IDs.","Get the process group ID of a session leader getsid(2).","Get the caller’s thread ID (see gettid(2).","Get a real user ID","Group ID","Group ID","","","","","","","Initialize the supplementary group access list.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Return <code>true</code> if this is the child process of the <code>fork()</code>","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if this is the parent process of the <code>fork()</code>","Returns true if the <code>Uid</code> represents privileged user - root. …","","Link one file to another file","Move the read/write file offset.","","List of Group members","Creates new directory <code>path</code> with access rights <code>mode</code>.  (see …","Creates new fifo special file (named pipe) with path <code>path</code> …","Creates new fifo special file (named pipe) with path <code>path</code> …","Creates a regular file which persists even after process …","Username","Group name","Returns the complement of this set of flags.","Returns PID of parent of calling process","","","User password (probably hashed)","Group password","Get path-dependent configurable system variables (see …","Suspend the thread until a signal is received.","Create an interprocess channel.","Like <code>pipe</code>, but allows setting certain file descriptor …","","Read from a raw file descriptor.","","","Removes the specified flags in-place.","","","Inserts or removes the specified flags depending on the …","Set the effective group ID","Set the effective user ID","Set the group identity used for filesystem checks …","Set the user identity used for filesystem checks …","Set the group ID","Set the list of supplementary group IDs for the calling …","Set the system host name (see sethostname(2)).","Set a process group ID (see setpgid(2)).","Sets the real, effective, and saved gid. (see setresuid(2))","Sets the real, effective, and saved uid. (see setresuid(2))","Create new session and set process group id (see setsid(2)…","Set the user ID","Path to shell","Suspend execution for an interval of time","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Creates a symbolic link at <code>path2</code> which points to <code>path1</code>.","Returns the symmetric difference between the flags in <code>self</code> …","Commit filesystem caches to disk","Commit filesystem caches containing file referred to by …","Get configurable system variables (see sysconf(3))","Get the terminal foreground process group (see tcgetpgrp(3)…","Set the terminal foreground process group (see tcgetpgrp(3)…","Returns PID of calling process","","","","","","","","","","","","","","","","","","","Toggles the specified flags in-place.","Truncate a file to a specified length","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the name of the terminal device that is open on file …","","","","","","","","","","","","","","","","User ID","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Remove a directory entry","Remove a directory entry","Write to a raw file descriptor.","","Disable process accounting","Enable process accounting","Cancel an previously set alarm signal.","Schedule an alarm signal."],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,0,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,9,9,0,9,0,9,9,0,0,9,9,0,5,7,5,10,7,8,9,5,10,7,8,9,8,9,8,9,5,10,5,10,7,8,9,5,10,7,8,9,8,8,5,10,7,8,9,5,5,10,7,8,9,5,5,10,7,8,9,8,5,10,7,8,9,5,10,7,5,10,7,5,5,8,9,5,10,7,8,9,5,10,7,8,9,5,10,7,8,9,0,24,24,0,24,24,24,24,24,24,24,24,24,24,24,24,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,0,0,27,27,27,27,27,27,27,27,27,0,27,27,27,0,27,27,27,27,27,30,27,27,27,27,27,27,33,33,33,33,33,0,38,38,38,38,38,38,36,46,46,46,46,46,46,46,46,46,46,46,35,35,35,35,46,46,46,46,46,0,0,0,0,42,42,42,42,0,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,43,43,43,43,43,43,0,34,34,34,0,37,37,37,37,0,0,42,42,33,20,34,35,36,37,38,33,20,34,35,36,37,38,33,20,34,35,36,37,38,33,20,34,35,36,37,38,33,20,34,35,36,37,38,33,20,34,35,36,37,38,33,20,34,35,36,37,38,33,20,34,35,36,37,38,33,20,34,35,36,46,42,37,38,43,33,20,34,35,36,46,42,37,38,43,33,20,34,35,36,42,37,38,43,33,20,34,35,36,42,37,38,43,33,20,34,35,36,37,38,43,33,20,34,35,36,37,38,33,20,34,35,36,37,38,0,33,20,34,35,36,37,38,33,20,34,35,36,37,38,33,20,34,35,36,46,42,37,38,43,33,20,34,35,36,46,42,37,38,43,33,20,34,35,36,37,38,0,0,0,33,33,33,33,33,20,20,20,20,20,34,34,34,34,34,35,35,35,35,35,36,36,36,36,36,46,42,37,37,37,37,37,38,38,38,38,38,43,33,20,34,35,36,46,42,37,38,43,33,20,34,35,36,37,38,33,20,34,35,36,37,38,33,20,34,35,36,37,38,33,20,34,35,36,37,38,33,20,34,35,36,46,42,37,38,43,33,20,34,35,36,37,38,33,20,34,35,36,37,38,33,20,34,35,36,37,38,33,20,34,35,36,46,42,37,38,43,33,20,34,35,36,37,38,33,20,34,35,36,37,38,33,20,34,35,36,37,38,0,0,33,20,34,35,36,37,38,43,0,0,0,0,33,20,34,35,36,37,38,0,0,33,20,34,35,36,37,38,0,33,20,34,35,36,37,38,33,20,34,35,36,37,38,33,20,34,35,36,37,38,0,33,20,34,35,36,42,37,38,43,33,20,34,35,36,37,38,33,20,34,35,36,46,42,37,38,43,33,20,34,35,36,46,42,37,38,43,33,20,34,35,36,46,42,37,38,43,33,20,34,35,36,37,38,0,0,0,0,52,52,53,52,53,52,52,52,52,53,52,53,52,53,52,52,53,52,53,0,52,53,52,52,53,53,52,53,52,52,53,52,53,52,53,0,54,54,0,55,55,54,55,54,55,54,55,54,55,54,55,54,55,54,55,54,55,54,55,54,55,54,55,54,55,54,55,54,55,54,55,0,54,55,54,55,54,55,54,55,54,55,0,54,54,54,54,54,55,55,55,55,55,54,55,54,55,54,55,54,55,54,55,54,55,0,54,55,54,55,54,55,54,55,54,55,54,55,54,55,54,55,54,55,54,55,54,55,54,55,54,55,54,55,54,55,54,55,54,55,54,55,54,55,59,59,59,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,0,0,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,58,58,58,58,59,59,59,59,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,0,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,0,0,58,59,0,0,0,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,62,64,61,62,64,61,62,61,62,61,61,61,62,61,61,61,62,61,62,61,62,61,61,61,61,61,62,64,61,62,64,61,61,61,61,61,62,61,61,61,61,62,64,61,61,62,0,0,0,0,0,0,0,0,0,0,62,62,61,61,61,61,61,61,61,61,62,61,61,62,64,61,62,64,61,62,64,61,0,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,0,0,0,0,65,65,65,65,65,65,65,65,67,66,65,68,67,66,65,68,65,65,65,65,65,65,66,65,65,65,65,67,66,65,65,65,65,65,68,67,66,65,68,65,65,65,65,65,0,0,67,65,65,65,67,66,65,68,66,68,65,65,66,67,68,65,65,65,65,65,65,65,65,66,65,67,66,65,68,67,66,65,68,67,66,65,68,65,70,70,70,70,70,70,70,70,70,70,0,0,69,70,69,69,70,70,70,70,70,70,70,69,70,69,70,69,70,69,70,70,70,70,70,70,69,70,69,70,69,70,69,70,70,70,70,70,69,70,70,70,70,70,69,70,70,70,70,69,70,70,70,69,70,70,0,0,70,69,70,69,70,70,70,69,70,70,69,70,69,70,69,70,70,0,0,0,0,0,74,75,76,77,74,75,76,77,74,75,76,77,75,76,77,74,75,76,74,75,76,74,74,74,75,76,77,74,77,0,83,75,76,77,74,0,75,76,74,75,76,77,74,74,76,77,0,0,0,0,74,74,76,75,76,77,75,76,77,74,75,76,77,74,75,76,77,74,0,74,74,75,75,75,75,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,0,0,0,84,84,84,84,84,84,84,84,84,86,84,86,0,84,86,84,86,84,84,84,86,86,84,84,84,86,84,86,84,84,84,84,84,84,86,84,86,84,84,84,84,84,86,84,84,84,84,86,84,84,86,86,84,84,84,0,0,0,0,84,86,0,84,84,84,84,86,84,84,86,84,86,84,86,84,86,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,87,0,87,0,0,87,0,0,94,94,0,95,95,352,0,352,89,90,91,0,89,90,89,90,91,89,90,91,87,94,95,89,90,91,87,94,95,352,89,90,91,87,94,95,87,94,95,94,95,87,94,95,87,94,95,352,89,90,91,352,89,90,91,89,90,91,87,94,95,89,90,91,87,94,95,87,94,95,352,89,90,91,89,90,91,87,94,95,0,91,89,90,89,90,91,89,90,94,95,352,89,90,91,352,89,90,91,352,89,90,91,352,89,90,91,87,94,95,89,90,91,87,94,95,95,89,90,91,87,94,95,89,90,91,87,94,95,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,100,0,101,101,101,0,0,0,99,100,99,100,99,100,99,100,99,100,99,100,99,100,99,100,99,101,100,102,99,101,100,102,99,101,100,102,99,101,100,102,99,100,99,100,99,100,102,99,100,99,100,102,0,0,0,0,99,101,100,102,99,101,100,102,102,99,100,99,99,99,99,99,101,100,100,100,100,100,102,99,101,100,102,99,100,99,100,99,100,99,100,99,101,100,102,99,100,99,100,99,100,99,101,100,102,99,100,99,100,102,99,100,99,100,99,100,99,100,99,100,99,100,99,100,99,101,100,102,99,100,99,101,100,102,99,101,100,102,99,101,100,102,99,100,104,104,104,0,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,0,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,0,106,106,106,108,106,106,106,106,106,106,106,106,106,106,106,106,106,106,108,106,106,106,106,106,0,0,0,0,105,106,108,105,106,108,106,108,106,108,106,108,106,108,106,108,106,108,106,108,105,107,109,106,108,105,107,109,106,108,105,107,106,108,105,107,106,108,107,106,108,106,108,109,106,108,106,108,106,108,107,106,108,107,106,108,106,106,106,106,106,108,108,108,108,108,105,107,109,106,108,105,107,109,106,108,106,108,106,108,106,108,105,106,108,107,105,106,108,106,108,106,108,106,108,105,107,109,106,108,106,108,109,109,106,108,106,108,107,105,106,108,105,106,108,106,108,106,108,106,108,106,108,105,107,106,108,106,108,105,107,109,106,108,105,107,109,106,108,105,107,109,106,108,109,0,0,0,0,111,111,0,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,0,111,111,111,111,111,111,111,111,111,111,111,111,111,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,116,116,114,114,0,115,115,115,0,0,0,0,112,112,112,112,112,112,0,112,113,114,115,116,112,113,114,115,116,112,113,114,115,116,112,113,114,115,116,112,113,114,115,116,112,113,114,115,116,112,113,114,115,116,112,113,114,115,116,112,113,114,117,115,116,112,113,114,117,115,116,112,113,114,117,115,116,112,113,114,117,115,116,112,113,114,117,115,116,112,113,114,115,116,112,113,114,115,116,112,113,114,115,116,112,113,114,115,116,112,113,114,117,115,116,112,113,114,117,115,116,112,113,114,115,116,112,112,112,112,112,113,113,113,113,113,114,114,114,114,114,117,115,115,115,115,115,116,116,116,116,116,112,113,114,117,115,116,112,113,114,115,116,112,113,114,115,116,112,113,114,115,116,112,113,114,115,116,112,113,114,117,115,116,112,113,114,115,116,112,113,114,115,116,112,113,114,115,116,112,113,114,117,115,116,112,113,114,115,116,112,113,114,115,116,0,0,0,0,0,0,0,0,0,0,112,113,114,115,116,112,113,114,117,115,116,112,113,114,115,116,112,113,114,115,116,0,0,112,113,114,115,116,112,113,114,115,116,112,113,114,115,116,112,113,114,117,115,116,112,113,114,115,116,112,113,114,117,115,116,112,113,114,117,115,116,112,113,114,117,115,116,112,113,114,115,116,121,121,121,121,121,121,0,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,0,121,121,121,121,121,121,121,121,121,121,0,121,121,121,121,121,121,121,121,121,121,0,0,0,0,0,0,125,125,125,126,126,126,126,126,126,126,126,125,125,125,125,125,125,125,125,125,124,124,124,124,124,124,124,124,124,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,0,124,0,124,124,124,124,124,124,124,125,126,124,125,126,124,125,126,124,125,126,124,125,126,124,124,0,124,0,124,124,125,126,124,125,126,124,124,125,126,124,124,124,124,124,125,126,124,124,124,124,124,0,0,0,125,126,124,124,0,124,124,125,126,124,124,124,0,124,125,126,124,0,0,124,0,124,0,0,0,0,124,124,124,0,0,0,125,126,124,124,0,125,126,124,125,126,124,125,126,124,124,0,0,0,133,134,134,134,131,131,131,131,131,131,131,131,131,131,0,0,0,133,131,132,131,131,131,131,131,131,131,132,132,132,133,134,132,131,133,134,132,131,133,134,132,131,133,134,132,131,133,134,131,131,131,132,131,131,131,133,134,132,131,133,134,132,131,131,133,134,132,131,131,131,131,131,133,134,132,131,131,131,131,131,133,134,132,131,132,132,132,131,131,131,133,134,132,131,131,131,131,132,133,134,131,0,0,0,0,0,131,131,132,132,132,132,132,132,131,131,131,133,134,132,131,131,133,134,132,131,133,134,132,131,133,134,132,131,131,135,135,135,135,135,0,135,135,135,135,135,135,135,135,135,135,135,135,0,0,135,135,135,135,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,0,140,140,140,0,0,0,137,137,137,137,139,140,137,139,140,137,139,140,137,139,140,137,139,140,139,140,137,139,140,137,139,140,137,139,140,137,137,0,0,139,140,137,139,140,137,137,137,137,137,137,137,139,140,0,0,137,137,137,139,140,137,139,140,137,139,140,137,139,140,137,137,137,137,137,0,0,0,143,144,143,144,143,143,143,143,143,143,143,143,143,144,143,144,143,143,143,143,144,144,143,144,144,0,143,0,144,143,143,144,143,144,143,144,0,0,152,146,146,146,146,146,146,146,123,123,123,123,123,123,123,123,123,123,0,123,123,0,123,123,123,123,123,123,123,123,123,123,123,123,0,123,123,123,123,123,123,123,150,150,150,0,0,152,152,0,0,152,0,0,97,0,97,97,0,0,0,73,146,73,98,123,73,123,146,146,146,146,146,146,146,123,149,146,150,73,151,152,153,97,98,123,149,146,150,73,151,152,153,97,98,73,123,149,146,150,73,151,152,153,97,98,123,149,146,150,73,151,152,153,97,98,123,146,150,146,146,73,146,146,73,123,149,146,150,73,152,153,97,98,123,149,146,150,73,152,153,97,98,146,73,153,123,123,149,146,146,146,146,146,150,73,151,152,153,97,98,123,149,146,150,73,151,152,153,97,98,98,146,146,146,146,73,73,123,153,123,149,146,150,73,152,153,97,98,146,146,146,123,149,146,150,73,151,152,153,97,98,149,73,151,146,146,73,123,0,0,153,153,98,149,151,146,123,146,150,0,0,146,73,146,0,98,0,0,146,146,146,73,73,73,73,73,123,149,146,150,73,151,152,153,97,98,123,146,123,123,149,146,150,73,151,152,153,97,98,123,149,146,150,73,151,152,153,97,98,123,149,146,150,73,151,152,153,97,98,0,146,73,353,354,353,354,354,154,154,0,0,0,0,0,154,155,154,154,154,154,154,154,154,156,154,155,156,154,155,156,154,156,154,154,154,154,154,155,154,156,154,155,156,154,155,154,156,154,154,154,154,154,155,156,154,155,154,154,154,154,156,154,155,154,154,154,156,154,155,155,154,154,155,155,154,154,155,154,154,155,0,0,0,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,154,154,154,156,154,154,156,154,155,156,154,155,156,154,155,154,155,0,166,198,0,192,192,192,198,198,198,198,198,198,193,198,198,198,0,0,0,183,198,198,184,0,198,198,166,198,198,0,0,0,0,0,190,190,192,190,0,0,190,190,192,190,198,198,198,198,198,166,0,198,162,162,162,162,162,162,162,162,162,162,198,0,0,0,198,198,166,198,0,184,184,184,184,184,184,184,184,184,184,184,184,184,184,198,198,198,198,183,184,183,198,193,0,198,198,190,192,157,157,161,161,161,161,161,161,190,192,190,192,190,190,190,198,183,0,0,198,0,0,0,0,0,0,0,0,183,184,0,0,198,192,184,190,192,166,198,0,0,198,196,197,196,197,211,218,166,198,0,198,193,198,0,0,158,188,160,160,161,157,162,163,164,165,165,166,165,165,164,165,165,179,179,164,164,168,160,158,173,175,177,165,165,165,165,165,165,165,165,0,161,157,162,161,157,162,161,157,162,161,157,162,161,157,162,161,157,162,161,157,162,169,178,176,167,180,164,165,168,160,158,173,181,182,183,184,161,157,162,185,186,188,189,190,191,192,200,201,202,193,194,166,175,177,195,163,196,197,198,169,178,176,167,180,164,165,168,160,158,173,181,182,183,184,161,157,162,185,186,188,189,190,191,192,200,201,202,193,194,166,175,177,195,163,196,197,198,188,173,169,178,176,167,180,164,165,168,160,158,173,181,182,183,184,161,157,162,185,186,188,189,190,191,192,193,194,166,175,177,195,163,196,197,198,169,178,176,167,180,164,165,168,160,158,173,181,182,183,184,161,157,162,185,186,188,189,190,191,192,193,194,166,175,177,195,163,196,197,198,161,157,162,182,182,182,0,188,161,157,162,0,161,157,162,194,161,157,162,161,157,162,169,178,176,167,180,164,165,168,160,158,173,181,182,183,184,161,157,162,185,186,188,189,190,191,192,193,194,166,175,177,195,163,196,197,198,169,178,176,167,180,164,165,168,160,158,173,181,182,183,184,161,157,162,185,186,188,189,190,191,192,193,194,166,175,177,195,163,196,197,198,161,157,162,179,179,166,188,175,169,178,176,167,180,164,164,165,165,168,168,160,160,158,158,173,173,181,182,183,184,161,161,161,161,161,157,157,157,157,157,162,162,162,162,162,185,186,188,189,190,191,192,200,201,202,193,194,166,166,175,175,177,177,195,195,163,163,196,196,197,197,198,169,178,176,167,180,164,165,165,165,165,168,160,158,173,181,182,183,184,161,157,162,185,186,188,189,190,191,192,200,201,202,193,194,194,166,175,175,177,177,195,163,196,197,198,161,157,162,161,157,162,161,157,162,198,161,157,162,179,164,165,168,160,158,173,166,175,177,195,163,196,197,175,177,211,0,0,0,194,168,158,169,178,176,167,180,164,165,168,160,158,173,181,182,184,161,157,162,193,166,175,177,195,163,196,197,198,158,191,191,158,161,157,162,161,157,162,161,157,162,169,178,176,167,180,164,165,168,160,158,173,181,182,183,184,161,157,162,185,186,188,189,190,191,192,200,201,202,193,194,166,175,177,195,163,196,197,198,189,201,202,188,175,177,197,161,157,162,161,157,162,164,179,179,164,165,0,181,181,181,181,181,181,181,0,164,168,160,173,185,186,194,177,195,163,197,164,166,166,166,166,164,196,196,166,189,201,202,161,157,162,163,161,157,162,164,164,168,194,158,173,175,177,197,200,158,0,0,0,0,161,157,162,169,169,0,175,195,0,0,0,0,218,161,157,162,0,0,176,176,176,176,176,178,178,178,178,179,179,164,0,0,0,0,0,0,0,0,0,180,161,157,162,161,157,162,167,167,161,157,162,191,169,178,176,167,180,164,165,168,160,158,173,181,182,183,184,161,157,162,185,186,188,189,190,191,192,193,194,166,175,177,195,163,196,197,198,195,163,196,197,166,197,164,165,168,160,158,173,166,175,177,195,163,196,197,161,157,162,169,178,176,167,180,164,165,168,160,158,173,181,182,183,183,184,161,157,162,185,186,188,189,190,191,192,200,201,202,193,194,166,175,177,195,163,196,197,198,169,178,176,167,180,164,165,168,160,158,173,181,182,183,184,161,157,162,185,186,188,189,190,191,192,200,201,202,193,194,166,175,177,195,163,196,197,198,169,178,176,167,180,164,165,168,160,158,173,181,182,183,184,161,157,162,185,186,188,189,190,191,192,200,201,202,193,194,166,175,177,195,163,196,197,198,194,161,157,162,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,277,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,278,279,280,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,278,279,280,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,220,221,222,223,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,278,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,278,279,280,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,237,238,240,241,242,243,244,245,246,247,248,251,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,272,273,274,275,276,277,278,279,280,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,0,0,0,287,288,0,287,288,0,285,285,285,285,285,285,285,285,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,0,285,21,285,21,285,21,285,21,285,21,285,21,285,21,285,21,284,285,21,287,288,284,285,21,287,288,284,285,21,287,288,284,285,21,287,288,285,21,285,21,285,21,0,285,21,285,21,284,285,21,284,285,21,285,21,0,0,284,285,285,285,285,285,21,21,21,21,21,287,288,284,285,21,287,288,285,21,285,21,285,21,285,21,0,0,0,284,285,21,285,21,285,21,285,21,284,285,21,287,288,285,21,285,21,0,0,0,0,0,0,0,0,0,285,21,285,21,285,21,285,21,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,0,285,21,285,21,285,21,284,285,21,287,288,285,21,284,285,21,287,288,284,285,21,287,288,284,285,21,287,288,0,285,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,290,290,290,290,290,292,290,292,290,292,290,292,292,292,290,290,290,290,290,290,292,290,292,0,0,290,292,290,290,0,290,292,290,292,290,292,290,292,0,294,294,294,294,294,294,294,294,294,294,294,294,0,294,294,294,294,294,294,294,294,295,295,295,295,294,295,294,295,294,295,294,295,294,294,294,294,294,294,294,295,294,295,294,295,295,295,295,295,294,294,294,294,294,295,295,294,295,294,294,294,294,0,294,295,294,294,294,294,295,294,294,295,294,294,294,294,0,294,294,294,294,295,294,294,295,294,295,294,295,294,0,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,0,298,298,298,298,298,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,300,301,301,301,0,302,302,302,302,302,301,301,301,301,301,302,302,302,302,302,302,302,302,0,303,303,303,303,303,303,303,303,301,301,301,303,0,0,302,303,300,303,300,300,300,300,300,300,303,300,300,300,300,300,0,0,0,301,301,301,303,301,301,301,301,301,301,301,301,0,302,300,302,303,0,0,301,301,301,301,301,307,308,307,308,307,308,308,306,306,306,303,0,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,301,301,301,309,309,301,0,300,301,302,303,300,301,302,303,300,301,302,303,300,301,302,303,300,301,302,303,300,301,302,303,300,301,302,303,300,301,302,303,81,305,306,307,308,309,300,301,302,303,81,305,306,307,308,309,300,301,302,303,0,0,0,0,0,0,81,305,306,307,308,309,300,301,302,303,81,305,306,307,308,309,300,301,302,303,305,306,307,308,309,300,301,302,303,300,301,302,303,300,301,302,303,81,81,300,301,302,303,300,301,302,303,81,305,306,307,308,309,300,301,302,303,81,305,306,307,308,309,300,301,302,303,300,301,302,303,81,305,306,307,308,309,300,300,300,300,300,301,301,301,301,301,302,302,302,302,302,303,303,303,303,303,81,81,305,306,307,308,309,300,301,302,303,300,301,302,303,300,301,302,303,300,301,302,303,300,301,302,303,305,306,307,308,309,300,301,302,303,81,300,301,302,303,300,301,302,303,300,301,302,303,81,305,306,307,308,309,300,301,302,303,300,301,302,303,300,301,302,303,81,81,300,301,302,303,81,305,306,307,308,309,300,301,302,303,300,301,302,303,300,301,302,303,300,301,302,303,300,301,302,303,300,301,302,303,0,0,0,0,0,0,0,81,305,306,307,308,309,300,301,302,303,300,301,302,303,81,305,305,306,307,308,309,300,301,302,303,81,305,306,307,308,309,300,301,302,303,81,305,306,307,308,309,300,301,302,303,300,301,302,303,0,0,0,72,142,72,142,72,142,72,142,72,142,72,142,72,142,72,142,72,142,72,142,72,142,72,72,142,142,72,72,72,142,142,72,72,72,142,355,72,142,355,72,142,355,72,142,355,72,142,355,72,142,72,142,72,142,355,355,72,142,355,72,142,355,355,72,142,355,72,142,72,142,355,72,142,72,142,0,0,72,142,72,142,72,142,72,142,72,72,142,142,72,142,355,0,318,318,318,0,0,317,317,317,317,317,317,317,317,317,317,317,317,317,323,323,323,323,323,0,0,318,318,318,321,321,320,0,0,0,320,321,322,320,321,320,321,320,321,320,321,320,321,320,321,320,321,318,320,322,323,321,318,320,322,323,321,318,320,323,321,318,320,323,321,320,323,321,320,321,320,321,320,321,322,320,321,318,320,323,321,318,320,323,321,320,321,318,320,320,320,320,320,322,323,321,321,321,321,321,318,320,322,323,321,320,321,320,321,320,321,320,321,322,322,320,323,321,320,321,320,321,320,321,318,320,322,323,321,320,321,320,321,322,320,321,320,323,321,320,321,320,322,321,320,321,320,321,320,321,318,320,323,321,320,321,318,320,322,323,321,318,320,322,323,321,318,320,322,323,321,320,321,322,322,0,0,324,325,325,324,325,324,325,324,325,324,325,324,325,324,325,324,325,324,324,324,325,324,325,324,325,0,0,0,0,0,0,0,325,324,325,324,325,324,325,324,0,0,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,0,327,331,330,330,0,331,331,331,330,330,330,330,330,329,329,329,329,329,329,0,0,329,329,329,329,329,329,329,329,329,329,329,329,330,331,329,330,331,329,330,331,329,330,331,329,331,329,329,329,329,329,330,331,329,330,331,329,329,329,329,329,329,330,331,329,330,331,329,329,329,329,330,329,330,331,329,329,329,329,330,331,329,329,329,329,331,330,329,329,329,329,329,329,330,331,329,329,330,331,329,330,331,329,330,331,329,0,0,0,319,319,319,319,319,319,319,319,319,319,319,0,319,319,319,0,0,0,0,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,0,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,343,343,343,343,343,0,343,343,343,343,343,343,343,337,343,343,342,334,0,338,0,343,343,0,0,343,343,343,342,343,0,342,342,343,343,342,343,338,341,340,343,343,342,342,342,342,342,342,342,342,343,343,343,343,337,0,0,343,0,343,334,341,0,0,343,343,343,343,342,343,339,339,339,339,339,340,0,343,343,343,0,0,0,334,0,334,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,342,343,342,343,343,343,343,343,343,343,343,343,343,343,342,343,343,342,343,343,343,343,343,343,343,343,343,343,343,343,343,342,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,342,343,343,343,343,343,343,343,343,343,343,0,0,0,334,335,336,82,334,334,334,334,334,334,334,335,336,82,337,338,339,340,341,342,343,344,345,334,346,347,335,336,82,337,338,339,340,341,342,343,344,345,334,346,347,0,0,0,335,336,82,337,338,339,340,341,342,343,344,345,334,346,347,335,336,82,337,338,339,340,341,342,343,344,345,334,346,347,0,82,334,334,334,335,336,0,334,346,0,0,0,0,335,336,344,345,334,335,336,82,342,343,344,345,334,346,347,335,336,82,342,343,344,345,334,346,347,0,0,0,0,0,334,0,0,0,0,0,0,335,335,336,336,82,82,337,338,339,340,341,342,343,344,345,334,334,334,334,334,346,347,0,0,335,335,336,336,82,337,338,339,340,341,342,343,344,345,334,346,346,347,347,334,334,334,347,334,346,347,335,336,82,346,0,0,346,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,346,347,335,336,82,342,343,334,0,334,334,334,335,336,82,337,338,339,340,341,342,343,344,345,334,346,347,334,337,334,337,335,0,0,0,0,347,0,0,0,0,346,347,334,82,82,334,346,347,0,0,0,0,0,0,344,345,334,344,345,334,0,0,0,0,0,0,0,0,0,0,0,0,346,0,334,334,0,334,0,0,0,0,0,82,335,336,82,337,338,339,340,341,342,343,344,345,334,346,347,335,336,82,334,0,335,336,82,337,338,339,340,341,342,343,344,345,334,346,347,335,336,82,337,338,339,340,341,342,343,344,345,334,346,347,0,335,336,82,337,338,339,340,341,342,343,344,345,334,346,347,346,334,0,0,0,356,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],0,[[],2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[3,4],0,0,0,0,0,0,0,0,0,0,0,0,[5,6],[7,6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[8,8],[9,9],[[]],[[]],[5],[10],[[5,5],1],[[10,10],1],[[7,7],1],[[8,8],1],[[9,9],1],[[],1],[[],1],[[],1],[[],1],[[],1],[8,11],[8,[[12,[9]]]],[[5,13],14],[[10,13],14],[[7,13],14],[[8,13],14],[[9,13],14],[15,[[4,[5]]]],[[]],[[]],[[]],[[]],[[]],[6,[[4,[5]]]],[[5,16]],[[10,16]],[[7,16]],[[8,16]],[[9,16]],[8,17],[[]],[[]],[[]],[[]],[[]],[5],[[]],[[]],[5,10],[10,12],[7,12],[[[0,[18,19]],20,21],[[4,[5]]]],[[6,[0,[18,19]],20,21],[[4,[5]]]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],23],0,[[]],[[]],[[],[[22,[24]]]],[24,24],[[]],[[24,13],14],[[24,13],14],[[]],[[]],[25],[[]],[[],26],[[],22],[[],22],[[],23],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[27,27],[[]],[27,28],[[27,27],1],[[],1],[[],29],[[27,13],14],[[27,13],14],[[]],[29,27],[29,27],[[]],[[],27],[25],[[[0,[30,[31,[[0,[30,[31,[[0,[30,[31,[[0,[30,[31,[[0,[30,31]]]]]]]]]]]]]]]]]]],[[4,[[0,[30,[31,[[0,[30,[31,[[0,[30,[31,[[0,[30,31]]]]]]]]]]]]]]]]]],[[]],[[]],[[],26],[32,[[22,[27,32]]]],[[],22],[[],22],[[],23],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],33],[[],20],[[],34],[[],35],[[],36],[[],37],[[],38],[[33,33],33],[[20,20],20],[[34,34],34],[[35,35],35],[[36,36],36],[[37,37],37],[[38,38],38],[[33,33]],[[20,20]],[[34,34]],[[35,35]],[[36,36]],[[37,37]],[[38,38]],[[33,33],33],[[20,20],20],[[34,34],34],[[35,35],35],[[36,36],36],[[37,37],37],[[38,38],38],[[33,33]],[[20,20]],[[34,34]],[[35,35]],[[36,36]],[[37,37]],[[38,38]],[33,39],[20,39],[34,40],[35,39],[36,39],[37,41],[38,39],[[33,33],33],[[20,20],20],[[34,34],34],[[35,35],35],[[36,36],36],[[37,37],37],[[38,38],38],[[33,33]],[[20,20]],[[34,34]],[[35,35]],[[36,36]],[[37,37]],[[38,38]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[33,33],[20,20],[34,34],[35,35],[36,36],[42,42],[37,37],[38,38],[43,43],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[33,33],44],[[20,20],44],[[34,34],44],[[35,35],44],[[36,36],44],[[37,37],44],[[38,38],44],[[43,43],44],[33,33],[20,20],[34,34],[35,35],[36,36],[37,37],[38,38],[[33,33],1],[[20,20],1],[[34,34],1],[[35,35],1],[[36,36],1],[[37,37],1],[[38,38],1],[[6,[12,[45]],6,[12,[45]],2],[[4,[2]]]],[[33,33],33],[[20,20],20],[[34,34],34],[[35,35],35],[[36,36],36],[[37,37],37],[[38,38],38],[[],33],[[],20],[[],34],[[],35],[[],36],[[],37],[[],38],[[33,33],1],[[20,20],1],[[34,34],1],[[35,35],1],[[36,36],1],[[46,46],1],[[42,42],1],[[37,37],1],[[38,38],1],[[43,43],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[33,47]],[[20,47]],[[34,47]],[[35,47]],[[36,47]],[[37,47]],[[38,47]],[[6,38,48,48],4],[[6,46],[[4,[39]]]],[[6,42],4],[[33,13],14],[[33,13],14],[[33,13],14],[[33,13],14],[[33,13],14],[[20,13],14],[[20,13],14],[[20,13],14],[[20,13],14],[[20,13],14],[[34,13],14],[[34,13],14],[[34,13],14],[[34,13],14],[[34,13],14],[[35,13],14],[[35,13],14],[[35,13],14],[[35,13],14],[[35,13],14],[[36,13],14],[[36,13],14],[[36,13],14],[[36,13],14],[[36,13],14],[[46,13],14],[[42,13],14],[[37,13],14],[[37,13],14],[[37,13],14],[[37,13],14],[[37,13],14],[[38,13],14],[[38,13],14],[[38,13],14],[[38,13],14],[[38,13],14],[[43,13],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[39,[[12,[33]]]],[39,[[12,[20]]]],[40,[[12,[34]]]],[39,[[12,[35]]]],[39,[[12,[36]]]],[41,[[12,[37]]]],[39,[[12,[38]]]],[39,33],[39,20],[40,34],[39,35],[39,36],[41,37],[39,38],[39,33],[39,20],[40,34],[39,35],[39,36],[41,37],[39,38],[47,33],[47,20],[47,34],[47,35],[47,36],[47,37],[47,38],[[33,16]],[[20,16]],[[34,16]],[[35,16]],[[36,16]],[[46,16]],[[42,16]],[[37,16]],[[38,16]],[[43,16]],[[33,33]],[[20,20]],[[34,34]],[[35,35]],[[36,36]],[[37,37]],[[38,38]],[[33,33],33],[[20,20],20],[[34,34],34],[[35,35],35],[[36,36],36],[[37,37],37],[[38,38],38],[[33,33],1],[[20,20],1],[[34,34],1],[[35,35],1],[[36,36],1],[[37,37],1],[[38,38],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[33,1],[20,1],[34,1],[35,1],[36,1],[37,1],[38,1],[33,1],[20,1],[34,1],[35,1],[36,1],[37,1],[38,1],[33,33],[20,20],[34,34],[35,35],[36,36],[37,37],[38,38],[[[0,[18,19]],20,21],[[4,[6]]]],[[6,[0,[18,19]],20,21],[[4,[6]]]],[[33,33],[[12,[44]]]],[[20,20],[[12,[44]]]],[[34,34],[[12,[44]]]],[[35,35],[[12,[44]]]],[[36,36],[[12,[44]]]],[[37,37],[[12,[44]]]],[[38,38],[[12,[44]]]],[[43,43],[[12,[44]]]],[[6,48,48,43],4],[[6,48,48],4],[[[0,[18,19]]],[[4,[49]]]],[[6,[0,[18,19]]],[[4,[49]]]],[[33,33]],[[20,20]],[[34,34]],[[35,35]],[[36,36]],[[37,37]],[[38,38]],[[[12,[6]],[0,[18,19]],[12,[6]],[0,[18,19]]],4],[[[12,[6]],[0,[18,19]],[12,[6]],[0,[18,19]],34],4],[[33,33,1]],[[20,20,1]],[[34,34,1]],[[35,35,1]],[[36,36,1]],[[37,37,1]],[[38,38,1]],[[6,[12,[45]],6,[12,[45]],2,37],[[4,[2]]]],[[33,33],33],[[20,20],20],[[34,34],34],[[35,35],35],[[36,36],36],[[37,37],37],[[38,38],38],[[33,33]],[[20,20]],[[34,34]],[[35,35]],[[36,36]],[[37,37]],[[38,38]],[[33,33],33],[[20,20],20],[[34,34],34],[[35,35],35],[[36,36],36],[[37,37],37],[[38,38],38],[[6,6,2,37],[[4,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[33,33]],[[20,20]],[[34,34]],[[35,35]],[[36,36]],[[37,37]],[[38,38]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[33,33],33],[[20,20],20],[[34,34],34],[[35,35],35],[[36,36],36],[[37,37],37],[[38,38],38],[[6,[51,[50]],37],[[4,[2]]]],[[],1],0,0,0,[[]],[[]],[[]],[[]],0,[52,52],[[]],0,[53],[[52,52],1],[[53,53],1],[[],1],[[],1],0,[[52,13],14],[[53,13],14],[[]],[[]],[[],[[4,[53]]]],[[52,16]],[[53,16]],0,[[]],[[]],[[]],0,[53,12],[[]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],0,0,0,0,0,0,[[],54],[[],55],[[54,54],54],[[55,55],55],[[54,54]],[[55,55]],[[54,54],54],[[55,55],55],[[54,54]],[[55,55]],[54,41],[55,39],[[54,54],54],[[55,55],55],[[54,54]],[[55,55]],[[]],[[]],[[]],[[]],[54,54],[55,55],[[]],[[]],[[54,54],44],[[55,55],44],[54,54],[55,55],[[54,54],1],[[55,55],1],[[11,55],4],[[54,54],54],[[55,55],55],[[],54],[[],55],[[54,54],1],[[55,55],1],[[],1],[[],1],[[54,47]],[[55,47]],[[56,11,54],4],[[54,13],14],[[54,13],14],[[54,13],14],[[54,13],14],[[54,13],14],[[55,13],14],[[55,13],14],[[55,13],14],[[55,13],14],[[55,13],14],[[]],[[]],[41,[[12,[54]]]],[39,[[12,[55]]]],[41,54],[39,55],[41,54],[39,55],[47,54],[47,55],[[54,16]],[[55,16]],[[[51,[57]],11],4],[[54,54]],[[55,55]],[[54,54],54],[[55,55],55],[[54,54],1],[[55,55],1],[[]],[[]],[54,1],[55,1],[54,1],[55,1],[54,54],[55,55],[[54,54],[[12,[44]]]],[[55,55],[[12,[44]]]],[[54,54]],[[55,55]],[[54,54,1]],[[55,55,1]],[[54,54],54],[[55,55],55],[[54,54]],[[55,55]],[[54,54],54],[[55,55],55],[[]],[[]],[[54,54]],[[55,55]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[54,54],54],[[55,55],55],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],58],[[],59],[[58,58],58],[[59,59],59],[[58,58]],[[59,59]],[[58,58],58],[[59,59],59],[[58,58]],[[59,59]],[58,60],[59,39],[[58,58],58],[[59,59],59],[[58,58]],[[59,59]],[[]],[[]],[[]],[[]],[58,58],[59,59],[[]],[[]],[[58,58],44],[[59,59],44],[58,58],[59,59],[[58,58],1],[[59,59],1],[[58,58],58],[[59,59],59],[[],58],[[],59],[[58,58],1],[[59,59],1],[[],1],[[],1],[[58,47]],[[59,47]],[[58,13],14],[[58,13],14],[[58,13],14],[[58,13],14],[[58,13],14],[[59,13],14],[[59,13],14],[[59,13],14],[[59,13],14],[[59,13],14],[[]],[[]],[60,[[12,[58]]]],[39,[[12,[59]]]],[60,58],[39,59],[60,58],[39,59],[47,58],[47,59],[[58,16]],[[59,16]],[[58,58]],[[59,59]],[[58,58],58],[[59,59],59],[[58,58],1],[[59,59],1],[[]],[[]],[58,1],[59,1],[58,1],[59,1],[[[12,[[0,[18,19]]]],[0,[18,19]],[12,[[0,[18,19]]]],58,[12,[[0,[18,19]]]]],4],[58,58],[59,59],[[58,58],[[12,[44]]]],[[59,59],[[12,[44]]]],[[58,58]],[[59,59]],[[58,58,1]],[[59,59,1]],[[58,58],58],[[59,59],59],[[58,58]],[[59,59]],[[58,58],58],[[59,59],59],[[]],[[]],[[58,58]],[[59,59]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[[0,[18,19]]],4],[[[0,[18,19]],59],4],[[58,58],58],[[59,59],59],0,0,0,0,0,0,0,0,0,0,[[],61],[[61,61],61],[[61,61]],[[61,61],61],[[61,61]],[61,39],[[61,61],61],[[61,61]],[[]],[[]],[[]],[[]],[[]],[[]],[61,61],[62,62],[[]],[[]],[[61,61],44],[61,61],[[61,61],1],[62,63],[[61,61],61],[[],61],[[61,61],1],[[62,62],1],[[],1],[[],1],[[61,47]],[62,63],[[61,13],14],[[61,13],14],[[61,13],14],[[61,13],14],[[61,13],14],[[62,13],14],[[64,13],14],[[]],[[]],[[]],[39,[[12,[61]]]],[39,61],[39,61],[47,61],[[61,16]],[[62,16]],[[61,61]],[[61,61],61],[[61,61],1],[[]],[[]],[[]],[61,1],[61,1],[62,63],0,[64,4],[64,[[4,[62]]]],[[11,61,21,[12,[62]]],[[4,[64]]]],[[64,[51,[57]],40],[[4,[2]]]],[64,[[4,[62]]]],[[64,[51,[57]],40],4],[64,[[4,[62]]]],[[64,62],[[4,[62]]]],[11,4],[62,63],[[63,63,63,63],62],[61,61],[[61,61],[[12,[44]]]],[[61,61]],[[61,61,1]],[[61,61],61],[[61,61]],[[61,61],61],[[]],[[]],[[61,61]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[61,61],61],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],65],[[65,65],65],[[65,65]],[[65,65],65],[[65,65]],[65,39],[[65,65],65],[[65,65]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[65,65],[[]],[[65,65],44],[65,65],[[65,65],1],[[65,65],65],[66],[[],65],[[65,65],1],[[],1],[[65,47]],[[67,13],14],[[66,13],14],[[65,13],14],[[65,13],14],[[65,13],14],[[65,13],14],[[65,13],14],[[68,13],14],[[]],[[]],[[]],[[]],[39,[[12,[65]]]],[39,65],[39,65],[47,65],[[65,16]],[[],[[4,[66]]]],[[[0,[18,19]]],[[4,[41]]]],[67,41],[[65,65]],[[65,65],65],[[65,65],1],[[]],[[]],[[]],[[]],[66],[[]],[65,1],[65,1],[66,68],[67,11],[68,12],[65,65],[[65,65],[[12,[44]]]],[[65,65]],[[65,65,1]],[[65,65],65],[[65,65]],[[65,65],65],[[]],[66,[[51,[67]]]],[[65,65]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[65,65],65],0,0,0,0,0,0,0,0,0,0,0,0,[69,[[12,[1]]]],[[],70],[69,[[12,[1]]]],[69,6],[[70,70],70],[[70,70]],[[70,70],70],[[70,70]],[70,71],[[70,70],70],[[70,70]],[[]],[[]],[[]],[[]],[69,69],[70,70],[[]],[[]],[[70,70],44],[70,70],[[70,70],1],[[70,70],70],[[],70],[[69,69],1],[[70,70],1],[[],1],[[],1],[69,70],[[70,47]],[[69,13],14],[[70,13],14],[[70,13],14],[[70,13],14],[[70,13],14],[[70,13],14],[[]],[[]],[71,[[12,[70]]]],[71,70],[71,70],[47,70],[[69,16]],[[70,16]],[[70,70]],[[70,70],70],[[70,70],1],[[]],[[]],[70,1],[70,1],[[6,70],69],[70,70],[[70,70],[[12,[44]]]],[[[51,[69]],39],[[4,[39]]]],[[[51,[69]],[12,[72]],[12,[73]]],[[4,[39]]]],[[70,70]],[69,[[12,[70]]]],[[70,70,1]],[[69,70]],[[70,70],70],[[70,70]],[[70,70],70],[[]],[[]],[[70,70]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[70,70],70],0,0,0,0,0,[74,6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[75,75],[76,76],[77,77],[[]],[[]],[[]],[74],[[75,75],1],[[76,76],1],[[74,74],1],[[],1],[[],1],[[],1],[74,78],[74,78],[[75,13],[[22,[79]]]],[[76,13],14],[[77,13],14],[[74,13],14],0,[[[80,[[12,[75]]]],[80,[[12,[81]]]]],[[4,[77]]]],[82,83],[[]],[[]],[[]],[[]],[74,4],[[75,16]],[[76,16]],[[74,16]],[[]],[[]],[[]],[[]],[74,6],0,0,[[[80,[[12,[75]]]],[80,[[12,[81]]]]],[[4,[76]]]],[20,[[4,[74]]]],[74,[[4,[26]]]],[74,[[4,[26]]]],[[74,[51,[57]]],[[78,[2]]]],[[74,[51,[57]]],[[78,[2]]]],0,[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[74,4],[[74,[51,[57]]],[[78,[2]]]],[[74,[51,[57]]],[[78,[2]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],84],[[84,84],84],[[84,84]],[[84,84],84],[[84,84]],[84,39],[[84,84],84],[[84,84]],[[]],[[]],[[]],[[]],[[85,[51,[57]],84,[12,[39]]],[[4,[82]]]],[84,84],[86,86],[[]],[[]],[[84,84],44],[84,84],[[84,84],1],[[],2],[[],86],[[84,84],84],[[],84],[[84,84],1],[[86,86],1],[[],1],[[],1],[[84,47]],[[84,13],14],[[84,13],14],[[84,13],14],[[84,13],14],[[84,13],14],[[86,13],14],[[]],[[]],[39,[[12,[84]]]],[39,84],[39,84],[47,84],[[84,16]],[[86,16]],[[84,84]],[[84,84],84],[[84,84],1],[[]],[[]],[84,1],[84,1],[[86,2],[[4,[1]]]],[[],86],[84,84],[[84,84],[[12,[44]]]],[[84,84]],[82,[[4,[86]]]],[[],[[4,[2]]]],[[82,86],4],[[],4],[[84,84,1]],[[86,2],4],[[6,84],4],[[84,84],84],[[84,84]],[[84,84],84],[[]],[[]],[[84,84]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[84,84],84],[[86,2],4],[84,4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[6,[[4,[87]]]],[88,4],[[[88,[89]]],4],[[[88,[90]]],4],[[[88,[91]]],4],[[[51,[92]],[12,[72]]],4],[89,93],[90,93],[89,93],[90,93],[91,93],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[88,[[4,[87]]]],[[[88,[89]]],[[4,[87]]]],[[[88,[90]]],[[4,[87]]]],[[[88,[91]]],[[4,[87]]]],[87,87],[94,94],[95,95],[[]],[[]],[[]],[[94,94],44],[[95,95],44],[[87,87],1],[[94,94],1],[[95,95],1],[[],1],[[],1],[[],1],[88,4],[[[88,[89]]],4],[[[88,[90]]],4],[[[88,[91]]],4],[[],6],[89,6],[90,6],[91,6],[[89,13],14],[[90,13],14],[[91,13],14],[[87,13],14],[[94,13],14],[[95,13],14],[[]],[[]],[[]],[[]],[[]],[[]],[[87,16]],[[94,16]],[[95,16]],[[],1],[89,1],[90,1],[91,1],[[]],[[]],[[]],[[]],[[]],[[]],[[94,[51,[[88,[96]]]],97],4],[91,95],[89,2],[90,2],[[6,48,[51,[57]],29,97],89],[[6,48,[51,[57]],29,97],90],[[6,95,29,97],91],[89,48],[90,48],[[94,94],[[12,[44]]]],[[95,95],[[12,[44]]]],[[],29],[89,29],[90,29],[91,29],[97],[[89,97]],[[90,97]],[[91,97]],[[],98],[89,98],[90,98],[91,98],[88,4],[[[88,[89]]],4],[[[88,[90]]],4],[[[88,[91]]],4],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[29,[[4,[95]]]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],99],[[],100],[[99,99],99],[[100,100],100],[[99,99]],[[100,100]],[[99,99],99],[[100,100],100],[[99,99]],[[100,100]],[99,39],[100,39],[[99,99],99],[[100,100],100],[[99,99]],[[100,100]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[99,99],[101,101],[100,100],[102,102],[[]],[[]],[[]],[[]],[[99,99],44],[[100,100],44],[99,99],[100,100],[[99,99],1],[[100,100],1],[102,17],[[99,99],99],[[100,100],100],[[],99],[[],100],[[],102],[[],[[4,[6]]]],[100,[[4,[6]]]],[[6,101,6,[80,[[12,[102]]]]],4],[[6,[51,[102]],103],[[4,[2]]]],[[99,99],1],[[101,101],1],[[100,100],1],[[102,102],1],[[],1],[[],1],[[],1],[[],1],[102,99],[[99,47]],[[100,47]],[[99,13],14],[[99,13],14],[[99,13],14],[[99,13],14],[[99,13],14],[[101,13],14],[[100,13],14],[[100,13],14],[[100,13],14],[[100,13],14],[[100,13],14],[[102,13],14],[[]],[[]],[[]],[[]],[39,[[12,[99]]]],[39,[[12,[100]]]],[39,99],[39,100],[39,99],[39,100],[47,99],[47,100],[[99,16]],[[101,16]],[[100,16]],[[102,16]],[[99,99]],[[100,100]],[[99,99],99],[[100,100],100],[[99,99],1],[[100,100],1],[[]],[[]],[[]],[[]],[99,1],[100,1],[99,1],[100,1],[[99,17],102],[99,99],[100,100],[[99,99],[[12,[44]]]],[[100,100],[[12,[44]]]],[[99,99]],[[100,100]],[[99,99,1]],[[100,100,1]],[[99,99],99],[[100,100],100],[[99,99]],[[100,100]],[[99,99],99],[[100,100],100],[[]],[[]],[[]],[[]],[[99,99]],[[100,100]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[99,99],99],[[100,100],100],0,0,0,0,[[],104],[[104,104],104],[[104,104]],[[104,104],104],[[104,104]],[104,39],[[104,104],104],[[104,104]],[[]],[[]],[104,104],[[]],[[104,104],44],[104,104],[[104,104],1],[[104,104],104],[[],104],[[104,104],1],[[],1],[[41,104],[[4,[6]]]],[[104,47]],[[104,13],14],[[104,13],14],[[104,13],14],[[104,13],14],[[104,13],14],[[]],[39,[[12,[104]]]],[39,104],[39,104],[47,104],[[104,16]],[[104,104]],[[104,104],104],[[104,104],1],[[]],[104,1],[104,1],[104,104],[[104,104],[[12,[44]]]],[[104,104]],[[104,104,1]],[[104,104],104],[[104,104]],[[104,104],104],[[]],[[104,104]],[[],22],[[],22],[[],23],[[104,104],104],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[105,[0,[18,19]],106],[[4,[107]]]],[[],106],[[],108],[105,6],[[106,106],106],[[108,108],108],[[106,106]],[[108,108]],[[106,106],106],[[108,108],108],[[106,106]],[[108,108]],[106,40],[108,39],[[106,106],106],[[108,108],108],[[106,106]],[[108,108]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[106,106],[108,108],[105,105],[107,107],[[]],[[]],[[]],[[]],[[106,106],44],[[108,108],44],[[107,107],44],[106,106],[108,108],[[106,106],1],[[108,108],1],0,[[106,106],106],[[108,108],108],[[],106],[[],108],[[106,106],1],[[108,108],1],[[107,107],1],[[],1],[[],1],[[],1],[[106,47]],[[108,47]],[[106,13],14],[[106,13],14],[[106,13],14],[[106,13],14],[[106,13],14],[[108,13],14],[[108,13],14],[[108,13],14],[[108,13],14],[[108,13],14],[[105,13],14],[[107,13],14],[[109,13],14],[[]],[[]],[[]],[[]],[[]],[40,[[12,[106]]]],[39,[[12,[108]]]],[40,106],[39,108],[40,106],[39,108],[47,106],[47,108],[6,105],[[106,16]],[[108,16]],[[107,16]],[108,[[4,[105]]]],[[106,106]],[[108,108]],[[106,106],106],[[108,108],108],[[106,106],1],[[108,108],1],[[]],[[]],[[]],[[]],[[]],[106,1],[108,1],[106,1],[108,1],0,0,[106,106],[108,108],[[106,106],[[12,[44]]]],[[108,108],[[12,[44]]]],[[107,107],[[12,[44]]]],[105,[[4,[[110,[109]]]]]],[[106,106]],[[108,108]],[[105,107],4],[[106,106,1]],[[108,108,1]],[[106,106],106],[[108,108],108],[[106,106]],[[108,108]],[[106,106],106],[[108,108],108],[[]],[[]],[[]],[[]],[[106,106]],[[108,108]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],23],[[106,106],106],[[108,108],108],0,0,0,0,0,0,0,0,[[],111],[[111,111],111],[[111,111]],[[111,111],111],[[111,111]],[111,41],[[111,111],111],[[111,111]],[[]],[[]],[111,111],[[]],[[111,111],44],[111,111],[[111,111],1],[[111,111],111],[[],111],[[111,111],1],[[],1],[[111,47]],[[111,13],14],[[111,13],14],[[111,13],14],[[111,13],14],[[111,13],14],[[]],[41,[[12,[111]]]],[41,111],[41,111],[47,111],[[111,16]],[[111,111]],[[111,111],111],[[111,111],1],[[]],[111,1],[111,1],[[11,111],[[4,[6]]]],[111,111],[[111,111],[[12,[44]]]],[[111,111]],[[111,111,1]],[[111,111],111],[[111,111]],[[111,111],111],[[]],[[111,111]],[[],22],[[],22],[[],23],[[111,111],111],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],112],[[],113],[[],114],[[],115],[[],116],[[112,112],112],[[113,113],113],[[114,114],114],[[115,115],115],[[116,116],116],[[112,112]],[[113,113]],[[114,114]],[[115,115]],[[116,116]],[[112,112],112],[[113,113],113],[[114,114],114],[[115,115],115],[[116,116],116],[[112,112]],[[113,113]],[[114,114]],[[115,115]],[[116,116]],[112,39],[113,39],[114,39],[115,39],[116,39],[[112,112],112],[[113,113],113],[[114,114],114],[[115,115],115],[[116,116],116],[[112,112]],[[113,113]],[[114,114]],[[115,115]],[[116,116]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[112,112],[113,113],[114,114],[117,117],[115,115],[116,116],[[]],[[]],[[]],[[]],[[]],[[]],[[112,112],44],[[113,113],44],[[114,114],44],[[117,117],44],[[115,115],44],[[116,116],44],[112,112],[113,113],[114,114],[115,115],[116,116],[[112,112],1],[[113,113],1],[[114,114],1],[[115,115],1],[[116,116],1],[[112,112],112],[[113,113],113],[[114,114],114],[[115,115],115],[[116,116],116],[[],112],[[],113],[[],114],[[],115],[[],116],[[112,112],1],[[113,113],1],[[114,114],1],[[117,117],1],[[115,115],1],[[116,116],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[112,47]],[[113,47]],[[114,47]],[[115,47]],[[116,47]],[[112,13],14],[[112,13],14],[[112,13],14],[[112,13],14],[[112,13],14],[[113,13],14],[[113,13],14],[[113,13],14],[[113,13],14],[[113,13],14],[[114,13],14],[[114,13],14],[[114,13],14],[[114,13],14],[[114,13],14],[[117,13],14],[[115,13],14],[[115,13],14],[[115,13],14],[[115,13],14],[[115,13],14],[[116,13],14],[[116,13],14],[[116,13],14],[[116,13],14],[[116,13],14],[[]],[[]],[[]],[[]],[[]],[[]],[39,[[12,[112]]]],[39,[[12,[113]]]],[39,[[12,[114]]]],[39,[[12,[115]]]],[39,[[12,[116]]]],[39,112],[39,113],[39,114],[39,115],[39,116],[39,112],[39,113],[39,114],[39,115],[39,116],[47,112],[47,113],[47,114],[47,115],[47,116],[[112,16]],[[113,16]],[[114,16]],[[117,16]],[[115,16]],[[116,16]],[[112,112]],[[113,113]],[[114,114]],[[115,115]],[[116,116]],[[112,112],112],[[113,113],113],[[114,114],114],[[115,115],115],[[116,116],116],[[112,112],1],[[113,113],1],[[114,114],1],[[115,115],1],[[116,116],1],[[]],[[]],[[]],[[]],[[]],[[]],[112,1],[113,1],[114,1],[115,1],[116,1],[112,1],[113,1],[114,1],[115,1],[116,1],[[118,119,117],4],[[118,119],4],[116,4],[[[12,[120]],120,112,113,6,48],[[4,[118]]]],[[118,119,112],4],[[118,119,119,114,[12,[118]]],[[4,[118]]]],[[118,119,115],4],[[118,119],4],[[],4],[[118,119],4],[112,112],[113,113],[114,114],[115,115],[116,116],[[112,112],[[12,[44]]]],[[113,113],[[12,[44]]]],[[114,114],[[12,[44]]]],[[117,117],[[12,[44]]]],[[115,115],[[12,[44]]]],[[116,116],[[12,[44]]]],[[112,112]],[[113,113]],[[114,114]],[[115,115]],[[116,116]],[[112,112,1]],[[113,113,1]],[[114,114,1]],[[115,115,1]],[[116,116,1]],[[[0,[18,19]],20,21],[[4,[6]]]],[[[0,[18,19]]],4],[[112,112],112],[[113,113],113],[[114,114],114],[[115,115],115],[[116,116],116],[[112,112]],[[113,113]],[[114,114]],[[115,115]],[[116,116]],[[112,112],112],[[113,113],113],[[114,114],114],[[115,115],115],[[116,116],116],[[]],[[]],[[]],[[]],[[]],[[]],[[112,112]],[[113,113]],[[114,114]],[[115,115]],[[116,116]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[112,112],112],[[113,113],113],[[114,114],114],[[115,115],115],[[116,116],116],0,0,0,0,0,0,0,0,0,0,0,0,[[],121],[[121,121],121],[[121,121]],[[121,121],121],[[121,121]],[121,39],[[121,121],121],[[121,121]],[[]],[[]],[121,121],[[]],[[121,121],44],[121,121],[[121,121],1],[[121,121],121],[[],121],[[121,121],1],[[],1],[[121,47]],[[121,13],14],[[121,13],14],[[121,13],14],[[121,13],14],[[121,13],14],[[]],[39,[[12,[121]]]],[39,121],[39,121],[47,121],[[],[[4,[121]]]],[[121,16]],[[121,121]],[[121,121],121],[[121,121],1],[[]],[121,1],[121,1],[121,121],[[121,121],[[12,[44]]]],[[121,121]],[121,[[4,[121]]]],[[121,121,1]],[[121,121],121],[[121,121]],[[121,121],121],[[]],[[121,121]],[[],22],[[],22],[[],23],[[121,121],121],0,[[122,[80,[[12,[123]]]]],4],[[],122],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],124],[82,4],[[124,124],124],[[124,124]],[[124,124],124],[[124,124]],[124,39],[[124,124],124],[[124,124]],[[]],[[]],[[]],[[]],[[]],[[]],[125,125],[126,126],[124,124],[[]],[[]],[[]],[[125,125],44],[[126,126],44],[[124,124],44],[124,124],[[82,[80,[[12,[123]]]]],4],[[124,124],1],[[82,[80,[[12,[123]]]]],4],[[124,124],124],[[],124],[[125,125],1],[[126,126],1],[[124,124],1],[[],1],[[],1],[[],1],[[124,47]],[[125,13],14],[[126,13],14],[[124,13],14],[[124,13],14],[[124,13],14],[[124,13],14],[[124,13],14],[[]],[[]],[[]],[39,[[12,[124]]]],[39,124],[39,124],[47,124],[82,[[4,[127]]]],[82,[[4,[128]]]],[82,[[4,[129]]]],[[125,16]],[[126,16]],[[124,16]],[[124,124]],[82,4],[[124,124],124],[[124,124],1],[[]],[[]],[[]],[124,1],[124,1],[82,4],[124,124],[[125,125],[[12,[44]]]],[[126,126],[[12,[44]]]],[[124,124],[[12,[44]]]],[[82,130],[[4,[127]]]],[[82,130],[[4,[127]]]],[[124,124]],[[82,124],4],[[124,124,1]],[[82,124],4],[[82,128],4],[[82,129],4],[[82,[80,[[12,[123]]]]],4],[[124,124],124],[[124,124]],[[124,124],124],[[82,[80,[[12,[123]]]]],4],[[82,[80,[[12,[123]]]]],4],[[82,[80,[[12,[123]]]]],4],[[]],[[]],[[]],[[124,124]],[[],4],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[124,124],124],[[82,130,118],4],[[82,130,118],4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],131],[132,[[12,[17]]]],[[131,131],131],[[131,131]],[[131,131],131],[[131,131]],[131,40],[[131,131],131],[[131,131]],[132,[[12,[17]]]],[132,[[12,[17]]]],[132,[[12,[17]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[133,133],[134,134],[132,132],[131,131],[[]],[[]],[[]],[[]],[[133,133],44],[[134,134],44],[[131,131],44],[131,131],[[131,131],1],[[],132],[[],131],[[131,131],131],[[],131],[[133,133],1],[[134,134],1],[[132,132],1],[[131,131],1],[[],1],[[],1],[[],1],[[],1],[[131,47]],[[133,13],14],[[134,13],14],[[132,13],14],[[131,13],14],[[131,13],14],[[131,13],14],[[131,13],14],[[131,13],14],[[]],[[]],[[]],[[]],[40,[[12,[131]]]],[40,131],[40,131],[47,131],[[133,16]],[[134,16]],[[132,16]],[[131,16]],[132,[[12,[17]]]],[132,[[12,[17]]]],[132,[[12,[17]]]],[[131,131]],[[131,131],131],[[131,131],1],[[]],[[]],[[]],[[]],[131,1],[131,1],[131,131],[132,[[12,[17]]]],[[133,133],[[12,[44]]]],[[134,134],[[12,[44]]]],[[131,131],[[12,[44]]]],[[133,[0,[18,19]],39],[[4,[132]]]],[[133,[0,[18,19]]],4],[[133,[0,[18,19]],134,[0,[18,19]]],4],[[133,[0,[18,19]],39,132,131],4],[[133,[12,[[0,[18,19]]]]],4],[[131,131]],[[131,131,1]],[[132,17]],[[132,17]],[[132,17]],[[132,17]],[[132,17]],[[132,17]],[[131,131],131],[[131,131]],[[131,131],131],[[]],[[]],[[]],[[]],[[131,131]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[131,131],131],0,0,0,0,0,0,[[]],[[]],[135,135],[[]],[[135,135],44],[[135,135],1],[[],1],[[135,13],14],[[]],[[135,16]],[[]],[[135,135],[[12,[44]]]],[135,[[4,[136]]]],[1,4],[[]],[[],22],[[],22],[[],23],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[137,138],[137,138],[137,127],[137,127],[[]],[[]],[[]],[[]],[[]],[[]],[139,139],[140,140],[137,137],[[]],[[]],[[]],[[139,139],44],[[140,140],44],[[139,139],1],[[140,140],1],[[137,137],1],[[],1],[[],1],[[],1],[[139,13],14],[[140,13],14],[[137,13],14],[[]],[[]],[[]],[137,127],[139,4],[140,[[4,[137]]]],[[139,16]],[[140,16]],[[137,16]],[[]],[[]],[[]],[137,127],[137,127],[137,127],[137,127],[137,127],[137,127],[[139,139],[[12,[44]]]],[[140,140],[[12,[44]]]],0,[[139,141,141],4],[137,127],[137,127],[137,142],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[137,127],[137,127],[137,142],[137,127],0,0,0,[[]],[[]],[[]],[[]],[143],[143,143],[[]],[[143,6],1],[[],143],[[143,143],1],[[],1],[[143,[12,[6]]],144],[[143,13],14],[[144,13],14],[[]],[[]],[[143,16]],[143,[[12,[6]]]],[[143,6]],[[]],[[]],[[]],[[],143],[144,[[12,[6]]]],[144,[[12,[6]]]],[[[80,[[12,[39]]]],[80,[[12,[143]]]],[80,[[12,[143]]]],[80,[[12,[143]]]],[80,[[12,[72]]]],[80,[[12,[73]]]]],[[4,[39]]]],[[143,6]],[[[80,[[12,[39]]]],[80,[[12,[143]]]],[80,[[12,[143]]]],[80,[[12,[143]]]],[80,[[12,[142]]]]],[[4,[39]]]],[144],[[]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[6,6,[12,[48]],2],[[4,[2]]]],[[6,6,[12,[145]],2],[[4,[2]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[73,123]],[[],146],[[],73],[98,147],[123,28],[73,148],[123,28],[[146,146],146],[[146,146]],[[146,146],146],[[146,146]],[146,39],[[146,146],146],[[146,146]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[73],[123,123],[149,149],[146,146],[150,150],[73,73],[151,151],[152,152],[153,153],[97,97],[98,98],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[123,123],44],[[146,146],44],[[150,150],44],[146,146],[[146,146],1],[[73,123],1],[[146,146],146],[[],146],[[],73],[[123,123],1],[[149,149],1],[[146,146],1],[[150,150],1],[[73,73],1],[[152,152],1],[[153,153],1],[[97,97],1],[[98,98],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[146,47]],[[73,47]],[153,146],[[123,13],14],[[123,13],14],[[149,13],14],[[146,13],14],[[146,13],14],[[146,13],14],[[146,13],14],[[146,13],14],[[150,13],14],[[73,13],14],[[151,13],14],[[152,13],14],[[153,13],14],[[97,13],14],[[98,13],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[147,98],[39,[[12,[146]]]],[39,146],[39,146],[47,146],[47,73],[148,73],[28,[[4,[123]]]],[153,152],[[123,16]],[[149,16]],[[146,16]],[[150,16]],[[73,16]],[[152,16]],[[153,16]],[[97,16]],[[98,16]],[[146,146]],[[146,146],146],[[146,146],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[73],[[]],[146,1],[146,1],[73,151],[[],149],[[82,[80,[[12,[123]]]]],4],[[82,[80,[[12,[123]]]]],4],[153,73],[[152,146,73],153],[97,98],[149,[[12,[123]]]],[151,[[12,[123]]]],[146,146],[[123,123],[[12,[44]]]],[[146,146],[[12,[44]]]],[[150,150],[[12,[44]]]],[[150,[12,[73]],[12,[73]]],4],[123,4],[[146,146]],[[73,123]],[[146,146,1]],[[123,153],[[4,[153]]]],[98,147],[[123,152],[[4,[152]]]],[[150,[12,[73]],[12,[73]]],4],[[146,146],146],[[146,146]],[[146,146],146],[73,4],[[],[[4,[73]]]],[73,4],[[73,150],[[4,[73]]]],[73,4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],26],[[146,146]],[[],22],[29,[[4,[123]]]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],0,[[146,146],146],[73,[[4,[123]]]],0,0,0,0,0,0,0,0,0,0,0,0,[[],154],[155,6],[[154,154],154],[[154,154]],[[154,154],154],[[154,154]],[154,39],[[154,154],154],[[154,154]],[[]],[[]],[[]],[[]],[[]],[[]],[156,156],[154,154],[[]],[[]],[[154,154],44],[154,154],[[154,154],1],[[154,154],154],[155],[[],154],[[156,156],1],[[154,154],1],[[155,155],1],[[],1],[[],1],[[],1],[[154,47]],[[156,13],[[22,[79]]]],[[154,13],14],[[154,13],14],[[154,13],14],[[154,13],14],[[154,13],14],[[155,13],14],[[]],[[]],[[]],[39,[[12,[154]]]],[39,154],[39,154],[47,154],[[156,16]],[[154,16]],[[155,16]],[[154,154]],[[154,154],154],[[154,154],1],[[]],[[]],[[]],[[]],[154,1],[154,1],[73,[[4,[155]]]],[155,12],[154,154],[[154,154],[[12,[44]]]],[155,[[4,[[12,[156]]]]]],[[154,154]],[[154,154,1]],[[155,73],4],0,0,[[6,73,154],[[4,[6]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[154,154],154],[[154,154]],[[154,154],154],[[]],[[]],[[154,154]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[154,154],154],[[73,154],[[4,[155]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[6,[[4,[6]]]],[[6,157],[[4,[6]]]],[158,[[12,[[159,[57]]]]]],0,[160,11],[160,11],[[],161],[[],157],[[],162],[[],163],[164,[[12,[[51,[57]]]]]],[165,[[12,[160]]]],[165,[[12,[160]]]],[166],[165,[[12,[158]]]],[165,[[12,[158]]]],[164,167],[165,[[12,[168]]]],[165,[[12,[168]]]],[[],169],[[],169],[164,167],[164,167],[168,170],[160,171],[158,172],[173,174],[175,176],[177,178],[165,[[12,[177]]]],[165,[[12,[175]]]],[165,[[12,[175]]]],[165,[[12,[177]]]],[165,[[12,[164]]]],[165,[[12,[164]]]],[165,[[12,[173]]]],[165,[[12,[173]]]],[[6,179],4],[[161,161],161],[[157,157],157],[[162,162],162],[[161,161]],[[157,157]],[[162,162]],[[161,161],161],[[157,157],157],[[162,162],162],[[161,161]],[[157,157]],[[162,162]],[161,41],[157,39],[162,39],[[161,161],161],[[157,157],157],[[162,162],162],[[161,161]],[[157,157]],[[162,162]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[173,40],[169,169],[178,178],[176,176],[167,167],[180,180],[164,164],[165,165],[168,168],[160,160],[158,158],[173,173],[181,181],[182,182],[183,183],[184,184],[161,161],[157,157],[162,162],[185,185],[186,186],[[[188,[187]]],[[188,[187]]]],[189,189],[190,190],[191,191],[192,192],[193,193],[194,194],[166,166],[175,175],[177,177],[195,195],[163,163],[196,196],[197,197],[198,198],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[161,161],44],[[157,157],44],[[162,162],44],0,0,0,0,[188,189],[161,161],[157,157],[162,162],[[6,179],4],[[161,161],1],[[157,157],1],[[162,162],1],[[],194],[[161,161],161],[[157,157],157],[[162,162],162],[[],161],[[],157],[[],162],[[169,169],1],[[178,178],1],[[176,176],1],[[167,167],1],[[180,180],1],[[164,164],1],[[165,165],1],[[168,168],1],[[160,160],1],[[158,158],1],[[173,173],1],[[181,181],1],[[182,182],1],[[183,183],1],[[184,184],1],[[161,161],1],[[157,157],1],[[162,162],1],[[185,185],1],[[186,186],1],[[[188,[31]],[188,[31]]],1],[[189,189],1],[[190,190],1],[[191,191],1],[[192,192],1],[[193,193],1],[[194,194],1],[[166,166],1],[[175,175],1],[[177,177],1],[[195,195],1],[[163,163],1],[[196,196],1],[[197,197],1],[[198,198],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[161,47]],[[157,47]],[[162,47]],[[],[[12,[198]]]],[[],[[12,[198]]]],[166,198],0,[175,40],[[169,13],[[22,[79]]]],[[178,13],[[22,[79]]]],[[176,13],[[22,[79]]]],[[167,13],[[22,[79]]]],[[180,13],[[22,[79]]]],[[164,13],14],[[164,13],14],[[165,13],14],[[165,13],14],[[168,13],14],[[168,13],14],[[160,13],14],[[160,13],14],[[158,13],14],[[158,13],14],[[173,13],14],[[173,13],14],[[181,13],[[22,[79]]]],[[182,13],[[22,[79]]]],[[183,13],14],[[184,13],14],[[161,13],14],[[161,13],14],[[161,13],14],[[161,13],14],[[161,13],14],[[157,13],14],[[157,13],14],[[157,13],14],[[157,13],14],[[157,13],14],[[162,13],14],[[162,13],14],[[162,13],14],[[162,13],14],[[162,13],14],[[185,13],14],[[186,13],14],[[[188,[199]],13],14],[[189,13],14],[[190,13],14],[[191,13],14],[[192,13],14],[[[200,[199]],13],14],[[[201,[199]],13],14],[[202,13],14],[[193,13],14],[[194,13],14],[[166,13],14],[[166,13],14],[[175,13],14],[[175,13],14],[[177,13],14],[[177,13],14],[[195,13],14],[[195,13],14],[[163,13],14],[[163,13],14],[[196,13],14],[[196,13],14],[[197,13],14],[[197,13],14],[[198,13],14],[[]],[[]],[[]],[[]],[[]],[[]],[203,165],[[]],[204,165],[205,165],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[206,194],[[]],[203,175],[[]],[205,177],[[]],[[]],[[]],[[]],[[]],[[]],[41,[[12,[161]]]],[39,[[12,[157]]]],[39,[[12,[162]]]],[41,161],[39,157],[39,162],[41,161],[39,157],[39,162],[29,[[12,[198]]]],[47,161],[47,157],[47,162],[[169,[12,[207]]],[[12,[18]]]],[[169,[12,[207]]],[[12,[164]]]],[[169,[12,[207]]],[[12,[165]]]],[[169,[12,[207]]],[[12,[168]]]],[[169,[12,[207]]],[[12,[160]]]],[[169,[12,[207]]],[[12,[158]]]],[[169,[12,[207]]],[[12,[173]]]],[[169,[12,[207]]],[[12,[166]]]],[[169,[12,[207]]],[[12,[175]]]],[[169,[12,[207]]],[[12,[177]]]],[208,195],[209,163],[210,196],[204,197],[28,[[22,[175]]]],[28,[[22,[177]]]],[6,4],[6,[[4,[179]]]],[6,[[4,[179]]]],[[6,211],4],[194,212],[168,40],[158,2],[[169,16]],[[178,16]],[[176,16]],[[167,16]],[[180,16]],[[164,16]],[[165,16]],[[168,16]],[[160,16]],[[158,16]],[[173,16]],[[181,16]],[[182,16]],[[184,16]],[[161,16]],[[157,16]],[[162,16]],[[193,16]],[[166,16]],[[175,16]],[[177,16]],[[195,16]],[[163,16]],[[196,16]],[[197,16]],[[198,16]],[158,213],0,0,[158,2],[[161,161]],[[157,157]],[[162,162]],[[161,161],161],[[157,157],157],[[162,162],162],[[161,161],1],[[157,157],1],[[162,162],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[188,202],[175,208],[177,214],[197,196],[161,1],[157,1],[162,1],[161,1],[157,1],[162,1],[164,1],[[],207],[[],207],[164,207],[165,207],[[6,2],4],0,0,0,0,0,0,0,0,[[[0,[18,19]]],[[4,[164]]]],[[40,40],168],[[28,28],160],[[40,40],173],[[209,[12,[209]]],185],[208,186],[[],194],[[57,57,57,57,213],177],[[213,213,213,213,213,213,213,213],195],[[57,57,57,57],163],[[196,213],197],[[[51,[57]]],[[4,[164]]]],[[28,28],166],[197,166],[[40,40],166],[[[0,[18,19]]],[[4,[166]]]],[[],164],[[57,57,57,57],196],[[213,213,213,213,213,213,213,213],196],[[40,40],166],[189,[[12,[190]]]],[[[201,[[0,[215,179]]]]],12],[202,12],[161,161],[157,157],[162,162],[163,[[159,[57]]]],[[161,161],[[12,[44]]]],[[157,157],[[12,[44]]]],[[162,162],[[12,[44]]]],[164,[[12,[216]]]],[164,2],[168,40],[194,83],[158,57],[173,40],[175,213],[177,213],[197,213],[[2,[12,[[110,[57]]]]],[[200,[[0,[215,179]]]]]],[158,213],[[6,[51,[57]],162],[[4,[2]]]],[[6,[51,[57]]],4],[[6,200,47,162,[12,[72]]],[[4,[201]]]],[[6,[51,[217]],[12,[[110,[57]]]],162],[[4,[[188,[179]]]]]],[[161,161]],[[157,157]],[[162,162]],0,0,0,[175,40],[195,[[159,[213]]]],[[6,[51,[57]],162],[[4,[2]]]],[[6,[200,[179]],47,[92,[[51,[[12,[179]]]]]],[92,[[51,[192]]]],162],[[4,[[201,[179]]]]]],[[6,[51,[50]],[51,[192]],162,[12,[179]]],[[4,[2]]]],[[6,[51,[57]],179,162],[[4,[2]]]],[6,4],[[161,161,1]],[[157,157,1]],[[162,162,1]],[[6,218],4],[[6,193],4],0,0,0,0,0,0,0,0,0,[[],207],[[],207],[[],207],0,0,0,0,[[180,2],[[4,[166]]]],0,[[198,183,157,[80,[[12,[184]]]]],[[4,[6]]]],[[198,183,[80,[[12,[184]]]],157],4],0,0,[[161,161],161],[[157,157],157],[[162,162],162],[[161,161]],[[157,157]],[[162,162]],0,0,[[161,161],161],[[157,157],157],[[162,162],162],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[195,208],[163,209],[196,210],[197,204],[166,26],[197,26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[161,161]],[[157,157]],[[162,162]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[29,[[4,[183]]]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[194,219],[[161,161],161],[[157,157],157],[[162,162],162],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[220,220],[221,221],[222,222],[223,223],[224,224],[225,225],[226,226],[227,227],[228,228],[229,229],[230,230],[231,231],[232,232],[233,233],[234,234],[235,235],[236,236],[237,237],[238,238],[239,239],[240,240],[241,241],[242,242],[243,243],[244,244],[245,245],[246,246],[247,247],[248,248],[249,249],[250,250],[251,251],[252,252],[253,253],[254,254],[255,255],[256,256],[257,257],[258,258],[259,259],[260,260],[261,261],[262,262],[263,263],[264,264],[265,265],[266,266],[267,267],[268,268],[269,269],[270,270],[271,271],[272,272],[273,273],[274,274],[275,275],[276,276],[[[277,[187]]],[[277,[187]]]],[278,278],[279,279],[280,280],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],277],[[220,220],1],[[221,221],1],[[222,222],1],[[223,223],1],[[224,224],1],[[225,225],1],[[226,226],1],[[227,227],1],[[228,228],1],[[229,229],1],[[230,230],1],[[231,231],1],[[232,232],1],[[233,233],1],[[234,234],1],[[235,235],1],[[236,236],1],[[237,237],1],[[238,238],1],[[239,239],1],[[240,240],1],[[241,241],1],[[242,242],1],[[243,243],1],[[244,244],1],[[245,245],1],[[246,246],1],[[247,247],1],[[248,248],1],[[249,249],1],[[250,250],1],[[251,251],1],[[252,252],1],[[253,253],1],[[254,254],1],[[255,255],1],[[256,256],1],[[257,257],1],[[258,258],1],[[259,259],1],[[260,260],1],[[261,261],1],[[262,262],1],[[263,263],1],[[264,264],1],[[265,265],1],[[266,266],1],[[267,267],1],[[268,268],1],[[269,269],1],[[270,270],1],[[271,271],1],[[272,272],1],[[273,273],1],[[274,274],1],[[275,275],1],[[278,278],1],[[279,279],1],[[280,280],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[220,13],14],[[221,13],14],[[222,13],14],[[223,13],14],[[224,13],14],[[225,13],14],[[226,13],14],[[227,13],14],[[228,13],14],[[229,13],14],[[230,13],14],[[231,13],14],[[232,13],14],[[233,13],14],[[234,13],14],[[235,13],14],[[236,13],14],[[237,13],14],[[238,13],14],[[239,13],14],[[240,13],14],[[241,13],14],[[242,13],14],[[243,13],14],[[244,13],14],[[245,13],14],[[246,13],14],[[247,13],14],[[248,13],14],[[249,13],14],[[250,13],14],[[251,13],14],[[252,13],14],[[253,13],14],[[254,13],14],[[255,13],14],[[256,13],14],[[257,13],14],[[258,13],14],[[259,13],14],[[260,13],14],[[261,13],14],[[262,13],14],[[263,13],14],[[264,13],14],[[265,13],14],[[266,13],14],[[267,13],14],[[268,13],14],[[269,13],14],[[270,13],14],[[271,13],14],[[272,13],14],[[273,13],14],[[274,13],14],[[275,13],14],[[276,13],14],[[[277,[199]],13],14],[[278,13],14],[[279,13],14],[[280,13],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[220,6],[[4,[1]]]],[[221,6],[[4,[1]]]],[[222,6],[[4,[1]]]],[[223,6],[[4,[281]]]],[[226,6],[[4,[57]]]],[[227,6],[[4,[1]]]],[[228,6],[[4,[39]]]],[[229,6],[[4,[39]]]],[[230,6],[[4,[39]]]],[[231,6],[[4,[1]]]],[[232,6],[[4,[142]]]],[[233,6],[[4,[142]]]],[[234,6],[[4,[1]]]],[[235,6],[[4,[1]]]],[[236,6],[[4,[29]]]],[[237,6],[[4,[1]]]],[[238,6],[[4,[1]]]],[[239,6],[[4,[194]]]],[[240,6],[[4,[40]]]],[[241,6],[[4,[40]]]],[[242,6],[[4,[40]]]],[[243,6],[[4,[40]]]],[[244,6],[[4,[40]]]],[[245,6],[[4,[2]]]],[[246,6],[[4,[2]]]],[[249,6],[[4,[183]]]],[[250,6],[[4,[1]]]],[[251,6],[[4,[49]]]],[[252,6],[[4,[178]]]],[[253,6],[[4,[176]]]],[[254,6],[[4,[161]]]],[[255,6],[[4,[1]]]],[[256,6],[[4,[1]]]],[[257,6],[[4,[1]]]],[[258,6],[[4,[40]]]],[[259,6],[[4,[1]]]],[[260,6],[[4,[49]]]],[[261,6],[[4,[1]]]],[[262,6],[[4,[1]]]],[[263,6],[[4,[1]]]],[[264,6],[[4,[39]]]],[[265,6],[[4,[1]]]],[[266,6],[[4,[282]]]],[[267,6],[[4,[39]]]],[[268,6],[[4,[1]]]],[[269,6],[[4,[1]]]],[[270,6],[[4,[1]]]],[[271,6],[[4,[39]]]],[[272,6],[[4,[39]]]],[[273,6],[[4,[39]]]],[[274,6],[[4,[1]]]],[[275,6],[[4,[1]]]],[[278,6],[[4,[40]]]],[[220,16]],[[221,16]],[[222,16]],[[223,16]],[[224,16]],[[225,16]],[[226,16]],[[227,16]],[[228,16]],[[229,16]],[[230,16]],[[231,16]],[[232,16]],[[233,16]],[[234,16]],[[235,16]],[[236,16]],[[237,16]],[[238,16]],[[239,16]],[[240,16]],[[241,16]],[[242,16]],[[243,16]],[[244,16]],[[245,16]],[[246,16]],[[247,16]],[[248,16]],[[249,16]],[[250,16]],[[251,16]],[[252,16]],[[253,16]],[[254,16]],[[255,16]],[[256,16]],[[257,16]],[[258,16]],[[259,16]],[[260,16]],[[261,16]],[[262,16]],[[263,16]],[[264,16]],[[265,16]],[[266,16]],[[267,16]],[[268,16]],[[269,16]],[[270,16]],[[271,16]],[[272,16]],[[273,16]],[[274,16]],[[275,16]],[[278,16]],[[279,16]],[[280,16]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[220,6,1],4],[[221,6,1],4],[[222,6,1],4],[[223,6,281],4],[[224,6,185],4],[[225,6,185],4],[[226,6,57],4],[[227,6,1],4],[[228,6,39],4],[[229,6,39],4],[[230,6,39],4],[[231,6,1],4],[[232,6,142],4],[[233,6,142],4],[[234,6,1],4],[[235,6,1],4],[[237,6,1],4],[[238,6,1],4],[[240,6,40],4],[[241,6,40],4],[[242,6,40],4],[[243,6,40],4],[[244,6,40],4],[[245,6,2],4],[[246,6,2],4],[[247,6,2],4],[[248,6,2],4],[[251,6,49],4],[[254,6,161],4],[[255,6,1],4],[[256,6,1],4],[[257,6,1],4],[[258,6,40],4],[[259,6,1],4],[[260,6,49],4],[[261,6,1],4],[[262,6,1],4],[[263,6,1],4],[[264,6,39],4],[[265,6,1],4],[[266,6,282],4],[[267,6,39],4],[[268,6,1],4],[[269,6,1],4],[[270,6,1],4],[[272,6,39],4],[[273,6,39],4],[[274,6,1],4],[[275,6,1],4],[[276,6,2],4],[[[277,[[0,[[92,[[51,[57]]]],187]]]],6,[0,[[92,[[51,[57]]]],187]]],4],[[278,6,40],4],[[279,6,186],4],[[280,6,186],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],0,0,[[283,284],29],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],285],[[],21],[[285,285],285],[[21,21],21],[[285,285]],[[21,21]],[[285,285],285],[[21,21],21],[[285,285]],[[21,21]],[285,286],[21,286],[[285,285],285],[[21,21],21],[[285,285]],[[21,21]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[284,284],[285,285],[21,21],[287,287],[288,288],[[]],[[]],[[]],[[]],[[]],[[285,285],44],[[21,21],44],[285,285],[21,21],[[285,285],1],[[21,21],1],0,[[285,285],285],[[21,21],21],[[],285],[[],21],[[284,284],1],[[285,285],1],[[21,21],1],[[],1],[[],1],[[],1],[[285,47]],[[21,47]],[[6,21],4],[[[12,[6]],[0,[18,19]],21,287],4],[[284,13],[[22,[79]]]],[[285,13],14],[[285,13],14],[[285,13],14],[[285,13],14],[[285,13],14],[[21,13],14],[[21,13],14],[[21,13],14],[[21,13],14],[[21,13],14],[[287,13],14],[[288,13],14],[[]],[[]],[[]],[[]],[[]],[286,[[12,[285]]]],[286,[[12,[21]]]],[286,285],[286,21],[286,285],[286,21],[47,285],[47,21],[6,[[4,[284]]]],[[6,[0,[18,19]],33],[[4,[284]]]],[[6,72,72],4],[[284,16]],[[285,16]],[[21,16]],[[285,285]],[[21,21]],[[285,285],285],[[21,21],21],[[285,285],1],[[21,21],1],[[]],[[]],[[]],[[]],[[]],[285,1],[21,1],[285,1],[21,1],[[[0,[18,19]]],[[4,[284]]]],[[[0,[18,19]],142,142],4],[289,17],[[17,17],289],[289,17],[[6,[0,[18,19]],21],4],[[[0,[18,19]],285,21,289],4],[[6,[0,[18,19]],285,21,289],4],0,[285,285],[21,21],[[285,285],[[12,[44]]]],[[21,21],[[12,[44]]]],[[285,285]],[[21,21]],[[285,285,1]],[[21,21,1]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[0,[18,19]]],[[4,[284]]]],[[285,285],285],[[21,21],21],[[285,285]],[[21,21]],[[285,285],285],[[21,21],21],[[]],[[]],[[]],[[]],[[]],[[285,285]],[[21,21]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],23],[21,21],[[285,285],285],[[21,21],21],[[[12,[6]],[0,[18,19]],72,72,288],4],[[[0,[18,19]],142,142],4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[290,291],[290,17],[290,17],[290,17],[[]],[[]],[[]],[[]],[290,290],[292,292],[[]],[[]],[[292,292],1],[[],1],[290,17],[290,17],[290,293],[290,292],[290,294],[[290,13],14],[[292,13],14],[[]],[[]],0,[56,[[4,[290]]]],[[]],[[]],[290,291],[290,291],[[[0,[18,19]]],[[4,[290]]]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],294],[[294,294],294],[[294,294]],[[294,294],294],[[294,294]],[294,60],[[294,294],294],[[294,294]],[295,60],[295,296],[295,296],[295,296],[[]],[[]],[[]],[[]],[294,294],[295,295],[[]],[[]],[[294,294],44],[294,294],[[294,294],1],[[],294],[[294,294],294],[[],294],[[294,294],1],[[295,295],1],[[],1],[[],1],[[294,47]],[295,297],[295,297],[295,297],[295,60],[295,294],[[294,13],14],[[294,13],14],[[294,13],14],[[294,13],14],[[294,13],14],[[295,13],14],[295,60],[[]],[[]],[60,[[12,[294]]]],[60,294],[60,294],[47,294],[56,[[4,[295]]]],[[294,16]],[[295,16]],[[294,294]],[[294,294],294],[[294,294],1],[[]],[[]],[294,1],[294,1],[295,60],[294,294],[[294,294],[[12,[44]]]],[[294,294]],[[294,294,1]],[[[0,[18,19]]],[[4,[295]]]],[[294,294],294],[[294,294]],[[294,294],294],[[]],[[]],[[294,294]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[294,294],294],0,[[]],[[]],[298,298],[[]],[[298,298],1],[[],1],[[298,13],14],[[]],[[298,16]],[[]],[298],[298,213],[298,17],[298,17],[298,17],[298,17],[[],[[4,[298]]]],[[]],[[],22],[[],22],[[],23],[298,299],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],300],[[],301],[[],302],[[],303],[[300,300],300],[[301,301],301],[[302,302],302],[[303,303],303],[[300,300]],[[301,301]],[[302,302]],[[303,303]],[[300,300],300],[[301,301],301],[[302,302],302],[[303,303],303],[[300,300]],[[301,301]],[[302,302]],[[303,303]],[300,304],[301,304],[302,304],[303,304],[[300,300],300],[[301,301],301],[[302,302],302],[[303,303],303],[[300,300]],[[301,301]],[[302,302]],[[303,303]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[81,305],[81,305],[81],[[81,305],4],[[81,305],4],[[81,305],4],[81,81],[305,305],[306,306],[307,307],[308,308],[309,309],[300,300],[301,301],[302,302],[303,303],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[305,305],44],[[306,306],44],[[307,307],44],[[308,308],44],[[309,309],44],[[300,300],44],[[301,301],44],[[302,302],44],[[303,303],44],[300,300],[301,301],[302,302],[303,303],[[300,300],1],[[301,301],1],[[302,302],1],[[303,303],1],0,0,[[300,300],300],[[301,301],301],[[302,302],302],[[303,303],303],[[],300],[[],301],[[],302],[[],303],[[81,81],1],[[305,305],1],[[306,306],1],[[307,307],1],[[308,308],1],[[309,309],1],[[300,300],1],[[301,301],1],[[302,302],1],[[303,303],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[300,47]],[[301,47]],[[302,47]],[[303,47]],[[81,13],14],[[305,13],14],[[306,13],14],[[307,13],14],[[308,13],14],[[309,13],14],[[300,13],14],[[300,13],14],[[300,13],14],[[300,13],14],[[300,13],14],[[301,13],14],[[301,13],14],[[301,13],14],[[301,13],14],[[301,13],14],[[302,13],14],[[302,13],14],[[302,13],14],[[302,13],14],[[302,13],14],[[303,13],14],[[303,13],14],[[303,13],14],[[303,13],14],[[303,13],14],[[]],[310,81],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[304,[[12,[300]]]],[304,[[12,[301]]]],[304,[[12,[302]]]],[304,[[12,[303]]]],[304,300],[304,301],[304,302],[304,303],[304,300],[304,301],[304,302],[304,303],[47,300],[47,301],[47,302],[47,303],[[305,16]],[[306,16]],[[307,16]],[[308,16]],[[309,16]],[[300,16]],[[301,16]],[[302,16]],[[303,16]],0,[[300,300]],[[301,301]],[[302,302]],[[303,303]],[[300,300],300],[[301,301],301],[[302,302],302],[[303,303],303],[[300,300],1],[[301,301],1],[[302,302],1],[[303,303],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[300,1],[301,1],[302,1],[303,1],[300,1],[301,1],[302,1],[303,1],0,0,[300,300],[301,301],[302,302],[303,303],0,[[305,305],[[12,[44]]]],[[306,306],[[12,[44]]]],[[307,307],[[12,[44]]]],[[308,308],[[12,[44]]]],[[309,309],[[12,[44]]]],[[300,300],[[12,[44]]]],[[301,301],[[12,[44]]]],[[302,302],[[12,[44]]]],[[303,303],[[12,[44]]]],[[300,300]],[[301,301]],[[302,302]],[[303,303]],[[300,300,1]],[[301,301,1]],[[302,302,1]],[[303,303,1]],[[300,300],300],[[301,301],301],[[302,302],302],[[303,303],303],[[300,300]],[[301,301]],[[302,302]],[[303,303]],[[300,300],300],[[301,301],301],[[302,302],302],[[303,303],303],[6,4],[[6,308],4],[[6,307],4],[6,[[4,[81]]]],[6,[[4,[82]]]],[[6,39],4],[[6,306,81],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[300,300]],[[301,301]],[[302,302]],[[303,303]],[[],22],[[],22],[311,[[4,[305]]]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[300,300],300],[[301,301],301],[[302,302],302],[[303,303],303],0,0,0,[[72,72],72],[[142,142],142],[72,312],[142,313],[72,312],[142,313],[[]],[[]],[[]],[[]],[72,72],[142,142],[[]],[[]],[[72,72],44],[[142,142],44],[[72,29],72],[[142,29],142],[[72,72],1],[[142,142],1],[[],1],[[],1],[[72,13],14],[[72,13],14],[[142,13],14],[[142,13],14],[312,72],[299,72],[[]],[[]],[313,142],[299,72],[312,72],[[72,16]],[[142,16]],[314],[[]],[[]],[314],[314,72],[314,142],[314],[314,72],[314,142],[314],[[72,29],72],[[142,29],142],[314],[314,72],[314,142],[72,72],[142,142],[[315,127],72],[[315,316],142],[[],314],[[],314],[72,314],[142,314],[[],314],[72,314],[142,314],[[],314],[[],314],[72,314],[142,314],[[],314],[72,314],[142,314],[[72,72],[[12,[44]]]],[[142,142],[[12,[44]]]],[314],[314,72],[314,142],[[72,72],72],[[142,142],142],0,0,[[]],[[]],[[],26],[[],26],[[],22],[[],22],[[],22],[[],22],[72,127],[72,315],[142,315],[142,316],[[],23],[[],23],[[]],0,0,0,0,0,0,[[]],[[]],[317],[[317,13],14],[[]],[317,[[4,[[12,[318]]]]]],[[]],[[319,98],[[4,[317]]]],[317,29],[[317,318,320],4],[[],22],[[],22],[[],23],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],320],[[],321],[322,6],[[320,320],320],[[321,321],321],[[320,320]],[[321,321]],[[320,320],320],[[321,321],321],[[320,320]],[[321,321]],[320,39],[321,39],[[320,320],320],[[321,321],321],[[320,320]],[[321,321]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[318,318],[320,320],[323,323],[321,321],[[]],[[]],[[]],[[]],[[320,320],44],[[323,323],44],[[321,321],44],[320,320],[321,321],[[320,320],1],[[321,321],1],[[320,320],320],[[321,321],321],[322],[[],320],[[],321],[[318,318],1],[[320,320],1],[[323,323],1],[[321,321],1],[[],1],[[],1],[[],1],[[],1],[[320,47]],[[321,47]],[[318,13],14],[[320,13],14],[[320,13],14],[[320,13],14],[[320,13],14],[[320,13],14],[[322,13],14],[[323,13],14],[[321,13],14],[[321,13],14],[[321,13],14],[[321,13],14],[[321,13],14],[[]],[[]],[[]],[[]],[[]],[39,[[12,[320]]]],[39,[[12,[321]]]],[39,320],[39,321],[39,320],[39,321],[47,320],[47,321],[6,322],[322,[[4,[[12,[318]]]]]],[[320,16]],[[323,16]],[[321,16]],[[320,320]],[[321,321]],[[320,320],320],[[321,321],321],[[320,320],1],[[321,321],1],[[]],[[]],[[]],[[]],[[]],[320,1],[321,1],[320,1],[321,1],[[323,321],[[4,[322]]]],[320,320],[321,321],[[320,320],[[12,[44]]]],[[323,323],[[12,[44]]]],[[321,321],[[12,[44]]]],[[320,320]],[[321,321]],[[320,320,1]],[[322,318,320],4],[[321,321,1]],[[320,320],320],[[321,321],321],[[320,320]],[[321,321]],[[320,320],320],[[321,321],321],[[]],[[]],[[]],[[]],[[320,320]],[[321,321]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],23],[[320,320],320],[[321,321],321],[322,4],[322,4],0,0,[324,[[51,[57]]]],0,[[]],[[]],[[]],[[]],[325,325],[[[324,[187]]],[[324,[187]]]],[[]],[[]],[[325,325],1],[[[324,[31]],[324,[31]]],1],[[],1],[[],1],[[325,13],14],[[[324,[199]],13],14],[[]],[[]],[[[51,[57]]],[[324,[[51,[57]]]]]],[[[51,[57]]],[[324,[[51,[57]]]]]],[[325,16]],[[[324,[326]],16]],[[]],[[]],0,[[6,[51,[57]],48],[[4,[2]]]],[[6,[51,[217]],48],[[4,[2]]]],[[82,[51,[217]],[51,[325]]],[[4,[2]]]],[[82,[51,[50]],[51,[325]]],[[4,[2]]]],[[6,[51,[57]],48],[[4,[2]]]],[[6,[51,[50]],48],[[4,[2]]]],[[6,[51,[217]]],[[4,[2]]]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[6,[51,[50]]],[[4,[2]]]],0,[[]],[[]],[327,327],[[]],[327,328],[[327,327],1],[[],1],[[327,13],14],[[]],[[327,16]],[[]],[327,328],[327,328],[327,328],[327,328],[[]],[[],22],[[],22],[[],23],[[],[[4,[327]]]],[327,328],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],329],[[329,329],329],[[329,329]],[[329,329],329],[[329,329]],[329,39],[[329,329],329],[[329,329]],[[]],[[]],[[]],[[]],[[]],[[]],[329,329],[330,330],[331,331],[[]],[[]],[[]],[[329,329],44],[[331,331],44],[329,329],[[329,329],1],[[329,329],329],[[],329],[[329,329],1],[[330,330],1],[[331,331],1],[[],1],[[],1],[[],1],[[329,47]],[[329,13],14],[[329,13],14],[[329,13],14],[[329,13],14],[[329,13],14],[[330,13],14],[[331,13],14],[[]],[[]],[[]],[39,[[12,[329]]]],[39,329],[39,329],[47,329],[[82,29],[[4,[330]]]],[[329,16]],[[330,16]],[[331,16]],[[329,329]],[[329,329],329],[[329,329],1],[[]],[[]],[[]],[329,1],[329,1],[329,329],[[329,329],[[12,[44]]]],[[331,331],[[12,[44]]]],[330,[[12,[82]]]],[[329,329]],[[329,329,1]],[[329,329],329],[[329,329]],[[329,329],329],[[]],[[]],[[]],[[329,329]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[329,329],329],[[],[[4,[330]]]],[[331,329],[[4,[330]]]],[[[80,[[12,[82]]]],[12,[329]]],[[4,[330]]]],0,0,0,0,0,0,0,0,0,0,0,0,[319,332],[[]],[[]],[82,[[4,[319]]]],[319,[[4,[72]]]],[319,[[4,[72]]]],[[319,72],4],[319,319],[[]],[[319,319],44],[[319,319],1],[[],1],[[319,13],14],[[319,13],14],[[]],[332,319],[332,319],[[319,16]],[[]],[319,[[4,[72]]]],[[319,319],[[12,[44]]]],[82,[[4,[319]]]],[319,[[4,[72]]]],[[319,72],4],[[]],[[],26],[[],22],[[],22],[[],23],0,[[]],[[]],[333,333],[[]],[[333,333],1],[[],1],[[333,13],14],[[]],[[],[[4,[333]]]],[[333,16]],[[]],[333,4],[333,73],[333,73],[[]],[[],22],[[],22],[[],23],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[0,[18,19]],334],4],0,0,[[],334],[335,219],[336,212],[82,83],[[334,334],334],[[334,334]],[[334,334],334],[[334,334]],[334,39],[[334,334],334],[[334,334]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[18,19]]],4],[[[0,[18,19]],[12,[335]],[12,[336]]],4],[[[0,[18,19]]],4],[335,335],[336,336],[82,82],[337,337],[338,338],[339,339],[340,340],[341,341],[342,342],[343,343],[344,344],[345,345],[334,334],[346,346],[347,347],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6,4],[[82,82],44],[[334,334],44],[334,334],[[334,334],1],[[],335],[[],336],[[1,1],4],[[334,334],334],0,[6,[[4,[6]]]],[[6,6],[[4,[6]]]],[[6,6,20],[[4,[6]]]],[[[0,[18,19]],334],4],[[],335],[[],336],0,0,[[],334],[[335,335],1],[[336,336],1],[[82,82],1],[[342,342],1],[[343,343],1],[[344,344],1],[[345,345],1],[[334,334],1],[[346,346],1],[[347,347],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[11,[51,[[92,[11]]]]],[[4,[136]]]],[[11,[51,[[92,[11]]]],[51,[[92,[11]]]]],[[4,[136]]]],[[6,11,[51,[[92,[11]]]],[51,[[92,[11]]]],33],[[4,[136]]]],[[11,[51,[[92,[11]]]]],[[4,[136]]]],[[11,[51,[[92,[11]]]],[51,[[92,[11]]]]],[[4,[136]]]],[[334,47]],[[[12,[6]],[0,[18,19]],334,33],4],[6,4],[[6,[12,[335]],[12,[336]]],4],[[[12,[6]],[0,[18,19]],[12,[335]],[12,[336]],338],4],[6,4],[[6,[51,[[92,[11]]]],[51,[[92,[11]]]]],[[4,[136]]]],[[335,13],14],[[335,13],14],[[336,13],14],[[336,13],14],[[82,13],14],[[82,13],14],[[337,13],14],[[338,13],14],[[339,13],14],[[340,13],14],[[341,13],14],[[342,13],14],[[343,13],14],[[344,13],14],[[345,13],14],[[334,13],14],[[334,13],14],[[334,13],14],[[334,13],14],[[334,13],14],[[346,13],14],[[347,13],14],[[],[[4,[337]]]],[[6,342],[[4,[[12,[127]]]]]],[219,335],[[]],[212,336],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[348,346],[[]],[349,347],[[]],[39,[[12,[334]]]],[39,334],[39,334],[336,[[4,[[12,[347]]]]]],[47,334],[28,[[4,[[12,[346]]]]]],[28,[[4,[[12,[347]]]]]],[219,335],[212,336],[83,82],[335,[[4,[[12,[346]]]]]],[6,4],[[6,48],4],0,[[],[[4,[350]]]],[[],336],[[],335],[[],336],[[11,336],[[4,[[110,[336]]]]]],[[],[[4,[[110,[336]]]]]],[[],[[4,[49]]]],[[[12,[82]]],[[4,[82]]]],[[],82],[[],82],[[],82],[[],[[4,[345]]]],[[],[[4,[344]]]],[[[12,[82]]],[[4,[82]]]],[[],82],[[],335],0,0,[[335,16]],[[336,16]],[[82,16]],[[342,16]],[[343,16]],[[334,16]],[[11,336],4],[[334,334]],[[334,334],334],[[334,334],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[334,1],[337,1],[334,1],[337,1],[335,1],[6,[[4,[1]]]],[[[12,[6]],[0,[18,19]],[12,[6]],[0,[18,19]],340],4],[[6,48,339],[[4,[48]]]],[[6,145,339],[[4,[145]]]],0,[[[0,[18,19]],21],4],[[[0,[18,19]],21],4],[[[12,[6]],[0,[18,19]],21],4],[[[0,[18,19]]],4],0,0,[334,334],[[],82],[[82,82],[[12,[44]]]],[[334,334],[[12,[44]]]],0,0,[[[0,[18,19]],342],[[4,[[12,[127]]]]]],[[]],[[],[[22,[351]]]],[20,4],[[[0,[18,19]],[0,[18,19]]],4],[[6,[51,[57]]],[[4,[2]]]],0,0,[[334,334]],0,0,[[334,334,1]],[336,4],[335,4],[336,336],[335,335],[336,4],[[[51,[336]]],4],[[[92,[328]]],4],[[82,82],4],[[336,336,336],4],[[335,335,335],4],[[],[[4,[82]]]],[335,4],0,[41,41],[[334,334],334],[[334,334]],[[[0,[18,19]],[12,[6]],[0,[18,19]]],4],[[334,334],334],[[]],[6,4],[343,[[4,[[12,[127]]]]]],[39,[[4,[82]]]],[[39,82],4],[[],82],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],26],[[],26],[[],26],[[334,334]],[[[0,[18,19]],48],4],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[6,[[4,[350]]]],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],0,[[334,334],334],[[[0,[18,19]]],4],[[[12,[6]],[0,[18,19]],341],4],[[6,[51,[57]]],[[4,[2]]]],0,[[],4],[[[0,[18,19]]],4],[[],[[12,[41]]]],[41,[[12,[41]]]]],"c":[1459,3319,3430,3456,3459,3461,3463,3468,3479,3498,3549,3566,3571,3572,3573,3574,3577,4216,4273,4274,6575,6577,6595,6596],"p":[[15,"bool"],[15,"usize"],[8,"FnOnce"],[6,"Result"],[3,"Dir"],[6,"RawFd"],[3,"OwningIter"],[3,"Entry"],[4,"Type"],[3,"Iter"],[3,"CStr"],[4,"Option"],[3,"Formatter"],[6,"Result"],[8,"IntoRawFd"],[8,"Hasher"],[15,"u64"],[8,"Sized"],[8,"NixPath"],[3,"OFlag"],[3,"Mode"],[4,"Result"],[3,"TypeId"],[3,"ClearEnvError"],[3,"Demand"],[3,"String"],[4,"Errno"],[15,"str"],[15,"i32"],[8,"ErrnoSentinel"],[8,"PartialEq"],[3,"Error"],[3,"AtFlags"],[3,"RenameFlags"],[3,"SealFlag"],[3,"FdFlag"],[3,"SpliceFFlags"],[3,"FallocateFlags"],[6,"c_int"],[15,"u32"],[6,"c_uint"],[4,"FlockArg"],[4,"PosixFadviseAdvice"],[4,"Ordering"],[6,"loff_t"],[4,"FcntlArg"],[8,"IntoIterator"],[6,"off_t"],[3,"OsString"],[3,"IoSlice"],[15,"slice"],[3,"InterfaceAddress"],[3,"InterfaceAddressIterator"],[3,"ModuleInitFlags"],[3,"DeleteModuleFlags"],[8,"AsRawFd"],[15,"u8"],[3,"MsFlags"],[3,"MntFlags"],[6,"c_ulong"],[3,"MQ_OFlag"],[3,"MqAttr"],[6,"mq_attr_member_t"],[3,"MqdT"],[3,"InterfaceFlags"],[3,"Interfaces"],[3,"Interface"],[3,"InterfacesIter"],[3,"PollFd"],[3,"PollFlags"],[6,"c_short"],[3,"TimeSpec"],[3,"SigSet"],[3,"PtyMaster"],[3,"Winsize"],[3,"OpenptyResult"],[3,"ForkptyResult"],[6,"Result"],[3,"Error"],[8,"Into"],[3,"Termios"],[3,"Pid"],[6,"SessionId"],[3,"CloneFlags"],[6,"CloneCb"],[3,"CpuSet"],[4,"AioCancelStat"],[3,"Pin"],[3,"AioWrite"],[3,"AioRead"],[3,"AioFsync"],[8,"AsRef"],[3,"aiocb"],[4,"LioMode"],[4,"AioFsyncMode"],[8,"AsMut"],[4,"SigevNotify"],[3,"SigEvent"],[3,"EpollFlags"],[3,"EpollCreateFlags"],[4,"EpollOp"],[3,"EpollEvent"],[15,"isize"],[3,"EfdFlags"],[3,"Inotify"],[3,"AddWatchFlags"],[3,"WatchDescriptor"],[3,"InitFlags"],[3,"InotifyEvent"],[3,"Vec"],[3,"MemFdCreateFlag"],[3,"ProtFlags"],[3,"MapFlags"],[3,"MRemapFlags"],[3,"MsFlags"],[3,"MlockAllFlags"],[4,"MmapAdvise"],[4,"c_void"],[6,"size_t"],[3,"NonZeroUsize"],[3,"Persona"],[6,"Pthread"],[4,"Signal"],[3,"Options"],[4,"Request"],[4,"Event"],[6,"c_long"],[3,"user_regs_struct"],[3,"siginfo_t"],[6,"AddressType"],[3,"QuotaValidFlags"],[3,"Dqblk"],[4,"QuotaType"],[4,"QuotaFmt"],[4,"RebootMode"],[4,"Infallible"],[3,"Usage"],[3,"rusage"],[4,"Resource"],[4,"UsageWho"],[6,"rlim_t"],[3,"TimeVal"],[3,"FdSet"],[3,"Fds"],[6,"off64_t"],[3,"SaFlags"],[3,"sigevent"],[3,"sigset_t"],[3,"SignalIterator"],[4,"SigmaskHow"],[3,"SigSetIter"],[4,"SigHandler"],[3,"SigAction"],[3,"SfdFlags"],[3,"SignalFd"],[3,"siginfo"],[3,"SockFlag"],[3,"LinkAddr"],[15,"array"],[3,"AlgAddr"],[3,"TimestampingFlag"],[3,"MsgFlags"],[3,"Ipv4Addr"],[3,"UnixAddr"],[19,"SockaddrStorage"],[4,"SockAddr"],[3,"sockaddr_un"],[3,"NetlinkAddr"],[3,"sockaddr"],[3,"sockaddr_nl"],[3,"sockaddr_alg"],[3,"sockaddr_ll"],[3,"VsockAddr"],[3,"sockaddr_vm"],[3,"SockaddrIn6"],[3,"sockaddr_in6"],[3,"SockaddrIn"],[3,"sockaddr_in"],[8,"SockaddrLike"],[3,"sockaddr_storage"],[3,"msghdr"],[3,"cmsghdr"],[4,"SockType"],[4,"SockProtocol"],[3,"IpMembershipRequest"],[3,"Ipv6MembershipRequest"],[8,"Clone"],[3,"RecvMsg"],[3,"CmsgIterator"],[4,"ControlMessageOwned"],[3,"Timestamps"],[4,"ControlMessage"],[4,"Shutdown"],[3,"UnixCredentials"],[3,"Ipv6Addr"],[4,"IpAddr"],[4,"InetAddr"],[4,"AddressFamily"],[8,"Debug"],[3,"MultiHeaders"],[3,"MultiResults"],[3,"IoSliceIterator"],[3,"SocketAddrV6"],[4,"SocketAddr"],[3,"SocketAddrV4"],[3,"ucred"],[6,"socklen_t"],[3,"Ipv6Addr"],[3,"Ipv4Addr"],[4,"IpAddr"],[8,"GetSockOpt"],[6,"gid_t"],[15,"u16"],[6,"in_addr_t"],[8,"Copy"],[3,"Path"],[3,"IoSliceMut"],[8,"SetSockOpt"],[6,"uid_t"],[3,"ReuseAddr"],[3,"ReusePort"],[3,"TcpNoDelay"],[3,"Linger"],[3,"IpAddMembership"],[3,"IpDropMembership"],[3,"IpMulticastTtl"],[3,"IpMulticastLoop"],[3,"Priority"],[3,"IpTos"],[3,"Ipv6TClass"],[3,"IpFreebind"],[3,"ReceiveTimeout"],[3,"SendTimeout"],[3,"Broadcast"],[3,"OobInline"],[3,"SocketError"],[3,"DontRoute"],[3,"KeepAlive"],[3,"PeerCredentials"],[3,"TcpKeepIdle"],[3,"TcpKeepCount"],[3,"TcpRepair"],[3,"TcpKeepInterval"],[3,"TcpUserTimeout"],[3,"RcvBuf"],[3,"SndBuf"],[3,"RcvBufForce"],[3,"SndBufForce"],[3,"SockType"],[3,"AcceptConn"],[3,"BindToDevice"],[3,"OriginalDst"],[3,"Ip6tOriginalDst"],[3,"Timestamping"],[3,"ReceiveTimestamp"],[3,"ReceiveTimestampns"],[3,"IpTransparent"],[3,"Mark"],[3,"PassCred"],[3,"TcpCongestion"],[3,"Ipv4PacketInfo"],[3,"Ipv6RecvPacketInfo"],[3,"Ipv4OrigDstAddr"],[3,"UdpGsoSegment"],[3,"UdpGroSegment"],[3,"TxTime"],[3,"RxqOvfl"],[3,"Ipv6V6Only"],[3,"Ipv4RecvErr"],[3,"Ipv6RecvErr"],[3,"IpMtu"],[3,"Ipv4Ttl"],[3,"Ipv6Ttl"],[3,"Ipv6OrigDstAddr"],[3,"Ipv6DontFrag"],[3,"AlgSetAeadAuthSize"],[3,"AlgSetKey"],[3,"TcpMaxSeg"],[3,"Ipv6AddMembership"],[3,"Ipv6DropMembership"],[3,"linger"],[3,"sock_txtime"],[15,"i8"],[3,"FileStat"],[3,"SFlag"],[6,"mode_t"],[4,"FchmodatFlags"],[4,"UtimensatFlags"],[6,"dev_t"],[3,"Statfs"],[6,"__fsword_t"],[3,"FsType"],[6,"fsid_t"],[3,"FsFlags"],[3,"Statvfs"],[6,"fsblkcnt_t"],[6,"fsfilcnt_t"],[3,"SysInfo"],[3,"Duration"],[3,"InputFlags"],[3,"OutputFlags"],[3,"ControlFlags"],[3,"LocalFlags"],[6,"tcflag_t"],[4,"BaudRate"],[4,"SetArg"],[4,"FlushArg"],[4,"FlowArg"],[4,"SpecialCharacterIndices"],[3,"termios"],[6,"speed_t"],[3,"timespec"],[3,"timeval"],[15,"i64"],[6,"time_t"],[6,"suseconds_t"],[3,"Timer"],[4,"Expiration"],[3,"ClockId"],[3,"TimerSetTimeFlags"],[3,"TimerFlags"],[3,"TimerFd"],[4,"ClockId"],[3,"IoVec"],[3,"RemoteIoVec"],[8,"Hash"],[3,"UtsName"],[3,"OsStr"],[3,"WaitPidFlag"],[4,"WaitStatus"],[4,"Id"],[6,"clockid_t"],[3,"UContext"],[3,"AccessFlags"],[3,"Uid"],[3,"Gid"],[4,"ForkResult"],[4,"FchownatFlags"],[4,"Whence"],[4,"LinkatFlags"],[4,"UnlinkatFlags"],[4,"PathconfVar"],[4,"SysconfVar"],[3,"ResUid"],[3,"ResGid"],[3,"User"],[3,"Group"],[3,"passwd"],[3,"group"],[3,"PathBuf"],[6,"Error"],[8,"Aio"],[13,"SigevSignal"],[13,"SigevThreadId"],[8,"TimeValLike"],[13,"Parent"]],"a":{"fdopendir":[95],"getegid":[7077],"geteuid":[7076],"getgid":[7068],"getpid":[7270],"getppid":[7230],"getuid":[7067],"sigaddset":[3089],"sigdelset":[3251],"sigemptyset":[3123,3152],"sigfillset":[3091],"sigismember":[3149],"timer_create":[6408],"timer_getoverrun":[6409],"timer_gettime":[6406],"timer_settime":[6410],"timerfd_create":[6533],"timerfd_gettime":[6514],"timerfd_settime":[6542,6573]}},\
"nom":{"doc":"nom, eating data byte by byte","t":"DDIIIEENNIIQNIIIDIGNNIIIIDQQQQQDEINDIINIINILLLLKKALLLLLLLLLLLLLLLLLLAAALLLLAKKKLLLLLLAOOKKKKLLLLLLLLLLLLLLLLKLLLLLLLLLLLKKKKLLKKKKALLLLLLALKAKLLKLLLLLLKKLAKKLKKKKKKKKLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLFFAAFFFFFFIIFKFKAAFFFFFFFFFFFFFFFFFFFFFFFFFFFFAFFFFFFFAFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDFLLFFFFFFLFLFLFFFFFLFFFFFFFLLLFFNNNNNNNINNNNDENNNNNINNNNNNNNNNNNNNNNNNNNINNNNNNNNNNNNNNNNNNNDENLLKLLFLLLLLLLLLLLLLLMFLLLLFFLLLLLLFMLLLLLLLLLLLLKLLKLLLMLLLLFLLLLLLLLLLLLLLLLLLLLLAFFFFFFFFFFFFFFFFNENNLLLLALLLLLALLLLFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFIFFKFFFF","n":["And","AndThen","AsBytes","AsChar","Compare","CompareResult","Err","Error","Error","ErrorConvert","ExtendInto","Extender","Failure","FindSubstring","FindToken","Finish","FlatMap","HexDisplay","IResult","Incomplete","Incomplete","InputIter","InputLength","InputTake","InputTakeAtPosition","Into","Item","Item","Item","Iter","IterElem","Map","Needed","Offset","Ok","Or","ParseTo","Parser","Size","Slice","ToUsize","Unknown","UnspecializedInput","and","and","and_then","and_then","as_bytes","as_char","bits","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","branch","bytes","character","clone","clone","clone_into","clone_into","combinator","compare","compare_no_case","convert","convert","eq","eq","eq","equivalent","equivalent","error","error_node_position","error_position","extend_into","find_substring","find_token","finish","finish","flat_map","flat_map","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","input_len","into","into","into","into","into","into","into","into","into","into","into","is_alpha","is_alphanum","is_dec_digit","is_hex_digit","is_incomplete","is_known","is_oct_digit","iter_elements","iter_indices","len","lib","map","map","map","map","map_input","map_input","multi","new","new_builder","number","offset","or","or","parse","parse","parse","parse","parse","parse","parse","parse_to","position","provide","sequence","slice","slice_index","source","split_at_position","split_at_position1","split_at_position1_complete","split_at_position_complete","take","take_split","to_hex","to_hex_from","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_usize","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","bits","bytes","complete","streaming","bool","tag","take","bool","tag","take","Alt","Permutation","alt","choice","permutation","permutation","complete","streaming","escaped","escaped_transform","is_a","is_not","tag","tag_no_case","take","take_till","take_till1","take_until","take_until1","take_while","take_while1","take_while_m_n","escaped","escaped_transform","is_a","is_not","tag","tag_no_case","take","take_till","take_till1","take_until","take_until1","take_while","take_while1","take_while_m_n","complete","is_alphabetic","is_alphanumeric","is_digit","is_hex_digit","is_newline","is_oct_digit","is_space","streaming","alpha0","alpha1","alphanumeric0","alphanumeric1","anychar","char","crlf","digit0","digit1","hex_digit0","hex_digit1","i128","i16","i32","i64","i8","line_ending","multispace0","multispace1","newline","none_of","not_line_ending","oct_digit0","oct_digit1","one_of","satisfy","space0","space1","tab","u128","u16","u32","u64","u8","alpha0","alpha1","alphanumeric0","alphanumeric1","anychar","char","crlf","digit0","digit1","hex_digit0","hex_digit1","i128","i16","i32","i64","i8","line_ending","multispace0","multispace1","newline","none_of","not_line_ending","oct_digit0","oct_digit1","one_of","satisfy","space0","space1","tab","u128","u16","u32","u64","u8","ParserIterator","all_consuming","borrow","borrow_mut","complete","cond","consumed","cut","eof","fail","finish","flat_map","from","into","into","iterator","map","map_opt","map_parser","map_res","next","not","opt","peek","recognize","rest","rest_len","success","try_from","try_into","type_id","value","verify","Alpha","AlphaNumeric","Alt","Char","Char","Complete","Context","ContextError","Count","CrLf","Digit","Eof","Error","ErrorKind","Escaped","EscapedTransform","Fail","Fix","Float","FromExternalError","HexDigit","IsA","IsNot","LengthValue","LengthValueFn","Many0","Many0Count","Many1","Many1Count","ManyMN","ManyTill","MapOpt","MapRes","MultiSpace","Nom","NonEmpty","NoneOf","Not","OctDigit","OneOf","ParseError","Permutation","RegexpCapture","RegexpCaptures","RegexpFind","RegexpMatch","RegexpMatches","Satisfy","SeparatedList","SeparatedNonEmptyList","Space","Switch","Tag","TagBits","TagClosure","TakeTill1","TakeUntil","TakeWhile1","TakeWhileMN","TooLarge","VerboseError","VerboseErrorKind","Verify","add_context","add_context","append","append","append","append_error","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","code","context","convert","convert","convert","convert","convert_error","dbg_dmp","description","eq","eq","eq","eq","equivalent","error_to_u32","errors","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_char","from_char","from_error_kind","from_error_kind","from_error_kind","from_external_error","from_external_error","from_external_error","hash","input","into","into","into","into","make_error","new","or","provide","provide","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","std","count","fill","fold_many0","fold_many1","fold_many_m_n","length_count","length_data","length_value","many0","many0_count","many1","many1_count","many_m_n","many_till","separated_list0","separated_list1","Big","Endianness","Little","Native","borrow","borrow_mut","clone","clone_into","complete","eq","equivalent","fmt","from","into","streaming","to_owned","try_from","try_into","type_id","be_f32","be_f64","be_i128","be_i16","be_i24","be_i32","be_i64","be_i8","be_u128","be_u16","be_u24","be_u32","be_u64","be_u8","double","f32","f64","float","hex_u32","i128","i16","i24","i32","i64","i8","le_f32","le_f64","le_i128","le_i16","le_i24","le_i32","le_i64","le_i8","le_u128","le_u16","le_u24","le_u32","le_u64","le_u8","recognize_float","recognize_float_parts","u128","u16","u24","u32","u64","u8","be_f32","be_f64","be_i128","be_i16","be_i24","be_i32","be_i64","be_i8","be_u128","be_u16","be_u24","be_u32","be_u64","be_u8","double","f32","f64","float","hex_u32","i128","i16","i24","i32","i64","i8","le_f32","le_f64","le_i128","le_i16","le_i24","le_i32","le_i64","le_i8","le_u128","le_u16","le_u24","le_u32","le_u64","le_u8","recognize_float","recognize_float_parts","u128","u16","u24","u32","u64","u8","Tuple","delimited","pair","parse","preceded","separated_pair","terminated","tuple"],"q":[[0,"nom"],[201,"nom::bits"],[205,"nom::bits::complete"],[208,"nom::bits::streaming"],[211,"nom::branch"],[217,"nom::bytes"],[219,"nom::bytes::complete"],[233,"nom::bytes::streaming"],[247,"nom::character"],[256,"nom::character::complete"],[290,"nom::character::streaming"],[324,"nom::combinator"],[357,"nom::error"],[502,"nom::lib"],[503,"nom::multi"],[519,"nom::number"],[538,"nom::number::complete"],[585,"nom::number::streaming"],[632,"nom::sequence"]],"d":["Implementation of <code>Parser::and</code>","Implementation of <code>Parser::and_then</code>","Helper trait for types that can be viewed as a byte slice","Transforms common types to a char for basic token parsing","Abstracts comparison operations","Indicates whether a comparison was successful, an error, or","The <code>Err</code> enum indicates the parser was not successful","The parser had an error (recoverable)","Comparison failed","Equivalent From implementation to avoid orphan rules in …","Abstracts something which can extend an <code>Extend</code>. Used to …","The type that will be produced","The parser had an unrecoverable error: we got to the right …","Look for a substring in self","Look for a token in self","Helper trait to convert a parser’s result to a more …","Implementation of <code>Parser::flat_map</code>","Helper trait to show a byte slice as a hex dump","Holds the result of parsing functions","There was not enough data","We need more data to be sure","Abstracts common iteration operations on the input type","Abstract method to calculate the input length","Abstracts slicing operations","Methods to take as much input as possible until the …","Implementation of <code>Parser::into</code>","The current input type is a sequence of that <code>Item</code> type.","The current input type is a sequence of that <code>Item</code> type.","The current input type is a sequence of that <code>Item</code> type.","An iterator over the input type, producing the item and …","An iterator over the input type, producing the item","Implementation of <code>Parser::map</code>","Contains information on needed data if a parser returned …","Useful functions to calculate the offset between slices …","Comparison was successful","Implementation of <code>Parser::or</code>","Used to integrate <code>str</code>’s <code>parse()</code> method","All nom parsers implement this trait","Contains the required data size in bytes","Slicing operations using ranges.","Helper trait to convert numbers to usize.","Needs more data, but we do not know how much","Dummy trait used for default implementations (currently …","Applies a second parser after the first one, return their …","Applies a second parser after the first one, return their …","Applies a second parser over the output of the first one","Applies a second parser over the output of the first one","Casts the input type to a byte slice","makes a char from self","Bit level parsers","","","","","","","","","","","","","","","","","","","Choice combinators","Parsers recognizing bytes streams","Character specific parsers and combinators","","","","","General purpose combinators","Compares self to another value for equality","Compares self to another value for equality independently …","Transform to another error type","Automatically converts between errors if the underlying …","","","","","","Error management","Creates a parse error from a <code>nom::ErrorKind</code>, the position …","Creates a parse error from a <code>nom::ErrorKind</code> and the …","Accumulate the input into an accumulator","Returns the byte position of the substring if it is found","Returns true if self contains the token","converts the parser’s result to a type that is more …","","Creates a second parser from the output of the first one, …","Creates a second parser from the output of the first one, …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calculates the input length, as indicated by its name, and …","automatically converts the parser’s output and error …","automatically converts the parser’s output and error …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Tests that self is an alphabetic character","Tests that self is an alphabetic character or a decimal …","Tests that self is a decimal digit","Tests that self is an hex digit","Tests if the result is Incomplete","Indicates if we know how many bytes we need","Tests that self is an octal digit","Returns an iterator over the elements","Returns an iterator over the elements and their byte …","Gets the len in bytes for self","Lib module to re-export everything needed from <code>std</code> or <code>core</code>/…","Maps a function over the result of a parser","Maps a function over the result of a parser","Maps a <code>Needed</code> to <code>Needed</code> by applying a function to a …","Applies the given function to the inner error","Maps <code>Err&lt;(T, ErrorKind)&gt;</code> to <code>Err&lt;(U, ErrorKind)&gt;</code> with the …","Maps <code>Err&lt;error::Error&lt;T&gt;&gt;</code> to <code>Err&lt;error::Error&lt;U&gt;&gt;</code> with the …","Combinators applying their child parser multiple times","Creates <code>Needed</code> instance, returns <code>Needed::Unknown</code> if the …","Create a new <code>Extend</code> of the correct type","Parsers recognizing numbers","Offset between the first byte of self and the first byte …","Applies a second parser over the input if the first one …","Applies a second parser over the input if the first one …","A parser takes in input type, and returns a <code>Result</code> …","","","","","","","Succeeds if <code>parse()</code> succeeded. The byte slice …","Finds the byte position of the element","","Combinators applying parsers in sequence","Slices self according to the range argument","Get the byte offset from the element’s position in the …","","Looks for the first element of the input type for which …","Looks for the first element of the input type for which …","Looks for the first element of the input type for which …","Looks for the first element of the input type for which …","Returns a slice of <code>count</code> bytes. panics if count &gt; length","Split the stream at the <code>count</code> byte offset. panics if count …","Converts the value of <code>self</code> to a hex dump, returning the …","Converts the value of <code>self</code> to a hex dump beginning at <code>from</code> …","","Obtaining ownership","Obtaining ownership","Obtaining ownership","Obtaining ownership","","","converts self to usize","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts a byte-level input to a bit-level input, for …","Counterpart to <code>bits</code>, <code>bytes</code> transforms its bit stream input …","Bit level parsers","Bit level parsers","Parses one specific bit as a bool.","Generates a parser taking <code>count</code> bits and comparing them to …","Generates a parser taking <code>count</code> bits","Parses one specific bit as a bool.","Generates a parser taking <code>count</code> bits and comparing them to …","Generates a parser taking <code>count</code> bits","Helper trait for the alt() combinator.","Helper trait for the permutation() combinator.","Tests a list of parsers one by one until one succeeds.","Tests each parser in the tuple and returns the result of …","Applies a list of parsers in any order.","Tries to apply all parsers in the tuple in various orders …","Parsers recognizing bytes streams, complete input version","Parsers recognizing bytes streams, streaming version","Matches a byte string with escaped characters.","Matches a byte string with escaped characters.","Returns the longest slice of the matches the pattern.","Parse till certain characters are met.","Recognizes a pattern","Recognizes a case insensitive pattern.","Returns an input slice containing the first N input …","Returns the longest input slice (if any) till a predicate …","Returns the longest (at least 1) input slice till a …","Returns the input slice up to the first occurrence of the …","Returns the non empty input slice up to the first …","Returns the longest input slice (if any) that matches the …","Returns the longest (at least 1) input slice that matches …","Returns the longest (m &lt;= len &lt;= n) input slice  that …","Matches a byte string with escaped characters.","Matches a byte string with escaped characters.","Returns the longest slice of the matches the pattern.","Parse till certain characters are met.","Recognizes a pattern.","Recognizes a case insensitive pattern.","Returns an input slice containing the first N input …","Returns the longest input slice (if any) till a predicate …","Returns the longest (at least 1) input slice till a …","Returns the input slice up to the first occurrence of the …","Returns the non empty input slice up to the first …","Returns the longest input slice (if any) that matches the …","Returns the longest (at least 1) input slice that matches …","Returns the longest (m &lt;= len &lt;= n) input slice  that …","Character specific parsers and combinators, complete input …","Tests if byte is ASCII alphabetic: A-Z, a-z","Tests if byte is ASCII alphanumeric: A-Z, a-z, 0-9","Tests if byte is ASCII digit: 0-9","Tests if byte is ASCII hex digit: 0-9, A-F, a-f","Tests if byte is ASCII newline: \\\\n","Tests if byte is ASCII octal digit: 0-7","Tests if byte is ASCII space or tab","Character specific parsers and combinators, streaming …","Recognizes zero or more lowercase and uppercase ASCII …","Recognizes one or more lowercase and uppercase ASCII …","Recognizes zero or more ASCII numerical and alphabetic …","Recognizes one or more ASCII numerical and alphabetic …","Matches one byte as a character. Note that the input type …","Recognizes one character.","Recognizes the string “\\\\r\\\\n”.","Recognizes zero or more ASCII numerical characters: 0-9","Recognizes one or more ASCII numerical characters: 0-9","Recognizes zero or more ASCII hexadecimal numerical …","Recognizes one or more ASCII hexadecimal numerical …","will parse a number in text form to a number","will parse a number in text form to a number","will parse a number in text form to a number","will parse a number in text form to a number","will parse a number in text form to a number","Recognizes an end of line (both ‘\\\\n’ and ‘\\\\r\\\\n’).","Recognizes zero or more spaces, tabs, carriage returns and …","Recognizes one or more spaces, tabs, carriage returns and …","Matches a newline character ‘\\\\n’.","Recognizes a character that is not in the provided …","Recognizes a string of any char except ‘\\\\r\\\\n’ or ‘\\\\n…","Recognizes zero or more octal characters: 0-7","Recognizes one or more octal characters: 0-7","Recognizes one of the provided characters.","Recognizes one character and checks that it satisfies a …","Recognizes zero or more spaces and tabs.","Recognizes one or more spaces and tabs.","Matches a tab character ‘\\\\t’.","will parse a number in text form to a number","will parse a number in text form to a number","will parse a number in text form to a number","will parse a number in text form to a number","will parse a number in text form to a number","Recognizes zero or more lowercase and uppercase ASCII …","Recognizes one or more lowercase and uppercase ASCII …","Recognizes zero or more ASCII numerical and alphabetic …","Recognizes one or more ASCII numerical and alphabetic …","Matches one byte as a character. Note that the input type …","Recognizes one character.","Recognizes the string “\\\\r\\\\n”.","Recognizes zero or more ASCII numerical characters: 0-9","Recognizes one or more ASCII numerical characters: 0-9","Recognizes zero or more ASCII hexadecimal numerical …","Recognizes one or more ASCII hexadecimal numerical …","will parse a number in text form to a number","will parse a number in text form to a number","will parse a number in text form to a number","will parse a number in text form to a number","will parse a number in text form to a number","Recognizes an end of line (both ‘\\\\n’ and ‘\\\\r\\\\n’).","Recognizes zero or more spaces, tabs, carriage returns and …","Recognizes one or more spaces, tabs, carriage returns and …","Matches a newline character ‘\\\\n’.","Recognizes a character that is not in the provided …","Recognizes a string of any char except ‘\\\\r\\\\n’ or ‘\\\\n…","Recognizes zero or more octal characters: 0-7","Recognizes one or more octal characters: 0-7","Recognizes one of the provided characters.","Recognizes one character and checks that it satisfies a …","Recognizes zero or more spaces and tabs.","Recognizes one or more spaces and tabs.","Matches a tab character ‘\\\\t’.","will parse a number in text form to a number","will parse a number in text form to a number","will parse a number in text form to a number","will parse a number in text form to a number","will parse a number in text form to a number","Main structure associated to the iterator function.","Succeeds if all the input has been consumed by its child …","","","Transforms Incomplete into <code>Error</code>.","Calls the parser if the condition is met.","if the child parser was successful, return the consumed …","Transforms an <code>Err::Error</code> (recoverable) to <code>Err::Failure</code> …","returns its input if it is at the end of input data","A parser which always fails.","Returns the remaining input if parsing was successful, or …","Creates a new parser from the output of the first parser, …","Returns the argument unchanged.","automatically converts the child parser’s result to …","Calls <code>U::from(self)</code>.","Creates an iterator from input data and a parser.","Maps a function on the result of a parser.","Applies a function returning an <code>Option</code> over the result of …","Applies a parser over the result of another one.","Applies a function returning a <code>Result</code> over the result of a …","","Succeeds if the child parser returns an error.","Optional parser, will return <code>None</code> on <code>Err::Error</code>.","Tries to apply its parser without consuming the input.","If the child parser was successful, return the consumed …","Return the remaining input.","Return the length of the remaining input.","a parser which always succeeds with given value without …","","","","Returns the provided value if the child parser succeeds.","Returns the result of the child parser if it satisfies a …","","","","Indicates which character was expected by the <code>char</code> function","","","Static string added by the <code>context</code> function","This trait is required by the <code>context</code> combinator to add a …","","","","","default error type, only contains the error’ location …","Indicates which parser returned an error","","","","","","This trait is required by the <code>map_res</code> combinator to …","","","","","","","","","","","","","","","Error kind given by various nom parsers","","","","","","This trait must be implemented by the error type of a nom …","","","","","","","","","","","","","","","","","","","","This error type accumulates errors and their position when …","Error context for <code>VerboseError</code>","","Creates a new error from an input position, a static …","","Combines an existing error with a new one created from the …","","","Combines an existing error with a new one created from the …","","","","","","","","","","","","","","","nom error code","Create a new error from an input position, a static string …","","","","","Transforms a <code>VerboseError</code> into a trace with input position …","Prints a message and the input if the parser fails.","Converts an ErrorKind to a text description","","","","","","Converts an ErrorKind to a number","List of errors accumulated by <code>VerboseError</code>, containing the …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates an error from an input position and an expected …","","Creates an error from the input position and an ErrorKind","","","Creates a new error from an input position, an ErrorKind …","Create a new error from an input position and an external …","Create a new error from an input position and an external …","","position of the error in the input data","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates an error from the input position and an ErrorKind","creates a new basic error","Combines two existing errors. This function is used to …","","","","","","","","","","","","","","","","","","","","internal std exports for no_std compatibility","Runs the embedded parser <code>count</code> times, gathering the …","Runs the embedded parser repeatedly, filling the given …","Repeats the embedded parser, calling <code>g</code> to gather the …","Repeats the embedded parser, calling <code>g</code> to gather the …","Repeats the embedded parser <code>m..=n</code> times, calling <code>g</code> to …","Gets a number from the first parser, then applies the …","Gets a number from the parser and returns a subslice of …","Gets a number from the first parser, takes a subslice of …","Repeats the embedded parser, gathering the results in a <code>Vec</code>…","Repeats the embedded parser, counting the results","Runs the embedded parser, gathering the results in a <code>Vec</code>.","Runs the embedded parser, counting the results.","Repeats the embedded parser <code>m..=n</code> times","Applies the parser <code>f</code> until the parser <code>g</code> produces a result.","Alternates between two parsers to produce a list of …","Alternates between two parsers to produce a list of …","Big endian","Configurable endianness","Little endian","Will match the host’s endianness","","","","","Parsers recognizing numbers, complete input version","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Parsers recognizing numbers, streaming version","","","","","Recognizes a big endian 4 bytes floating point number.","Recognizes a big endian 8 bytes floating point number.","Recognizes a big endian signed 16 bytes integer.","Recognizes a big endian signed 2 bytes integer.","Recognizes a big endian signed 3 bytes integer.","Recognizes a big endian signed 4 bytes integer.","Recognizes a big endian signed 8 bytes integer.","Recognizes a signed 1 byte integer.","Recognizes a big endian unsigned 16 bytes integer.","Recognizes a big endian unsigned 2 bytes integer.","Recognizes a big endian unsigned 3 byte integer.","Recognizes a big endian unsigned 4 bytes integer.","Recognizes a big endian unsigned 8 bytes integer.","Recognizes an unsigned 1 byte integer.","Recognizes floating point number in text format and …","Recognizes a 4 byte floating point number","Recognizes an 8 byte floating point number","Recognizes floating point number in text format and …","Recognizes a hex-encoded integer.","Recognizes a signed 16 byte integer","Recognizes a signed 2 byte integer","Recognizes a signed 3 byte integer","Recognizes a signed 4 byte integer","Recognizes a signed 8 byte integer","Recognizes a signed 1 byte integer","Recognizes a little endian 4 bytes floating point number.","Recognizes a little endian 8 bytes floating point number.","Recognizes a little endian signed 16 bytes integer.","Recognizes a little endian signed 2 bytes integer.","Recognizes a little endian signed 3 bytes integer.","Recognizes a little endian signed 4 bytes integer.","Recognizes a little endian signed 8 bytes integer.","Recognizes a signed 1 byte integer.","Recognizes a little endian unsigned 16 bytes integer.","Recognizes a little endian unsigned 2 bytes integer.","Recognizes a little endian unsigned 3 byte integer.","Recognizes a little endian unsigned 4 bytes integer.","Recognizes a little endian unsigned 8 bytes integer.","Recognizes an unsigned 1 byte integer.","Recognizes floating point number in a byte string and …","Recognizes a floating point number in text format","Recognizes an unsigned 16 byte integer","Recognizes an unsigned 2 bytes integer","Recognizes an unsigned 3 byte integer","Recognizes an unsigned 4 byte integer","Recognizes an unsigned 8 byte integer","Recognizes an unsigned 1 byte integer","Recognizes a big endian 4 bytes floating point number.","Recognizes a big endian 8 bytes floating point number.","Recognizes a big endian signed 16 bytes integer.","Recognizes a big endian signed 2 bytes integer.","Recognizes a big endian signed 3 bytes integer.","Recognizes a big endian signed 4 bytes integer.","Recognizes a big endian signed 8 bytes integer.","Recognizes a signed 1 byte integer.","Recognizes a big endian unsigned 16 bytes integer.","Recognizes a big endian unsigned 2 bytes integer.","Recognizes a big endian unsigned 3 byte integer.","Recognizes a big endian unsigned 4 bytes integer.","Recognizes a big endian unsigned 8 bytes integer.","Recognizes an unsigned 1 byte integer.","Recognizes floating point number in text format and …","Recognizes a 4 byte floating point number","Recognizes an 8 byte floating point number","Recognizes floating point number in text format and …","Recognizes a hex-encoded integer.","Recognizes a signed 16 byte integer","Recognizes a signed 2 byte integer","Recognizes a signed 3 byte integer","Recognizes a signed 4 byte integer","Recognizes a signed 8 byte integer","Recognizes a signed 1 byte integer","Recognizes a little endian 4 bytes floating point number.","Recognizes a little endian 8 bytes floating point number.","Recognizes a little endian signed 16 bytes integer.","Recognizes a little endian signed 2 bytes integer.","Recognizes a little endian signed 3 bytes integer.","Recognizes a little endian signed 4 bytes integer.","Recognizes a little endian signed 8 bytes integer.","Recognizes a signed 1 byte integer.","Recognizes a little endian unsigned 16 bytes integer.","Recognizes a little endian unsigned 2 bytes integer.","Recognizes a little endian unsigned 3 bytes integer.","Recognizes a little endian unsigned 4 bytes integer.","Recognizes a little endian unsigned 8 bytes integer.","Recognizes an unsigned 1 byte integer.","Recognizes a floating point number in text format and …","Recognizes a floating point number in text format","Recognizes an unsigned 16 byte integer","Recognizes an unsigned 2 bytes integer","Recognizes an unsigned 3 byte integer","Recognizes an unsigned 4 byte integer","Recognizes an unsigned 8 byte integer","Recognizes an unsigned 1 byte integer","Helper trait for the tuple combinator.","Matches an object from the first parser and discards it, …","Gets an object from the first parser, then gets another …","Parses the input and returns a tuple of results of each …","Matches an object from the first parser and discards it, …","Gets an object from the first parser, then matches an …","Gets an object from the first parser, then matches an …","Applies a tuple of parsers one by one and returns their …"],"i":[0,0,0,0,0,0,0,10,11,0,0,52,10,0,0,0,0,0,0,10,11,0,0,0,0,0,51,50,52,51,51,0,0,0,11,0,0,0,8,0,0,8,0,2,2,2,2,80,82,0,26,20,4,3,29,24,8,10,11,26,20,4,3,29,24,8,10,11,0,0,0,8,10,8,10,0,55,55,40,10,8,10,11,8,10,0,0,0,52,83,53,84,18,2,2,8,10,10,11,26,20,4,3,29,24,8,10,11,48,2,2,26,20,4,3,29,24,8,10,11,82,82,82,82,10,8,82,51,51,82,0,2,2,8,10,10,10,0,8,52,0,47,2,2,2,26,20,4,3,29,24,79,51,10,0,39,51,10,50,50,50,50,49,49,85,85,8,10,10,10,10,10,10,44,26,20,4,3,29,24,8,10,11,26,20,4,3,29,24,8,10,11,26,20,4,3,29,24,8,10,11,0,0,0,0,0,0,0,0,0,0,0,0,0,45,0,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,66,66,0,0,0,0,0,0,66,0,66,0,66,0,0,0,0,0,66,0,0,0,0,0,0,0,66,66,66,0,0,33,33,33,71,33,33,71,0,33,33,33,33,0,0,33,33,33,33,33,0,33,33,33,33,33,33,33,33,33,33,33,33,33,33,71,33,33,33,33,33,0,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,0,0,33,72,70,30,28,70,0,28,70,71,33,28,70,71,33,70,71,33,70,71,33,28,0,28,28,70,70,0,0,33,28,70,71,33,33,0,70,28,28,70,70,71,33,28,70,71,33,30,70,30,28,70,68,28,70,33,28,28,70,71,33,0,28,30,28,70,70,71,33,28,70,28,70,71,33,28,70,71,33,28,70,71,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,0,76,76,76,76,76,76,0,76,76,76,76,76,0,76,76,76,76,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,81,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2],[[3,[1,2]]]],[[1,2],[[3,[1,2]]]],[[1,2],[[4,[1,2]]]],[[1,2],[[4,[1,2]]]],[[],[[6,[5]]]],[[],7],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[8,8],[[[10,[9]]],[[10,[9]]]],[[]],[[]],0,[[],11],[[],11],[[]],[10,[[10,[12]]]],[[8,8],13],[[[10,[14]],[10,[14]]],13],[[11,11],13],[[],13],[[],13],0,0,0,[[]],[[],[[16,[15]]]],[[],13],[[],17],[18,17],[[1,19],[[20,[1,19]]]],[[1,19],[[20,[1,19]]]],[[8,21],22],[[[10,[23]],21],22],[[[10,[23]],21],22],[[11,21],22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],15],[1,[[24,[1,12,12]]]],[1,[[24,[1,12,12]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[10,13],[8,13],[[],13],[[]],[[]],[[],15],0,[[1,25],[[26,[1,25]]]],[[1,25],[[26,[1,25]]]],[[8,25],8],[[10,27],10],[[10,27],10],[[[10,[28]],27],[[10,[28]]]],0,[15,8],[[]],0,[[],15],[[1,2],[[29,[1,2]]]],[[1,2],[[29,[1,2]]]],[[],18],[[[26,[2,25]]],18],[[[20,[2,25]]],18],[[[4,[2,2]]],18],[[[3,[2,2]]],18],[[[29,[[2,[9,[30,[9]]]],[2,[9,[30,[9]]]]]],9],[[18,[9,[30,[9]]]]]],[[[24,[[2,[9]],12,[0,[[30,[9]],12]]]],9],[[18,[9,12,[0,[[30,[9]],12]]]]]],[[],16],[25,[[16,[15]]]],[31],0,[[]],[15,[[17,[15,8]]]],[[[10,[23]]],[[16,[32]]]],[25,[[18,[30]]]],[[25,33],[[18,[30]]]],[[25,33],[[18,[30]]]],[25,[[18,[30]]]],[15],[15],[15,34],[[15,15],34],[[]],[[[10,[[28,[[6,[5]]]]]]],[[10,[[28,[[35,[5]]]]]]]],[10,10],[10,10],[[[10,[[28,[36]]]]],[[10,[[28,[34]]]]]],[[]],[[],34],[[],15],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[[2,[[0,[30,[40,[[30,[[39,[[38,[15]]]]]]]]]]]]],19],[[[2,[[0,[[39,[[38,[15]]]],9]],[0,[[30,[[0,[[39,[[38,[15]]]],9]]]],[40,[30]]]]]]],19],0,0,[[],[[18,[13,30]]]],[[[0,[[12,[5]],41,[42,[15]],[43,[15]],14]],44],25],[44,25],[[],[[18,[13,30]]]],[[[0,[[12,[5]],41,[42,[15]],[43,[15]],14]],44],25],[44,25],0,0,[[[45,[9,[30,[9]]]]],19],[[],18],[[[46,[9,[30,[9]]]]],19],[[],18],0,0,[[[2,[[0,[9,47,48,49,50,[39,[[38,[15]]]],51]],[30,[[0,[9,47,48,49,50,[39,[[38,[15]]]],51]]]]]],7,[2,[[0,[9,47,48,49,50,[39,[[38,[15]]]],51]],[30,[[0,[9,47,48,49,50,[39,[[38,[15]]]],51]]]]]]],19],[[[2,[[0,[9,47,48,49,50,[39,[[38,[15]]]],51,52]],52,[30,[[0,[9,47,48,49,50,[39,[[38,[15]]]],51,52]]]]]],7,[2,[[0,[9,47,48,49,50,[39,[[38,[15]]]],51,52]],52,[30,[[0,[9,47,48,49,50,[39,[[38,[15]]]],51,52]]]]]]],19],[53,25],[53,25],[[[0,[48,9]]],25],[[[0,[48,9]]],25],[44,25],[25,25],[25,25],[[[0,[48,9]]],25],[[[0,[48,9]]],25],[25,25],[25,25],[[15,15,25],25],[[[2,[[0,[9,47,48,49,50,[39,[[38,[15]]]],51]],[30,[[0,[9,47,48,49,50,[39,[[38,[15]]]],51]]]]]],7,[2,[[0,[9,47,48,49,50,[39,[[38,[15]]]],51]],[30,[[0,[9,47,48,49,50,[39,[[38,[15]]]],51]]]]]]],19],[[[2,[[0,[9,47,48,49,50,[39,[[38,[15]]]],51,52]],52,[30,[[0,[9,47,48,49,50,[39,[[38,[15]]]],51,52]]]]]],7,[2,[[0,[9,47,48,49,50,[39,[[38,[15]]]],51,52]],52,[30,[[0,[9,47,48,49,50,[39,[[38,[15]]]],51,52]]]]]]],19],[53,25],[53,25],[[[0,[48,9]]],25],[[[0,[48,9]]],25],[44,25],[25,25],[25,25],[9,25],[9,25],[25,25],[25,25],[[15,15,25],25],0,[5,13],[5,13],[5,13],[5,13],[5,13],[5,13],[5,13],0,[50,[[18,[50,50,[30,[50]]]]]],[50,[[18,[50,50,[30,[50]]]]]],[50,[[18,[50,50,[30,[50]]]]]],[50,[[18,[50,50,[30,[50]]]]]],[[[0,[51,48,[39,[[38,[15]]]]]]],[[18,[[0,[51,48,[39,[[38,[15]]]]]],7,[30,[[0,[51,48,[39,[[38,[15]]]]]]]]]]]],[7,25],[[[0,[[39,[[54,[15]]]],[39,[[38,[15]]]],51,[55,[36]]]]],[[18,[[0,[[39,[[54,[15]]]],[39,[[38,[15]]]],51,[55,[36]]]],[0,[[39,[[54,[15]]]],[39,[[38,[15]]]],51,[55,[36]]]],[30,[[0,[[39,[[54,[15]]]],[39,[[38,[15]]]],51,[55,[36]]]]]]]]]],[50,[[18,[50,50,[30,[50]]]]]],[50,[[18,[50,50,[30,[50]]]]]],[50,[[18,[50,50,[30,[50]]]]]],[50,[[18,[50,50,[30,[50]]]]]],[[[0,[51,[39,[[38,[15]]]],48,49,9,[55,[[6,[5]]]]]]],[[18,[[0,[51,[39,[[38,[15]]]],48,49,9,[55,[[6,[5]]]]]],56,[30,[[0,[51,[39,[[38,[15]]]],48,49,9,[55,[[6,[5]]]]]]]]]]]],[[[0,[51,[39,[[38,[15]]]],48,49,9,[55,[[6,[5]]]]]]],[[18,[[0,[51,[39,[[38,[15]]]],48,49,9,[55,[[6,[5]]]]]],57,[30,[[0,[51,[39,[[38,[15]]]],48,49,9,[55,[[6,[5]]]]]]]]]]]],[[[0,[51,[39,[[38,[15]]]],48,49,9,[55,[[6,[5]]]]]]],[[18,[[0,[51,[39,[[38,[15]]]],48,49,9,[55,[[6,[5]]]]]],58,[30,[[0,[51,[39,[[38,[15]]]],48,49,9,[55,[[6,[5]]]]]]]]]]]],[[[0,[51,[39,[[38,[15]]]],48,49,9,[55,[[6,[5]]]]]]],[[18,[[0,[51,[39,[[38,[15]]]],48,49,9,[55,[[6,[5]]]]]],59,[30,[[0,[51,[39,[[38,[15]]]],48,49,9,[55,[[6,[5]]]]]]]]]]]],[[[0,[51,[39,[[38,[15]]]],48,49,9,[55,[[6,[5]]]]]]],[[18,[[0,[51,[39,[[38,[15]]]],48,49,9,[55,[[6,[5]]]]]],60,[30,[[0,[51,[39,[[38,[15]]]],48,49,9,[55,[[6,[5]]]]]]]]]]]],[[[0,[[39,[[54,[15]]]],[39,[[38,[15]]]],[39,[[61,[15]]]],51,48,[55,[36]]]]],[[18,[[0,[[39,[[54,[15]]]],[39,[[38,[15]]]],[39,[[61,[15]]]],51,48,[55,[36]]]],[0,[[39,[[54,[15]]]],[39,[[38,[15]]]],[39,[[61,[15]]]],51,48,[55,[36]]]],[30,[[0,[[39,[[54,[15]]]],[39,[[38,[15]]]],[39,[[61,[15]]]],51,48,[55,[36]]]]]]]]]],[50,[[18,[50,50,[30,[50]]]]]],[50,[[18,[50,50,[30,[50]]]]]],[[[0,[[39,[[38,[15]]]],51]]],[[18,[[0,[[39,[[38,[15]]]],51]],7,[30,[[0,[[39,[[38,[15]]]],51]]]]]]]],[53,25],[[[0,[[39,[[54,[15]]]],[39,[[38,[15]]]],[39,[[61,[15]]]],51,48,[55,[36]]]]],[[18,[[0,[[39,[[54,[15]]]],[39,[[38,[15]]]],[39,[[61,[15]]]],51,48,[55,[36]]]],[0,[[39,[[54,[15]]]],[39,[[38,[15]]]],[39,[[61,[15]]]],51,48,[55,[36]]]],[30,[[0,[[39,[[54,[15]]]],[39,[[38,[15]]]],[39,[[61,[15]]]],51,48,[55,[36]]]]]]]]]],[50,[[18,[50,50,[30,[50]]]]]],[50,[[18,[50,50,[30,[50]]]]]],[53,25],[25,25],[50,[[18,[50,50,[30,[50]]]]]],[50,[[18,[50,50,[30,[50]]]]]],[[[0,[[39,[[38,[15]]]],51]]],[[18,[[0,[[39,[[38,[15]]]],51]],7,[30,[[0,[[39,[[38,[15]]]],51]]]]]]]],[[[0,[51,[39,[[38,[15]]]],48]]],[[18,[[0,[51,[39,[[38,[15]]]],48]],62,[30,[[0,[51,[39,[[38,[15]]]],48]]]]]]]],[[[0,[51,[39,[[38,[15]]]],48]]],[[18,[[0,[51,[39,[[38,[15]]]],48]],63,[30,[[0,[51,[39,[[38,[15]]]],48]]]]]]]],[[[0,[51,[39,[[38,[15]]]],48]]],[[18,[[0,[51,[39,[[38,[15]]]],48]],64,[30,[[0,[51,[39,[[38,[15]]]],48]]]]]]]],[[[0,[51,[39,[[38,[15]]]],48]]],[[18,[[0,[51,[39,[[38,[15]]]],48]],65,[30,[[0,[51,[39,[[38,[15]]]],48]]]]]]]],[[[0,[51,[39,[[38,[15]]]],48]]],[[18,[[0,[51,[39,[[38,[15]]]],48]],5,[30,[[0,[51,[39,[[38,[15]]]],48]]]]]]]],[50,[[18,[50,50,[30,[50]]]]]],[50,[[18,[50,50,[30,[50]]]]]],[50,[[18,[50,50,[30,[50]]]]]],[50,[[18,[50,50,[30,[50]]]]]],[[[0,[51,48,[39,[[38,[15]]]]]]],[[18,[[0,[51,48,[39,[[38,[15]]]]]],7,[30,[[0,[51,48,[39,[[38,[15]]]]]]]]]]]],[7,25],[[[0,[[39,[[54,[15]]]],[39,[[38,[15]]]],[39,[[61,[15]]]],51,[55,[36]]]]],[[18,[[0,[[39,[[54,[15]]]],[39,[[38,[15]]]],[39,[[61,[15]]]],51,[55,[36]]]],[0,[[39,[[54,[15]]]],[39,[[38,[15]]]],[39,[[61,[15]]]],51,[55,[36]]]],[30,[[0,[[39,[[54,[15]]]],[39,[[38,[15]]]],[39,[[61,[15]]]],51,[55,[36]]]]]]]]]],[50,[[18,[50,50,[30,[50]]]]]],[50,[[18,[50,50,[30,[50]]]]]],[50,[[18,[50,50,[30,[50]]]]]],[50,[[18,[50,50,[30,[50]]]]]],[[[0,[51,[39,[[38,[15]]]],48,49,9,[55,[[6,[5]]]]]]],[[18,[[0,[51,[39,[[38,[15]]]],48,49,9,[55,[[6,[5]]]]]],56,[30,[[0,[51,[39,[[38,[15]]]],48,49,9,[55,[[6,[5]]]]]]]]]]]],[[[0,[51,[39,[[38,[15]]]],48,49,9,[55,[[6,[5]]]]]]],[[18,[[0,[51,[39,[[38,[15]]]],48,49,9,[55,[[6,[5]]]]]],57,[30,[[0,[51,[39,[[38,[15]]]],48,49,9,[55,[[6,[5]]]]]]]]]]]],[[[0,[51,[39,[[38,[15]]]],48,49,9,[55,[[6,[5]]]]]]],[[18,[[0,[51,[39,[[38,[15]]]],48,49,9,[55,[[6,[5]]]]]],58,[30,[[0,[51,[39,[[38,[15]]]],48,49,9,[55,[[6,[5]]]]]]]]]]]],[[[0,[51,[39,[[38,[15]]]],48,49,9,[55,[[6,[5]]]]]]],[[18,[[0,[51,[39,[[38,[15]]]],48,49,9,[55,[[6,[5]]]]]],59,[30,[[0,[51,[39,[[38,[15]]]],48,49,9,[55,[[6,[5]]]]]]]]]]]],[[[0,[51,[39,[[38,[15]]]],48,49,9,[55,[[6,[5]]]]]]],[[18,[[0,[51,[39,[[38,[15]]]],48,49,9,[55,[[6,[5]]]]]],60,[30,[[0,[51,[39,[[38,[15]]]],48,49,9,[55,[[6,[5]]]]]]]]]]]],[[[0,[[39,[[54,[15]]]],[39,[[38,[15]]]],[39,[[61,[15]]]],51,48,[55,[36]]]]],[[18,[[0,[[39,[[54,[15]]]],[39,[[38,[15]]]],[39,[[61,[15]]]],51,48,[55,[36]]]],[0,[[39,[[54,[15]]]],[39,[[38,[15]]]],[39,[[61,[15]]]],51,48,[55,[36]]]],[30,[[0,[[39,[[54,[15]]]],[39,[[38,[15]]]],[39,[[61,[15]]]],51,48,[55,[36]]]]]]]]]],[50,[[18,[50,50,[30,[50]]]]]],[50,[[18,[50,50,[30,[50]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],7,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[53,25],[[[0,[[39,[[54,[15]]]],[39,[[38,[15]]]],[39,[[61,[15]]]],51,48,[55,[36]]]]],[[18,[[0,[[39,[[54,[15]]]],[39,[[38,[15]]]],[39,[[61,[15]]]],51,48,[55,[36]]]],[0,[[39,[[54,[15]]]],[39,[[38,[15]]]],[39,[[61,[15]]]],51,48,[55,[36]]]],[30,[[0,[[39,[[54,[15]]]],[39,[[38,[15]]]],[39,[[61,[15]]]],51,48,[55,[36]]]]]]]]]],[50,[[18,[50,50,[30,[50]]]]]],[50,[[18,[50,50,[30,[50]]]]]],[53,25],[25,25],[50,[[18,[50,50,[30,[50]]]]]],[50,[[18,[50,50,[30,[50]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],7,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[51,[39,[[38,[15]]]],48]]],[[18,[[0,[51,[39,[[38,[15]]]],48]],62,[30,[[0,[51,[39,[[38,[15]]]],48]]]]]]]],[[[0,[51,[39,[[38,[15]]]],48]]],[[18,[[0,[51,[39,[[38,[15]]]],48]],63,[30,[[0,[51,[39,[[38,[15]]]],48]]]]]]]],[[[0,[51,[39,[[38,[15]]]],48]]],[[18,[[0,[51,[39,[[38,[15]]]],48]],64,[30,[[0,[51,[39,[[38,[15]]]],48]]]]]]]],[[[0,[51,[39,[[38,[15]]]],48]]],[[18,[[0,[51,[39,[[38,[15]]]],48]],65,[30,[[0,[51,[39,[[38,[15]]]],48]]]]]]]],[[[0,[51,[39,[[38,[15]]]],48]]],[[18,[[0,[51,[39,[[38,[15]]]],48]],5,[30,[[0,[51,[39,[[38,[15]]]],48]]]]]]]],0,[[[2,[48,[30,[48]]]]],19],[[]],[[]],[[[2,[9,[30,[9]]]]],19],[[13,[2,[30]]],19],[[[2,[[0,[9,47,[39,[[61,[15]]]]]],[30,[[0,[9,47,[39,[[61,[15]]]]]]]]]]],19],[[[2,[30]]],19],[[[0,[48,9]]],[[18,[[0,[48,9]],[0,[48,9]],[30,[[0,[48,9]]]]]]]],[[],[[18,[30]]]],[[[66,[9]]],[[18,[9]]]],[[[2,[30]],19],19],[[]],[[[2,[67,[0,[[67,[30]],30]]]]],19],[[]],[[[2,[30]]],[[66,[30,[2,[30]]]]]],[[2,19],19],[[[2,[9,[30,[9]]]],19],19],[[[2,[30]],[2,[30]]],19],[[[2,[9,[68,[9]]]],19],19],[[[66,[9,19]]],16],[[[2,[9,[30,[9]]]]],19],[[[2,[9,[30,[9]]]]],19],[[[2,[9,[30,[9]]]]],19],[[[2,[[0,[9,47,[39,[[61,[15]]]]]],[30,[[0,[9,47,[39,[[61,[15]]]]]]]]]]],19],[[[0,[[39,[[38,[15]]]],48]]],[[18,[[0,[[39,[[38,[15]]]],48]],[0,[[39,[[38,[15]]]],48]],[30,[[0,[[39,[[38,[15]]]],48]]]]]]]],[48,[[18,[48,15,[30,[48]]]]]],[9,25],[[],17],[[],17],[[],37],[[9,[2,[30]]],19],[[[2,[9,[69,[1]],[30,[9]]]],25],19],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[36],[[36,70],70],[33],[[33,28],28],[[33,70],70],[[33,30],30],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[70,[9]]],[[70,[9]]]],[71,71],[33,33],[[]],[[]],[[]],0,[[36,[2,[9,[72,[9]]]]],19],[28,28],[28,28],[70,70],[70,70],[[73,[70,[73]]],34],[[25,36],25],[33,36],[[[28,[14]],[28,[14]]],13],[[[70,[14]],[70,[14]]],13],[[71,71],13],[[33,33],13],[[],13],[33,64],0,[[[28,[74]],21],22],[[[28,[23]],21],22],[[[70,[74]],21],22],[[[70,[23]],21],22],[[71,21],22],[[33,21],22],[[]],[[]],[[]],[[]],[7],[7,70],[33],[33,28],[33,70],[33],[33,28],[33,70],[[33,75]],0,[[]],[[]],[[]],[[]],[33,30],[33,28],[[]],[31],[31],[[]],[[]],[[]],[[],34],[[],34],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],37],[[],37],[[],37],[[],37],0,[[[2,[[0,[9,14]],[30,[[0,[9,14]]]]]],15],19],[[25,6],19],[[[2,[[0,[9,48]],[30,[[0,[9,48]]]]]],19,19],19],[[[2,[[0,[9,48]],[30,[[0,[9,48]]]]]],19,19],19],[[15,15,[2,[[0,[9,48]],[30,[[0,[9,48]]]]]],19,19],19],[[[2,[9,44,[30,[9]]]],[2,[9,[30,[9]]]]],19],[[[2,[[0,[48,49]],44,[30,[[0,[48,49]]]]]]],19],[[[2,[[0,[9,48,49]],44,[30,[[0,[9,48,49]]]]]],[2,[[0,[9,48,49]],[30,[[0,[9,48,49]]]]]]],19],[[[2,[[0,[9,48]],[30,[[0,[9,48]]]]]]],19],[[[2,[[0,[9,48]],[30,[[0,[9,48]]]]]]],19],[[[2,[[0,[9,48]],[30,[[0,[9,48]]]]]]],19],[[[2,[[0,[9,48]],[30,[[0,[9,48]]]]]]],19],[[15,15,[2,[[0,[9,48]],[30,[[0,[9,48]]]]]]],19],[[[2,[[0,[9,48]],[30,[[0,[9,48]]]]]],[2,[[0,[9,48]],[30,[[0,[9,48]]]]]]],19],[[[2,[[0,[9,48]],[30,[[0,[9,48]]]]]],[2,[[0,[9,48]],[30,[[0,[9,48]]]]]]],19],[[[2,[[0,[9,48]],[30,[[0,[9,48]]]]]],[2,[[0,[9,48]],[30,[[0,[9,48]]]]]]],19],0,0,0,0,[[]],[[]],[76,76],[[]],0,[[76,76],13],[[],13],[[76,21],22],[[]],[[]],0,[[]],[[],17],[[],17],[[],37],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],77,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],78,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],56,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],57,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],58,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],58,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],59,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],60,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],62,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],63,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],64,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],64,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],65,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],5,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],[39,[[61,[15]]]],[39,[[54,[15]]]],9,47,[79,[78]],[55,[36]],51,48,49,50,80,[55,[[6,[5]]]]]]],[[18,[[0,[[39,[[38,[15]]]],[39,[[61,[15]]]],[39,[[54,[15]]]],9,47,[79,[78]],[55,[36]],51,48,49,50,80,[55,[[6,[5]]]]]],78,[30,[[0,[[39,[[38,[15]]]],[39,[[61,[15]]]],[39,[[54,[15]]]],9,47,[79,[78]],[55,[36]],51,48,49,50,80,[55,[[6,[5]]]]]]]]]]]],[76],[76],[[[0,[[39,[[38,[15]]]],[39,[[61,[15]]]],[39,[[54,[15]]]],9,47,[79,[77]],[55,[36]],51,48,49,50,80,[55,[[6,[5]]]]]]],[[18,[[0,[[39,[[38,[15]]]],[39,[[61,[15]]]],[39,[[54,[15]]]],9,47,[79,[77]],[55,[36]],51,48,49,50,80,[55,[[6,[5]]]]]],77,[30,[[0,[[39,[[38,[15]]]],[39,[[61,[15]]]],[39,[[54,[15]]]],9,47,[79,[77]],[55,[36]],51,48,49,50,80,[55,[[6,[5]]]]]]]]]]]],[[[6,[5]]],[[18,[[6,[5]],64,[30,[[6,[5]]]]]]]],[76],[76],[76],[76],[76],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],60,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],77,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],78,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],56,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],57,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],58,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],58,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],59,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],60,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],62,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],63,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],64,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],64,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],65,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],5,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],[39,[[61,[15]]]],9,47,51,50]]],[[18,[[0,[[39,[[38,[15]]]],[39,[[61,[15]]]],9,47,51,50]],[0,[[39,[[38,[15]]]],[39,[[61,[15]]]],9,47,51,50]],[30,[[0,[[39,[[38,[15]]]],[39,[[61,[15]]]],9,47,51,50]]]]]]]],[[[0,[[39,[[38,[15]]]],[39,[[61,[15]]]],[39,[[54,[15]]]],9,47,51,49,50,48,[55,[[6,[5]]]],80]]],[[18,[[0,[[39,[[38,[15]]]],[39,[[61,[15]]]],[39,[[54,[15]]]],9,47,51,49,50,48,[55,[[6,[5]]]],80]],[30,[[0,[[39,[[38,[15]]]],[39,[[61,[15]]]],[39,[[54,[15]]]],9,47,51,49,50,48,[55,[[6,[5]]]],80]]]]]]]],[76],[76],[76],[76],[76],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],5,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],77,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],78,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],56,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],57,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],58,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],58,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],59,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],60,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],62,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],63,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],64,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],64,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],65,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],5,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],[39,[[61,[15]]]],9,47,51,48,49,[79,[78]],[55,[36]],50,80,[55,[[6,[5]]]]]]],[[18,[[0,[[39,[[38,[15]]]],[39,[[61,[15]]]],9,47,51,48,49,[79,[78]],[55,[36]],50,80,[55,[[6,[5]]]]]],78,[30,[[0,[[39,[[38,[15]]]],[39,[[61,[15]]]],9,47,51,48,49,[79,[78]],[55,[36]],50,80,[55,[[6,[5]]]]]]]]]]]],[76],[76],[[[0,[[39,[[38,[15]]]],[39,[[61,[15]]]],9,47,51,48,49,[79,[77]],[55,[36]],50,80,[55,[[6,[5]]]]]]],[[18,[[0,[[39,[[38,[15]]]],[39,[[61,[15]]]],9,47,51,48,49,[79,[77]],[55,[36]],50,80,[55,[[6,[5]]]]]],77,[30,[[0,[[39,[[38,[15]]]],[39,[[61,[15]]]],9,47,51,48,49,[79,[77]],[55,[36]],50,80,[55,[[6,[5]]]]]]]]]]]],[[[6,[5]]],[[18,[[6,[5]],64,[30,[[6,[5]]]]]]]],[76],[76],[76],[76],[76],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],60,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],77,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],78,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],56,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],57,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],58,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],58,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],59,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],60,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],62,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],63,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],64,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],64,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],65,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],5,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],[[[0,[[39,[[38,[15]]]],[39,[[61,[15]]]],9,47,51,50,48]]],[[18,[[0,[[39,[[38,[15]]]],[39,[[61,[15]]]],9,47,51,50,48]],[0,[[39,[[38,[15]]]],[39,[[61,[15]]]],9,47,51,50,48]],[30,[[0,[[39,[[38,[15]]]],[39,[[61,[15]]]],9,47,51,50,48]]]]]]]],[[[0,[[39,[[38,[15]]]],[39,[[61,[15]]]],9,47,51,[79,[58]],50,49,48,[55,[[6,[5]]]],80]]],[[18,[[0,[[39,[[38,[15]]]],[39,[[61,[15]]]],9,47,51,[79,[58]],50,49,48,[55,[[6,[5]]]],80]],[30,[[0,[[39,[[38,[15]]]],[39,[[61,[15]]]],9,47,51,[79,[58]],50,49,48,[55,[[6,[5]]]],80]]]]]]]],[76],[76],[76],[76],[76],[[[0,[[39,[[38,[15]]]],51,48]]],[[18,[[0,[[39,[[38,[15]]]],51,48]],5,[30,[[0,[[39,[[38,[15]]]],51,48]]]]]]]],0,[[[2,[30]],[2,[30]],[2,[30]]],19],[[[2,[30]],[2,[30]]],19],[[],18],[[[2,[30]],[2,[30]]],19],[[[2,[30]],[2,[30]],[2,[30]]],19],[[[2,[30]],[2,[30]]],19],[[[81,[30]]],19]],"c":[],"p":[[8,"Sized"],[8,"Parser"],[3,"And"],[3,"AndThen"],[15,"u8"],[15,"slice"],[15,"char"],[4,"Needed"],[8,"Clone"],[4,"Err"],[4,"CompareResult"],[8,"From"],[15,"bool"],[8,"PartialEq"],[15,"usize"],[4,"Option"],[4,"Result"],[6,"IResult"],[8,"FnMut"],[3,"FlatMap"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[3,"Into"],[8,"Fn"],[3,"Map"],[8,"FnOnce"],[3,"Error"],[3,"Or"],[8,"ParseError"],[3,"Demand"],[8,"Error"],[4,"ErrorKind"],[3,"String"],[3,"Vec"],[15,"str"],[3,"TypeId"],[3,"RangeFrom"],[8,"Slice"],[8,"ErrorConvert"],[8,"AddAssign"],[8,"Shl"],[8,"Shr"],[8,"ToUsize"],[8,"Alt"],[8,"Permutation"],[8,"Offset"],[8,"InputLength"],[8,"InputTake"],[8,"InputTakeAtPosition"],[8,"InputIter"],[8,"ExtendInto"],[8,"FindToken"],[3,"Range"],[8,"Compare"],[15,"i128"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[3,"RangeTo"],[15,"u128"],[15,"u16"],[15,"u32"],[15,"u64"],[3,"ParserIterator"],[8,"Into"],[8,"FromExternalError"],[8,"Borrow"],[3,"VerboseError"],[4,"VerboseErrorKind"],[8,"ContextError"],[8,"Deref"],[8,"Display"],[8,"Hasher"],[4,"Endianness"],[15,"f32"],[15,"f64"],[8,"ParseTo"],[8,"AsBytes"],[8,"Tuple"],[8,"AsChar"],[8,"FindSubstring"],[8,"Finish"],[8,"HexDisplay"]]},\
"once_cell":{"doc":"Overview","t":"AAADDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["race","sync","unsync","OnceBool","OnceBox","OnceNonZeroUsize","OnceRef","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","default","default","default","drop","fmt","fmt","fmt","fmt","from","from","from","from","get","get","get","get","get_or_init","get_or_init","get_or_init","get_or_init","get_or_try_init","get_or_try_init","get_or_try_init","get_or_try_init","into","into","into","into","new","new","new","new","set","set","set","set","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","Lazy","OnceCell","borrow","borrow","borrow_mut","borrow_mut","clone","clone_from","clone_into","default","default","deref","deref_mut","eq","equivalent","fmt","fmt","force","force_mut","from","from","from","from","get","get","get_mut","get_mut","get_or_init","get_or_try_init","get_unchecked","into","into","into_inner","into_value","new","new","set","take","to_owned","try_from","try_from","try_insert","try_into","try_into","type_id","type_id","wait","with_value","Lazy","OnceCell","borrow","borrow","borrow_mut","borrow_mut","clone","clone_from","clone_into","default","default","deref","deref_mut","eq","equivalent","fmt","fmt","force","force_mut","from","from","from","from","get","get","get_mut","get_mut","get_or_init","get_or_try_init","into","into","into_inner","into_value","new","new","set","take","to_owned","try_from","try_from","try_insert","try_into","try_into","type_id","type_id","with_value"],"q":[[0,"once_cell"],[3,"once_cell::race"],[64,"once_cell::sync"],[112,"once_cell::unsync"]],"d":["Thread-safe, non-blocking, “first one wins” flavor of …","Thread-safe, blocking version of <code>OnceCell</code>.","Single-threaded version of <code>OnceCell</code>.","A thread-safe cell which can be written to only once.","A thread-safe cell which can be written to only once.","A thread-safe cell which can be written to only once.","A thread-safe cell which can be written to only once.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Gets a reference to the underlying value.","Gets a reference to the underlying value.","Gets the underlying value.","Gets the underlying value.","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new empty cell.","Creates a new empty cell.","Creates a new empty cell.","Creates a new empty cell.","Sets the contents of this cell to <code>value</code>.","Sets the contents of this cell to <code>value</code>.","Sets the contents of this cell to <code>value</code>.","Sets the contents of this cell to <code>value</code>.","","","","","","","","","","","","","A value which is initialized on the first access.","A thread-safe cell which can be written to only once.","","","","","","","","","Creates a new lazy value using <code>Default</code> as the initializing …","","","","","","","Forces the evaluation of this lazy value and returns a …","Forces the evaluation of this lazy value and returns a …","","Returns the argument unchanged.","","Returns the argument unchanged.","Gets the reference to the underlying value.","Gets the reference to the result of this lazy value if it …","Gets the mutable reference to the underlying value.","Gets the reference to the result of this lazy value if it …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Get the reference to the underlying value, without …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes the <code>OnceCell</code>, returning the wrapped value. Returns","Consumes this <code>Lazy</code> returning the stored value.","Creates a new empty cell.","Creates a new lazy value with the given initializing …","Sets the contents of this cell to <code>value</code>.","Takes the value out of this <code>OnceCell</code>, moving it back to an …","","","","Like <code>set</code>, but also returns a reference to the final cell …","","","","","Gets the reference to the underlying value, blocking the …","Creates a new initialized cell.","A value which is initialized on the first access.","A cell which can be written to only once. It is not thread …","","","","","","","","","Creates a new lazy value using <code>Default</code> as the initializing …","","","","","","","Forces the evaluation of this lazy value and returns a …","Forces the evaluation of this lazy value and returns a …","Returns the argument unchanged.","","","Returns the argument unchanged.","Gets a reference to the underlying value.","Gets the reference to the result of this lazy value if it …","Gets a mutable reference to the underlying value.","Gets the mutable reference to the result of this lazy …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes the <code>OnceCell</code>, returning the wrapped value.","Consumes this <code>Lazy</code> returning the stored value.","Creates a new empty cell.","Creates a new lazy value with the given initializing …","Sets the contents of this cell to <code>value</code>.","Takes the value out of this <code>OnceCell</code>, moving it back to an …","","","","Like <code>set</code>, but also returns a reference to the final cell …","","","","","Creates a new initialized cell."],"i":[0,0,0,0,0,0,0,1,2,3,4,1,2,3,4,1,2,3,4,2,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,0,0,15,17,15,17,15,15,15,15,17,17,17,15,15,15,17,17,17,15,15,15,17,15,17,15,17,15,15,15,15,17,15,17,15,17,15,15,15,15,17,15,15,17,15,17,15,15,0,0,21,22,21,22,21,21,21,21,22,22,22,21,21,21,22,22,22,21,21,21,22,21,22,21,22,21,21,21,22,21,22,21,22,21,21,21,21,22,21,21,22,21,22,21],"f":[0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],2],[[],3],[[],4],[2],[[1,5],6],[[2,5],6],[[3,5],6],[[4,5],6],[[]],[[]],[[]],[[]],[1,7],[2,7],[3,[[7,[8]]]],[4,[[7,[9]]]],[[1,10]],[[2,10]],[[3,10],8],[[4,10],9],[[1,10],11],[[2,10],11],[[3,10],[[11,[8]]]],[[4,10],[[11,[9]]]],[[]],[[]],[[]],[[]],[[],1],[[],2],[[],3],[[],4],[1,11],[[2,12],[[11,[12]]]],[[3,8],11],[[4,9],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],13],[[],13],[[],13],[[],13],0,0,[[]],[[]],[[]],[[]],[[[15,[14]]],[[15,[14]]]],[[[15,[14]],[15,[14]]]],[[]],[[],15],[[],[[17,[16]]]],[[[17,[10]]]],[[[17,[10]]]],[[[15,[18]],[15,[18]]],9],[[],9],[[[15,[19]],5],6],[[[17,[19]],5],6],[[[17,[10]]]],[[[17,[10]]]],[20],[[]],[[],15],[[]],[15,7],[[[17,[10]]],7],[15,7],[[[17,[10]]],7],[[15,10]],[[15,10],11],[15],[[]],[[]],[15,7],[17,11],[[],15],[[],17],[15,11],[15,7],[[]],[[],11],[[],11],[15,11],[[],11],[[],11],[[],13],[[],13],[15],[[],15],0,0,[[]],[[]],[[]],[[]],[[[21,[14]]],[[21,[14]]]],[[[21,[14]],[21,[14]]]],[[]],[[],21],[[],[[22,[16]]]],[[[22,[10]]]],[[[22,[10]]]],[[[21,[18]],[21,[18]]],9],[[],9],[[[21,[19]],5],6],[[[22,[19]],5],6],[[[22,[10]]]],[[[22,[10]]]],[[]],[20],[[],21],[[]],[21,7],[[[22,[10]]],7],[21,7],[[[22,[10]]],7],[[21,10]],[[21,10],11],[[]],[[]],[21,7],[22,11],[[],21],[[],22],[21,11],[21,7],[[]],[[],11],[[],11],[21,11],[[],11],[[],11],[[],13],[[],13],[[],21]],"c":[],"p":[[3,"OnceRef"],[3,"OnceBox"],[3,"OnceNonZeroUsize"],[3,"OnceBool"],[3,"Formatter"],[6,"Result"],[4,"Option"],[3,"NonZeroUsize"],[15,"bool"],[8,"FnOnce"],[4,"Result"],[3,"Box"],[3,"TypeId"],[8,"Clone"],[3,"OnceCell"],[8,"Default"],[3,"Lazy"],[8,"PartialEq"],[8,"Debug"],[15,"never"],[3,"OnceCell"],[3,"Lazy"]]},\
"os_pipe":{"doc":"A cross-platform library for opening OS pipes, like those …","t":"DDLLLLLLLLFFFLLLLLLLLLLLLLLFLLLLLLLLLLLL","n":["PipeReader","PipeWriter","as_fd","as_fd","as_raw_fd","as_raw_fd","borrow","borrow","borrow_mut","borrow_mut","dup_stderr","dup_stdin","dup_stdout","flush","flush","fmt","fmt","from","from","from","from","from_raw_fd","from_raw_fd","into","into","into_raw_fd","into_raw_fd","pipe","read","read","try_clone","try_clone","try_from","try_from","try_into","try_into","type_id","type_id","write","write"],"q":[[0,"os_pipe"]],"d":["The reading end of a pipe, returned by <code>pipe</code>.","The writing end of a pipe, returned by <code>pipe</code>.","","","","","","","","","Get a duplicated copy of the current process’s standard …","Get a duplicated copy of the current process’s standard …","Get a duplicated copy of the current process’s standard …","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Open a new pipe and return a <code>PipeReader</code> and <code>PipeWriter</code> …","","","","","","","","","","","",""],"i":[0,0,1,3,1,3,1,3,1,3,0,0,0,3,3,1,3,1,1,3,3,1,3,1,3,1,3,0,1,1,1,3,1,3,1,3,1,3,3,3],"f":[0,0,[1,2],[3,2],[1,4],[3,4],[[]],[[]],[[]],[[]],[[],[[5,[3]]]],[[],[[5,[1]]]],[[],[[5,[3]]]],[3,5],[3,5],[[1,6],7],[[3,6],7],[[]],[8,1],[8,3],[[]],[4,1],[4,3],[[]],[[]],[1,4],[3,4],[[],5],[[1,[10,[9]]],[[5,[11]]]],[[1,[10,[9]]],[[5,[11]]]],[1,[[5,[1]]]],[3,[[5,[3]]]],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[3,[10,[9]]],[[5,[11]]]],[[3,[10,[9]]],[[5,[11]]]]],"c":[],"p":[[3,"PipeReader"],[3,"BorrowedFd"],[3,"PipeWriter"],[6,"RawFd"],[6,"Result"],[3,"Formatter"],[6,"Result"],[3,"OwnedFd"],[15,"u8"],[15,"slice"],[15,"usize"],[4,"Result"],[3,"TypeId"]]},\
"petgraph":{"doc":"<code>petgraph</code> is a graph data structure library.","t":"EEICCNIQCNEAALLLLLLLLLLLLLLAAALLLLLLLLLLAALLLLLKKLLAALLAALLLLLLLLLLLLAACDDDDCDDGDDDGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIDDICIDDDCACACLLLLLLLLLLLLLLLLLLFFLLACALLACACLLLLLLLLLLCCFKLLLLLLFFFCCCCAACFAKCKFLLLLLKLFACFLLLLFALLLLLLLLLLLLLLLKFDFLLLLMFLLLMLLLLFDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLFFFFFFFFDDDLLLLLLLLLLLLFLLLLLLLLLFLLLLLLLLLLLLFFFDCGDDDDCDDGDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIIIINEIDINLKLLLLLLLLKKLLLLLLLLLLLLLLKKLLLLLLLLLKKMMMMEDNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLGGDDDDDDDDDDDIIDDDDDDGDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLDDGDDDDDDDIDDGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGDDCDDDGDDIGILLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKFCCCCCCCCCCCCCCCCCCCCCCDDDDDDCCDCDDGDGDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLCLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLCLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLQNDNNEINIDEDNIDDDDQQIIQQQQQQIINIIIIIIIIIIIQQQQIIDDDDDQQQQIIQQQNDDDDDDNIIIDQQKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLFMMMKLLLKLKLLLLLLKLLLKLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLLLLLLLKKLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLKLLLLKLLLKLLLLLLLLLLLLLLLLLLLLLKLLLKLLKLLLKLLLLLLLLLLKLLLKLKLLLLLLLLLLKLMMMKLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLLKLLLLKKL","n":["Directed","Direction","EdgeType","Graph","Incoming","Incoming","IntoWeightedEdge","NodeId","Outgoing","Outgoing","Undirected","adj","algo","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","compare","csr","data","dot","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","graph","graphmap","hash","index","into","into","into","into_weighted_edge","is_directed","is_directed","is_directed","matrix_graph","operator","opposite","partial_cmp","prelude","stable_graph","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unionfind","visit","DefaultIx","EdgeIndex","EdgeIndices","EdgeReference","EdgeReferences","IndexType","List","Neighbors","NodeIndex","NodeIndices","OutgoingEdgeIndices","OutgoingEdgeReferences","UnweightedList","add_edge","add_edge","add_node","add_node","add_node_from_edges","add_node_with_capacity","adjacency_matrix","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","compare","compare","contains_edge","default","edge_count","edge_count","edge_endpoints","edge_indices","edge_indices_from","edge_references","edge_weight","edge_weight_mut","edges","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","find_edge","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_index","hash","id","id","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_adjacent","is_directed","len","len","neighbors","new","next","next","next","next","next","next","next_back","next_back","node_bound","node_count","node_identifiers","node_indices","node_references","node_weight","node_weight_mut","partial_cmp","partial_cmp","reset_map","rfind","rfind","rfold","rfold","size_hint","size_hint","size_hint","size_hint","size_hint","source","target","to_index","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_edge","visit_map","weight","weight","with_capacity","BoundedMeasure","Cycle","DfsSpace","FloatMeasure","Matching","Measure","MinSpanningTree","NegativeCycle","TarjanScc","all_simple_paths","astar","astar","bellman_ford","bellman_ford","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","condensation","connected_components","default","default","dijkstra","dijkstra","dominators","eq","eq","feedback_arc_set","find_negative_cycle","floyd_warshall","floyd_warshall","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","greedy_feedback_arc_set","greedy_matching","has_path_connecting","infinite","into","into","into","into","into","into_iter","is_bipartite_undirected","is_cyclic_directed","is_cyclic_undirected","is_isomorphic","is_isomorphic_matching","is_isomorphic_subgraph","is_isomorphic_subgraph_matching","isomorphism","k_shortest_path","k_shortest_path","kosaraju_scc","matching","max","maximum_matching","min","min_spanning_tree","new","new","next","node_component_index","node_id","overflowing_add","run","scc","simple_paths","subgraph_isomorphisms_iter","tarjan_scc","to_owned","to_owned","to_owned","to_owned","toposort","tred","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","zero","astar","Paths","bellman_ford","borrow","borrow_mut","clone","clone_into","distances","find_negative_cycle","fmt","from","into","predecessors","to_owned","try_from","try_into","type_id","dijkstra","DominatedByIter","Dominators","DominatorsIter","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","dominators","fmt","fmt","fmt","from","from","from","immediate_dominator","immediately_dominated_by","into","into","into","into_iter","into_iter","next","next","root","simple_fast","size_hint","strict_dominators","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","greedy_feedback_arc_set","floyd_warshall","is_isomorphic","is_isomorphic_matching","is_isomorphic_subgraph","is_isomorphic_subgraph_matching","subgraph_isomorphisms_iter","k_shortest_path","MatchedEdges","MatchedNodes","Matching","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","contains_edge","contains_node","edges","from","from","from","greedy_matching","into","into","into","into_iter","into_iter","is_empty","is_perfect","len","mate","maximum_matching","next","next","nodes","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","all_simple_paths","dag_to_toposorted_adjacency_list","dag_transitive_reduction_closure","Csr","DefaultIx","EdgeIndex","EdgeReference","EdgeReferences","Edges","EdgesNotSorted","IndexType","Neighbors","NodeIdentifiers","NodeIndex","NodeReferences","add_edge","add_node","adjacency_matrix","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear_edges","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","contains_edge","default","edge_count","edge_count","edge_references","edges","edges","edges_slice","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_index","from_sorted_edges","id","index","index_mut","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","is_adjacent","is_directed","neighbors","neighbors_slice","new","next","next","next","next","next","next_back","node_bound","node_count","node_count","node_identifiers","node_references","out_degree","reset_map","size_hint","size_hint","size_hint","size_hint","source","target","to_index","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","visit_map","weight","weight","with_nodes","Build","Create","DataMap","DataMapMut","Edge","Element","ElementIterator","FilterElements","FromElements","Node","add_edge","add_node","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","edge_weight","edge_weight_mut","eq","equivalent","equivalent","equivalent","filter_elements","fmt","fmt","from","from","from_elements","into","into","into_iter","next","node_weight","node_weight_mut","size_hint","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","update_edge","with_capacity","source","target","weight","weight","Config","Dot","EdgeIndexLabel","EdgeNoLabel","GraphContentOnly","NodeIndexLabel","NodeNoLabel","borrow","borrow","borrow_mut","borrow_mut","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","into","into","new","to_string","try_from","try_from","try_into","try_into","type_id","type_id","with_attr_getters","with_config","DefaultIx","DiGraph","Edge","EdgeIndex","EdgeIndices","EdgeReference","EdgeReferences","EdgeWeightsMut","Edges","EdgesConnecting","Externals","Frozen","Graph","GraphIndex","IndexType","Neighbors","Node","NodeIndex","NodeIndices","NodeReferences","NodeWeightsMut","UnGraph","WalkNeighbors","add_edge","add_edge","add_node","add_node","adjacency_matrix","adjacency_matrix","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clear_edges","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_from","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","compare","compare","contains_edge","default","default","default","deref","detach","edge_bound","edge_bound","edge_count","edge_count","edge_count","edge_endpoints","edge_index","edge_indices","edge_references","edge_references","edge_references","edge_weight","edge_weight","edge_weight","edge_weight_mut","edge_weight_mut","edge_weight_mut","edge_weights","edge_weights_mut","edges","edges","edges","edges_connecting","edges_directed","edges_directed","edges_directed","end","end","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend_with_edges","externals","filter_map","find_edge","find_edge_undirected","first_edge","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_edges","from_elements","from_index","from_index","from_index","from_index","hash","hash","id","id","index","index","index","index","index","index","index","index_mut","index_mut","index_mut","index_twice_mut","index_twice_mut","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_edge_type","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_nodes_edges","is_adjacent","is_adjacent","is_directed","map","max","max","neighbors","neighbors","neighbors","neighbors_directed","neighbors_directed","neighbors_directed","neighbors_undirected","new","new","new","new","new","new","new_undirected","next","next","next","next","next","next","next","next","next","next","next","next_back","next_back","next_back","next_back","next_edge","next_edge","next_edge","next_edge","next_node","node_bound","node_bound","node_count","node_count","node_count","node_identifiers","node_identifiers","node_index","node_indices","node_references","node_references","node_weight","node_weight","node_weight","node_weight_mut","node_weight_mut","node_weight_mut","node_weights","node_weights_mut","partial_cmp","partial_cmp","raw_edges","raw_nodes","remove_edge","remove_node","reserve_edges","reserve_exact_edges","reserve_exact_nodes","reserve_nodes","reset_map","reset_map","retain_edges","retain_nodes","reverse","shrink_to_fit","shrink_to_fit_edges","shrink_to_fit_nodes","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","source","source","target","target","to_index","to_index","to_index","to_index","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_edge","update_edge","visit_map","visit_map","weight","weight","weight","weight","weight","with_capacity","with_capacity","AllEdges","AllEdgesMut","DiGraphMap","Edges","EdgesDirected","GraphMap","Neighbors","NeighborsDirected","NodeIdentifiers","NodeReferences","NodeTrait","Nodes","Ptr","UnGraphMap","add_edge","add_edge","add_node","add_node","adjacency_matrix","all_edges","all_edges_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","compare","contains_edge","contains_node","count","count","default","deref","edge_bound","edge_count","edge_count","edge_references","edge_weight","edge_weight_mut","edges","edges","edges_directed","edges_directed","eq","equivalent","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_edges","from_elements","from_graph","from_index","from_index","from_iter","hash","index","index_mut","into","into","into","into","into","into","into","into","into","into","into","into_graph","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_adjacent","is_directed","last","last","len","neighbors","neighbors","neighbors_directed","neighbors_directed","new","next","next","next","next","next","next","next","next","next","next_back","next_back","next_back","node_bound","node_count","node_count","node_identifiers","node_references","nodes","nth","nth","partial_cmp","remove_edge","remove_node","reset_map","rfind","rfold","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","to_index","to_index","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_edge","visit_map","with_capacity","with_capacity","DiMatrix","EdgeReferences","Edges","IndexType","MatrixGraph","Neighbors","NodeIdentifiers","NodeIndex","NodeReferences","NotZero","Nullable","UnMatrix","Zero","add_edge","add_edge","add_node","add_node","adjacency_matrix","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","edge_count","edge_count","edge_references","edge_weight","edge_weight_mut","edges","edges","edges_directed","edges_directed","extend_with_edges","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_edges","from_index","has_edge","index","index","index_mut","index_mut","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","is_adjacent","is_directed","is_zero","neighbors","neighbors","neighbors_directed","neighbors_directed","new","new_undirected","next","next","next","next","next","node_bound","node_count","node_count","node_identifiers","node_index","node_references","node_weight","node_weight_mut","remove_edge","remove_node","reset_map","size_hint","size_hint","size_hint","to_index","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_edge","update_edge","visit_map","with_capacity","zero","complement","Bfs","Dfs","DfsPostOrder","DiGraph","DiGraphMap","Directed","Direction","EdgeIndex","EdgeRef","Graph","GraphMap","Incoming","NodeIndex","Outgoing","StableDiGraph","StableGraph","StableUnGraph","UnGraph","UnGraphMap","Undirected","DefaultIx","EdgeIndex","EdgeIndices","EdgeReference","EdgeReferences","Edges","EdgesConnecting","Externals","GraphIndex","IndexType","Neighbors","NodeIndex","NodeIndices","NodeReferences","StableDiGraph","StableGraph","StableUnGraph","WalkNeighbors","add_edge","add_edge","add_node","add_node","adjacency_matrix","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clear_edges","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_from","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","contains_edge","contains_node","default","detach","edge_bound","edge_count","edge_count","edge_endpoints","edge_index","edge_indices","edge_references","edge_weight","edge_weight","edge_weight_mut","edge_weight_mut","edge_weights","edge_weights_mut","edges","edges","edges_connecting","edges_directed","edges_directed","eq","extend_with_edges","externals","filter_map","find_edge","find_edge_undirected","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_edges","from_elements","from_index","from_index","id","index","index","index_mut","index_mut","index_twice_mut","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_adjacent","is_directed","map","neighbors","neighbors","neighbors_directed","neighbors_directed","neighbors_undirected","new","next","next","next","next","next","next","next","next","next","next_back","next_back","next_back","next_back","next_edge","next_node","node_bound","node_count","node_count","node_identifiers","node_index","node_indices","node_references","node_weight","node_weight","node_weight_mut","node_weight_mut","node_weights","node_weights_mut","remove_edge","remove_node","reset_map","retain_edges","retain_nodes","reverse","size_hint","size_hint","size_hint","size_hint","size_hint","source","target","to_index","to_index","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_edge","update_edge","visit_map","weight","weight","with_capacity","with_capacity","UnionFind","borrow","borrow_mut","clone","clone_into","equiv","find","find_mut","fmt","from","into","into_labeling","new","to_owned","try_from","try_into","type_id","union","AdjMatrix","BackEdge","Bfs","Break","Continue","Control","ControlFlow","CrossForwardEdge","Data","Dfs","DfsEvent","DfsPostOrder","Discover","EdgeCount","EdgeFiltered","EdgeFilteredEdges","EdgeFilteredNeighbors","EdgeFilteredNeighborsDirected","EdgeId","EdgeId","EdgeIndexable","EdgeRef","EdgeRef","EdgeReferences","EdgeType","EdgeWeight","Edges","EdgesDirected","FilterEdge","FilterNode","Finish","GetAdjacencyMatrix","GraphBase","GraphProp","GraphRef","IntoEdgeReferences","IntoEdges","IntoEdgesDirected","IntoNeighbors","IntoNeighborsDirected","IntoNodeIdentifiers","IntoNodeReferences","Item","Map","Neighbors","NeighborsDirected","NodeCompactIndexable","NodeCount","NodeFiltered","NodeFilteredEdgeReferences","NodeFilteredEdges","NodeFilteredNeighbors","NodeFilteredNodes","NodeId","NodeId","NodeId","NodeIdentifiers","NodeIndexable","NodeRef","NodeRef","NodeReferences","NodeWeight","Prune","Reversed","ReversedEdgeReference","ReversedEdgeReferences","ReversedEdges","Time","Topo","TreeEdge","VisitMap","Visitable","Walker","WalkerIter","Weight","Weight","adjacency_matrix","adjacency_matrix","as_unreversed","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","break_value","breaking","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","compare","context","continuing","continuing","default","default","default","default","default","default","depth_first_search","discovered","discovered","discovered","edge_bound","edge_bound","edge_bound","edge_bound","edge_count","edge_count","edge_references","edge_references","edge_references","edge_references","edge_weight","edge_weight","edge_weight_mut","edges","edges","edges","edges","edges_directed","edges_directed","edges_directed","edges_directed","empty","empty","eq","equivalent","equivalent","equivalent","finished","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_fn","from_fn","from_index","from_index","from_index","from_index","from_index","from_index","from_index","from_index","from_parts","hash","id","id","id","include_edge","include_node","inner_mut","inner_ref","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_unreversed","is_adjacent","is_adjacent","is_directed","is_visited","iter","iter","move_to","move_to","neighbors","neighbors","neighbors","neighbors","neighbors_directed","neighbors_directed","neighbors_directed","neighbors_directed","new","new","new","new","next","next","next","next","next","next","next","next","next","next","next","next","next","next","node_bound","node_bound","node_bound","node_bound","node_count","node_count","node_count","node_identifiers","node_identifiers","node_identifiers","node_identifiers","node_references","node_references","node_references","node_references","node_weight","node_weight","node_weight_mut","partial_cmp","reset","reset","reset","reset_map","reset_map","reset_map","reset_map","should_break","should_break","should_prune","should_prune","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","source","source","stack","stack","stack","target","target","to_index","to_index","to_index","to_index","to_index","to_index","to_index","to_index","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","visit","visit_map","visit_map","visit_map","visit_map","walk_next","walk_next","walk_next","walk_next","walk_next","weight","weight","weight"],"q":[[0,"petgraph"],[71,"petgraph::adj"],[266,"petgraph::algo"],[380,"petgraph::algo::astar"],[381,"petgraph::algo::bellman_ford"],[397,"petgraph::algo::dijkstra"],[398,"petgraph::algo::dominators"],[445,"petgraph::algo::feedback_arc_set"],[446,"petgraph::algo::floyd_warshall"],[447,"petgraph::algo::isomorphism"],[452,"petgraph::algo::k_shortest_path"],[453,"petgraph::algo::matching"],[491,"petgraph::algo::simple_paths"],[492,"petgraph::algo::tred"],[494,"petgraph::csr"],[645,"petgraph::data"],[694,"petgraph::data::Element"],[698,"petgraph::dot"],[730,"petgraph::graph"],[1144,"petgraph::graphmap"],[1377,"petgraph::matrix_graph"],[1526,"petgraph::operator"],[1527,"petgraph::prelude"],[1547,"petgraph::stable_graph"],[1800,"petgraph::unionfind"],[1818,"petgraph::visit"]],"d":["Marker type for a directed graph.","Edge direction.","A graph’s edge type determines whether it has directed …","","","An <code>Incoming</code> edge is an inbound edge <em>to</em> the current node.","Convert an element like <code>(i, j)</code> or <code>(i, j, w)</code> into a triple …","","","An <code>Outgoing</code> edge is an outward edge <em>from</em> the current node.","Marker type for an undirected graph.","Simple adjacency list.","Graph algorithms.","","","","","","","","","","","","","","","Compressed Sparse Row (CSR) is a sparse adjacency matrix …","Graph traits for associated data and graph construction.","Simple graphviz dot file format output.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","<code>Graph&lt;N, E, Ty, Ix&gt;</code> is a graph datastructure using an …","<code>GraphMap&lt;N, E, Ty&gt;</code> is a graph datastructure where node …","","Return <code>0</code> for <code>Outgoing</code> and <code>1</code> for <code>Incoming</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","<code>MatrixGraph&lt;N, E, Ty, NullN, NullE, Ix&gt;</code> is a graph …","Operators for creating new graphs from existings ones.","Return the opposite <code>Direction</code>.","","Commonly used items.","<code>StableGraph</code> keeps indices stable across removals.","","","","","","","","","","","","","<code>UnionFind&lt;K&gt;</code> is a disjoint-set data structure.","Graph traits and graph traversals.","","Adjacency list edge index type, a pair of integers.","","A reference to an edge of the graph.","An iterator over the <code>EdgeReference</code> of all the edges of the …","","An adjacency list with labeled edges.","An iterator over the indices of the neighbors of a node.","Adjacency list node index type, a plain integer.","An iterator over all node indices in the graph.","An Iterator over the indices of the outgoing edges from a …","Iterator over the <code>EdgeReference</code> of the outgoing edges from …","A very simple adjacency list with no node or label weights.","Add an edge from <code>a</code> to <code>b</code> to the graph, with its associated …","Add an edge from <code>a</code> to <code>b</code> to the graph, with its associated …","Adds a new node to the list. This allocates a new <code>Vec</code> and …","Adds a new node to the list. This allocates a new <code>Vec</code> and …","Adds a new node to the list by giving its list of …","Adds a new node to the list. This allocates a new <code>Vec</code> and …","","","","","","","","","","","","","","","","","","","","Removes all nodes and edges from the list.","","","","","","","","","","","","","","","","","","","","","","","Lookups whether there is an edge from <code>a</code> to <code>b</code>.","","Returns the number of edges in the list","Returns the number of edges in the list","Accesses the source and target of edge <code>e</code>","Returns an iterator over all edge indices of the graph.","","","Accesses the weight of edge <code>e</code>","Accesses the weight of edge <code>e</code>","","","","","","","","","","Lookups whether there is an edge from <code>a</code> to <code>b</code>.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Returns an iterator of all nodes with an edge starting …","Creates a new, empty adjacency list.","","","","","","","","","","Returns the number of nodes in the list","","Returns an iterator over all node indices of the graph.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Updates or adds an edge from <code>a</code> to <code>b</code> to the graph, with its …","","","","Creates a new, empty adjacency list tailored for <code>nodes</code> …","","An algorithm error: a cycle was found in the graph.","Workspace for a graph traversal.","A floating-point measure.","","Associated data that can be used for measures (such as …","An iterator producing a minimum spanning forest of a graph.","An algorithm error: a cycle of negative weights was found …","A reusable state for computing the <em>strongly connected </em>…","","","","Bellman-Ford algorithms.","","","","","","","","","","","","","","","","","","","","Graph Condense every strongly connected component into a …","[Generic] Return the number of connected components of the …","","","","","Compute dominators of a control-flow graph.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","[Generic] Check if there exists a path starting at <code>from</code> …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Return <code>true</code> if the graph is bipartite. A graph is …","[Generic] Return <code>true</code> if the input directed graph contains …","[Generic] Return <code>true</code> if the input graph contains a cycle.","","","","","","","","[Generic] Compute the <em>strongly connected components</em> using …","","","","","[Generic] Compute a <em>minimum spanning tree</em> of a graph.","","Creates a new <code>TarjanScc</code>","","Returns the index of the component in which v has been …","Return a node id that participates in the cycle","","[Generic] Compute the <em>strongly connected components</em> using …","Renamed to <code>kosaraju_scc</code>.","","","[Generic] Compute the <em>strongly connected components</em> using …","","","","","[Generic] Perform a topological sort of a directed graph.","Compute the transitive reduction and closure of a directed …","","","","","","","","","","","","","","","","","[Generic] A* shortest path algorithm.","","[Generic] Compute shortest paths from node <code>source</code> to all …","","","","","","[Generic] Find the path of a negative cycle reachable from …","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","[Generic] Dijkstra’s shortest path algorithm.","Iterator for nodes dominated by a given node.","The dominance relation for some graph and root.","Iterator for a node’s dominators.","","","","","","","","","","","","","Iterate over all of the given node’s dominators …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get the immediate dominator of the given node.","Iterate over all nodes immediately dominated by the given …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Get the root node used to construct these dominance …","This is an implementation of the engineered “Simple, …","","Iterate over the given node’s strict dominators.","","","","","","","","","","","","","[Generic] Finds a feedback arc set: a set of edges in the …","[Generic] Floyd–Warshall algorithm is an algorithm for …","[Generic] Return <code>true</code> if the graphs <code>g0</code> and <code>g1</code> are …","[Generic] Return <code>true</code> if the graphs <code>g0</code> and <code>g1</code> are …","[Generic] Return <code>true</code> if <code>g0</code> is isomorphic to a subgraph of …","[Generic] Return <code>true</code> if <code>g0</code> is isomorphic to a subgraph of …","Using the VF2 algorithm, examine both syntactic and …","[Generic] k’th shortest path algorithm.","","","Computed <em>matching</em> of the graph.","","","","","","","Returns <code>true</code> if given edge is in the matching, or <code>false</code> …","Returns <code>true</code> if given node is in the matching, or <code>false</code> …","Iterates over all edges from the matching.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","[Generic] Compute a <em>matching</em> using a greedy heuristic.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns <code>true</code> if the number of matched <strong>edges</strong> is 0.","Returns <code>true</code> if the matching is perfect.","Gets the number of matched <strong>edges</strong>.","Gets the matched counterpart of given node, if there is …","[Generic] Compute the <em>maximum matching</em> using Gabow’s …","","","Iterates over all nodes from the matching.","","","","","","","","","","Returns an iterator that produces all simple paths from …","Creates a representation of the same graph respecting …","Computes the transitive reduction and closure of a DAG.","Compressed Sparse Row (<code>CSR</code>) is a sparse adjacency matrix …","","Csr edge index type, a plain integer.","","","","Csr creation error: edges were not in sorted order.","","","","Csr node index type, a plain integer.","Iterator over all nodes of a graph.","Return <code>true</code> if the edge was added","Adds a new node with the given weight, returning the …","","","","","","","","","","","","","","","","","","Remove all edges","","","","","","","","","","","","","","","","","Computes in <strong>O(log |V|)</strong> time.","","","","","Return an iterator of all edges of <code>a</code>.","","Computes in <strong>O(1)</strong> time.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Create a new <code>Csr</code> from a sorted sequence of edges","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Return an iterator of all neighbors of <code>a</code>.","Computes in <strong>O(1)</strong> time.","Create an empty <code>Csr</code>.","","","","","","","","","","","","Computes in <strong>O(1)</strong> time.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Access the edge’s weight.","","Create a new <code>Csr</code> with <code>n</code> nodes. <code>N</code> must implement <code>Default</code> …","A graph that can be extended with further nodes and edges","A graph that can be created","Access node and edge weights (associated data).","Access node and edge weights mutably.","A graph edge.","A graph element.","Iterator adaptors for iterators of <code>Element</code>.","An iterator that filters graph elements.","Create a graph from an iterator of elements.","A graph node.","Add a new edge. If parallel edges (duplicate) are not …","","","","","","","","","","","","","","","","Create an iterator adaptor that filters graph elements.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Add or update the edge from <code>a</code> to <code>b</code>. Return the id of the …","","","","","","<code>Dot</code> configuration.","<code>Dot</code> implements output to graphviz .dot format for a graph.","Use indices for edge labels.","Use no edge labels.","Do not print the graph/digraph string.","Use indices for node labels.","Use no node labels.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a <code>Dot</code> formatting wrapper with default configuration.","","","","","","","","","Create a <code>Dot</code> formatting wrapper with custom configuration.","The default integer type for graph indices. <code>u32</code> is the …","A <code>Graph</code> with directed edges.","The graph’s edge type.","Edge identifier.","Iterator over the edge indices of a graph.","Reference to a <code>Graph</code> edge.","Iterator over all edges of a graph.","Iterator yielding mutable access to all edge weights.","Iterator over the edges of from or to a node","Iterator over the multiple directed edges connecting a …","An iterator over either the nodes without edges to them or …","<code>Frozen</code> is a graph wrapper.","<code>Graph&lt;N, E, Ty, Ix&gt;</code> is a graph datastructure using an …","A <code>GraphIndex</code> is a node or edge index.","Trait for the unsigned integer type used for node and edge …","Iterator over the neighbors of a node.","The graph’s node type.","Node identifier.","Iterator over the node indices of a graph.","Iterator over all nodes of a graph.","Iterator yielding mutable access to all node weights.","A <code>Graph</code> with undirected edges.","A “walker” object that can be used to step through the …","","Add an edge from <code>a</code> to <code>b</code> to the graph, with its associated …","Add a node (also called vertex) with associated data <code>weight</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the current node and edge capacity of the graph.","Remove all nodes and edges","Remove all edges","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Lookup if there is an edge from <code>a</code> to <code>b</code>.","","","","","Return a “walker” object that can be used to step …","","","Return the number of edges in the graph.","","","Access the source and target nodes for <code>e</code>.","Short version of <code>EdgeIndex::new</code>","Return an iterator over the edge indices of the graph","Create an iterator over all edges, in indexed order.","","","","Access the weight for edge <code>e</code>.","","Access the weight for edge <code>e</code>, mutably.","","","Return an iterator yielding immutable access to all edge …","Return an iterator yielding mutable access to all edge …","Return an iterator of all edges of <code>a</code>.","","","Return an iterator over all the edges connecting <code>a</code> and <code>b</code>.","","Return an iterator of all edges of <code>a</code>, in the specified …","","","An invalid <code>EdgeIndex</code> used to denote absence of an edge, …","","","","","","","","","","Extend the graph from an iterable of edges.","Return an iterator over either the nodes without edges to …","Create a new <code>Graph</code> by mapping nodes and edges. A node or …","Lookup an edge from <code>a</code> to <code>b</code>.","Lookup an edge between <code>a</code> and <code>b</code>, in either direction.","Accessor for data structure internals: the first edge in …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a new <code>Graph</code> from an iterable of edges.","","","","","","","","","","","","","","","","","","","","Index the <code>Graph</code> by two indices, any combination of node or …","Index the <code>Graph</code> by two indices, any combination of node or …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert the graph into either undirected or directed. No …","","","","","","","","","","","Convert the graph into a vector of Nodes and a vector of …","","","Whether the graph has directed edges or not.","Create a new <code>Graph</code> by mapping node and edge weights to new …","","","Return an iterator of all nodes with an edge starting from …","","","Return an iterator of all neighbors that have an edge …","","","Return an iterator of all neighbors that have an edge …","","Create a new <code>Graph</code> with directed edges.","Create a new <code>Frozen</code> from a mutable reference to a graph.","","","","Create a new <code>Graph</code> with undirected edges.","Step to the next edge and its endpoint node in the walk …","","","","","","","","","","","","","","","Accessor for data structure internals: the next edge for …","","Accessor for data structure internals: the first edge in …","Accessor for data structure internals: the next edge for …","","","","Return the number of nodes (vertices) in the graph.","","","","","Short version of <code>NodeIndex::new</code>","Return an iterator over the node indices of the graph.","","","","Access the weight for node <code>a</code>.","","","Access the weight for node <code>a</code>, mutably.","","Return an iterator yielding immutable access to all node …","Return an iterator yielding mutable access to all node …","","","Access the internal edge array.","Access the internal node array.","Remove an edge and return its edge weight, or <code>None</code> if it …","Remove <code>a</code> from the graph if it exists, and return its …","Reserves capacity for at least <code>additional</code> more edges to be …","Reserves the minimum capacity for exactly <code>additional</code> more …","Reserves the minimum capacity for exactly <code>additional</code> more …","Reserves capacity for at least <code>additional</code> more nodes to be …","","","Keep all edges that return <code>true</code> from the <code>visit</code> closure, …","Keep all nodes that return <code>true</code> from the <code>visit</code> closure, …","Reverse the direction of all edges","Shrinks the capacity of the graph as much as possible.","Shrinks the capacity of the underlying edges collection as …","Shrinks the capacity of the underlying nodes collection as …","","","","","","","","","Return the source node index.","","Return the target node index.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Add or update an edge from <code>a</code> to <code>b</code>. If the edge already …","","","","","Access the edge’s weight.","Associated node data.","Associated edge data.","","Create a new <code>Graph</code> with estimated capacity.","","","A <code>GraphMap</code> with directed edges.","","","<code>GraphMap&lt;N, E, Ty&gt;</code> is a graph datastructure using an …","","","","","A trait group for <code>GraphMap</code>’s node identifier.","","A reference that is hashed and compared by its pointer …","A <code>GraphMap</code> with undirected edges.","","Add an edge connecting <code>a</code> and <code>b</code> to the graph, with …","","Add node <code>n</code> to the graph.","","Return an iterator over all edges of the graph with their …","Return an iterator over all edges of the graph in …","","","","","","","","","","","","","","","","","","","","","","","Return the current node and edge capacity of the graph.","Remove all nodes and edges","","","","","","","","","","","","","","","","","","","","","Ptr is ordered by pointer value, i.e. an arbitrary but …","","Return <code>true</code> if the edge connecting <code>a</code> with <code>b</code> is contained …","Return <code>true</code> if the node is contained in the graph.","","","","","","Return the number of edges in the graph.","","","Return a reference to the edge weight connecting <code>a</code> with <code>b</code>, …","Return a mutable reference to the edge weight connecting <code>a</code> …","Return an iterator of target nodes with an edge starting …","","","Return an iterator of target nodes with an edge starting …","Ptr compares by pointer equality, i.e if they point to the …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a new <code>GraphMap</code> from an iterable of edges.","","Creates a <code>GraphMap</code> that corresponds to the given <code>Graph</code>.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return a <code>Graph</code> that corresponds to this <code>GraphMap</code>.","","","","","","","","","","","Whether the graph has directed edges.","","","","","Return an iterator of all nodes with an edge starting from …","","Return an iterator of all neighbors that have an edge …","Create a new <code>GraphMap</code>","","","","","","","","","","","","","","Return the number of nodes in the graph.","","","","Return an iterator over the nodes of the graph.","","","","Remove edge from <code>a</code> to <code>b</code> from the graph and return the edge …","Return <code>true</code> if node <code>n</code> was removed.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new <code>GraphMap</code> with estimated capacity.","","A <code>MatrixGraph</code> with directed edges.","Iterator over all edges of a graph.","Iterator over the edges of from or to a node","","<code>MatrixGraph&lt;N, E, Ty, Null&gt;</code> is a graph datastructure using …","Iterator over the neighbors of a node.","Iterator over the node identifiers of a graph.","Node identifier.","Iterator over all nodes of a graph.","<code>NotZero</code> is used to optimize the memory usage of edge …","Wrapper trait for an <code>Option</code>, allowing user-defined structs …","A <code>MatrixGraph</code> with undirected edges.","Base trait for types that can be wrapped in a <code>NotZero</code>.","Add an edge from <code>a</code> to <code>b</code> to the graph, with its associated …","","","Add a node (also called vertex) with associated data <code>weight</code>…","","","","","","","","","","","","","","","","Remove all nodes and edges.","","","","","","","","","","","","","","","","Return the number of edges in the graph.","","Access the weight for edge <code>e</code>.","Access the weight for edge <code>e</code>, mutably.","","Return an iterator of all edges of <code>a</code>.","","Return an iterator of all edges of <code>a</code>, in the specified …","Extend the graph from an iterable of edges.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a new <code>MatrixGraph</code> from an iterable of edges.","","Return true if there is an edge between <code>a</code> and <code>b</code>.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Return whether the graph has directed edges or not.","Return true if <code>self</code> is equal to the sentinel value.","Return an iterator of all nodes with an edge starting from …","","","Return an iterator of all neighbors that have an edge …","Create a new <code>MatrixGraph</code> with directed edges.","Create a new <code>MatrixGraph</code> with undirected edges.","","","","","","","","Return the number of nodes (vertices) in the graph.","","Short version of <code>NodeIndex::new</code> (with Ix = <code>DefaultIx</code>)","","Access the weight for node <code>a</code>.","Access the weight for node <code>a</code>, mutably.","Remove the edge from <code>a</code> to <code>b</code> to the graph.","Remove <code>a</code> from the graph.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Update the edge from <code>a</code> to <code>b</code> to the graph, with its …","","Create a new <code>MatrixGraph</code> with estimated capacity for nodes.","Return the singleton object which can be used as a …","[Generic] complement of the graph","","","","","","","","","","","","","","","","","","","","","","","Iterator over the edge indices of a graph.","Reference to a <code>StableGraph</code> edge.","Iterator over all edges of a graph.","Iterator over the edges of from or to a node","Iterator over the multiple directed edges connecting a …","An iterator over either the nodes without edges to them or …","","","Iterator over the neighbors of a node.","","Iterator over the node indices of a graph.","Iterator over all nodes of a graph.","A <code>StableGraph</code> with directed edges.","<code>StableGraph&lt;N, E, Ty, Ix&gt;</code> is a graph datastructure using …","A <code>StableGraph</code> with undirected edges.","A “walker” object that can be used to step through the …","","Add an edge from <code>a</code> to <code>b</code> to the graph, with its associated …","","Add a node (also called vertex) with associated data <code>weight</code>…","","","","","","","","","","","","","","","","","","","","","","","","Return the current node and edge capacity of the graph.","Remove all nodes and edges","Remove all edges","","","","","","","","","","","","","","","","","","","","","","","","Lookup if there is an edge from <code>a</code> to <code>b</code>.","","","Return a “walker” object that can be used to step …","","Return the number of edges in the graph.","","Access the source and target nodes for <code>e</code>.","","Return an iterator over the edge indices of the graph","Create an iterator over all edges in the graph, in indexed …","","Access the weight for edge <code>e</code>.","","Access the weight for edge <code>e</code>, mutably","Return an iterator yielding immutable access to all edge …","Return an iterator yielding mutable access to all edge …","","Return an iterator of all edges of <code>a</code>.","Return an iterator over all the edges connecting <code>a</code> and <code>b</code>.","","Return an iterator of all edges of <code>a</code>, in the specified …","","Extend the graph from an iterable of edges.","Return an iterator over either the nodes without edges to …","Create a new <code>StableGraph</code> by mapping nodes and edges. A …","Lookup an edge from <code>a</code> to <code>b</code>.","Lookup an edge between <code>a</code> and <code>b</code>, in either direction.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a new <code>StableGraph</code> from an iterable of edges.","","","","","","","","","Index the <code>StableGraph</code> by two indices, any combination of …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Whether the graph has directed edges or not.","Create a new <code>StableGraph</code> by mapping node and edge weights …","Return an iterator of all nodes with an edge starting from …","","","Return an iterator of all neighbors that have an edge …","Return an iterator of all neighbors that have an edge …","Create a new <code>StableGraph</code> with directed edges.","Step to the next edge and its endpoint node in the walk …","","","","","","","","","","","","","","","Return an upper bound of the node indices in the graph","","Return the number of nodes (vertices) in the graph.","","","Return an iterator over the node indices of the graph","","","Access the weight for node <code>a</code>.","","Access the weight for node <code>a</code>, mutably.","Return an iterator yielding immutable access to all node …","Return an iterator yielding mutable access to all node …","Remove an edge and return its edge weight, or <code>None</code> if it …","Remove <code>a</code> from the graph if it exists, and return its …","","Keep all edges that return <code>true</code> from the <code>visit</code> closure, …","Keep all nodes that return <code>true</code> from the <code>visit</code> closure, …","Reverse the direction of all edges","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Add or update an edge from <code>a</code> to <code>b</code>. If the edge already …","","Access the edge’s weight.","","","Create a new <code>StableGraph</code> with estimated capacity.","<code>UnionFind&lt;K&gt;</code> is a disjoint-set data structure. It tracks …","","","","","Returns <code>true</code> if the given elements belong to the same set, …","Return the representative for <code>x</code>.","Return the representative for <code>x</code>.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Return a vector mapping each element to its representative.","Create a new <code>UnionFind</code> of <code>n</code> disjoint sets.","","","","","Unify the two sets containing <code>x</code> and <code>y</code>.","The associated adjacency matrix type","An edge to an already visited node.","A breadth first search (BFS) of a graph.","Stop the DFS traversal and return the provided value.","Continue the DFS traversal as normal.","Control flow for <code>depth_first_search</code> callbacks.","Control flow for callbacks.","A cross or forward edge.","Define associated data for nodes and edges","Visit nodes of a graph in a depth-first-search (DFS) …","A depth first search (DFS) visitor event.","Visit nodes in a depth-first-search (DFS) emitting nodes …","","A graph with a known edge count.","An edge-filtering graph adaptor.","A filtered edges iterator.","A filtered neighbors iterator.","A filtered neighbors-directed iterator.","","edge identifier","The graph’s <code>NodeId</code>s map to indices","An edge reference.","","","The kind of edges in the graph.","","","","A graph filter for edges","A graph filter for nodes.","All edges from a node have been reported.","Create or access the adjacency matrix of a graph.","Base graph trait: defines the associated node identifier …","Edge kind property (directed or undirected edges)","A copyable reference to a graph.","Access to the sequence of the graph’s edges","Access to the edges of each node.","Access to all edges of each node, in the specified …","Access to the neighbors of each node","Access to the neighbors of each node, through incoming or …","Access to the sequence of the graph’s <code>NodeId</code>s.","Access to the sequence of the graph’s nodes","","The associated map type","","","The graph’s <code>NodeId</code>s map to indices, in a range without …","A graph with a known node count.","A node-filtering graph adaptor.","A filtered edges iterator.","A filtered edges iterator.","A filtered neighbors iterator.","A filtered node references iterator.","","","node identifier","","The graph’s <code>NodeId</code>s map to indices","A node reference.","","","","Prune the current node from the DFS traversal. No more …","An edge-reversing graph adaptor.","A reversed edge reference","A reversed edge references iterator.","A reversed edges iterator.","Strictly monotonically increasing event time for a depth …","A topological order traversal for a graph.","An edge of the tree formed by the traversal.","A mapping for storing the visited status for NodeId <code>N</code>.","A graph that can create a map that tracks the visited …","A walker is a traversal state, but where part of the …","A walker and its context wrapped into an iterator.","","","Create the adjacency matrix","","Return the original, unreversed edge reference.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the value in <code>Control::Break(_)</code>, if present.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A recursive depth first search.","The map of discovered nodes","The map of discovered nodes","The map of discovered nodes","Return an upper bound of the edge indices in the graph …","","","","Return the number of edges in the graph.","","","","","","","","","","","","","","","","","Create a new <strong>Dfs</strong> using the graph’s visitor map, and no …","Create a new <code>DfsPostOrder</code> using the graph’s visitor map, …","","","","","The map of finished nodes","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create an <code>NodeFiltered</code> adaptor from the closure <code>filter</code>.","Create an <code>EdgeFiltered</code> adaptor from the closure <code>filter</code>.","Convert <code>i</code> to a node index. <code>i</code> must be a valid value in the …","Convert <code>i</code> to an edge index. <code>i</code> must be a valid value in the …","","","","","","","Create a <code>Dfs</code> from a vector and a visit map","","The edge’s identifier.","","","Return true to have the edge be part of the graph","Return true to have the node be part of the graph","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Consume <code>self</code> and return the original, unreversed edge …","Return true if there is an edge from <code>a</code> to <code>b</code>, false …","","","Return whether <code>a</code> has been visited before.","Create an iterator out of the walker and given <code>context</code>.","Create an iterator out of the walker and given <code>context</code>.","Keep the discovered map, but clear the visit stack and …","Keep the discovered and finished map, but clear the visit …","Return an iterator of the neighbors of node <code>a</code>.","","","","","","","","Create a new <strong>Dfs</strong>, using the graph’s visitor map, and put …","Create a new <code>DfsPostOrder</code> using the graph’s visitor map, …","Create a new <strong>Bfs</strong>, using the graph’s visitor map, and put …","Create a new <code>Topo</code>, using the graph’s visitor map, and …","Return the next node in the dfs, or <strong>None</strong> if the traversal …","Return the next node in the traversal, or <code>None</code> if the …","Return the next node in the bfs, or <strong>None</strong> if the traversal …","Return the next node in the current topological order …","","","","","","","","","","","Return an upper bound of the node indices in the graph …","","","","","","","","","","","","","","","","","","","Clear the visit state","Clear the visit state","Clear visited state, and put all initial nodes in the to …","Reset the visitor map (and resize to new size of graph if …","","","","","","","","","","","","","","","","","The source node of the edge.","","The stack of nodes to visit","The stack of nodes to visit","The queue of nodes to visit","The target node of the edge.","","Convert <code>a</code> to an integer index.","Convert <code>a</code> to an integer index.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Mark <code>a</code> as visited.","Create a new visitor map","","","","Advance to the next item","","","","","A reference to the weight of the edge.","",""],"i":[0,0,0,0,0,1,0,83,0,1,0,0,0,1,2,3,1,2,3,1,2,3,1,2,3,1,1,0,0,0,1,1,1,1,1,2,3,1,2,3,0,0,1,1,1,2,3,83,40,2,3,0,0,1,1,0,0,1,2,3,1,2,3,1,2,3,1,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,16,20,21,22,23,24,14,25,26,16,20,21,22,23,24,14,25,26,14,16,20,21,22,23,24,14,25,26,16,20,21,22,23,24,14,25,26,16,22,16,22,14,14,14,14,14,14,14,14,14,14,14,16,22,16,16,16,22,22,22,14,16,20,21,22,23,24,14,25,26,16,20,21,22,23,24,14,25,26,14,16,15,22,16,20,21,22,23,24,14,25,26,20,21,23,24,25,26,14,14,21,24,14,14,20,21,23,24,25,26,21,24,14,14,14,14,14,14,14,16,22,14,21,24,21,24,20,21,24,25,26,22,22,14,16,20,21,22,23,24,14,25,26,16,20,21,22,23,24,14,25,26,16,20,21,22,23,24,14,25,26,16,20,21,22,23,24,14,25,26,14,14,15,22,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,46,37,38,39,34,46,37,38,39,34,37,38,39,34,37,38,39,0,0,34,46,0,0,0,38,39,0,0,0,0,34,46,37,38,39,34,46,37,38,39,0,0,0,175,34,46,37,38,39,37,0,0,0,0,0,0,0,0,0,0,0,0,64,0,64,0,34,46,37,46,38,64,46,0,0,0,0,34,37,38,39,0,0,34,46,37,38,39,34,46,37,38,39,34,46,37,38,39,175,0,0,0,56,56,56,56,56,0,56,56,56,56,56,56,56,56,0,0,0,0,60,61,62,60,61,62,60,61,62,60,61,62,60,60,61,62,60,61,62,60,60,60,61,62,61,62,61,62,60,0,62,60,60,61,62,60,61,62,60,61,62,60,61,62,0,0,0,0,0,0,0,0,0,0,0,69,71,70,69,71,70,69,69,69,69,71,70,0,69,71,70,71,70,69,69,69,69,0,71,70,69,69,71,70,69,71,70,69,71,70,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,74,74,74,74,76,77,78,79,80,81,82,74,76,77,78,79,80,81,82,74,74,76,77,78,79,80,81,82,74,76,77,78,79,80,81,82,74,74,74,74,74,74,74,74,74,76,77,78,79,80,81,82,74,76,77,78,79,80,81,82,74,74,78,74,74,74,76,77,78,79,80,81,82,77,79,80,81,82,74,74,74,74,74,77,79,80,81,82,82,74,74,74,74,74,74,74,77,80,81,82,78,78,74,74,76,77,78,79,80,81,82,74,76,77,78,79,80,81,82,74,76,77,78,79,80,81,82,74,76,77,78,79,80,81,82,74,78,78,74,0,0,0,0,84,0,0,0,0,84,176,176,84,85,84,85,84,85,84,85,67,108,84,84,84,84,177,84,85,84,85,178,84,85,85,85,67,108,85,84,85,84,85,84,85,84,85,176,179,180,180,181,180,0,0,88,88,88,88,88,89,88,89,88,88,88,88,88,89,89,88,89,88,89,88,89,89,89,88,89,88,89,88,89,89,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,41,41,41,41,41,94,41,95,94,92,93,96,97,98,99,100,101,110,109,102,103,104,105,106,41,95,94,92,93,96,97,98,99,100,101,110,109,102,103,104,105,106,41,41,41,41,95,92,93,96,97,98,99,100,101,102,103,104,105,106,41,41,95,92,93,96,97,98,99,100,101,102,103,104,105,106,92,93,92,93,41,41,92,93,94,99,41,94,41,41,94,41,0,41,41,41,94,41,41,94,41,41,94,41,41,41,41,94,41,41,41,94,92,93,92,93,104,92,92,92,93,93,93,41,41,41,41,41,41,41,92,93,96,97,98,99,100,101,110,109,102,103,104,105,106,41,41,95,94,92,92,93,93,96,97,98,99,100,101,110,109,102,103,104,105,106,41,41,41,41,94,94,92,93,92,104,13,41,41,94,92,92,93,41,41,94,41,94,41,95,94,92,93,96,97,98,99,100,101,110,109,102,103,104,105,106,41,98,99,100,101,110,109,102,103,105,106,41,41,94,41,41,13,92,41,41,94,41,41,94,41,13,41,94,92,92,93,41,95,98,99,100,101,110,109,102,103,105,106,102,103,105,106,41,95,96,97,95,41,94,41,41,94,41,94,0,41,41,94,41,41,94,41,41,94,41,41,92,93,41,41,41,41,41,41,41,41,41,94,41,41,41,41,41,41,98,101,110,109,102,103,105,106,97,104,97,104,41,41,94,94,41,95,92,93,96,97,98,99,100,101,102,103,104,105,106,41,95,94,92,93,96,97,98,99,100,101,110,109,102,103,104,105,106,41,95,94,92,93,96,97,98,99,100,101,110,109,102,103,104,105,106,41,95,94,92,93,96,97,98,99,100,101,110,109,102,103,104,105,106,41,41,41,94,92,104,104,96,97,41,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,116,116,116,116,116,116,116,118,119,116,120,121,122,123,124,117,125,126,118,119,116,120,121,122,123,124,117,125,126,116,116,119,116,120,121,122,123,124,117,125,126,119,116,120,121,122,123,124,117,125,126,119,119,116,116,118,117,116,119,116,116,116,116,116,116,116,116,116,116,119,119,119,119,116,119,116,120,121,122,123,124,117,125,126,118,119,116,120,121,122,123,124,117,125,126,116,116,116,116,116,116,119,116,116,118,119,116,120,121,122,123,124,117,125,126,116,118,120,121,122,123,124,117,125,126,116,116,118,117,120,116,116,116,116,116,118,120,121,122,123,124,117,125,126,118,120,117,116,116,116,116,116,116,118,117,119,116,116,116,120,120,118,120,121,122,123,124,117,125,126,116,116,119,116,120,121,122,123,124,117,125,126,118,119,116,120,121,122,123,124,117,125,126,118,119,116,120,121,122,123,124,117,125,126,118,119,116,120,121,122,123,124,117,125,126,116,116,116,116,0,0,0,0,0,0,0,0,0,0,0,0,0,129,129,129,129,129,137,129,131,132,133,134,135,137,129,131,132,133,134,135,129,129,131,132,133,134,135,129,131,132,133,134,135,137,129,129,129,129,129,129,129,129,129,129,129,131,132,133,134,135,137,129,131,132,133,134,135,129,129,129,129,129,129,129,137,129,131,132,133,134,135,131,132,133,134,135,129,129,136,129,129,129,129,129,129,131,132,133,134,135,129,129,129,129,0,129,129,129,129,129,129,131,132,134,129,129,131,132,133,134,135,137,129,131,132,133,134,135,137,129,131,132,133,134,135,137,129,131,132,133,134,135,129,129,129,129,136,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,111,111,111,111,111,111,138,139,140,141,142,143,144,145,146,147,111,138,139,140,141,142,143,144,145,146,147,111,111,111,111,138,139,140,141,142,143,144,145,146,147,111,111,138,139,140,141,142,143,144,145,146,147,111,111,111,145,111,111,111,111,0,111,111,111,111,111,111,111,111,111,111,111,111,111,140,111,111,111,111,111,111,139,140,141,142,143,144,145,146,147,111,111,138,139,140,141,142,143,144,145,146,147,111,111,111,111,140,111,111,111,111,111,111,138,139,140,141,142,143,144,145,146,147,139,141,142,143,144,145,146,147,111,111,111,111,111,111,111,111,111,138,139,141,142,143,144,145,146,147,139,143,146,147,138,138,111,111,111,111,0,111,111,111,111,111,111,111,111,111,111,111,111,111,111,139,142,144,146,147,140,140,111,111,111,138,139,140,141,142,143,144,145,146,147,111,138,139,140,141,142,143,144,145,146,147,111,138,139,140,141,142,143,144,145,146,147,111,138,139,140,141,142,143,144,145,146,147,111,111,111,140,140,111,111,0,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,66,153,0,151,151,0,0,153,0,0,0,0,153,0,0,0,0,0,174,72,0,0,44,44,63,35,54,68,0,0,153,0,0,0,0,0,0,0,0,0,0,0,170,48,47,53,0,0,0,0,0,0,0,174,182,72,51,0,0,36,36,35,151,0,0,0,0,0,0,153,0,0,0,0,174,182,66,149,150,152,153,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,149,168,150,169,152,153,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,149,168,150,169,151,151,152,153,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,149,168,150,169,152,153,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,149,168,150,169,152,152,158,171,151,152,151,154,155,156,157,0,154,155,156,107,159,164,149,65,149,44,159,164,149,159,149,149,54,159,164,149,68,159,164,149,154,155,152,152,152,152,155,152,153,151,154,155,158,159,160,161,162,163,164,165,166,167,149,168,150,169,152,153,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,149,168,150,169,159,164,52,107,159,159,164,164,149,149,154,152,174,182,150,173,172,158,158,152,153,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,149,168,150,169,158,160,161,162,163,165,166,167,168,169,150,66,149,63,45,170,170,154,155,47,159,164,149,53,159,164,149,154,155,156,157,154,155,156,157,158,160,161,162,163,165,166,167,168,169,52,159,164,149,55,164,149,51,159,164,149,36,159,164,149,159,149,149,152,154,155,157,48,159,164,149,171,151,171,151,160,161,162,163,165,166,167,168,169,174,150,154,155,156,174,150,52,107,159,159,164,164,149,149,152,153,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,149,168,150,169,152,153,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,149,168,150,169,152,153,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,149,168,150,169,152,153,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,149,168,150,169,45,48,159,164,149,170,154,155,156,157,174,182,150],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[3,3],[[]],[[]],[[]],[[1,1],4],[[],4],0,0,0,[[1,1],5],[[],5],[[],5],[[],5],[[1,6],7],[[2,6],7],[[3,6],7],[[]],[[]],[[]],0,0,[[1,8]],[1,9],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],0,0,[1,1],[[1,1],[[10,[4]]]],0,0,[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[14,[13]],[15,[13]],[15,[13]]],[[16,[13]]]],[[[14,[13]],[15,[13]],[15,[13]]],[[10,[[16,[13]]]]]],[[[14,[13]]],[[15,[13]]]],[[[14,[13]]],[[15,[13]]]],[[[14,[13]],17],[[15,[13]]]],[[[14,[13]],9],[[15,[13]]]],[[[14,[13]]],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[14,[13]]]],[[[16,[[0,[13,19]]]]],[[16,[[0,[13,19]]]]]],[[[20,[[0,[13,19]]]]],[[20,[[0,[13,19]]]]]],[[[21,[19,[0,[13,19]]]]],[[21,[19,[0,[13,19]]]]]],[[[22,[13]]],[[22,[13]]]],[[[23,[19,[0,[19,13]]]]],[[23,[19,[0,[19,13]]]]]],[[[24,[19]]],[[24,[19]]]],[[[14,[19,[0,[13,19]]]]],[[14,[19,[0,[13,19]]]]]],[[[25,[13]]],[[25,[13]]]],[[[26,[19,[0,[13,19]]]]],[[26,[19,[0,[13,19]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[16,[[0,[13,27]]]],[16,[[0,[13,27]]]]],4],[[[22,[27,[0,[27,13]]]],[22,[27,[0,[27,13]]]]],4],[[],4],[[],4],[[[14,[13]],[15,[13]],[15,[13]]],5],[[],[[14,[28,[0,[13,28]]]]]],[[[14,[13]]],9],[[[14,[13]]],9],[[[14,[13]],[16,[13]]],10],[[[14,[13]]],[[23,[13]]]],[[[14,[13]],[15,[13]]],[[20,[13]]]],[[[14,[13]]]],[[[14,[13]],[16,[13]]],10],[[[14,[13]],[16,[13]]],10],[[[14,[13]]]],[[[16,[[0,[13,29]]]],[16,[[0,[13,29]]]]],5],[[[22,[29,[0,[29,13]]]],[22,[29,[0,[29,13]]]]],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[[14,[13]],[15,[13]],[15,[13]]],[[10,[[16,[13]]]]]],[[[16,[[0,[13,30]]]],6],7],[[[20,[[0,[13,30]]]],6],7],[[[21,[30,[0,[13,30]]]],6],7],[[[22,[30,[0,[30,13]]]],6],7],[[[23,[30,[0,[30,13]]]],6],7],[[[24,[30]],6],7],[[[14,[30,13]],6],7],[[[25,[30,13]],6],7],[[[26,[30,[0,[13,30]]]],6],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[14,[13]],9]],[[[16,[[0,[13,31]]]],8]],[[[15,[13]]]],[[[22,[13]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[14,[13]],18,[15,[13]],[15,[13]]],5],[[[14,[13]]],5],[[[21,[13]]],9],[24,9],[[[14,[13]],[15,[13]]]],[[],[[14,[13]]]],[[[20,[13]]],10],[[[21,[13]]],10],[[[23,[13]]],[[10,[[16,[13]]]]]],[24,10],[[[25,[13]]],10],[[[26,[13]]],10],[[[21,[13]]],10],[24,10],[[[14,[13]]],9],[[[14,[13]]],9],[[[14,[13]]],[[24,[13]]]],[[[14,[13]]],[[24,[13]]]],[[[14,[13]]]],[[[14,[13]]],10],[[[14,[13]]],10],[[[16,[[0,[13,32]]]],[16,[[0,[13,32]]]]],[[10,[4]]]],[[[22,[32,[0,[32,13]]]],[22,[32,[0,[32,13]]]]],[[10,[4]]]],[[[14,[13]]]],[[[21,[13]],33],10],[[24,33],10],[[[21,[13]],33]],[[24,33]],[[[20,[13]]]],[[[21,[13]]]],[24],[[[25,[13]]]],[[[26,[13]]]],[[[22,[13]]]],[[[22,[13]]]],[[[14,[13]]],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[[14,[13]],[15,[13]],[15,[13]]],[[16,[13]]]],[[[14,[13]]],18],[[[15,[13]]]],[[[22,[13]]]],[9,[[14,[13]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[34,[19,19]]],[[34,[19,19]]]],[[[37,[[0,[35,36,19]]]]],[[37,[[0,[35,36,19]]]]]],[[[38,[19]]],[[38,[19]]]],[39,39],[[]],[[]],[[]],[[]],[[[41,[40,13]],5],[[41,[42,40,13]]]],[[[0,[43,44]]],9],[[],[[34,[[0,[45,28]]]]]],[[],46],0,0,0,[[[38,[29]],[38,[29]]],5],[[39,39],5],0,0,0,0,[[[34,[30,30]],6],7],[[[46,[30]],6],7],[[[37,[[0,[35,36,30]]]],6],7],[[[38,[30]],6],7],[[39,6],7],[[]],[[]],[[]],[[]],[[]],0,0,[[[0,[47,48]],[10,[34]]],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[49,48,47]],[0,[50,29,30]]],5],[[[0,[51,47,48]]],5],[[[0,[52,44]]],5],0,0,0,0,0,0,0,[[[0,[53,48,51]]],[[42,[42]]]],0,[[]],0,[[]],[[[0,[36,44,52]]],[[37,[[0,[36,44,52]]]]]],[[[0,[49,48]]],[[34,[[0,[50,29]],[45,[[0,[50,29]]]]]]]],[[],46],[[[37,[[0,[36,52]]]]],10],[[[46,[[0,[50,29]]]],[0,[47,52]],[0,[50,29]]],9],[[[38,[50]]],50],[[]],[[[46,[[0,[50,29]]]],[0,[51,47,52]],33]],[[[0,[53,48,51]]],[[42,[42]]]],0,0,[[[0,[51,47,52]]],[[42,[42]]]],[[]],[[]],[[]],[[]],[[[0,[53,51,48]],[10,[34]]],[[11,[42,38]]]],0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[]],[[[0,[54,48]],33,33,33],10],0,[[[0,[55,51,54,52]]],[[11,[56,39]]]],[[]],[[]],[[[56,[19,19]]],[[56,[19,19]]]],[[]],0,[[[0,[55,51,54,52,48]]],[[10,[42]]]],[[[56,[30,30]],6],7],[[]],[[]],0,[[]],[[],11],[[],11],[[],12],[[[0,[54,48]],10,33],[[58,[[0,[57,50]]]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[[60,[[0,[50,59,31,19]]]]],[[60,[[0,[50,59,31,19]]]]]],[[[61,[[0,[50,59,31,19]]]]],[[61,[[0,[50,59,31,19]]]]]],[[[62,[[0,[50,59,31,19]]]]],[[62,[[0,[50,59,31,19]]]]]],[[]],[[]],[[]],[[[60,[[0,[50,59,31]]]],[0,[50,59,31]]],[[10,[[61,[[0,[50,59,31]]]]]]]],[[[60,[[0,[50,59,31,30]]]],6],7],[[[61,[[0,[50,59,31,30]]]],6],7],[[[62,[[0,[50,59,31,30]]]],6],7],[[]],[[]],[[]],[[[60,[[0,[50,59,31]]]],[0,[50,59,31]]],[[10,[[0,[50,59,31]]]]]],[[[60,[[0,[50,59,31]]]],[0,[50,59,31]]],[[62,[[0,[50,59,31]]]]]],[[]],[[]],[[]],[[]],[[]],[[[61,[[0,[50,59,31]]]]],10],[[[62,[[0,[50,59,31]]]]],10],[[[60,[[0,[50,59,31]]]]],[[0,[50,59,31]]]],[[[0,[47,48]]],60],[[[62,[[0,[50,59,31]]]]]],[[[60,[[0,[50,59,31]]]],[0,[50,59,31]]],[[10,[[61,[[0,[50,59,31]]]]]]]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[[0,[44,63,55]]],17],[[[0,[43,44,51,63]],33],[[11,[[58,[[0,[64,50]]]],39]]]],[[[0,[43,65,66,63,53]],[0,[43,65,66,63,53]]],5],[[[0,[43,65,67,66,63,68]],[0,[43,65,67,66,63,68]],33,33],5],[[[0,[43,65,66,63,53]],[0,[43,65,66,63,53]]],5],[[[0,[43,65,67,66,63,68]],[0,[43,65,67,66,63,68]],33,33],5],[[[0,[43,65,67,66,63,68]],[0,[43,65,67,66,63,68]],33,33],[[10,[17]]]],[[[0,[54,48,55,52]],10,9,33],[[58,[[0,[57,50]]]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[[69,[52]]],5],[[[69,[52]]],5],[[[69,[52]]],[[70,[52]]]],[[]],[[]],[[]],[[[0,[48,51,52,47]]],[[69,[[0,[48,51,52,47]]]]]],[[]],[[]],[[]],[[]],[[]],[[[69,[52]]],5],[[[69,[55]]],5],[[[69,[52]]],9],[[[69,[52]]],10],[[[0,[48,52,51,54]]],[[69,[[0,[48,52,51,54]]]]]],[[[71,[52]]],10],[[[70,[52]]],10],[[[69,[52]]],[[71,[52]]]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[[0,[55,53]],9,[10,[9]]],17],[[[0,[72,53,43,55]],73]],[[[14,[13]]]],0,0,0,0,0,0,0,0,0,0,0,0,[[[74,[19,40,13]],[75,[13]],[75,[13]],19],5],[[[74,[40,13]]],[[75,[13]]]],[[[74,[40,13]]],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[74,[40,13]]]],[[[74,[19,19,19]]],[[74,[19,19,19]]]],[76,76],[[[77,[19,19,19]]],[[77,[19,19,19]]]],[[[78,[50]]],[[78,[50]]]],[[[79,[19,19,19]]],[[79,[19,19,19]]]],[[[80,[19]]],[[80,[19]]]],[[[81,[19]]],[[81,[19]]]],[[[82,[19,[0,[19,13]]]]],[[82,[19,[0,[19,13]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[74,[40,13]],[75,[13]],[75,[13]]],5],[[],[[74,[40,13]]]],[[[74,[40,13]]],9],[[[74,[40,13]]],9],[[[74,[40,13]]]],[[[74,[40,13]],[75,[13]]],[[77,[40,13]]]],[[[74,[40,13]]]],[[[74,[40,13]],[75,[13]]],73],[[[74,[30,30,30,30]],6],7],[[76,6],7],[[[77,[30,30,30]],6],7],[[[78,[30,30,30]],6],7],[[[79,[30,30,30]],6],7],[[[80,[30]],6],7],[[[81,[30]],6],7],[[[82,[30,[0,[30,13]]]],6],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[74,[40,13]],9]],[[[73,[[0,[19,83]]]]],[[11,[[74,[28,2,13]],76]]]],[[[78,[40,13]]]],[[[74,[40,13]],[75,[13]]]],[[[74,[40,13]],[75,[13]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[74,[40,13]],18,[75,[13]],[75,[13]]],5],[[[74,[40,13]]],5],[[[74,[40,13]]]],[[[74,[40,13]],[75,[13]]],[[73,[[75,[13]]]]]],[[],[[74,[40,13]]]],[[[77,[40,13]]],10],[[[79,[40,13]]],10],[[[80,[13]]],10],[[[81,[13]]],10],[[[82,[13]]],10],[[[82,[13]]],10],[[[74,[40,13]]],9],[[[74,[40,13]]],9],[[[74,[40,13]]],9],[[[74,[40,13]]]],[[[74,[40,13]]]],[[[74,[40,13]],[75,[13]]],9],[[[74,[40,13]]]],[[[77,[40,13]]]],[[[80,[13]]]],[[[81,[13]]]],[[[82,[13]]]],[[[78,[40,13]]]],[[[78,[40,13]]]],[[[74,[40,13]]],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[[74,[40,13]]],18],[[[78,[40]]]],[[[78,[40,13]]]],[9,[[74,[28,40,13]]]],0,0,0,0,0,0,0,0,0,0,[[],10],[[]],[[]],[[]],[[]],[[]],[[[84,[19,19]]],[[84,[19,19]]]],[[[85,[19,19]]],[[85,[19,19]]]],[[]],[[]],[[],10],[[],10],[[[84,[29,29]],[84,[29,29]]],5],[[],5],[[],5],[[],5],[[86,33],[[85,[86,33]]]],[[[84,[30,30]],6],7],[[[85,[30,30]],6],7],[[]],[[]],[87,86],[[]],[[]],[[]],[[[85,[17,33]]],10],[[],10],[[],10],[[[85,[17,33]]]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[]],[[9,9]],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[88,88],5],[[],5],[[],5],[[],5],[[[89,[[0,[44,36,52,63]]]],6],7],[[[89,[[0,[44,36,52,63]]]],6],7],[[88,6],7],[[]],[[]],[[]],[[]],[[[0,[36,44]]],[[89,[[0,[36,44]]]]]],[[],90],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[[0,[36,44]],[73,[88]],91,91],[[89,[[0,[36,44]]]]]],[[[0,[36,44]],[73,[88]]],[[89,[[0,[36,44]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[41,[40,13]]],10],[[[41,[40,13]],[92,[13]],[92,[13]]],[[93,[13]]]],[[[41,[40,13]]],[[92,[13]]]],[[[41,[40,13]]]],[[[41,[40,13]]],18],[[[94,[66]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[41,[40,13]]]],[[[41,[40,13]]]],[[[41,[40,13]]]],[[[41,[19,19,13]]],[[41,[19,19,13]]]],[[[95,[13]]],[[95,[13]]]],[[[92,[19]]],[[92,[19]]]],[[[93,[19]]],[[93,[19]]]],[[[96,[19,50]]],[[96,[19,50]]]],[[[97,[19,50]]],[[97,[19,50]]]],[[[98,[19,19,[0,[19,13]]]]],[[98,[19,19,[0,[19,13]]]]]],[[[99,[13]]],[[99,[13]]]],[[[100,[40,13]]],[[100,[40,13]]]],[[[101,[19,[0,[40,19]],[0,[13,19]]]]],[[101,[19,[0,[40,19]],[0,[13,19]]]]]],[[[102,[19]]],[[102,[19]]]],[[[103,[19]]],[[103,[19]]]],[[[104,[13]]],[[104,[13]]]],[[[105,[19,[0,[19,13]]]]],[[105,[19,[0,[19,13]]]]]],[[[106,[19,[0,[19,13]]]]],[[106,[19,[0,[19,13]]]]]],[[[41,[19,19,13]],[41,[19,19,13]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[92,[27]],[92,[27]]],4],[[[93,[27]],[93,[27]]],4],[[],4],[[],4],[[[41,[40,13]],[92,[13]],[92,[13]]],5],[[],[[41,[40,13]]]],[[],[[92,[28]]]],[[],[[93,[28]]]],[94],[[[99,[13]]],[[95,[13]]]],[[[41,[40,13]]],9],[[[94,[107]]],9],[[[41,[40,13]]],9],[[[41,[40,13]]],9],[[[94,[65]]],9],[[[41,[40,13]],[93,[13]]],10],[9,[[93,[13]]]],[[[41,[40,13]]],[[103,[13]]]],[[[41,[40,13]]],[[106,[13]]]],[[[41,[40,13]]]],[[[94,[44]]]],[[[41,[40,13]]],10],[[[41,[40,13]],[93,[13]]],10],[[[94,[67]]],10],[[[41,[40,13]],[93,[13]]],10],[[[41,[40,13]]],10],[[[94,[108]]],10],[[[41,[40,13]]],[[0,[13]]]],[[[41,[40,13]]],[[109,[13]]]],[[[41,[40,13]],[92,[13]]],[[100,[40,13]]]],[[[41,[40,13]]]],[[[94,[54]]]],[[[41,[40,13]],[92,[13]],[92,[13]]],[[101,[40,13]]]],[[[41,[40,13]],1]],[[[41,[40,13]],[92,[13]],1],[[100,[40,13]]]],[[[94,[68]],1]],[[],[[92,[13]]]],[[],[[93,[13]]]],[[[92,[29]],[92,[29]]],5],[[[93,[29]],[93,[29]]],5],[[[104,[29,13]],[104,[29,13]]],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[[41,[28,40,13]],87]],[[[41,[40,13]],1],[[98,[40,13]]]],[[[41,[40,13]],33,33],[[41,[40,13]]]],[[[41,[40,13]],[92,[13]],[92,[13]]],[[10,[[93,[13]]]]]],[[[41,[40,13]],[92,[13]],[92,[13]]],10],[[[41,[40,13]],[92,[13]],1],[[10,[[93,[13]]]]]],[[[41,[30,30,40,13]],6],7],[[[92,[30]],6],7],[[[93,[30]],6],7],[[[96,[30,30]],6],7],[[[97,[30,30]],6],7],[[[98,[30,30,[0,[30,13]]]],6],7],[[[99,[30,30]],6],7],[[[100,[30,[0,[40,30]],[0,[13,30]]]],6],7],[[[101,[30,[0,[40,30]],[0,[13,30]]]],6],7],[[[110,[30,[0,[30,13]]]],6],7],[[[109,[30,[0,[30,13]]]],6],7],[[[102,[30]],6],7],[[[103,[30]],6],7],[[[104,[30,30]],6],7],[[[105,[30,[0,[30,13]]]],6],7],[[[106,[30,[0,[30,13]]]],6],7],[[]],[[[111,[40,13]]],[[41,[40,13]]]],[[]],[[]],[13,[[92,[13]]]],[[]],[13,[[93,[13]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[87,[[41,[28,40,13]]]],[87,[[41,[40,13]]]],[[[41,[40,13]],9]],[[[41,[40,13]],9]],[[[94,[52]],9]],[[[94,[107]],9]],[[[92,[31]],8]],[[[93,[31]],8]],[[]],[[[104,[13]]]],[[],9],[[[41,[40,13]],[92,[13]]]],[[[41,[40,13]],[93,[13]]]],[[[94,[112]]]],[[[92,[13]]],9],[[[92,[13]]],9],[[[93,[13]]],9],[[[41,[40,13]],[92,[13]]]],[[[41,[40,13]],[93,[13]]]],[[[94,[113]]]],[[[41,[40,13]],114,114]],[[[94,[[41,[40,13]]]],114,114]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[41,[40,13]]],[[41,[40,13]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[41,[40,13]]]],[[[41,[40,13]],18,[92,[13]],[92,[13]]],5],[[[94,[66]]],5],[[[41,[40,13]]],5],[[[41,[40,13]],33,33],[[41,[40,13]]]],[[]],[[],[[92,[13]]]],[[[41,[40,13]],[92,[13]]],[[99,[13]]]],[[[41,[40,13]],[92,[13]]],[[99,[13]]]],[[[94,[47]]]],[[[41,[40,13]],[92,[13]],1],[[99,[13]]]],[[[41,[40,13]],[92,[13]],1],[[99,[13]]]],[[[94,[53]],1]],[[[41,[40,13]],[92,[13]]],[[99,[13]]]],[9],[[],[[41,[2]]]],[[],94],[9,[[92,[13]]]],[9,[[92,[13]]]],[9,[[93,[13]]]],[[],[[41,[3]]]],[[[95,[13]],[41,[40,13]]],10],[[[98,[40,13]]],[[10,[[92,[13]]]]]],[[[99,[13]]],[[10,[[92,[13]]]]]],[[[100,[40,13]]],10],[[[101,[40,13]]],[[10,[[104,[13]]]]]],[[[110,[13]]],10],[[[109,[13]]],10],[[[102,[13]]],10],[[[103,[13]]],10],[[[105,[13]]],10],[[[106,[13]]],10],[[[102,[13]]],10],[[[103,[13]]],10],[[[105,[13]]],10],[[[106,[13]]],10],[[[41,[40,13]],[93,[13]],1],[[10,[[93,[13]]]]]],[[[95,[13]],[41,[40,13]]],[[10,[[93,[13]]]]]],[[[96,[13]],1],[[93,[13]]]],[[[97,[13]],1],[[93,[13]]]],[[[95,[13]],[41,[40,13]]],[[10,[[92,[13]]]]]],[[[41,[40,13]]],9],[[[94,[52]]],9],[[[41,[40,13]]],9],[[[41,[40,13]]],9],[[[94,[55]]],9],[[[41,[40,13]]],[[102,[13]]]],[[[94,[51]]]],[9,[[92,[13]]]],[[[41,[40,13]]],[[102,[13]]]],[[[41,[40,13]]]],[[[94,[36]]]],[[[41,[40,13]]],10],[[[41,[40,13]],[92,[13]]],10],[[[94,[67]]],10],[[[41,[40,13]]],10],[[[41,[40,13]],[92,[13]]],10],[[[94,[108]]],10],[[[41,[40,13]]],[[0,[13]]]],[[[41,[40,13]]],[[110,[13]]]],[[[92,[32]],[92,[32]]],[[10,[4]]]],[[[93,[32]],[93,[32]]],[[10,[4]]]],[[[41,[40,13]]],[[73,[[97,[13]]]]]],[[[41,[40,13]]],[[73,[[96,[13]]]]]],[[[41,[40,13]],[93,[13]]],10],[[[41,[40,13]],[92,[13]]],10],[[[41,[40,13]],9]],[[[41,[40,13]],9]],[[[41,[40,13]],9]],[[[41,[40,13]],9]],[[[41,[40,13]]]],[[[94,[48]]]],[[[41,[40,13]],33]],[[[41,[40,13]],33]],[[[41,[40,13]]]],[[[41,[40,13]]]],[[[41,[40,13]]]],[[[41,[40,13]]]],[[[98,[40,13]]]],[[[101,[40,13]]]],[[[110,[13]]]],[[[109,[13]]]],[[[102,[13]]]],[[[103,[13]]]],[[[105,[13]]]],[[[106,[13]]]],[[[97,[13]]],[[92,[13]]]],[[[104,[13]]]],[[[97,[13]]],[[92,[13]]]],[[[104,[13]]]],[[[41,[40,13]],[92,[13]]],9],[[[41,[40,13]],[93,[13]]],9],[[[94,[52]]],9],[[[94,[107]]],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[[41,[40,13]]]],[[[41,[40,13]],[92,[13]],[92,[13]]],[[93,[13]]]],[[[41,[40,13]]],18],[[[94,[48]]]],[[]],[[[104,[13]]]],[[[104,[13]]]],0,0,[[9,9],[[41,[40,13]]]],[[9,9],[[41,[40,13]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[116,[115,40]]],10],[[[116,[115,40]],115,115],10],[[[116,[115,40]]]],[[[116,[115,40]],115],115],[[[116,[[0,[50,27,31]],40]]]],[[[116,[115,40]]],[[117,[115,40]]]],[[[116,[115,40]]],[[118,[115,40]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[116,[115,40]]]],[[[116,[115,40]]]],[119,119],[[[116,[19,19,19]]],[[116,[19,19,19]]]],[[[120,[[0,[115,19]]]]],[[120,[[0,[115,19]]]]]],[[[121,[19,[0,[40,19]]]]],[[121,[19,[0,[40,19]]]]]],[[[122,[19,[0,[40,19]]]]],[[122,[19,[0,[40,19]]]]]],[[[123,[[0,[115,19]],19,[0,[40,19]]]]],[[123,[[0,[115,19]],19,[0,[40,19]]]]]],[[[124,[[0,[115,19]],19,[0,[40,19]]]]],[[124,[[0,[115,19]],19,[0,[40,19]]]]]],[[[117,[[0,[115,19]],19,19]]],[[117,[[0,[115,19]],19,19]]]],[[[125,[[0,[115,19]],19,19]]],[[125,[[0,[115,19]],19,19]]]],[[[126,[[0,[115,19]],19,19]]],[[126,[[0,[115,19]],19,19]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[119,119],4],[[],4],[[[116,[115,40]],115,115],5],[[[116,[115,40]],115],5],[[[118,[115,40]]],9],[[[117,[115,40]]],9],[[],[[116,[115,40]]]],[119],[[[116,[115,40]]],9],[[[116,[115,40]]],9],[[[116,[115,40]]],9],[[[116,[115,40]]]],[[[116,[115,40]],115,115],10],[[[116,[115,40]],115,115],10],[[[116,[115,40]],115],[[123,[115,40]]]],[[[116,[115,40]]]],[[[116,[115,40]],1]],[[[116,[115,40]],115,1],[[124,[115,40]]]],[[119,119],5],[[],5],[[],5],[[],5],[[[116,[115,40]],87]],[[[119,[30]],6],7],[[[116,[[0,[59,31,30]],30,40]],6],7],[[[120,[[0,[115,30]]]],6],7],[[[121,[30,[0,[40,30]]]],6],7],[[[122,[30,[0,[40,30]]]],6],7],[[[123,[[0,[115,30]],30,[0,[40,30]]]],6],7],[[[124,[[0,[115,30]],30,[0,[40,30]]]],6],7],[[[117,[[0,[115,30]],30,30]],6],7],[[[125,[[0,[115,30]],30,30]],6],7],[[[126,[[0,[115,30]],30,30]],6],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[87,[[116,[115,40]]]],[87,[[116,[115,40]]]],[[[41,[115,19,40,13]]],[[116,[115,19,40]]]],[[[116,[115,40]],9]],[[[116,[115,40]],9]],[87,[[116,[115,40]]]],[[119,8]],[[[116,[115,40]]]],[[[116,[115,40]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[116,[115,40]]],[[41,[115,40,13]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[116,[[0,[50,27,31]],40]],[0,[50,27,31]],[0,[50,27,31]]],5],[[[116,[115,40]]],5],[[[118,[115,40]]],10],[[[117,[115,40]]],10],[[[120,[115]]],9],[[[116,[[0,[50,27,31]],40]]]],[[[116,[115,40]],115],[[121,[115,40]]]],[[[116,[[0,[50,27,31]],40]],[0,[50,27,31]],1]],[[[116,[115,40]],115,1],[[122,[115,40]]]],[[],[[116,[115,40]]]],[[[118,[115,40]]],10],[[[120,[115]]],10],[[[121,[115,40]]],[[10,[115]]]],[[[122,[115,40]]],[[10,[115]]]],[[[123,[115,40]]],10],[[[124,[115,40]]],10],[[[117,[115,40]]],10],[[[125,[115,40]]],10],[[[126,[115,40]]],10],[[[118,[115,40]]],10],[[[120,[115]]],10],[[[117,[115,40]]],10],[[[116,[115,40]]],9],[[[116,[115,40]]],9],[[[116,[115,40]]],9],[[[116,[115,40]]]],[[[116,[115,40]]]],[[[116,[115,40]]],[[120,[115]]]],[[[118,[115,40]],9],10],[[[117,[115,40]],9],10],[[119,119],[[10,[4]]]],[[[116,[115,40]],115,115],10],[[[116,[115,40]],115],5],[[[116,[[0,[50,27,31]],40]]]],[[[120,[115]],33],10],[[[120,[115]],33]],[[[118,[115,40]]]],[[[120,[115]]]],[[[121,[115,40]]]],[[[122,[115,40]]]],[[[123,[115,40]]]],[[[124,[115,40]]]],[[[117,[115,40]]]],[[[125,[115,40]]]],[[[126,[115,40]]]],[[[116,[115,40]]],9],[[[116,[115,40]]],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[[116,[115,40]]]],[[[116,[[0,[50,27,31]],40]]],[[127,[[0,[50,27,31]]]]]],[[9,9],[[116,[115,40]]]],[[9,9],[[116,[115,40]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[[129,[40,128,13]],[130,[13]],[130,[13]]]],[[[129,[40,128,13]]],10],[[[129,[40,128,13]]]],[[[129,[40,128,13]]],[[130,[13]]]],[[[129,[40,128,13]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[129,[40,128,13]]]],[[[129,[19,19,19,[0,[19,128]],19]]],[[129,[19,19,19,[0,[19,128]],19]]]],[[[131,[19]]],[[131,[19]]]],[[[132,[19,19]]],[[132,[19,19]]]],[[[133,[[0,[19,40]],[0,[19,128]],19]]],[[133,[[0,[19,40]],[0,[19,128]],19]]]],[[[134,[[0,[19,40]],[0,[19,128]],19]]],[[134,[[0,[19,40]],[0,[19,128]],19]]]],[[[135,[[0,[19,40]],[0,[19,128]],19]]],[[135,[[0,[19,40]],[0,[19,128]],19]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[137,[136]]]],[[],[[129,[40,128,13]]]],[[[129,[40,128,13]]],9],[[[129,[40,128,13]]],9],[[[129,[40,128,13]]]],[[[129,[40,128,13]],[130,[13]],[130,[13]]]],[[[129,[40,128,13]],[130,[13]],[130,[13]]]],[[[129,[40,128,13]]]],[[[129,[40,128,13]],[130,[13]]],[[135,[40,128,13]]]],[[[129,[2,128,13]],1]],[[[129,[2,128,13]],[130,[13]],1],[[135,[2,128,13]]]],[[[129,[28,40,128,13]],87]],[[[131,[30]],6],7],[[[132,[30,30]],6],7],[[[133,[[0,[30,40]],[0,[30,128]],30]],6],7],[[[134,[[0,[30,40]],[0,[30,128]],30]],6],7],[[[135,[[0,[30,40]],[0,[30,128]],30]],6],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[87,[[129,[28,40,128,13]]]],[[[129,[40,128,13]],9]],[[[129,[40,128,13]],[130,[13]],[130,[13]]],5],[[[129,[40,128,13]]]],[[[129,[40,128,13]],[130,[13]]]],[[[129,[40,128,13]]]],[[[129,[40,128,13]],[130,[13]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[129,[40,128,13]],[130,[13]],[130,[13]]],5],[[[129,[40,128,13]]],5],[[],5],[[[129,[40,128,13]],[130,[13]]],[[134,[40,128,13]]]],[[[129,[40,128,13]],[130,[13]]]],[[[129,[2,128,13]],[130,[13]],1]],[[[129,[2,128,13]],[130,[13]],1],[[134,[2,128,13]]]],[[],[[129,[2]]]],[[],[[129,[3]]]],[[[131,[13]]],10],[[[132,[13]]],10],[[[133,[40,128,13]]],10],[[[134,[40,128,13]]],10],[[[135,[40,128,13]]],10],[[[129,[40,128,13]]],9],[[[129,[40,128,13]]],9],[[[129,[40,128,13]]],9],[[[129,[40,128,13]]]],[9,130],[[[129,[40,128,13]]]],[[[129,[40,128,13]],[130,[13]]]],[[[129,[40,128,13]],[130,[13]]]],[[[129,[40,128,13]],[130,[13]],[130,[13]]]],[[[129,[40,128,13]],[130,[13]]]],[[[129,[40,128,13]]]],[[[131,[13]]]],[[[132,[13]]]],[[[134,[40,128,13]]]],[[[129,[40,128,13]],[130,[13]]],9],[[]],[[]],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[[129,[40,128,13]]]],[[[129,[40,128,13]],[130,[13]],[130,[13]]],10],[[[129,[40,128,13]]],18],[9,[[129,[40,128,13]]]],[[]],[[[41,[19,19,40,13]],[41,[19,19,40,13]],19]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[111,[40,13]]],10],[[[111,[40,13]],[92,[13]],[92,[13]]],[[93,[13]]]],[[[111,[40,13]]]],[[[111,[40,13]]],[[92,[13]]]],[[[111,[40,13]]],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[111,[40,13]]]],[[[111,[40,13]]]],[[[111,[40,13]]]],[[[111,[19,19,13]]],[[111,[19,19,13]]]],[[[138,[13]]],[[138,[13]]]],[[[139,[19,[0,[19,13]]]]],[[139,[19,[0,[19,13]]]]]],[[[140,[13]]],[[140,[13]]]],[[[141,[19,[0,[40,19]],[0,[13,19]]]]],[[141,[19,[0,[40,19]],[0,[13,19]]]]]],[[[142,[19,[0,[40,19]],[0,[13,19]]]]],[[142,[19,[0,[40,19]],[0,[13,19]]]]]],[[[143,[19,19]]],[[143,[19,19]]]],[[[144,[19,19,[0,[19,13]]]]],[[144,[19,19,[0,[19,13]]]]]],[[[145,[19,19]]],[[145,[19,19]]]],[[[146,[19,19]]],[[146,[19,19]]]],[[[147,[19,19]]],[[147,[19,19]]]],[[[111,[19,19,13]],[111,[19,19,13]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[111,[40,13]],[92,[13]],[92,[13]]],5],[[[111,[40,13]],[92,[13]]],5],[[],[[111,[40,13]]]],[[[145,[13]]],[[138,[13]]]],[[[111,[40,13]]],9],[[[111,[40,13]]],9],[[[111,[40,13]]],9],[[[111,[40,13]],[93,[13]]],10],0,[[[111,[40,13]]],[[147,[13]]]],[[[111,[40,13]]]],[[[111,[40,13]]],10],[[[111,[40,13]],[93,[13]]],10],[[[111,[40,13]]],10],[[[111,[40,13]],[93,[13]]],10],[[[111,[40,13]]],17],[[[111,[40,13]]],17],[[[111,[40,13]]]],[[[111,[40,13]],[92,[13]]],[[141,[40,13]]]],[[[111,[40,13]],[92,[13]],[92,[13]]],[[142,[40,13]]]],[[[111,[40,13]],1]],[[[111,[40,13]],[92,[13]],1],[[141,[40,13]]]],[[[140,[29,13]],[140,[29,13]]],5],[[[111,[28,40,13]],87]],[[[111,[40,13]],1],[[144,[40,13]]]],[[[111,[40,13]],33,33],[[111,[40,13]]]],[[[111,[40,13]],[92,[13]],[92,[13]]],[[10,[[93,[13]]]]]],[[[111,[40,13]],[92,[13]],[92,[13]]],10],[[[111,[30,30,40,13]],6],7],[[[139,[30,[0,[30,13]]]],6],7],[[[140,[30,30]],6],7],[[[141,[30,[0,[40,30]],[0,[13,30]]]],6],7],[[[142,[30,[0,[40,30]],[0,[13,30]]]],6],7],[[[143,[30,30]],6],7],[[[144,[30,30,[0,[30,13]]]],6],7],[[[145,[30,30]],6],7],[[[146,[30,30]],6],7],[[[147,[30,30]],6],7],[[[41,[40,13]]],[[111,[40,13]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[87,[[111,[28,40,13]]]],[87,[[111,[40,13]]]],[[[111,[40,13]],9]],[[[111,[40,13]],9]],[[[140,[13]]]],[[[111,[40,13]],[93,[13]]]],[[[111,[40,13]],[92,[13]]]],[[[111,[40,13]],[93,[13]]]],[[[111,[40,13]],[92,[13]]]],[[[111,[40,13]],114,114]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[111,[40,13]],18,[92,[13]],[92,[13]]],5],[[[111,[40,13]]],5],[[[111,[40,13]],33,33],[[111,[40,13]]]],[[[111,[40,13]],[92,[13]]],[[145,[13]]]],[[[111,[40,13]]]],[[[111,[40,13]],[92,[13]],1]],[[[111,[40,13]],[92,[13]],1],[[145,[13]]]],[[[111,[40,13]],[92,[13]]],[[145,[13]]]],[[],[[111,[2]]]],[[[138,[13]],[111,[40,13]]],10],[[[139,[13]]],10],[[[141,[40,13]]],10],[[[142,[40,13]]],[[10,[[140,[13]]]]]],[[[143,[13]]],10],[[[144,[40,13]]],[[10,[[92,[13]]]]]],[[[145,[13]]],[[10,[[92,[13]]]]]],[[[146,[13]]],10],[[[147,[13]]],10],[[[139,[13]]],10],[[[143,[13]]],10],[[[146,[13]]],10],[[[147,[13]]],10],[[[138,[13]],[111,[40,13]]],[[10,[[93,[13]]]]]],[[[138,[13]],[111,[40,13]]],[[10,[[92,[13]]]]]],[[[111,[40,13]]],9],[[[111,[40,13]]],9],[[[111,[40,13]]],9],[[[111,[40,13]]]],0,[[[111,[40,13]]],[[146,[13]]]],[[[111,[40,13]]]],[[[111,[40,13]]],10],[[[111,[40,13]],[92,[13]]],10],[[[111,[40,13]]],10],[[[111,[40,13]],[92,[13]]],10],[[[111,[40,13]]],17],[[[111,[40,13]]],17],[[[111,[40,13]],[93,[13]]],10],[[[111,[40,13]],[92,[13]]],10],[[[111,[40,13]]]],[[[111,[40,13]],33]],[[[111,[40,13]],33]],[[[111,[40,13]]]],[[[139,[13]]]],[[[142,[40,13]]]],[[[144,[40,13]]]],[[[146,[13]]]],[[[147,[13]]]],[[[140,[13]]]],[[[140,[13]]]],[[[111,[40,13]],[93,[13]]],9],[[[111,[40,13]],[92,[13]]],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[[111,[40,13]]]],[[[111,[40,13]],[92,[13]],[92,[13]]],[[93,[13]]]],[[[111,[40,13]]],18],[[[140,[13]]]],[[[140,[13]]]],[[9,9],[[111,[40,13]]]],[[9,9],[[111,[40,13]]]],0,[[]],[[]],[[[148,[19]]],[[148,[19]]]],[[]],[[[148,[13]],13,13],5],[[[148,[13]],13],13],[[[148,[13]],13],13],[[[148,[30]],6],7],[[]],[[]],[[[148,[13]]],[[42,[13]]]],[9,[[148,[13]]]],[[]],[[],11],[[],11],[[],12],[[[148,[13]],13,13],5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[[149,[66]]]],[150],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[151,10],[[],151],[152,152],[[[153,[19]]],[[153,[19]]]],[[[151,[19]]],[[151,[19]]]],[[[154,[19,19]]],[[154,[19,19]]]],[[[155,[19,19]]],[[155,[19,19]]]],[[[156,[19,19]]],[[156,[19,19]]]],[[[157,[19,19]]],[[157,[19,19]]]],[[[158,[19,19]]],[[158,[19,19]]]],[[[159,[19,19]]],[[159,[19,19]]]],[[[160,[19,19]]],[[160,[19,19]]]],[[[161,[19,19]]],[[161,[19,19]]]],[[[162,[19,19,19]]],[[162,[19,19,19]]]],[[[163,[19,19,19]]],[[163,[19,19,19]]]],[[[164,[19,19]]],[[164,[19,19]]]],[[[165,[[0,[54,19]],19]]],[[165,[[0,[54,19]],19]]]],[[[166,[19,19,19]]],[[166,[19,19,19]]]],[[[167,[[0,[68,19]],19]]],[[167,[[0,[68,19]],19]]]],[[[149,[19]]],[[149,[19]]]],[[[168,[19]]],[[168,[19]]]],[[[150,[19]]],[[150,[19]]]],[[[169,[19]]],[[169,[19]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[152,152],4],[[],4],[[[158,[[170,[19]],19]]],19],[[]],[[],151],[[],152],[[],151],[[],[[154,[28]]]],[[],[[155,[28]]]],[[],[[156,[28]]]],[[],[[157,[28]]]],[[[0,[47,48]],87,33],171],0,0,0,[[],9],[[[159,[107]]],9],[[[164,[107]]],9],[[[149,[107]]],9],[[],9],[[[149,[65]]],9],[[]],[[[159,[44,172]]]],[[[164,[44,173]]]],[[[149,[44]]]],[[[159,[67,172]]],10],[[[149,[67]]],10],[[[149,[108]]],10],[[]],[[[159,[54,172]]]],[[[164,[54,173]]]],[[[149,[68]]]],[1],[[[159,[68,172]],1]],[[[164,[68,173]],1]],[[[149,[68]],1]],[[[0,[49,48]]],[[154,[[0,[50,29]],[45,[[0,[50,29]]]]]]]],[[[0,[49,48]]],[[155,[[0,[50,29]],[45,[[0,[50,29]]]]]]]],[[152,152],5],[[],5],[[],5],[[],5],0,[[152,6],7],[[[153,[30]],6],7],[[[151,[30]],6],7],[[[154,[30,30]],6],7],[[[155,[30,30]],6],7],[[[158,[30,30]],6],7],[[[159,[30,30]],6],7],[[[160,[30,30]],6],7],[[[161,[30,30]],6],7],[[[162,[30,30,30]],6],7],[[[163,[30,30,30]],6],7],[[[164,[30,30]],6],7],[[[165,[[0,[54,30]],30]],6],7],[[[166,[30,30,30]],6],7],[[[167,[[0,[68,30]],30]],6],7],[[[149,[30]],6],7],[[[168,[30]],6],7],[[[150,[30]],6],7],[[[169,[30]],6],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[72,91],[[159,[72,91]]]],[[44,91],[[164,[44,91]]]],[9],[9],[[[159,[107]],9]],[[[159,[52]],9]],[[[164,[52]],9]],[[[164,[107]],9]],[[[149,[52]],9]],[[[149,[107]],9]],[[[42,[[0,[50,29]]]],[45,[[0,[50,29]]]]],[[154,[[0,[50,29]],[45,[[0,[50,29]]]]]]]],[[152,8]],[[]],[[]],[[[150,[174]]]],[[],5],[[],5],[[[158,[[170,[19]],19]]],[[170,[19]]]],[[[158,[[170,[19]],19]]],[[170,[19]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[150],[[],5],[[[149,[66]]],5],[[],5],[[],5],[[86,19],[[158,[86,19]]]],[[86,19],[[158,[86,19]]]],[[[154,[[0,[50,29]],[45,[[0,[50,29]]]]]],[0,[50,29]]]],[[[155,[[0,[50,29]],[45,[[0,[50,29]]]]]],[0,[50,29]]]],[[]],[[[159,[47,172]]]],[[[164,[54,173]]]],[[[149,[53]]]],[1],[[[159,[53,172]],1]],[[[164,[68,173]],1]],[[[149,[53]],1]],[[[0,[49,48]],[0,[50,29]]],[[154,[[0,[50,29]],[45,[[0,[50,29]]]]]]]],[[[0,[49,48]],[0,[50,29]]],[[155,[[0,[50,29]],[45,[[0,[50,29]]]]]]]],[[[0,[49,48]],[0,[50,29]]],[[156,[[0,[50,29]],[45,[[0,[50,29]]]]]]]],[[[0,[51,53,48]]],[[157,[[0,[50,29]],[45,[[0,[50,29]]]]]]]],[[[154,[[0,[50,29]],[45,[[0,[50,29]]]]]],47],[[10,[[0,[50,29]]]]]],[[[155,[[0,[50,29]],[45,[[0,[50,29]]]]]],47],[[10,[[0,[50,29]]]]]],[[[156,[[0,[50,29]],[45,[[0,[50,29]]]]]],47],[[10,[[0,[50,29]]]]]],[[[157,[[0,[50,29]],[45,[[0,[50,29]]]]]],[0,[53,48]]],[[10,[[0,[50,29]]]]]],[[[158,[[170,[19]],19]]],10],[[[160,[17,172]]],10],[[[161,[17,172]]],10],[[[162,[44,17,172]]],10],[[[163,[54,17,172]]],10],[[[165,[54,173]]],10],[[[166,[44,17,173]]],10],[[[167,[68,173]]],10],[[[168,[17]]],10],[[[169,[17]]],10],[[],9],[[[159,[52]]],9],[[[164,[52]]],9],[[[149,[52]]],9],[[],9],[[[164,[55]]],9],[[[149,[55]]],9],[[]],[[[159,[51,172]]]],[[[164,[51]]]],[[[149,[51]]]],[[]],[[[159,[36,172]]]],[[[164,[36]]]],[[[149,[36]]]],[[[159,[67,172]]],10],[[[149,[67]]],10],[[[149,[108]]],10],[[152,152],[[10,[4]]]],[[[154,[[0,[50,29]],[45,[[0,[50,29]]]]]],[0,[49,48]]]],[[[155,[[0,[50,29]],[45,[[0,[50,29]]]]]],[0,[49,48]]]],[[[157,[[0,[50,29]],[45,[[0,[50,29]]]]]],[0,[51,53,48]]]],[[]],[[[159,[48]]]],[[[164,[48]]]],[[[149,[48]]]],[[],5],[151,5],[[],5],[151,5],[[[160,[17,172]]]],[[[161,[17,172]]]],[[[162,[44,17,172]]]],[[[163,[54,17,172]]]],[[[165,[54,173]]]],[[[166,[44,17,173]]]],[[[167,[68,173]]]],[[[168,[17]]]],[[[169,[17]]]],[[]],[[[150,[174]]]],0,0,0,[[]],[[[150,[174]]]],[[],9],[[],9],[[[159,[107]]],9],[[[159,[52]]],9],[[[164,[107]]],9],[[[164,[52]]],9],[[[149,[107]]],9],[[[149,[52]]],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],5],[[]],[[[159,[48]]]],[[[164,[48]]]],[[[149,[48]]]],[[],10],[[154,[0,[47,48]]],10],[[155,[0,[47,48]]],10],[[156,[0,[47,48]]],10],[[157,[0,[53,48]]],10],[[]],[[]],[[[150,[174]]]]],"c":[354],"p":[[4,"Direction"],[4,"Directed"],[4,"Undirected"],[4,"Ordering"],[15,"bool"],[3,"Formatter"],[6,"Result"],[8,"Hasher"],[15,"usize"],[4,"Option"],[4,"Result"],[3,"TypeId"],[8,"IndexType"],[3,"List"],[6,"NodeIndex"],[3,"EdgeIndex"],[8,"Iterator"],[3,"FixedBitSet"],[8,"Clone"],[3,"OutgoingEdgeIndices"],[3,"Neighbors"],[3,"EdgeReference"],[3,"EdgeIndices"],[3,"NodeIndices"],[3,"EdgeReferences"],[3,"OutgoingEdgeReferences"],[8,"Ord"],[8,"Default"],[8,"PartialEq"],[8,"Debug"],[8,"Hash"],[8,"PartialOrd"],[8,"FnMut"],[3,"DfsSpace"],[8,"Data"],[8,"IntoNodeReferences"],[3,"MinSpanningTree"],[3,"Cycle"],[3,"NegativeCycle"],[8,"EdgeType"],[3,"Graph"],[3,"Vec"],[8,"NodeCompactIndexable"],[8,"IntoEdgeReferences"],[8,"VisitMap"],[3,"TarjanScc"],[8,"IntoNeighbors"],[8,"Visitable"],[8,"GraphRef"],[8,"Copy"],[8,"IntoNodeIdentifiers"],[8,"NodeIndexable"],[8,"IntoNeighborsDirected"],[8,"IntoEdges"],[8,"NodeCount"],[3,"Paths"],[8,"Measure"],[3,"HashMap"],[8,"Eq"],[3,"Dominators"],[3,"DominatorsIter"],[3,"DominatedByIter"],[8,"GraphProp"],[8,"BoundedMeasure"],[8,"EdgeCount"],[8,"GetAdjacencyMatrix"],[8,"DataMap"],[8,"IntoEdgesDirected"],[3,"Matching"],[3,"MatchedEdges"],[3,"MatchedNodes"],[8,"GraphBase"],[15,"slice"],[3,"Csr"],[6,"NodeIndex"],[3,"EdgesNotSorted"],[3,"Edges"],[3,"EdgeReference"],[3,"EdgeReferences"],[3,"Neighbors"],[3,"NodeIdentifiers"],[3,"NodeReferences"],[8,"IntoWeightedEdge"],[4,"Element"],[3,"FilterElements"],[8,"Sized"],[8,"IntoIterator"],[4,"Config"],[3,"Dot"],[3,"String"],[8,"Fn"],[3,"NodeIndex"],[3,"EdgeIndex"],[3,"Frozen"],[3,"WalkNeighbors"],[3,"Node"],[3,"Edge"],[3,"Externals"],[3,"Neighbors"],[3,"Edges"],[3,"EdgesConnecting"],[3,"NodeIndices"],[3,"EdgeIndices"],[3,"EdgeReference"],[3,"NodeReferences"],[3,"EdgeReferences"],[8,"EdgeIndexable"],[8,"DataMapMut"],[3,"EdgeWeightsMut"],[3,"NodeWeightsMut"],[3,"StableGraph"],[8,"Index"],[8,"IndexMut"],[8,"GraphIndex"],[8,"NodeTrait"],[3,"GraphMap"],[3,"AllEdges"],[3,"AllEdgesMut"],[3,"Ptr"],[3,"Nodes"],[3,"Neighbors"],[3,"NeighborsDirected"],[3,"Edges"],[3,"EdgesDirected"],[3,"NodeIdentifiers"],[3,"NodeReferences"],[3,"HashSet"],[8,"Nullable"],[3,"MatrixGraph"],[6,"NodeIndex"],[3,"NodeIdentifiers"],[3,"NodeReferences"],[3,"EdgeReferences"],[3,"Neighbors"],[3,"Edges"],[8,"Zero"],[3,"NotZero"],[3,"WalkNeighbors"],[3,"NodeReferences"],[3,"EdgeReference"],[3,"Edges"],[3,"EdgesConnecting"],[3,"EdgeReferences"],[3,"Externals"],[3,"Neighbors"],[3,"NodeIndices"],[3,"EdgeIndices"],[3,"UnionFind"],[3,"Reversed"],[3,"ReversedEdgeReference"],[4,"Control"],[3,"Time"],[4,"DfsEvent"],[3,"Dfs"],[3,"DfsPostOrder"],[3,"Bfs"],[3,"Topo"],[3,"WalkerIter"],[3,"NodeFiltered"],[3,"NodeFilteredNeighbors"],[3,"NodeFilteredNodes"],[3,"NodeFilteredEdgeReferences"],[3,"NodeFilteredEdges"],[3,"EdgeFiltered"],[3,"EdgeFilteredNeighbors"],[3,"EdgeFilteredEdges"],[3,"EdgeFilteredNeighborsDirected"],[3,"ReversedEdges"],[3,"ReversedEdgeReferences"],[8,"Walker"],[8,"ControlFlow"],[8,"FilterNode"],[8,"FilterEdge"],[8,"EdgeRef"],[8,"FloatMeasure"],[8,"Build"],[8,"ElementIterator"],[8,"FromElements"],[8,"Create"],[13,"Edge"],[13,"Node"],[8,"NodeRef"]]},\
"pin_utils":{"doc":"Utilities for pinning","t":"OOO","n":["pin_mut","unsafe_pinned","unsafe_unpinned"],"q":[[0,"pin_utils"]],"d":["Pins a value on the stack.","A pinned projection of a struct field.","An unpinned projection of a struct field."],"i":[0,0,0],"f":[0,0,0],"c":[],"p":[]},\
"proc_macro2":{"doc":"github crates-io docs-rs","t":"NNNEDNDNNDDNNNDNEDDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLDCLLLLLLLLLLLLLL","n":["Alone","Brace","Bracket","Delimiter","Group","Group","Ident","Ident","Joint","LexError","Literal","Literal","None","Parenthesis","Punct","Punct","Spacing","Span","TokenStream","TokenTree","as_char","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","byte_string","call_site","character","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","default","delim_span","delimiter","eq","eq","eq","eq","equivalent","equivalent","equivalent","extend","extend","extra","f32_suffixed","f32_unsuffixed","f64_suffixed","f64_unsuffixed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_str","from_str","hash","i128_suffixed","i128_unsuffixed","i16_suffixed","i16_unsuffixed","i32_suffixed","i32_unsuffixed","i64_suffixed","i64_unsuffixed","i8_suffixed","i8_unsuffixed","into","into","into","into","into","into","into","into","into","into","into_iter","is_empty","isize_suffixed","isize_unsuffixed","join","located_at","mixed_site","new","new","new","new","new_raw","partial_cmp","provide","resolved_at","set_span","set_span","set_span","set_span","set_span","source_text","spacing","span","span","span","span","span","span","span_close","span_open","stream","string","subspan","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","token_stream","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u128_suffixed","u128_unsuffixed","u16_suffixed","u16_unsuffixed","u32_suffixed","u32_unsuffixed","u64_suffixed","u64_unsuffixed","u8_suffixed","u8_unsuffixed","unwrap","usize_suffixed","usize_unsuffixed","DelimSpan","borrow","borrow_mut","clone","clone_into","close","fmt","from","into","join","open","to_owned","try_from","try_into","type_id","IntoIter","TokenStream","borrow","borrow_mut","clone","clone_into","fmt","from","into","into_iter","next","size_hint","to_owned","try_from","try_into","type_id"],"q":[[0,"proc_macro2"],[232,"proc_macro2::extra"],[247,"proc_macro2::token_stream"]],"d":["E.g. <code>+</code> is <code>Alone</code> in <code>+ =</code>, <code>+ident</code> or <code>+()</code>.","<code>{ ... }</code>","<code>[ ... ]</code>","Describes how a sequence of token trees is delimited.","A delimited token stream.","A token stream surrounded by bracket delimiters.","A word of Rust code, which may be a keyword or legal …","An identifier.","E.g. <code>+</code> is <code>Joint</code> in <code>+=</code> or <code>&#39;</code> is <code>Joint</code> in <code>&#39;#</code>.","Error returned from <code>TokenStream::from_str</code>.","A literal string (<code>&quot;hello&quot;</code>), byte string (<code>b&quot;hello&quot;</code>), …","A literal character (<code>&#39;a&#39;</code>), string (<code>&quot;hello&quot;</code>), number (<code>2.3</code>), …","<code>Ø ... Ø</code>","<code>( ... )</code>","A <code>Punct</code> is a single punctuation character like <code>+</code>, <code>-</code> or <code>#</code>.","A single punctuation character (<code>+</code>, <code>,</code>, <code>$</code>, etc.).","Whether a <code>Punct</code> is followed immediately by another <code>Punct</code> …","A region of source code, along with macro expansion …","An abstract stream of tokens, or more concretely a …","A single token or a delimited sequence of token trees …","Returns the value of this punctuation character as <code>char</code>.","","","","","","","","","","","","","","","","","","","","","Byte string literal.","The span of the invocation of the current procedural macro.","Character literal.","","","","","","","","","","","","","","","","","","","","","Returns an object that holds this group’s <code>span_open()</code> and","Returns the punctuation used as the delimiter for this …","","","","","","","","","","Items which do not have a correspondence to any API in the …","Creates a new suffixed floating-point literal.","Creates a new unsuffixed floating-point literal.","Creates a new suffixed floating-point literal.","Creates a new unsuffixed floating-point literal.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Checks if this <code>TokenStream</code> is empty.","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Create a new span encompassing <code>self</code> and <code>other</code>.","Creates a new span with the same name resolution behavior …","The span located at the invocation of the procedural …","Returns an empty <code>TokenStream</code> containing no token trees.","Creates a new <code>Group</code> with the given delimiter and token …","Creates a new <code>Punct</code> from the given character and spacing.","Creates a new <code>Ident</code> with the given <code>string</code> as well as the …","Same as <code>Ident::new</code>, but creates a raw identifier (<code>r#ident</code>…","","","Creates a new span with the same line/column information …","Configures the span for <em>only this token</em>.","Configures the span for this <code>Group</code>’s delimiters, but not …","Configure the span for this punctuation character.","Configures the span of this <code>Ident</code>, possibly changing its …","Configures the span associated for this literal.","Returns the source text behind a span. This preserves the …","Returns the spacing of this punctuation character, …","","Returns the span of this tree, delegating to the <code>span</code> …","Returns the span for the delimiters of this token stream, …","Returns the span for this punctuation character.","Returns the span of this <code>Ident</code>.","Returns the span encompassing this literal.","Returns the span pointing to the closing delimiter of this …","Returns the span pointing to the opening delimiter of this …","Returns the <code>TokenStream</code> of tokens that are delimited in …","String literal.","Returns a <code>Span</code> that is a subset of <code>self.span()</code> containing …","","","","","","","","","","","","","","","","","Public implementation details for the <code>TokenStream</code> type, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Convert <code>proc_macro2::Span</code> to <code>proc_macro::Span</code>.","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","An object that holds a <code>Group</code>’s <code>span_open()</code> and …","","","","","Returns a span for the closing punctuation of the group …","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Returns a span covering the entire delimited group.","Returns a span for the opening punctuation of the group …","","","","","An iterator over <code>TokenStream</code>’s <code>TokenTree</code>s.","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","",""],"i":[11,10,10,0,0,8,0,8,11,0,0,8,10,10,0,8,0,0,0,0,1,22,7,6,8,9,10,1,11,12,5,22,7,6,8,9,10,1,11,12,5,5,6,5,7,6,8,9,10,1,11,12,5,7,6,8,9,10,1,11,12,5,12,7,9,9,10,11,12,12,10,11,12,7,7,0,5,5,5,5,22,22,7,7,6,8,8,9,9,10,1,1,11,12,12,5,5,22,7,7,7,6,6,8,8,8,8,8,9,10,1,11,12,5,7,7,7,5,12,5,5,5,5,5,5,5,5,5,5,22,7,6,8,9,10,1,11,12,5,7,7,5,5,6,6,6,7,9,1,12,12,12,22,6,8,9,1,12,5,6,1,22,8,9,1,12,5,9,9,9,5,5,7,6,8,9,10,1,11,12,5,22,7,8,9,1,12,5,0,22,7,6,8,9,10,1,11,12,5,22,7,6,8,9,10,1,11,12,5,22,7,6,8,9,10,1,11,12,5,5,5,5,5,5,5,5,5,5,5,6,5,5,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,34,34,34,34,34,34,34,34,34,34,34,34,34,34],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[4,[3]]],5],[[],6],[2,5],[7,7],[6,6],[8,8],[9,9],[10,10],[1,1],[11,11],[12,12],[5,5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[12,12],13],[[],7],[9,14],[9,10],[[10,10],15],[[11,11],15],[[12,[0,[16,[18,[17]]]]],15],[[12,12],15],[[],15],[[],15],[[],15],[[7,19]],[[7,19]],0,[20,5],[20,5],[21,5],[21,5],[[22,23],24],[[22,23],24],[[7,23],24],[[7,23],24],[[6,23],24],[[8,23],24],[[8,23],24],[[9,23],24],[[9,23],24],[[10,23],24],[[1,23],24],[[1,23],24],[[11,23],24],[[12,23],24],[[12,23],24],[[5,23],24],[[5,23],24],[[]],[8,7],[[]],[25,7],[[]],[26,6],[9,8],[5,8],[1,8],[12,8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[19,7],[19,7],[17,[[27,[7,22]]]],[17,[[27,[5,22]]]],[[12,28]],[29,5],[29,5],[30,5],[30,5],[31,5],[31,5],[32,5],[32,5],[33,5],[33,5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7,34],[7,15],[35,5],[35,5],[[6,6],[[36,[6]]]],[[6,6],6],[[],6],[[],7],[[10,7],9],[[2,11],1],[[17,6],12],[[17,6],12],[[12,12],[[36,[13]]]],[37],[[6,6],6],[[8,6]],[[9,6]],[[1,6]],[[12,6]],[[5,6]],[6,[[36,[38]]]],[1,11],[22,6],[8,6],[9,6],[1,6],[12,6],[5,6],[9,6],[9,6],[9,7],[17,5],[[5,[40,[39]]],[[36,[6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],0,[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[42,5],[42,5],[43,5],[43,5],[44,5],[44,5],[45,5],[45,5],[3,5],[3,5],[6,26],[39,5],[39,5],0,[[]],[[]],[14,14],[[]],[14,6],[[14,23],24],[[]],[[]],[14,6],[14,6],[[]],[[],27],[[],27],[[],41],0,0,[[]],[[]],[34,34],[[]],[[34,23],24],[[]],[[]],[[]],[34,[[36,[8]]]],[34],[[]],[[],27],[[],27],[[],41]],"c":[],"p":[[3,"Punct"],[15,"char"],[15,"u8"],[15,"slice"],[3,"Literal"],[3,"Span"],[3,"TokenStream"],[4,"TokenTree"],[3,"Group"],[4,"Delimiter"],[4,"Spacing"],[3,"Ident"],[4,"Ordering"],[3,"DelimSpan"],[15,"bool"],[8,"Sized"],[15,"str"],[8,"AsRef"],[8,"IntoIterator"],[15,"f32"],[15,"f64"],[3,"LexError"],[3,"Formatter"],[6,"Result"],[3,"TokenStream"],[3,"Span"],[4,"Result"],[8,"Hasher"],[15,"i128"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[3,"IntoIter"],[15,"isize"],[4,"Option"],[3,"Demand"],[3,"String"],[15,"usize"],[8,"RangeBounds"],[3,"TypeId"],[15,"u128"],[15,"u16"],[15,"u32"],[15,"u64"]]},\
"quick_xml":{"doc":"High performance XML reader/writer.","t":"CCNNENNNNCCGNNNNNCNLLLLAAALLLLLLLLLALALLLLLLAMMDLLLLLLLLLLLLLLNENNNNNNNLLLLFLLLLFLLLLLLFFDDDDDNNNNNNNENNNLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLEEDDNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLMLNNDNDDEDENNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Decoder","ElementWriter","EmptyDocType","EndEventMismatch","Error","EscapeError","InvalidAttr","Io","NonDecodable","NsReader","Reader","Result","TextNotFound","UnexpectedBang","UnexpectedEof","UnexpectedToken","UnknownPrefix","Writer","XmlDeclWithoutVersion","borrow","borrow_mut","clone","clone_into","encoding","escape","events","fmt","fmt","from","from","from","from","from","from","into","name","provide","reader","source","to_owned","to_string","try_from","try_into","type_id","writer","expected","found","Decoder","borrow","borrow_mut","clone","clone_into","decode","eq","equivalent","fmt","from","into","to_owned","try_from","try_into","type_id","EntityWithNull","EscapeError","InvalidCodepoint","InvalidDecimal","InvalidHexadecimal","TooLongDecimal","TooLongHexadecimal","UnrecognizedSymbol","UnterminatedEntity","borrow","borrow_mut","clone","clone_into","escape","fmt","fmt","from","into","partial_escape","provide","to_owned","to_string","try_from","try_into","type_id","unescape","unescape_with","BytesCData","BytesDecl","BytesEnd","BytesStart","BytesText","CData","Comment","Decl","DocType","Empty","End","Eof","Event","PI","Start","Text","as_ref","attributes","attributes","attributes_raw","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear_attributes","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","encoding","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","escape","extend_attributes","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_content","from_escaped","from_start","html_attributes","inplace_trim_end","inplace_trim_start","into","into","into","into","into","into","into_inner","into_inner","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","local_name","local_name","name","name","new","new","new","new","new","partial_escape","push_attribute","set_name","standalone","to_end","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_get_attribute","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","unescape","unescape_with","version","with_attributes","Attr","AttrError","Attribute","Attributes","DoubleQ","Duplicated","Empty","ExpectedEq","ExpectedQuote","ExpectedValue","SingleQ","Unquoted","UnquotedValue","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","decode_and_unescape_value","decode_and_unescape_value_with","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","hash","html","into","into","into","into","into_iter","key","key","map","new","next","partial_cmp","provide","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unescape_value","unescape_value_with","value","value","with_checks","Bound","Default","LocalName","Named","Namespace","Prefix","PrefixDeclaration","QName","ResolveResult","Unbound","Unknown","as_namespace_binding","as_ref","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","decompose","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into_inner","into_inner","into_inner","into_inner","local_name","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","prefix","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","NsReader","Reader","Span","borrow","borrow","borrow_mut","borrow_mut","buffer_position","check_comments","check_comments","check_end_names","check_end_names","clone","clone_into","decoder","deref","expand_empty_elements","expand_empty_elements","from","from","from_file","from_file","from_reader","from_reader","from_str","from_str","get_mut","get_mut","get_ref","into","into","into_inner","into_inner","read_event","read_event","read_event_into","read_event_into","read_resolved_event","read_resolved_event_into","read_text","read_text","read_to_end","read_to_end","read_to_end_into","read_to_end_into","resolve","resolve_attribute","resolve_element","to_owned","trim_markup_names_in_closing_tags","trim_markup_names_in_closing_tags","trim_text","trim_text","trim_text_end","trim_text_end","try_from","try_from","try_into","try_into","type_id","type_id","ElementWriter","Writer","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","create_element","from","from","get_mut","get_ref","into","into","into_inner","new","new_with_indent","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","with_attribute","with_attributes","write_bom","write_cdata_content","write_empty","write_event","write_indent","write_inner_content","write_pi_content","write_text_content"],"q":[[0,"quick_xml"],[45,"quick_xml::Error"],[47,"quick_xml::encoding"],[62,"quick_xml::escape"],[89,"quick_xml::events"],[237,"quick_xml::events::attributes"],[323,"quick_xml::name"],[441,"quick_xml::reader"],[502,"quick_xml::writer"]],"d":["","","Empty <code>Event::DocType</code>. <code>&lt;!doctype foo&gt;</code> is correct but `&lt;…","End event mismatch","The error type used by this crate.","Escape error","Attribute parsing error","IO error.","Input decoding error. If <code>encoding</code> feature is disabled, …","","","A specialized <code>Result</code> type where the error is hard-wired to …","Text not found, expected <code>Event::Text</code>","Unexpected &lt;!&gt;","Unexpected End of File","Unexpected token","Specified namespace prefix is unknown, cannot resolve …","","<code>Event::BytesDecl</code> must start with <em>version</em> attribute. …","","","","","A module for wrappers that encode / decode data.","Manage xml character escapes","Defines zero-copy XML events used throughout this library.","","","Creates a new <code>Error::NonDecodable</code> from the given error","","Returns the argument unchanged.","Creates a new <code>Error::EscapeError</code> from the given error","Creates a new <code>Error::Io</code> from the given error","Creates a new <code>Error::Utf8</code> from the given error","Calls <code>U::from(self)</code>.","Module for handling names according to the W3C Namespaces …","","Contains high-level interface for a pull-based XML parser.","","","","","","","Contains high-level interface for an events-based XML …","Expected end event","Found end event","Decoder of byte slices into strings.","","","","","Without <code>encoding</code> feature","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","Entity with Null character","Error for XML escape / unescape.","Not a valid unicode codepoint","Character is not a valid decimal value","Character is not a valid hexadecimal value","Cannot convert decimal to hexa","Cannot convert Hexa to utf8","Unrecognized escape symbol","Cannot find <code>;</code> after <code>&amp;</code>","","","","","Escapes an <code>&amp;str</code> and replaces all xml special characters (<code>&lt;</code>…","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Escapes an <code>&amp;str</code> and replaces xml special characters (<code>&lt;</code>, <code>&gt;</code>, …","","","","","","","Unescape an <code>&amp;str</code> and replaces all xml escaped characters (…","Unescape an <code>&amp;str</code> and replaces all xml escaped characters (…","CDATA content contains unescaped data from the reader. If …","An XML declaration (<code>Event::Decl</code>).","A struct to manage <code>Event::End</code> events","Opening tag data (<code>Event::Start</code>), with optional attributes.","Data from various events (most notably, <code>Event::Text</code>) that …","Unescaped character data stored in <code>&lt;![CDATA[...]]&gt;</code>.","Comment <code>&lt;!-- ... --&gt;</code>.","XML declaration <code>&lt;?xml ...?&gt;</code>.","Document type definition data (DTD) stored in …","Empty element tag (with attributes) <code>&lt;tag attr=&quot;value&quot; /&gt;</code>.","End tag <code>&lt;/tag&gt;</code>.","End of XML document.","Event emitted by <code>Reader::read_event_into</code>.","Processing instruction <code>&lt;?...?&gt;</code>.","Start tag (with attributes) <code>&lt;tag attr=&quot;value&quot;&gt;</code>.","Escaped character data between tags.","","Xml Attributes module","Returns an iterator over the attributes of this tag.","Gets the undecoded raw string with the attributes of this …","Converts the event into a borrowed event. Most useful when …","","","Converts the event into a borrowed event.","","Converts the event into a borrowed event.","Converts the event into a borrowed event.","","Converts the event into a borrowed event.","","","Converts the event into a borrowed event.","","","","","","","Remove all attributes from the ByteStart","","","","","","","","","","","","","","","","","","","Gets xml encoding, excluding quotes (<code>&#39;</code> or <code>&quot;</code>).","","","","","","","","","","","","","Converts this CDATA content to an escaped version, that …","Add additional attributes to this tag using an iterator.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new <code>BytesStart</code> from the given content (name + …","Creates a new <code>BytesText</code> from an escaped string.","Creates a <code>BytesDecl</code> from a <code>BytesStart</code>","Returns an iterator over the HTML-like attributes of this …","Removes trailing XML whitespace bytes from text content.","Removes leading XML whitespace bytes from text content.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Extracts the inner <code>Cow</code> from the <code>BytesText</code> event container.","Extracts the inner <code>Cow</code> from the <code>BytesCData</code> event container.","Converts the event into an owned event.","Converts the event into an owned event.","Converts the event into an owned event.","Ensures that all data is owned to extend the object’s …","Ensures that all data is owned to extend the object’s …","Converts the event to an owned version, untied to the …","Gets the undecoded raw local tag name (excluding …","Gets the undecoded raw local tag name (excluding …","Gets the undecoded raw tag name, as present in the input …","Gets the undecoded raw tag name, as present in the input …","Creates a new <code>BytesStart</code> from the given name.","Constructs a new <code>XmlDecl</code> from the (mandatory) <em>version</em> …","Creates a new <code>BytesEnd</code> borrowing a slice.","Creates a new <code>BytesText</code> from a string. The string is …","Creates a new <code>BytesCData</code> from a string.","Converts this CDATA content to an escaped version, that …","Adds an attribute to this element.","Edit the name of the BytesStart in-place","Gets xml standalone, excluding quotes (<code>&#39;</code> or <code>&quot;</code>).","Creates new paired close tag","","Converts the event into an owned event without taking …","","","","","","","","","","","","Try to get an attribute","","","","","","","","","","","","","Decodes then unescapes the content of the event.","Decodes then unescapes the content of the event with …","Gets xml version, excluding quotes (<code>&#39;</code> or <code>&quot;</code>).","Consumes <code>self</code> and yield a new <code>BytesStart</code> with additional …","A struct representing a key/value XML or HTML attribute.","Errors that can be raised during parsing attributes.","A struct representing a key/value XML attribute.","Iterator over XML attributes.","Attribute with value enclosed in double quotes (<code>&quot;</code>). …","An attribute with the same name was already encountered. …","Attribute without value. Attribute key provided. This is …","Attribute key was not followed by <code>=</code>, position relative to …","Attribute value was not finished with a matching quote, …","Attribute value was not found after <code>=</code>, position relative …","Attribute with value enclosed in single quotes (<code>&#39;</code>). …","Attribute with value not enclosed in quotes. Attribute key …","Attribute value is not quoted, position relative to the …","","","","","","","","","","","","","","","","","","Decodes then unescapes the value.","Decodes then unescapes the value with custom entities.","","","","","","","","","","","","Creates new attribute from raw bytes. Does not apply any …","Returns the argument unchanged.","","Creates new attribute from text representation. Key is …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Creates a new attribute iterator from a buffer, allowing …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns the key value","The key to uniquely define the attribute.","Maps an <code>Attr&lt;T&gt;</code> to <code>Attr&lt;U&gt;</code> by applying a function to a …","Creates a new attribute iterator from a buffer.","","","","","","","","","","","","","","","","","","","","","Decodes using UTF-8 then unescapes the value.","Decodes using UTF-8 then unescapes the value, using custom …","Returns the attribute value. For <code>Self::Empty</code> variant an …","The raw value of the attribute.","Changes whether attributes should be checked for …","<code>Prefix</code> resolved to the specified namespace","XML attribute binds a default namespace. Corresponds to …","A local (unqualified) name of an element or an attribute, …","XML attribute binds a specified prefix to a namespace. …","A namespace name that is declared in a …","A namespace prefix part of the qualified name of an …","A namespace prefix declaration, <code>xmlns</code> or <code>xmlns:&lt;name&gt;</code>, as …","A qualified name of an element or an attribute, including …","Result of prefix resolution which creates by …","Qualified name does not contain prefix, and resolver does …","Specified prefix was not found in scope","If that <code>QName</code> represents <code>&quot;xmlns&quot;</code> series of names, returns …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The same as <code>(qname.local_name(), qname.prefix())</code>, but does …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Creates <code>LocalName</code> from a <code>QName</code>","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts this name to an internal slice representation.","Converts this name to an internal slice representation.","Extracts internal slice","Converts this namespace to an internal slice …","Returns local part of this qualified name.","","","","","","Returns namespace part of this qualified name or <code>None</code> if …","","","","","","","","","","","","","","","","","","","","","","","","","A low level encoding-agnostic XML event reader that …","A low level encoding-agnostic XML event reader.","Range of input in bytes, that corresponds to some piece of …","","","","","Gets the current byte position in the input data.","Changes whether comments should be validated.","Changes whether comments should be validated.","Changes whether mismatched closing tag names should be …","Changes whether mismatched closing tag names should be …","","","Get the decoder, used to decode bytes, read by this …","","Changes whether empty elements should be split into an <code>Open</code>…","Changes whether empty elements should be split into an <code>Open</code>…","Returns the argument unchanged.","Returns the argument unchanged.","Creates an XML reader from a file path.","Creates an XML reader from a file path.","Creates a <code>NsReader</code> that reads from a reader.","Creates a <code>Reader</code> that reads from a given reader.","Creates an XML reader from a string slice.","Creates an XML reader from a string slice.","Gets a mutable reference to the underlying reader.","Gets a mutable reference to the underlying reader.","Gets a reference to the underlying reader.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes <code>NsReader</code> returning the underlying reader","Consumes <code>Reader</code> returning the underlying reader","Reads the next event, borrow its content from the input …","Read an event that borrows from the input rather than a …","Reads the next event into given buffer.","Reads the next <code>Event</code>.","Reads the next event, borrow its content from the input …","Reads the next event into given buffer and resolves its …","Reads content between start and end tags, including any …","Reads content between start and end tags, including any …","Reads until end element is found. This function is …","Reads until end element is found. This function is …","Reads until end element is found using provided buffer as …","Reads until end element is found using provided buffer as …","Resolves a potentially qualified <strong>element name</strong> or <strong>attribute </strong>…","Resolves a potentially qualified <strong>attribute name</strong> into …","Resolves a potentially qualified <strong>element name</strong> into …","","Changes whether trailing whitespaces after the markup name …","Changes whether trailing whitespaces after the markup name …","Changes whether whitespace before and after character data …","Changes whether whitespace before and after character data …","Changes whether whitespace after character data should be …","Changes whether whitespace after character data should be …","","","","","","","A struct to write an element. Contains methods to add …","XML writer. Writes XML <code>Event</code>s to a <code>std::io::Write</code> …","","","","","","","Provides a simple, high-level API for writing XML elements.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the underlying writer.","Get a reference to the underlying writer.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this <code>Writer</code>, returning the underlying writer.","Creates a <code>Writer</code> from a generic writer.","Creates a <code>Writer</code> with configured indents from a generic …","","","","","","","","Adds an attribute to this element.","Add additional attributes to this element using an …","Write a Byte-Order-Mark character to the document.","Write a CData event <code>&lt;![CDATA[...]]&gt;</code> inside the current …","Write an empty (self-closing) tag.","Writes the given event to the underlying writer.","Manually write a newline and indentation at the proper …","Create a new scope for writing XML inside the current …","Write a processing instruction <code>&lt;?...?&gt;</code> inside the current …","Write some text inside the current element."],"i":[0,0,1,1,0,1,1,1,1,0,0,0,1,1,1,1,1,0,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,0,62,62,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,6,0,6,6,6,6,6,6,6,6,6,6,6,0,6,6,6,6,0,6,6,6,6,6,6,0,0,0,0,0,0,0,23,23,23,23,23,23,23,0,23,23,23,23,0,24,24,24,24,26,26,27,27,28,28,29,29,23,23,24,26,27,28,29,23,24,24,26,27,28,29,23,24,26,27,28,29,23,24,26,27,28,29,23,26,24,26,27,28,29,23,24,26,27,28,29,23,29,24,24,26,27,28,29,23,24,26,27,28,29,23,24,28,26,24,28,28,24,26,27,28,29,23,28,29,24,26,27,28,29,23,24,27,24,27,24,26,27,28,29,29,24,24,26,24,24,24,26,27,28,29,23,24,26,27,28,29,23,24,24,26,27,28,29,23,24,26,27,28,29,23,28,28,26,24,0,0,0,0,39,5,39,5,5,5,39,39,5,35,25,5,39,35,25,5,39,35,25,5,39,35,25,5,39,39,35,35,35,5,39,35,5,39,35,25,5,5,39,35,35,35,35,25,5,39,39,25,35,25,5,39,25,39,35,39,25,25,39,5,35,25,5,39,5,35,25,5,39,35,25,5,39,35,25,5,39,35,35,39,35,25,50,47,0,47,0,0,0,0,0,50,50,34,34,33,48,49,34,33,48,47,49,50,34,33,48,47,49,50,34,33,48,47,49,50,34,33,48,47,49,50,34,33,48,47,49,34,34,33,48,47,49,50,34,33,48,47,49,50,34,33,48,47,49,50,34,33,33,48,47,49,50,34,33,48,47,49,50,34,33,48,47,49,50,34,33,48,49,34,34,33,48,47,49,34,34,33,48,47,49,50,34,33,48,47,49,50,34,33,48,47,49,50,34,33,48,47,49,50,0,0,0,51,42,51,42,42,51,42,51,42,42,42,42,51,51,42,51,42,51,42,51,42,51,42,51,42,42,51,42,51,42,51,42,51,42,51,51,51,42,51,42,51,42,51,51,51,42,51,42,51,42,51,42,51,42,51,42,51,42,0,0,60,58,60,58,58,58,58,60,58,58,58,60,58,58,58,58,58,60,58,60,58,60,58,60,60,58,60,60,58,58,60,60,60],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[1,1],[[]],0,0,0,[[1,2],3],[[1,2],3],[4,1],[5,1],[[]],[6,1],[7,1],[8,1],[[]],0,[9],0,[1,[[11,[10]]]],[[]],[[],12],[[],13],[[],13],[[],14],0,0,0,0,[[]],[[]],[15,15],[[]],[[15,[17,[16]]],[[20,[[19,[18]]]]]],[[15,15],21],[[],21],[[15,2],3],[[]],[[]],[[]],[[],13],[[],13],[[],14],0,0,0,0,0,0,0,0,0,[[]],[[]],[6,6],[[]],[18,[[19,[18]]]],[[6,2],3],[[6,2],3],[[]],[[]],[18,[[19,[18]]]],[9],[[]],[[],12],[[],13],[[],13],[[],14],[18,[[13,[[19,[18]],6]]]],[[18,22],[[13,[[19,[18]],6]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[23,23],0,[24,25],[24,[[17,[16]]]],[24,24],[[]],[[]],[26,26],[[]],[27,27],[28,28],[[]],[29,29],[[]],[[]],[23,23],[[]],[[]],[[]],[[]],[[]],[[]],[24,24],[24,24],[26,26],[27,27],[28,28],[29,29],[23,23],[[]],[[]],[[]],[[]],[[]],[[]],[24,[[17,[16]]]],[26,[[17,[16]]]],[27,[[17,[16]]]],[28,[[17,[16]]]],[29,[[17,[16]]]],[23,[[17,[16]]]],[26,[[11,[[20,[[19,[[17,[16]]]]]]]]]],[[24,24],21],[[26,26],21],[[27,27],21],[[28,28],21],[[29,29],21],[[23,23],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[29,[[20,[28]]]],[[24,30],24],[[24,2],3],[[26,2],3],[[27,2],3],[[28,2],3],[[29,2],3],[[23,2],3],[[]],[[]],[[]],[[]],[[]],[[]],[[[31,[[19,[18]]]],32],24],[[[31,[[19,[18]]]]],28],[24,26],[24,25],[28,21],[28,21],[[]],[[]],[[]],[[]],[[]],[[]],[28,[[19,[[17,[16]]]]]],[29,[[19,[[17,[16]]]]]],[24,24],[26,26],[27,27],[28,28],[29,29],[23,23],[24,33],[27,33],[24,34],[27,34],[[[31,[[19,[18]]]]],24],[[18,[11,[18]],[11,[18]]],26],[[[31,[[19,[18]]]]],27],[18,28],[[[31,[[19,[18]]]]],29],[29,[[20,[28]]]],[[24,[31,[35]]]],[[24,[17,[16]]],24],[26,[[11,[[20,[[19,[[17,[16]]]]]]]]]],[24,27],[[]],[24,24],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[24,[0,[[36,[[17,[16]]]],37]]],[[20,[[11,[35]]]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[28,[[20,[[19,[18]]]]]],[[28,22],[[20,[[19,[18]]]]]],[26,[[20,[[19,[[17,[16]]]]]]]],[[24,30],24],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[35,35],[25,25],[5,5],[[[39,[38]]],[[39,[38]]]],[[]],[[]],[[]],[[]],[[[39,[40]],[39,[40]]],41],[[35,42],[[20,[[19,[18]]]]]],[[35,42,22],[[20,[[19,[18]]]]]],[[35,35],21],[[5,5],21],[[[39,[43]],[39,[43]]],21],[[],21],[[],21],[[],21],[[35,2],3],[[25,2],3],[[5,2],3],[[5,2],3],[[[39,[[36,[[17,[16]]]]]],2],3],[[],35],[[]],[[[39,[[17,[16]]]]],35],[[],35],[[]],[[]],[[]],[[[39,[44]],45]],[[18,32],25],[[]],[[]],[[]],[[]],[[]],[[[39,[[17,[16]]]]],34],0,[[39,22],39],[[18,32],25],[25,11],[[[39,[46]],[39,[46]]],[[11,[41]]]],[9],[[]],[[]],[[]],[[]],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[35,[[20,[[19,[18]]]]]],[[35,22],[[20,[[19,[18]]]]]],[[[39,[[17,[16]]]]],[[17,[16]]]],0,[[25,21],25],0,0,0,0,0,0,0,0,0,0,0,[34,[[11,[47]]]],[34,[[17,[16]]]],[33,[[17,[16]]]],[48,[[17,[16]]]],[49,[[17,[16]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34,34],[33,33],[48,48],[47,47],[49,49],[50,50],[[]],[[]],[[]],[[]],[[]],[[]],[[34,34],41],[[33,33],41],[[48,48],41],[[47,47],41],[[49,49],41],[34],[[34,34],21],[[33,33],21],[[48,48],21],[[47,47],21],[[49,49],21],[[50,50],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[34,2],3],[[33,2],3],[[48,2],3],[[47,2],3],[[49,2],3],[[50,2],3],[[]],[[]],[34,33],[[]],[[]],[[]],[[]],[[34,45]],[[33,45]],[[48,45]],[[47,45]],[[49,45]],[[50,45]],[[]],[[]],[[]],[[]],[[]],[[]],[34,[[17,[16]]]],[33,[[17,[16]]]],[48,[[17,[16]]]],[49,[[17,[16]]]],[34,33],[[34,34],[[11,[41]]]],[[33,33],[[11,[41]]]],[[48,48],[[11,[41]]]],[[47,47],[[11,[41]]]],[[49,49],[[11,[41]]]],[34,[[11,[48]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],0,0,0,[[]],[[]],[[]],[[]],[42,32],[[51,21],51],[[42,21],42],[[51,21],51],[[42,21],42],[[[42,[38]]],[[42,[38]]]],[[]],[42,15],[51],[[51,21],51],[[42,21],42],[[]],[[]],[[[36,[52]]],[[20,[[51,[[54,[53]]]]]]]],[[[36,[52]]],[[20,[[42,[[54,[53]]]]]]]],[[],51],[[],42],[18,[[51,[[17,[16]]]]]],[18,[[42,[[17,[16]]]]]],[51],[42],[42],[[]],[[]],[51],[42],[[[51,[[17,[16]]]]],[[20,[23]]]],[[[42,[[17,[16]]]]],[[20,[23]]]],[[[51,[55]],[56,[16]]],[[20,[23]]]],[[[42,[55]],[56,[16]]],[[20,[23]]]],[[[51,[[17,[16]]]]],20],[[[51,[55]],[56,[16]]],20],[[[51,[[17,[16]]]],34],[[20,[[19,[18]]]]]],[[[42,[[17,[16]]]],34],[[20,[[19,[18]]]]]],[[[51,[[17,[16]]]],34],[[20,[57]]]],[[[42,[[17,[16]]]],34],[[20,[57]]]],[[[51,[55]],34,[56,[16]]],[[20,[57]]]],[[[42,[55]],34,[56,[16]]],[[20,[57]]]],[[51,34,21]],[[51,34]],[[51,34]],[[]],[[51,21],51],[[42,21],42],[[51,21],51],[[42,21],42],[[51,21],51],[[42,21],42],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],0,0,[[]],[[]],[[]],[[]],[[[58,[38]]],[[58,[38]]]],[[]],[[[58,[59]],[0,[[36,[18]],37]]],[[60,[59]]]],[[]],[[]],[58],[58],[[]],[[]],[58],[[],58],[[16,32],58],[[]],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[[60,[59]],[31,[35]]],[[60,[59]]]],[[[60,[59]],30],[[60,[59]]]],[[[58,[59]]],20],[[[60,[59]],29],[[20,[[58,[59]]]]]],[[[60,[59]]],[[20,[[58,[59]]]]]],[[[58,[59]],[36,[23]]],20],[[[58,[59]]],20],[[[60,[59]],61],[[20,[[58,[59]]]]]],[[[60,[59]],28],[[20,[[58,[59]]]]]],[[[60,[59]],28],[[20,[[58,[59]]]]]]],"c":[],"p":[[4,"Error"],[3,"Formatter"],[6,"Result"],[3,"Utf8Error"],[4,"AttrError"],[4,"EscapeError"],[3,"Error"],[3,"FromUtf8Error"],[3,"Demand"],[8,"Error"],[4,"Option"],[3,"String"],[4,"Result"],[3,"TypeId"],[3,"Decoder"],[15,"u8"],[15,"slice"],[15,"str"],[4,"Cow"],[6,"Result"],[15,"bool"],[8,"FnMut"],[4,"Event"],[3,"BytesStart"],[3,"Attributes"],[3,"BytesDecl"],[3,"BytesEnd"],[3,"BytesText"],[3,"BytesCData"],[8,"IntoIterator"],[8,"Into"],[15,"usize"],[3,"LocalName"],[3,"QName"],[3,"Attribute"],[8,"AsRef"],[8,"Sized"],[8,"Clone"],[4,"Attr"],[8,"Ord"],[4,"Ordering"],[3,"Reader"],[8,"PartialEq"],[8,"Hash"],[8,"Hasher"],[8,"PartialOrd"],[4,"PrefixDeclaration"],[3,"Prefix"],[3,"Namespace"],[4,"ResolveResult"],[3,"NsReader"],[3,"Path"],[3,"File"],[3,"BufReader"],[8,"BufRead"],[3,"Vec"],[6,"Span"],[3,"Writer"],[8,"Write"],[3,"ElementWriter"],[8,"FnOnce"],[13,"EndEventMismatch"]]},\
"quote":{"doc":"github crates-io docs-rs","t":"IIIKKKKKOLLOOLLLLK","n":["IdentFragment","ToTokens","TokenStreamExt","append","append_all","append_separated","append_terminated","fmt","format_ident","into_token_stream","into_token_stream","quote","quote_spanned","span","span","to_token_stream","to_token_stream","to_tokens"],"q":[[0,"quote"]],"d":["Specialized formatting trait used by <code>format_ident!</code>.","Types that can be interpolated inside a <code>quote!</code> invocation.","TokenStream extension trait with methods for appending …","For use by <code>ToTokens</code> implementations.","For use by <code>ToTokens</code> implementations.","For use by <code>ToTokens</code> implementations.","For use by <code>ToTokens</code> implementations.","Format this value as an identifier fragment.","Formatting macro for constructing <code>Ident</code>s.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","The whole point.","Same as <code>quote!</code>, but applies a given span to all tokens …","Span associated with this <code>IdentFragment</code>.","Span associated with this <code>IdentFragment</code>.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","Write <code>self</code> to the given <code>TokenStream</code>."],"i":[0,0,0,11,11,11,11,12,0,4,4,0,0,12,12,4,4,4],"f":[0,0,0,[[[2,[1]]]],[3],[[3,4]],[[3,4]],[5,6],0,[7,8],[7,8],0,0,[[],[[10,[9]]]],[[],[[10,[9]]]],[[],8],[[],8],[8]],"c":[],"p":[[4,"TokenTree"],[8,"Into"],[8,"IntoIterator"],[8,"ToTokens"],[3,"Formatter"],[6,"Result"],[8,"Sized"],[3,"TokenStream"],[3,"Span"],[4,"Option"],[8,"TokenStreamExt"],[8,"IdentFragment"]]},\
"rustix":{"doc":"<code>rustix</code> provides efficient memory-safe and I/O-safe …","t":"OAAAAAAIIDIIDGKLLKLLLLLLLLLLLLLLLLLLLLLLLLLKLLLKLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSSSSSDDEEDDSSSSNNSSSSSSSRNNNSSSSNGGDDINNNNSSSSSSNSSDDCNNIEEIEEGGSSDSSSSSSSSSSSSSNSSSSNNNNSSSSDDIDDRSSSSSSSSSSSSSSSSNNNNNNNNNNGDDISRSSSSSSSSSSSSSSSSSSNNDDGGNNDDSSSSSSSSSSSSSDDGENNNNNGGGGDDDDGGDDGGNNSSSGDSSRRDNNNNSSSSSSSNNSSSDSFFLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFKKKFLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMFFFFFCFCFFCFFFLLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFFFFFKLLLLLLLLLLLLLLKKLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFLLLLLLLLLLLLKLKLLLLLLLLLLLLKFLLKLLLLLLLLLLLLLLLLLLLLLLLLMMFFFFFFFFFFFFFFFKKKKLLLLKLLLLLLLLLLLLFFFKLKLLLFFLLLLLLLLLLLLFFFFLFFFLLLLLLLLLLLLFKFLFFLFLFLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLFFFLKLSSSSSSSSDSSSSSSSSSSSSSSSDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSDSDSSDSSSSSSSSSSSSSDDSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSDGSSSSSSSSSSSSSSSSSSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLFFFLLLLLLLLLLLLLLFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLLLLLLLFFFLFFFLFFLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFDIEDSIGDNDSSDQGNDNDDNDKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIKKKKK","n":["cstr","fd","ffi","fs","io","ioctl","path","AsFd","AsRawFd","BorrowedFd","FromRawFd","IntoRawFd","OwnedFd","RawFd","as_fd","as_fd","as_fd","as_raw_fd","as_raw_fd","as_raw_fd","borrow","borrow","borrow_mut","borrow_mut","borrow_raw","clone","clone_into","drop","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_raw_fd","from_raw_fd","into","into","into_raw_fd","into_raw_fd","is_terminal","is_terminal","to_owned","try_clone","try_clone_to_owned","try_from","try_from","try_into","try_into","type_id","type_id","CStr","CString","FromBytesWithNulError","NulError","as_bytes","as_bytes_with_nul","as_c_str","as_cow_c_str","as_cow_c_str","as_cow_c_str","as_ptr","as_ref","as_ref","as_str","as_str","as_str","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_char","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","default","default","deref","description","description","drop","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bytes_until_nul","from_bytes_with_nul","from_bytes_with_nul_unchecked","from_ptr","from_raw","from_vec_unchecked","from_vec_with_nul","from_vec_with_nul_unchecked","hash","hash","index","index","into","into","into","into_boxed_c_str","into_bytes","into_bytes_with_nul","into_c_str","into_c_str","into_c_str","into_c_string","into_raw","into_string","into_vec","into_with_c_str","into_with_c_str","into_with_c_str","is_empty","new","nul_position","partial_cmp","partial_cmp","provide","provide","to_bytes","to_bytes_with_nul","to_owned","to_owned","to_owned","to_owned","to_str","to_string","to_string","to_string_lossy","to_string_lossy","to_string_lossy","to_string_lossy","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_id","ACCMODE","ALL","ALLOW_SEALING","APPEND","ATIME","Access","Access","Advice","Advice","AtFlags","AtFlags","BASIC_STATS","BENEATH","BLOCKS","BTIME","BlockDevice","BlockDevice","CACHED","CLOEXEC","CLOEXEC","COLLAPSE_RANGE","CREATE","CREATE","CTIME","CWD","CharacterDevice","CharacterDevice","Current","DIOALIGN","DIRECT","DIRECTORY","DSYNC","Data","Dev","Dev","Dir","DirEntry","DirEntryExt","Directory","Directory","DontNeed","DontNeed","EACCESS","EMPTY_PATH","EXCHANGE","EXCL","EXEC_OK","EXISTS","End","FSYNC","FUTURE_WRITE","FallocateFlags","FallocateFlags","FdFlags","Fifo","Fifo","FileExt","FileType","FileType","FileTypeExt","FlockOperation","FlockOperation","FsWord","FsWord","GID","GROW","Gid","HUGETLB","HUGE_16GB","HUGE_16MB","HUGE_1GB","HUGE_1MB","HUGE_256MB","HUGE_2GB","HUGE_2MB","HUGE_32MB","HUGE_512KB","HUGE_512MB","HUGE_64KB","HUGE_8MB","Hole","INO","INSERT_RANGE","IN_ROOT","KEEP_SIZE","LockExclusive","LockExclusive","LockShared","LockShared","MANDLOCK","MNT_ID","MODE","MTIME","MemfdFlags","MemfdFlags","MetadataExt","Mode","Mode","NFS_SUPER_MAGIC","NLINK","NOATIME","NOATIME","NOCTTY","NODEV","NODIRATIME","NOEXEC","NOFOLLOW","NONBLOCK","NOREPLACE","NOSUID","NO_AUTOMOUNT","NO_HIDE_STALE","NO_MAGICLINKS","NO_SYMLINKS","NO_XDEV","NoReuse","NoReuse","NonBlockingLockExclusive","NonBlockingLockExclusive","NonBlockingLockShared","NonBlockingLockShared","NonBlockingUnlock","NonBlockingUnlock","Normal","Normal","Nsecs","OFlags","OFlags","OpenOptionsExt","PATH","PROC_SUPER_MAGIC","PUNCH_HOLE","RDONLY","RDONLY","RDWR","READ_OK","RELATIME","REMOVEDIR","REPLACE","RGRP","ROOT","ROOT","ROTH","RSYNC","RUSR","RWMODE","RWXG","RWXO","RWXU","Random","Random","RawDir","RawDirEntry","RawMode","RawMode","RegularFile","RegularFile","RenameFlags","ResolveFlags","SEAL","SGID","SHRINK","SIZE","STATX_DONT_SYNC","STATX_FORCE_SYNC","STATX_SYNC_AS_STAT","SUID","SVTX","SYMLINK_FOLLOW","SYMLINK_NOFOLLOW","SYNC","SYNCHRONOUS","SealFlags","SealFlags","Secs","SeekFrom","Sequential","Sequential","Socket","Socket","Start","Stat","Stat","StatFs","StatFs","StatVfs","StatVfs","StatVfsMountFlags","StatVfsMountFlags","Statx","Statx","StatxFlags","StatxFlags","StatxTimestamp","StatxTimestamp","Symlink","Symlink","TMPFILE","TRUNC","TYPE","Timespec","Timestamps","UID","UNSHARE_RANGE","UTIME_NOW","UTIME_OMIT","Uid","Unknown","Unknown","Unlock","Unlock","WGRP","WHITEOUT","WOTH","WRITE","WRITE_OK","WRONLY","WUSR","WillNeed","WillNeed","XGRP","XOTH","XUSR","XattrFlags","ZERO_RANGE","access","accessat","all","all","all","all","all","all","all","all","all","all","all","all","as_raw","as_raw","as_raw_mode","as_raw_mode","atime","atime_nsec","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","blksize","blocks","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chmod","chmodat","chown","chownat","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","complement","complement","complement","complement","complement","complement","complement","complement","complement","complement","complement","complement","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","copy_file_range","ctime","ctime_nsec","custom_flags","cwd","default","dev","difference","difference","difference","difference","difference","difference","difference","difference","difference","difference","difference","difference","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","ext4_ioc_resize_fs","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","f_bavail","f_bavail","f_bfree","f_bfree","f_blocks","f_blocks","f_bsize","f_bsize","f_favail","f_favail","f_ffree","f_ffree","f_files","f_files","f_flag","f_flag","f_frsize","f_frsize","f_fsid","f_fsid","f_namemax","f_namemax","fadvise","fallocate","fchmod","fchown","fcntl_add_seals","fcntl_dupfd_cloexec","fcntl_get_seals","fcntl_getfd","fcntl_getfl","fcntl_lock","fcntl_setfd","fcntl_setfl","fdatasync","fgetxattr","file_name","file_name","file_type","file_type","flistxattr","flock","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fremovexattr","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_raw","from_raw","from_raw_mode","from_raw_mode","fsetxattr","fstat","fstatfs","fstatvfs","fsync","ftruncate","futimens","getxattr","gid","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","ino","ino","ino","ino","inotify","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","ioctl_blkpbszget","ioctl_blksszget","ioctl_ficlone","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_block_device","is_buffer_empty","is_char_device","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_fifo","is_file_read_write","is_root","is_root","is_socket","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","last_access","last_modification","lgetxattr","link","linkat","listxattr","llistxattr","lremovexattr","lsetxattr","lstat","major","makedev","memfd_create","minor","mkdir","mkdirat","mknodat","mode","mode","mtime","mtime_nsec","new","next","next","next_entry_cookie","nlink","not","not","not","not","not","not","not","not","not","not","not","not","open","openat","openat2","rdev","read","read_at","read_exact_at","read_from","read_vectored_at","readlink","readlinkat","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove","removexattr","rename","renameat","renameat_with","rewind","rmdir","seek","sendfile","set","set","set","set","set","set","set","set","set","set","set","set","setxattr","size","stat","stat","statat","statfs","statfs","statvfs","statvfs","statx","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","symlink","symlinkat","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","sync","syncfs","tell","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uid","union","union","union","union","union","union","union","union","union","union","union","union","unlink","unlinkat","utimensat","write_all_at","write_at","write_vectored_at","ACCESS","ALL_EVENTS","ATTRIB","CLOEXEC","CLOSE","CLOSE_NOWRITE","CLOSE_WRITE","CREATE","CreateFlags","DELETE","DELETE_SELF","DONT_FOLLOW","EXCL_UNLINK","MASK_ADD","MASK_CREATE","MODIFY","MOVE","MOVED_FROM","MOVED_TO","MOVE_SELF","NONBLOCK","ONESHOT","ONLYDIR","OPEN","WatchFlags","all","all","all","all","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","complement","complement","complement","complement","contains","contains","contains","contains","default","difference","difference","difference","difference","empty","empty","empty","empty","eq","eq","equivalent","equivalent","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from_bits","from_bits","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_iter","from_iter","from_name","from_name","from_name","from_name","hash","hash","inotify_add_watch","inotify_init","inotify_remove_watch","insert","insert","insert","insert","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","into","into","into_iter","into_iter","is_all","is_all","is_all","is_all","is_empty","is_empty","is_empty","is_empty","iter","iter","iter","iter","iter_names","iter_names","iter_names","iter_names","not","not","remove","remove","remove","remove","set","set","set","set","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","to_owned","to_owned","toggle","toggle","toggle","toggle","try_from","try_from","try_into","try_into","type_id","type_id","union","union","union","union","ACCESS","ADDRINUSE","ADDRNOTAVAIL","ADV","AFNOSUPPORT","AGAIN","ALREADY","APPEND","BADE","BADF","BADFD","BADMSG","BADR","BADRQC","BADSLT","BFONT","BUSY","CANCELED","CHILD","CHRNG","CLOEXEC","CLOEXEC","COMM","CONNABORTED","CONNREFUSED","CONNRESET","DEADLK","DEADLOCK","DESTADDRREQ","DOM","DOTDOT","DQUOT","DSYNC","DupFlags","EXIST","Errno","FAULT","FBIG","FdFlags","HIPRI","HOSTDOWN","HOSTUNREACH","HWPOISON","IDRM","ILSEQ","INPROGRESS","INTR","INVAL","IO","ISCONN","ISDIR","ISNAM","IoSlice","IoSliceMut","KEYEXPIRED","KEYREJECTED","KEYREVOKED","L2HLT","L2NSYNC","L3HLT","L3RST","LIBACC","LIBBAD","LIBEXEC","LIBMAX","LIBSCN","LNRNG","LOOP","MEDIUMTYPE","MFILE","MLINK","MSGSIZE","MULTIHOP","NAMETOOLONG","NAVAIL","NETDOWN","NETRESET","NETUNREACH","NFILE","NOANO","NOBUFS","NOCSI","NODATA","NODEV","NOENT","NOEXEC","NOKEY","NOLCK","NOLINK","NOMEDIUM","NOMEM","NOMSG","NONET","NOPKG","NOPROTOOPT","NOSPC","NOSR","NOSTR","NOSYS","NOTBLK","NOTCONN","NOTDIR","NOTEMPTY","NOTNAM","NOTRECOVERABLE","NOTSOCK","NOTSUP","NOTTY","NOTUNIQ","NOWAIT","NXIO","OPNOTSUPP","OVERFLOW","OWNERDEAD","PERM","PFNOSUPPORT","PIPE","PROTO","PROTONOSUPPORT","PROTOTYPE","RANGE","REMCHG","REMOTE","REMOTEIO","RESTART","RFKILL","ROFS","ReadWriteFlags","Result","SHUTDOWN","SOCKTNOSUPPORT","SPIPE","SRCH","SRMNT","STALE","STRPIPE","SYNC","TIME","TIMEDOUT","TOOBIG","TOOMANYREFS","TXTBSY","UCLEAN","UNATCH","USERS","WOULDBLOCK","XDEV","XFULL","advance","advance","advance_slices","advance_slices","all","all","all","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","close","complement","complement","complement","contains","contains","contains","deref","deref","deref_mut","difference","difference","difference","dup","dup2","dup3","empty","empty","empty","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","extend","extend","extend","fcntl_dupfd_cloexec","fcntl_getfd","fcntl_setfd","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_io_error","from_iter","from_iter","from_iter","from_name","from_name","from_name","from_raw_os_error","hash","hash","hash","hash","insert","insert","insert","intersection","intersection","intersection","intersects","intersects","intersects","into","into","into","into","into","into","into_iter","into_iter","into_iter","ioctl_fionbio","ioctl_fionread","is_all","is_all","is_all","is_empty","is_empty","is_empty","iter","iter","iter","iter_names","iter_names","iter_names","kind","new","new","not","not","not","pread","preadv","preadv2","provide","pwrite","pwritev","pwritev2","raw_os_error","read","readv","remove","remove","remove","retry_on_intr","set","set","set","sub","sub","sub","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","union","union","union","write","writev","BadOpcode","CompileTimeOpcode","Direction","Getter","IS_MUTATING","Ioctl","IoctlOutput","NoArg","None","NoneOpcode","OPCODE","OPCODE","Opcode","Output","RawOpcode","Read","ReadOpcode","ReadWrite","ReadWriteOpcode","Setter","Write","WriteOpcode","as_ptr","as_ptr","as_ptr","as_ptr","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_components","hash","hash","into","into","into","into","into","into","into","into","into","into","ioctl","new","new","new","none","old","output_from_ptr","output_from_ptr","output_from_ptr","output_from_ptr","partial_cmp","partial_cmp","raw","read","read_write","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","write","Arg","as_cow_c_str","as_str","into_c_str","into_with_c_str","to_string_lossy"],"q":[[0,"rustix"],[7,"rustix::fd"],[60,"rustix::ffi"],[180,"rustix::fs"],[1346,"rustix::fs::inotify"],[1527,"rustix::io"],[1906,"rustix::ioctl"],[2038,"rustix::path"]],"d":["A macro for <code>CStr</code> literals.","Export the <code>*Fd</code> types and traits that are used in rustix’…","Utilities related to FFI bindings.","Filesystem operations.","I/O operations.","Unsafe <code>ioctl</code> API.","Filesystem path operations.","A trait to borrow the file descriptor from an underlying …","A trait to extract the raw file descriptor from an …","A borrowed file descriptor.","A trait to express the ability to construct an object from …","A trait to express the ability to consume an object and …","An owned file descriptor.","Raw file descriptors.","Borrows the file descriptor.","","","Extracts the raw file descriptor.","","","","","","","Return a <code>BorrowedFd</code> holding the given raw file descriptor.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Constructs a new instance of <code>Self</code> from the given raw file …","Constructs a new instance of <code>Self</code> from the given raw file …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this object, returning the raw underlying file …","","","","","Creates a new <code>OwnedFd</code> instance that shares the same …","Creates a new <code>OwnedFd</code> instance that shares the same …","","","","","","","Representation of a borrowed C string.","A type representing an owned, C-compatible, nul-terminated …","An error indicating that a nul byte was not in the …","An error indicating that an interior nul byte was found.","Returns the contents of this <code>CString</code> as a slice of bytes.","Equivalent to <code>CString::as_bytes()</code> except that the returned …","Extracts a <code>CStr</code> slice containing the entire string.","","","","Returns the inner pointer to this C string.","","","","","","","","","","","","","","","Equivalent to C’s <code>char</code> type.","","","","","","","","","","Creates an empty <code>CString</code>.","","","","","","","","","","","","","","","","","","","","Converts a Vec&lt;NonZeroU8&gt; into a <code>CString</code> without copying …","Converts a <code>Cow&lt;&#39;a, CStr&gt;</code> into a <code>CString</code>, by copying the …","Converts a Box&lt;CStr&gt; into a <code>CString</code> without copying or …","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Creates a C string wrapper from a byte slice.","Creates a C string wrapper from a byte slice.","Unsafely creates a C string wrapper from a byte slice.","Wraps a raw C string with a safe C string wrapper.","Retakes ownership of a <code>CString</code> that was transferred to C …","Creates a C-compatible string by consuming a byte vector, …","Attempts to converts a Vec&lt;u8&gt; to a <code>CString</code>.","Converts a Vec&lt;u8&gt; to a <code>CString</code> without checking the …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts this <code>CString</code> into a boxed <code>CStr</code>.","Consumes the <code>CString</code> and returns the underlying byte …","Equivalent to <code>CString::into_bytes()</code> except that the …","","","","Converts a Box&lt;CStr&gt; into a <code>CString</code> without copying or …","Consumes the <code>CString</code> and transfers ownership of the string …","Converts the <code>CString</code> into a <code>String</code> if it contains valid …","Consumes this error, returning the underlying vector of …","","","","Returns <code>true</code> if <code>self.to_bytes()</code> has a length of 0.","Creates a new C-compatible string from a container of …","Returns the position of the nul byte in the slice that …","","","","","Converts this C string to a byte slice.","Converts this C string to a byte slice containing the …","","","","","Yields a &amp;str slice if the <code>CStr</code> contains valid UTF-8.","","","","","","Converts a <code>CStr</code> into a Cow&lt;str&gt;.","","","","","","","","","","","<code>O_ACCMODE</code>","<code>STATX_ALL</code>","<code>MFD_ALLOW_SEALING</code>","<code>O_APPEND</code>","<code>STATX_ATIME</code>","<code>*_OK</code> constants for use with <code>accessat</code>.","<code>*_OK</code> constants for use with <code>accessat</code>.","<code>POSIX_FADV_*</code> constants for use with <code>fadvise</code>.","<code>POSIX_FADV_*</code> constants for use with <code>fadvise</code>.","<code>AT_*</code> constants for use with <code>openat</code>, <code>statat</code>, and other <code>*at</code> …","<code>AT_*</code> constants for use with <code>openat</code>, <code>statat</code>, and other <code>*at</code> …","<code>STATX_BASIC_STATS</code>","<code>RESOLVE_BENEATH</code>","<code>STATX_BLOCKS</code>","<code>STATX_BTIME</code>","<code>S_IFBLK</code>","<code>S_IFBLK</code>","<code>RESOLVE_CACHED</code> (since Linux 5.12)","<code>O_CLOEXEC</code>","<code>MFD_CLOEXEC</code>","<code>FALLOC_FL_COLLAPSE_RANGE</code>","<code>O_CREAT</code>","<code>XATTR_CREATE</code>","<code>STATX_CTIME</code>","<code>AT_FDCWD</code>—A handle representing the current working …","<code>S_IFCHR</code>","<code>S_IFCHR</code>","Sets the offset to the current position plus the specified …","<code>STATX_DIOALIGN</code> (since Linux 6.1)","<code>O_DIRECT</code>","<code>O_DIRECTORY</code>","<code>O_DSYNC</code>. Linux 2.6.32 only supports <code>O_SYNC</code>.","Sets the offset to the current position plus the specified …","<code>dev_t</code>","<code>dev_t</code>","<code>DIR*</code>","<code>struct dirent</code>","Re-export types common to POSIX-ish platforms. …","<code>S_IFDIR</code>","<code>S_IFDIR</code>","<code>POSIX_FADV_DONTNEED</code>","<code>POSIX_FADV_DONTNEED</code>","<code>AT_EACCESS</code>","<code>AT_EMPTY_PATH</code>","<code>RENAME_EXCHANGE</code>","<code>O_EXCL</code>","<code>X_OK</code>","<code>F_OK</code>","Sets the offset to the size of this object plus the …","<code>O_FSYNC</code>. Linux 2.6.32 only supports <code>O_SYNC</code>.","<code>F_SEAL_FUTURE_WRITE</code> (since Linux 5.1)","<code>FALLOC_FL_*</code> constants for use with <code>fallocate</code>.","<code>FALLOC_FL_*</code> constants for use with <code>fallocate</code>.","","<code>S_IFIFO</code>","<code>S_IFIFO</code>","Re-export types common to POSIX-ish platforms. …","<code>S_IF*</code> constants. <code>S_IF*</code> constants for use with <code>mknodat</code> and …","<code>S_IF*</code> constants for use with <code>mknodat</code> and <code>Stat</code>’s <code>st_mode</code> …","Re-export types common to POSIX-ish platforms. …","<code>LOCK_*</code> constants for use with <code>flock</code> and <code>fcntl_lock</code>.","<code>LOCK_*</code> constants for use with <code>flock</code> and <code>fcntl_lock</code>.","<code>__fsword_t</code>","<code>__fsword_t</code>","<code>STATX_GID</code>","<code>F_SEAL_GROW</code>.","<code>gid_t</code>—A Unix group ID.","<code>MFD_HUGETLB</code> (since Linux 4.14)","<code>MFD_HUGE_16GB</code>","<code>MFD_HUGE_16MB</code>","<code>MFD_HUGE_1GB</code>","<code>MFD_HUGE_1MB</code>","<code>MFD_HUGE_256MB</code>","<code>MFD_HUGE_2GB</code>","<code>MFD_HUGE_2MB</code>","<code>MFD_HUGE_32MB</code>","<code>MFD_HUGE_512JB</code>","<code>MFD_HUGE_512MB</code>","<code>MFD_HUGE_64KB</code>","<code>MFD_HUGE_8MB</code>","Sets the offset to the current position plus the specified …","<code>STATX_INO</code>","<code>FALLOC_FL_INSERT_RANGE</code>","<code>RESOLVE_IN_ROOT</code>","<code>FALLOC_FL_KEEP_SIZE</code>","<code>LOCK_EX</code>","<code>LOCK_EX</code>","<code>LOCK_SH</code>","<code>LOCK_SH</code>","<code>ST_MANDLOCK</code>","<code>STATX_MNT_ID</code> (since Linux 5.8)","<code>STATX_MODE</code>","<code>STATX_MTIME</code>","<code>MFD_*</code> constants for use with <code>memfd_create</code>.","<code>MFD_*</code> constants for use with <code>memfd_create</code>.","Re-export types common to POSIX-ish platforms. …","<code>S_I*</code> constants for use with <code>openat</code>, <code>chmodat</code>, and <code>fchmod</code>.","<code>S_I*</code> constants for use with <code>openat</code>, <code>chmodat</code>, and <code>fchmod</code>.","The filesystem magic number for NFS.","<code>STATX_NLINK</code>","<code>O_NOATIME</code>","<code>ST_NOATIME</code>","<code>O_NOCTTY</code>","<code>ST_NODEV</code>","<code>ST_NODIRATIME</code>","<code>ST_NOEXEC</code>","<code>O_NOFOLLOW</code>","<code>O_NONBLOCK</code>","<code>RENAME_NOREPLACE</code>","<code>ST_NOSUID</code>","<code>AT_NO_AUTOMOUNT</code>","<code>FALLOC_FL_NO_HIDE_STALE</code>","<code>RESOLVE_NO_MAGICLINKS</code>","<code>RESOLVE_NO_SYMLINKS</code>","<code>RESOLVE_NO_XDEV</code>","<code>POSIX_FADV_NOREUSE</code>","<code>POSIX_FADV_NOREUSE</code>","<code>LOCK_EX | LOCK_NB</code>","<code>LOCK_EX | LOCK_NB</code>","<code>LOCK_SH | LOCK_NB</code>","<code>LOCK_SH | LOCK_NB</code>","<code>LOCK_UN | LOCK_NB</code>","<code>LOCK_UN | LOCK_NB</code>","<code>POSIX_FADV_NORMAL</code>","<code>POSIX_FADV_NORMAL</code>","A type for the <code>tv_nsec</code> field of <code>Timespec</code>.","<code>O_*</code> constants for use with <code>openat</code>.","<code>O_*</code> constants for use with <code>openat</code>.","Re-export types common to POSIX-ish platforms. …","<code>O_PATH</code>","The filesystem magic number for procfs.","<code>FALLOC_FL_PUNCH_HOLE</code>","<code>O_RDONLY</code>","<code>ST_RDONLY</code>","<code>O_RDWR</code>","<code>R_OK</code>","<code>ST_RELATIME</code>","<code>AT_REMOVEDIR</code>","<code>XATTR_REPLACE</code>","<code>S_IRGRP</code>","A <code>Uid</code> corresponding to the root user (uid 0).","A <code>Gid</code> corresponding to the root group (gid 0).","<code>S_IROTH</code>","<code>O_RSYNC</code>. Linux 2.6.32 only supports <code>O_SYNC</code>.","<code>S_IRUSR</code>","Similar to <code>ACCMODE</code>, but just includes the read/write …","<code>S_IRWXG</code>","<code>S_IRWXO</code>","<code>S_IRWXU</code>","<code>POSIX_FADV_RANDOM</code>","<code>POSIX_FADV_RANDOM</code>","A directory iterator implemented with getdents.","A raw directory entry, similar to <code>std::fs::DirEntry</code>.","<code>mode_t</code>","<code>mode_t</code>","<code>S_IFREG</code>","<code>S_IFREG</code>","<code>RENAME_*</code> constants for use with <code>renameat_with</code>.","<code>RESOLVE_*</code> constants for use with <code>openat2</code>.","<code>F_SEAL_SEAL</code>.","<code>S_ISGID</code>","<code>F_SEAL_SHRINK</code>.","<code>STATX_SIZE</code>","<code>AT_STATX_DONT_SYNC</code>","<code>AT_STATX_FORCE_SYNC</code>","<code>AT_STATX_SYNC_AS_STAT</code>","<code>S_ISUID</code>","<code>S_ISVTX</code>","<code>AT_SYMLINK_FOLLOW</code>","<code>AT_SYMLINK_NOFOLLOW</code>","<code>O_SYNC</code>","<code>ST_SYNCHRONOUS</code>","<code>F_SEAL_*</code> constants for use with <code>fcntl_add_seals</code> and …","<code>F_SEAL_*</code> constants for use with <code>fcntl_add_seals</code> and …","A type for the <code>tv_sec</code> field of <code>Timespec</code>.","Enumeration of possible methods to seek within an I/O …","<code>POSIX_FADV_SEQUENTIAL</code>","<code>POSIX_FADV_SEQUENTIAL</code>","<code>S_IFSOCK</code>","<code>S_IFSOCK</code>","Sets the offset to the provided number of bytes.","<code>struct stat</code> for use with <code>statat</code> and <code>fstat</code>.","<code>struct stat</code> for use with <code>statat</code> and <code>fstat</code>.","<code>struct statfs</code> for use with <code>statfs</code> and <code>fstatfs</code>.","<code>struct statfs</code> for use with <code>statfs</code> and <code>fstatfs</code>.","<code>struct statvfs</code> for use with <code>statvfs</code> and <code>fstatvfs</code>.","<code>struct statvfs</code> for use with <code>statvfs</code> and <code>fstatvfs</code>.","<code>ST_*</code> constants for use with <code>StatVfs</code>.","<code>ST_*</code> constants for use with <code>StatVfs</code>.","<code>struct statx</code> for use with <code>statx</code>.","<code>struct statx</code> for use with <code>statx</code>.","<code>STATX_*</code> constants for use with <code>statx</code>.","<code>STATX_*</code> constants for use with <code>statx</code>.","<code>struct statx_timestamp</code> for use with <code>Statx</code>.","<code>struct statx_timestamp</code> for use with <code>Statx</code>.","<code>S_IFLNK</code>","<code>S_IFLNK</code>","<code>O_TMPFILE</code>","<code>O_TRUNC</code>","<code>STATX_TYPE</code>","<code>struct timespec</code>","Timestamps used by <code>utimensat</code> and <code>futimens</code>.","<code>STATX_UID</code>","<code>FALLOC_FL_UNSHARE_RANGE</code>","<code>UTIME_NOW</code> for use with <code>utimensat</code>.","<code>UTIME_OMIT</code> for use with <code>utimensat</code>.","<code>uid_t</code>—A Unix user ID.","An unknown filesystem object.","An unknown filesystem object.","<code>LOCK_UN</code>","<code>LOCK_UN</code>","<code>S_IWGRP</code>","<code>RENAME_WHITEOUT</code>","<code>S_IWOTH</code>","<code>F_SEAL_WRITE</code>.","<code>W_OK</code>","<code>O_WRONLY</code>","<code>S_IWUSR</code>","<code>POSIX_FADV_WILLNEED</code>","<code>POSIX_FADV_WILLNEED</code>","<code>S_IXGRP</code>","<code>S_IXOTH</code>","<code>S_IXUSR</code>","<code>XATTR_*</code> constants for use with <code>setxattr</code>, and other …","<code>FALLOC_FL_ZERO_RANGE</code>","<code>access(path, access)</code>—Tests permissions for a file or …","<code>faccessat(dirfd, path, access, flags)</code>—Tests permissions …","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Converts a <code>Uid</code> into a <code>RawUid</code>.","Converts a <code>Gid</code> into a <code>RawGid</code>.","Construct an <code>st_mode</code> value from <code>Stat</code>.","Construct an <code>st_mode</code> value from <code>Stat</code>.","Returns the last access time of the file, in seconds since …","Returns the last access time of the file, in nanoseconds …","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","","Get the underlying bits value.","Get the underlying bits value.","","","Get the underlying bits value.","","Get the underlying bits value.","","Get the underlying bits value.","Get the underlying bits value.","","Get the underlying bits value.","","Get the underlying bits value.","","","Get the underlying bits value.","Get the underlying bits value.","","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","Returns the block size for filesystem I/O.","Returns the number of blocks allocated to the file, in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>chmod(path, mode)</code>—Sets file or directory permissions.","<code>fchmodat(dirfd, path, mode, flags)</code>—Sets file or …","<code>chown(path, owner, group)</code>—Sets open file or directory …","<code>fchownat(dirfd, path, owner, group, flags)</code>—Sets file or …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","<code>copy_file_range(fd_in, off_in, fd_out, off_out, len, 0)</code>…","Returns the last status change time of the file, in …","Returns the last status change time of the file, in …","Pass custom flags to the <code>flags</code> argument of <code>open</code>.","Return the value of <code>CWD</code>.","","Returns the ID of the device containing the file.","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>ioctl(fd, EXT4_IOC_RESIZE_FS, blocks)</code>—Resize ext4 …","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","","","","","","","","","","","","","","<code>posix_fadvise(fd, offset, len, advice)</code>—Declares an …","<code>fallocate(fd, mode, offset, len)</code>—Adjusts file allocation.","<code>fchmod(fd, mode)</code>—Sets open file or directory permissions.","<code>fchown(fd, owner, group)</code>—Sets open file or directory …","<code>fcntl(fd, F_ADD_SEALS)</code>","","<code>fcntl(fd, F_GET_SEALS)</code>","","<code>fcntl(fd, F_GETFL)</code>—Returns a file descriptor’s access …","<code>fcntl(fd, F_SETLK)</code>—Acquire or release an <code>fcntl</code>-style …","","<code>fcntl(fd, F_SETFL, flags)</code>—Sets a file descriptor’s …","<code>fdatasync(fd)</code>—Ensures that file data is written to the …","<code>fgetxattr(fd, name, value.as_ptr(), value.len())</code>—Get …","Returns the file name of this directory entry.","Returns the file name of this directory entry.","Returns the type of this directory entry.","Returns the type of this directory entry.","<code>flistxattr(fd, list.as_ptr(), list.len())</code>—List extended …","<code>flock(fd, operation)</code>—Acquire or release an advisory lock …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>fremovexattr(fd, name)</code>—Remove an extended filesystem …","Returns the argument unchanged.","Returns the argument unchanged.","Support conversions from <code>Mode</code> to raw mode values.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Support conversions from raw mode values to <code>Mode</code>.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","","Convert from a bits value exactly.","","Convert from a bits value exactly.","","Convert from a bits value exactly.","Convert from a bits value exactly.","","Convert from a bits value exactly.","","","Convert from a bits value exactly.","Convert from a bits value exactly.","","","Convert from a bits value exactly.","","Convert from a bits value exactly.","Convert from a bits value exactly.","","","Convert from a bits value exactly.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Converts a <code>RawUid</code> into a <code>Uid</code>.","Converts a <code>RawGid</code> into a <code>Gid</code>.","Construct a <code>Mode</code> from the mode bits of the <code>st_mode</code> field …","Construct a <code>FileType</code> from the <code>S_IFMT</code> bits of the <code>st_mode</code> …","<code>fsetxattr(fd, name, value.as_ptr(), value.len(), flags)</code>…","<code>fstat(fd)</code>—Queries metadata for an open file or directory.","<code>fstatfs(fd)</code>—Queries filesystem statistics for an open …","<code>fstatvfs(fd)</code>—Queries filesystem statistics for an open …","<code>fsync(fd)</code>—Ensures that file data and metadata is written …","<code>ftruncate(fd, length)</code>—Sets the length of a file.","<code>futimens(fd, times)</code>—Sets timestamps for an open file or …","<code>getxattr(path, name, value.as_ptr(), value.len())</code>—Get …","Returns the group ID of the owner of this file.","","","","","","","","","","","","","","","Returns the inode number.","Returns the underlying <code>d_ino</code> field in the contained <code>dirent</code> …","Returns the inode number of this directory entry.","Return the inode number of this directory entry.","inotify support for working with inotifies","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","<code>ioctl(fd, BLKPBSZGET)</code>—Returns the physical block size of …","<code>ioctl(fd, BLKSSZGET)</code>—Returns the logical block size of a …","<code>ioctl(fd, FICLONE, src_fd)</code>—Share data between open files.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Returns <code>true</code> if this file type is a block device.","Returns true if the internal buffer is empty and will be …","Returns <code>true</code> if this file type is a char device.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Returns <code>true</code> if this file type is a fifo.","<code>fcntl(fd, F_GETFL) &amp; O_ACCMODE</code>","Test whether this uid represents the root user (uid 0).","Test whether this gid represents the root group (gid 0).","Returns <code>true</code> if this file type is a socket.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","The timestamp of the last access to a filesystem object.","The timestamp of the last modification of a filesystem …","<code>lgetxattr(path, name, value.as_ptr(), value.len())</code>—Get …","<code>link(old_path, new_path)</code>—Creates a hard link.","<code>linkat(old_dirfd, old_path, new_dirfd, new_path, flags)</code>…","<code>listxattr(path, list.as_ptr(), list.len())</code>—List extended …","<code>llistxattr(path, list.as_ptr(), list.len())</code>—List …","<code>lremovexattr(path, name)</code>—Remove an extended filesystem …","<code>setxattr(path, name, value.as_ptr(), value.len(), flags)</code>…","<code>lstat(path)</code>—Queries metadata for a file or directory, …","<code>major(dev)</code>","<code>makedev(maj, min)</code>","<code>memfd_create(path, flags)</code>","<code>minor(dev)</code>","<code>mkdir(path, mode)</code>—Creates a directory.","<code>mkdirat(fd, path, mode)</code>—Creates a directory.","<code>mknodat(dirfd, path, mode, dev)</code>—Creates special or …","Sets the mode bits that a new file will be created with.","Returns the rights applied to this file.","Returns the last modification time of the file, in seconds …","Returns the last modification time of the file, in …","Create a new iterator from the given file descriptor and …","","Identical to <code>Iterator::next</code> except that <code>Iterator::Item</code> …","Returns the seek cookie to the next directory entry.","Returns the number of hard links pointing to this file.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","<code>open(path, oflags, mode)</code>—Opens a file.","<code>openat(dirfd, path, oflags, mode)</code>—Opens a file.","…","Returns the device ID of this file (if it is a special …","<code>readdir(self)</code>, where <code>None</code> means the end of the directory.","Reads a number of bytes starting from a given offset.","Reads the exact number of byte required to fill <code>buf</code> from …","Construct a <code>Dir</code> that reads entries from the given directory","Like <code>read_at</code>, except that it reads into a slice of buffers.","<code>readlink(path)</code>—Reads the contents of a symlink.","<code>readlinkat(fd, path)</code>—Reads the contents of a symlink.","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","<code>removexattr(path, name)</code>—Remove an extended filesystem …","<code>rename(old_path, new_path)</code>—Renames a file or directory.","<code>renameat(old_dirfd, old_path, new_dirfd, new_path)</code>…","<code>renameat2(old_dirfd, old_path, new_dirfd, new_path, flags)</code>…","<code>rewinddir(self)</code>","<code>rmdir(path)</code>—Removes a directory.","<code>lseek(fd, offset, whence)</code>—Repositions a file descriptor …","<code>sendfile(out_fd, in_fd, offset, count)</code>","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","<code>setxattr(path, name, value.as_ptr(), value.len(), flags)</code>…","Returns the total size of this file in bytes.","<code>stat(path)</code>—Queries metadata for a file or directory.","<code>fstat(self)</code>","<code>fstatat(dirfd, path, flags)</code>—Queries metadata for a file …","<code>statfs</code>—Queries filesystem metadata.","<code>fstatfs(self)</code>","<code>statvfs</code>—Queries filesystem metadata, POSIX version.","<code>fstatvfs(self)</code>","<code>statx(dirfd, path, flags, mask, statxbuf)</code>","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","<code>symlink(old_path, new_path)</code>—Creates a symlink.","<code>symlinkat(old_path, new_dirfd, new_path)</code>—Creates a …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","<code>sync</code>—Flush cached filesystem data for all filesystems.","<code>syncfs(fd)</code>—Flush cached filesystem data.","<code>lseek(fd, 0, SEEK_CUR)</code>—Returns the current position …","","","","","","","","","","","","","","","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the user ID of the owner of this file.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","<code>unlink(path)</code>—Unlinks a file.","<code>unlinkat(fd, path, flags)</code>—Unlinks a file or remove a …","<code>utimensat(dirfd, path, times, flags)</code>—Sets file or …","Attempts to write an entire buffer starting from a given …","Writes a number of bytes starting from a given offset.","Like <code>write_at</code>, except that it writes from a slice of …","<code>IN_ACCESS</code>","<code>IN_ALL_EVENTS</code>","<code>IN_ATTRIB</code>","<code>IN_CLOEXEC</code>","<code>IN_CLOSE</code>","<code>IN_CLOSE_NOWRITE</code>","<code>IN_CLOSE_WRITE</code>","<code>IN_CREATE </code>","<code>IN_*</code> for use with <code>inotify_init</code>.","<code>IN_DELETE</code>","<code>IN_DELETE_SELF</code>","<code>IN_DONT_FOLLOW</code>","<code>IN_EXCL_UNLINK</code>","<code>IN_MASK_ADD</code>","<code>IN_MASK_CREATE</code>","<code>IN_MODIFY</code>","<code>IN_MOVE</code>","<code>IN_MOVED_FROM</code>","<code>IN_MOVED_TO</code>","<code>IN_MOVE_SELF</code>","<code>IN_NONBLOCK</code>","<code>IN_ONESHOT</code>","<code>IN_ONLYDIR</code>","<code>IN_OPEN</code>","<code>IN*</code> for use with <code>inotify_add_watch</code>.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","Get the underlying bits value.","","Get the underlying bits value.","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","","Convert from a bits value exactly.","Convert from a bits value exactly.","Convert from a bits value exactly.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","","<code>inotify_add_watch(self, path, flags)</code>—Adds a watch to …","<code>inotify_init1(flags)</code>—Creates a new inotify object.","<code>inotify_rm_watch(self, wd)</code>—Removes a watch from this …","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","<code>EACCES</code>","<code>EADDRINUSE</code>","<code>EADDRNOTAVAIL</code>","<code>EADV</code>","<code>EAFNOSUPPORT</code>","<code>EAGAIN</code>","<code>EALREADY</code>","<code>RWF_APPEND</code> (since Linux 4.16)","<code>EBADE</code>","<code>EBADF</code>","<code>EBADFD</code>","<code>EBADMSG</code>","<code>EBADR</code>","<code>EBADRQC</code>","<code>EBADSLT</code>","<code>EBFONT</code>","<code>EBUSY</code>","<code>ECANCELED</code>","<code>ECHILD</code>","<code>ECHRNG</code>","<code>FD_CLOEXEC</code>","<code>O_CLOEXEC</code>","<code>ECOMM</code>","<code>ECONNABORTED</code>","<code>ECONNREFUSED</code>","<code>ECONNRESET</code>","<code>EDEADLK</code>","<code>EDEADLOCK</code>","<code>EDESTADDRREQ</code>","<code>EDOM</code>","<code>EDOTDOT</code>","<code>EDQUOT</code>","<code>RWF_DSYNC</code> (since Linux 4.7)","<code>O_*</code> constants for use with <code>dup2</code>.","<code>EEXIST</code>","<code>errno</code>—An error code.","<code>EFAULT</code>","<code>EFBIG</code>","<code>FD_*</code> constants for use with <code>fcntl_getfd</code> and <code>fcntl_setfd</code>.","<code>RWF_HIPRI</code> (since Linux 4.6)","<code>EHOSTDOWN</code>","<code>EHOSTUNREACH</code>","<code>EHWPOISON</code>","<code>EIDRM</code>","<code>EILSEQ</code>","<code>EINPROGRESS</code>","<code>EINTR</code>.","<code>EINVAL</code>","<code>EIO</code>","<code>EISCONN</code>","<code>EISDIR</code>","<code>EISNAM</code>","A buffer type used with <code>Write::write_vectored</code>.","A buffer type used with <code>Read::read_vectored</code>.","<code>EKEYEXPIRED</code>","<code>EKEYREJECTED</code>","<code>EKEYREVOKED</code>","<code>EL2HLT</code>","<code>EL2NSYNC</code>","<code>EL3HLT</code>","<code>EL3RST</code>","<code>ELIBACC</code>","<code>ELIBBAD</code>","<code>ELIBEXEC</code>","<code>ELIBMAX</code>","<code>ELIBSCN</code>","<code>ELNRNG</code>","<code>ELOOP</code>","<code>EMEDIUMTYPE</code>","<code>EMFILE</code>","<code>EMLINK</code>","<code>EMSGSIZE</code>","<code>EMULTIHOP</code>","<code>ENAMETOOLONG</code>","<code>ENAVAIL</code>","<code>ENETDOWN</code>","<code>ENETRESET</code>","<code>ENETUNREACH</code>","<code>ENFILE</code>","<code>ENOANO</code>","<code>ENOBUFS</code>","<code>ENOCSI</code>","<code>ENODATA</code>","<code>ENODEV</code>","<code>ENOENT</code>","<code>ENOEXEC</code>","<code>ENOKEY</code>","<code>ENOLCK</code>","<code>ENOLINK</code>","<code>ENOMEDIUM</code>","<code>ENOMEM</code>","<code>ENOMSG</code>","<code>ENONET</code>","<code>ENOPKG</code>","<code>ENOPROTOOPT</code>","<code>ENOSPC</code>","<code>ENOSR</code>","<code>ENOSTR</code>","<code>ENOSYS</code>","<code>ENOTBLK</code>","<code>ENOTCONN</code>","<code>ENOTDIR</code>","<code>ENOTEMPTY</code>","<code>ENOTNAM</code>","<code>ENOTRECOVERABLE</code>","<code>ENOTSOCK</code>","<code>ENOTSUP</code>","<code>ENOTTY</code>","<code>ENOTUNIQ</code>","<code>RWF_NOWAIT</code> (since Linux 4.14)","<code>ENXIO</code>","<code>EOPNOTSUPP</code>","<code>EOVERFLOW</code>","<code>EOWNERDEAD</code>","<code>EPERM</code>","<code>EPFNOSUPPORT</code>","<code>EPIPE</code>","<code>EPROTO</code>","<code>EPROTONOSUPPORT</code>","<code>EPROTOTYPE</code>","<code>ERANGE</code>","<code>EREMCHG</code>","<code>EREMOTE</code>","<code>EREMOTEIO</code>","<code>ERESTART</code>","<code>ERFKILL</code>","<code>EROFS</code>","<code>RWF_*</code> constants for use with <code>preadv2</code> and <code>pwritev2</code>.","A specialized <code>Result</code> type for <code>rustix</code> APIs.","<code>ESHUTDOWN</code>","<code>ESOCKTNOSUPPORT</code>","<code>ESPIPE</code>","<code>ESRCH</code>","<code>ESRMNT</code>","<code>ESTALE</code>","<code>ESTRPIPE</code>","<code>RWF_SYNC</code> (since Linux 4.7)","<code>ETIME</code>","<code>ETIMEDOUT</code>","<code>E2BIG</code>","<code>ETOOMANYREFS</code>","<code>ETXTBSY</code>","<code>EUCLEAN</code>","<code>EUNATCH</code>","<code>EUSERS</code>","<code>EWOULDBLOCK</code>","<code>EXDEV</code>","<code>EXFULL</code>","Advance the internal cursor of the slice.","Advance the internal cursor of the slice.","Advance a slice of slices.","Advance a slice of slices.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","Get the underlying bits value.","","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","<code>close(raw_fd)</code>—Closes a <code>RawFd</code> directly.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","<code>dup(fd)</code>—Creates a new <code>OwnedFd</code> instance that shares the …","<code>dup2(fd, new)</code>—Changes the file description of a file …","<code>dup3(fd, new, flags)</code>—Changes the file description of a …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","<code>fcntl(fd, F_DUPFD_CLOEXEC)</code>—Creates a new <code>OwnedFd</code> …","<code>fcntl(fd, F_GETFD)</code>—Returns a file descriptor’s flags.","<code>fcntl(fd, F_SETFD, flags)</code>—Sets a file descriptor’s …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value exactly.","","Convert from a bits value exactly.","","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Extract an <code>Errno</code> value from a <code>std::io::Error</code>.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Construct an <code>Errno</code> from a raw OS error number.","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","<code>ioctl(fd, FIONBIO, &amp;value)</code>—Enables or disables …","<code>ioctl(fd, FIONREAD)</code>—Returns the number of bytes ready to …","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Shorthand for <code>std::io::Error::from(self).kind()</code>.","Creates a new <code>IoSliceMut</code> wrapping a byte slice.","Creates a new <code>IoSlice</code> wrapping a byte slice.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","<code>pread(fd, buf, offset)</code>—Reads from a file at a given …","<code>preadv(fd, bufs, offset)</code>—Reads from a file at a given …","<code>preadv2(fd, bufs, offset, flags)</code>—Reads data, with …","","<code>pwrite(fd, bufs)</code>—Writes to a file at a given position.","<code>pwritev(fd, bufs, offset)</code>—Writes to a file at a given …","<code>pwritev2(fd, bufs, offset, flags)</code>—Writes data, with …","Extract the raw OS error number from this error.","<code>read(fd, buf)</code>—Reads from a stream.","<code>readv(fd, bufs)</code>—Reads from a stream into multiple …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Call <code>f</code> until it either succeeds or fails other than …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","<code>write(fd, buf)</code>—Writes to a stream.","<code>writev(fd, bufs)</code>—Writes to a stream from multiple …","Provides a bad opcode at compile time.","Trait for something that provides an <code>ioctl</code> opcode at …","The direction that an <code>ioctl</code> is going.","Implements the traditional “getter” pattern for <code>ioctl</code>s.","Does the <code>ioctl</code> mutate any data in the userspace?","A trait defining the properties of an <code>ioctl</code> command.","The type used by the <code>ioctl</code> to signify the output.","Implements an <code>ioctl</code> with no real arguments.","None of the above.","Provides a <code>None</code> code at compile time.","The opcode.","The opcode used by this <code>ioctl</code> command.","The opcode used by an <code>Ioctl</code>.","The type of the output data.","The type used by the <code>ioctl</code> to signify the command.","Read data from the kernel.","Provides a read code at compile time.","Read and write data to the kernel.","Provides a read/write code at compile time.","Implements the pattern for <code>ioctl</code>s where a pointer argument …","Write data to the kernel.","Provides a write code at compile time.","Get a pointer to the data to be passed to the <code>ioctl</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a new opcode from a direction, group, number and …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Perform an <code>ioctl</code> call.","Create a new no-argument <code>ioctl</code> object.","Create a new getter-style <code>ioctl</code> object.","Create a new pointer setter-style <code>ioctl</code> object.","Create a new non-mutating opcode from a group, a number …","Create a new old <code>Opcode</code> from a raw opcode.","Cast the output data to the correct type.","","","","","","Get the raw opcode.","Create a new reading opcode from a group, a number and the …","Create a new reading and writing opcode from a group, a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new writing opcode from a group, a number and the …","A trait for passing path arguments.","Returns a view of this string as a maybe-owned <code>CStr</code>.","Returns a view of this string as a string slice.","Consumes <code>self</code> and returns a view of this string as a …","Runs a closure with <code>self</code> passed in as a <code>&amp;CStr</code>.","Returns a potentially-lossy rendering of this string as a …"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,51,2,1,115,2,1,2,1,2,1,1,1,1,2,2,1,2,2,2,2,2,2,2,2,2,2,2,2,1,116,2,2,1,117,2,2,1,1,2,1,2,1,2,1,2,1,0,0,0,0,21,21,21,21,21,24,24,21,24,21,21,24,21,21,29,24,30,21,29,24,30,0,21,29,30,21,29,24,30,21,24,21,24,21,29,30,21,21,29,24,30,21,29,24,30,21,29,29,24,30,30,21,21,21,21,21,29,30,24,24,24,24,21,21,21,21,21,24,21,24,21,29,30,21,21,21,21,21,24,24,21,21,29,21,21,24,24,21,29,21,24,29,30,24,24,21,29,24,30,24,29,30,21,21,24,24,21,29,30,21,29,30,21,29,24,30,54,59,57,54,59,0,0,0,0,0,0,59,55,59,59,68,68,55,54,57,60,54,62,59,0,68,68,76,59,54,54,54,76,0,0,0,0,0,68,68,73,73,52,52,56,54,50,50,76,54,58,0,0,0,68,68,0,0,0,0,0,0,0,0,59,58,0,57,57,57,57,57,57,57,57,57,57,57,57,57,76,59,60,55,60,74,74,74,74,61,59,59,59,0,0,0,0,0,0,59,54,61,54,61,61,61,54,54,56,61,52,60,55,55,55,73,73,74,74,74,74,74,74,73,73,0,0,0,0,54,0,60,54,61,54,50,61,52,62,53,63,65,53,54,53,54,53,53,53,73,73,0,0,0,0,68,68,0,0,58,53,58,59,52,52,52,53,53,52,52,54,61,0,0,0,0,73,73,68,68,76,0,0,0,0,0,0,0,0,0,0,0,0,0,0,68,68,54,54,59,0,0,59,60,0,0,0,68,68,74,74,53,56,53,58,50,54,53,73,73,53,53,53,0,60,0,0,50,52,53,54,55,56,57,58,59,60,61,62,63,65,53,68,118,118,50,52,53,54,55,56,57,58,59,60,61,62,50,52,53,54,55,56,57,58,59,60,61,62,50,52,53,54,55,56,57,58,59,60,61,62,50,52,53,54,55,56,57,58,59,60,61,62,50,50,52,52,53,53,54,54,55,55,56,56,57,57,58,58,59,59,60,60,61,61,62,62,50,52,53,54,55,56,57,58,59,60,61,62,50,52,53,54,55,56,57,58,59,60,61,62,118,118,81,85,86,78,79,50,52,53,54,55,56,68,73,57,58,59,60,61,74,75,76,62,63,65,81,85,86,78,79,50,52,53,54,55,56,68,73,57,58,59,60,61,74,75,76,62,63,65,0,0,0,0,50,52,53,54,55,56,68,73,57,58,59,60,61,74,75,76,62,63,65,50,52,53,54,55,56,68,73,57,58,59,60,61,74,75,76,62,63,65,50,52,53,54,55,56,57,58,59,60,61,62,50,52,53,54,55,56,57,58,59,60,61,62,0,118,118,119,0,55,118,50,52,53,54,55,56,57,58,59,60,61,62,50,52,53,54,55,56,57,58,59,60,61,62,50,52,53,54,55,56,68,73,57,58,59,60,61,74,76,62,63,65,50,52,53,54,55,56,68,73,57,58,59,60,61,74,76,62,63,65,0,50,52,53,54,55,56,57,58,59,60,61,62,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,0,0,0,0,0,0,0,0,0,0,0,0,0,0,78,79,78,79,0,0,81,78,79,50,50,50,50,50,52,52,52,52,52,53,53,53,53,53,54,54,54,54,54,55,55,55,55,55,56,56,56,56,56,68,73,57,57,57,57,57,58,58,58,58,58,59,59,59,59,59,60,60,60,60,60,61,61,61,61,61,74,75,76,62,62,62,62,62,63,65,0,81,85,67,86,78,79,50,52,53,53,54,55,56,68,73,57,58,59,60,61,74,75,76,62,63,65,50,52,53,54,55,56,57,58,59,60,61,62,50,50,52,52,53,53,54,54,55,55,56,56,57,57,58,58,59,59,60,60,61,61,62,62,50,52,53,54,55,56,57,58,59,60,61,62,50,52,53,54,55,56,57,58,59,60,61,62,50,52,53,54,55,56,57,58,59,60,61,62,63,65,53,68,0,0,0,0,0,0,0,0,118,50,52,53,54,55,56,57,58,59,60,61,62,63,65,118,120,78,79,0,50,52,53,54,55,56,57,58,59,60,61,62,50,52,53,54,55,56,57,58,59,60,61,62,50,52,53,54,55,56,57,58,59,60,61,62,81,85,86,78,79,50,52,53,54,55,56,68,73,57,58,59,60,61,74,75,76,62,63,65,81,50,52,53,54,55,56,57,58,59,60,61,62,0,0,0,50,52,53,54,55,56,57,58,59,60,61,62,121,86,121,50,52,53,54,55,56,57,58,59,60,61,62,121,0,63,65,121,50,52,53,54,55,56,57,58,59,60,61,62,50,52,53,54,55,56,57,58,59,60,61,62,75,75,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,119,118,118,118,86,81,86,78,118,50,52,53,54,55,56,57,58,59,60,61,62,0,0,0,118,81,122,122,81,122,0,0,50,52,53,54,55,56,57,58,59,60,61,62,0,0,0,0,81,0,0,0,50,52,53,54,55,56,57,58,59,60,61,62,0,118,0,81,0,0,81,0,81,0,50,52,53,54,55,56,57,58,59,60,61,62,50,52,53,54,55,56,57,58,59,60,61,62,0,0,50,52,53,54,55,56,57,58,59,60,61,62,0,0,0,50,52,53,54,55,56,68,73,57,58,59,60,61,74,75,76,62,63,65,50,52,53,54,55,56,57,58,59,60,61,62,81,85,86,78,79,50,52,53,54,55,56,68,73,57,58,59,60,61,74,75,76,62,63,65,81,85,86,78,79,50,52,53,54,55,56,68,73,57,58,59,60,61,74,75,76,62,63,65,81,85,86,78,79,50,52,53,54,55,56,68,73,57,58,59,60,61,74,75,76,62,63,65,118,50,52,53,54,55,56,57,58,59,60,61,62,0,0,0,122,122,122,95,95,95,94,95,95,95,95,0,95,95,95,95,95,95,95,95,95,95,95,94,95,95,95,0,94,94,95,95,94,95,94,95,94,95,94,95,94,94,94,95,95,95,94,95,94,95,94,95,94,95,94,95,94,95,94,94,95,95,94,94,95,95,95,94,94,95,95,94,94,95,95,94,95,94,95,94,95,94,94,94,94,94,95,95,95,95,95,94,95,94,94,95,95,94,94,94,95,95,95,94,94,95,95,94,95,94,94,95,95,94,95,0,0,0,94,94,95,95,94,94,95,95,94,94,95,95,94,95,94,95,94,94,95,95,94,94,95,95,94,94,95,95,94,94,95,95,94,95,94,94,95,95,94,94,95,95,94,95,94,95,94,94,95,95,94,95,94,94,95,95,94,95,94,95,94,95,94,94,95,95,99,99,99,99,99,99,99,97,99,99,99,99,99,99,99,99,99,99,99,99,96,98,99,99,99,99,99,99,99,99,99,99,97,0,99,0,99,99,0,97,99,99,99,99,99,99,99,99,99,99,99,99,0,0,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,97,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,0,0,99,99,99,99,99,99,99,97,99,99,99,99,99,99,99,99,99,99,99,91,93,91,93,96,97,98,96,97,98,96,97,98,96,97,98,96,97,98,96,96,97,97,98,98,96,97,98,96,97,98,91,99,96,97,98,93,91,99,96,97,98,93,99,96,97,98,93,99,96,97,98,93,0,96,97,98,96,97,98,91,93,91,96,97,98,0,0,0,96,97,98,99,96,97,98,99,96,97,98,96,97,98,0,0,0,91,99,99,96,96,96,96,96,97,97,97,97,97,98,98,98,98,98,93,91,99,96,97,98,93,96,97,98,96,96,97,97,98,98,96,97,98,99,96,97,98,96,97,98,99,99,96,97,98,96,97,98,96,97,98,96,97,98,91,99,96,97,98,93,96,97,98,0,0,96,97,98,96,97,98,96,97,98,96,97,98,99,91,93,96,97,98,0,0,0,99,0,0,0,99,0,0,96,97,98,0,96,97,98,96,97,98,96,97,98,96,97,98,99,96,97,98,93,99,96,97,98,91,99,96,97,98,93,91,99,96,97,98,93,91,99,96,97,98,93,96,97,98,0,0,0,0,0,0,111,0,0,0,109,0,104,111,0,111,0,109,0,109,0,0,109,0,111,105,106,107,105,106,107,123,124,125,126,127,108,109,105,106,107,123,124,125,126,127,108,109,108,109,108,109,108,109,108,109,108,109,105,106,107,108,109,105,106,107,123,124,125,126,127,108,109,108,108,109,105,106,107,123,124,125,126,127,108,109,0,105,106,107,108,108,111,105,106,107,108,109,108,108,108,108,109,105,106,107,123,124,125,126,127,108,109,105,106,107,123,124,125,126,127,108,109,105,106,107,123,124,125,126,127,108,109,108,0,49,49,49,49,49],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[2,1],[1,1],[[],3],[2,3],[1,3],[[]],[[]],[[]],[[]],[3,1],[1,1],[[]],[2],[[2,4],[[6,[5]]]],[[1,4],[[6,[5]]]],[7,2],[8,2],[9,2],[10,2],[11,2],[12,2],[13,2],[14,2],[15,2],[16,2],[17,2],[[]],[[]],[3],[3,2],[[]],[[]],[[],3],[2,3],[2,18],[1,18],[[]],[2,[[6,[2,19]]]],[1,[[6,[2,19]]]],[[],6],[[],6],[[],6],[[],6],[[],20],[[],20],0,0,0,0,[21,[[23,[22]]]],[21,[[23,[22]]]],[21,24],[21,[[26,[[25,[24]]]]]],[21,[[26,[[25,[24]]]]]],[24,[[26,[[25,[24]]]]]],[24,27],[21,24],[24,24],[21,[[26,[28]]]],[21,[[26,[28]]]],[24,[[26,[28]]]],[[]],[21,24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[21,21],[29,29],[30,30],[[]],[[]],[[24,21]],[[]],[[21,21],31],[[24,24],31],[[],21],[[],24],[21,24],[29,28],[30,28],[21],[[21,21],18],[[29,29],18],[[24,24],18],[[30,30],18],[[],18],[[],18],[[],18],[[],18],[[21,4],[[6,[5]]]],[[29,4],[[6,[5]]]],[[29,4],[[6,[5]]]],[[24,4],[[6,[5]]]],[[30,4],[[6,[5]]]],[[30,4],[[6,[5]]]],[[[34,[32,33]]],21],[[[25,[24]]],21],[[[35,[24,33]]],21],[[]],[24,21],[[]],[[]],[[[23,[22]]],[[6,[24,36]]]],[[[23,[22]]],[[6,[24,30]]]],[[[23,[22]]],24],[27,24],[27,21],[[[34,[22,33]]],21],[[[34,[22,33]]],[[6,[21,37]]]],[[[34,[22,33]]],21],[[21,38]],[[24,38]],[[21,39],24],[[24,[41,[40]]],24],[[]],[[]],[[]],[21,[[35,[24,33]]]],[21,[[34,[22,33]]]],[21,[[34,[22,33]]]],[21,[[26,[[25,[24]]]]]],[21,[[26,[[25,[24]]]]]],[24,[[26,[[25,[24]]]]]],[[[35,[24,33]]],21],[21,27],[21,[[6,[42,43]]]],[29,[[34,[22,33]]]],[[21,44],26],[[21,44],26],[[24,44],26],[24,18],[[[45,[[34,[22,33]]]]],[[6,[21,29]]]],[29,40],[[21,21],[[46,[31]]]],[[24,24],[[46,[31]]]],[47],[47],[24,[[23,[22]]]],[24,[[23,[22]]]],[[]],[[]],[24,21],[[]],[24,[[6,[28,48]]]],[[],42],[[],42],[21,[[25,[28]]]],[21,[[25,[28]]]],[24,[[25,[28]]]],[24,[[25,[28]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],20],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[49,50],26],[[51,49,50,52],26],[[],50],[[],52],[[],53],[[],54],[[],55],[[],56],[[],57],[[],58],[[],59],[[],60],[[],61],[[],62],[63,64],[65,66],[53,67],[68,67],[[],69],[[],69],[[50,50],50],[[52,52],52],[[53,53],53],[[54,54],54],[[55,55],55],[[56,56],56],[[57,57],57],[[58,58],58],[[59,59],59],[[60,60],60],[[61,61],61],[[62,62],62],[[50,50]],[[52,52]],[[53,53]],[[54,54]],[[55,55]],[[56,56]],[[57,57]],[[58,58]],[[59,59]],[[60,60]],[[61,61]],[[62,62]],[[50,50],50],[[52,52],52],[[53,53],53],[[54,54],54],[[55,55],55],[[56,56],56],[[57,57],57],[[58,58],58],[[59,59],59],[[60,60],60],[[61,61],61],[[62,62],62],[[50,50]],[[52,52]],[[53,53]],[[54,54]],[[55,55]],[[56,56]],[[57,57]],[[58,58]],[[59,59]],[[60,60]],[[61,61]],[[62,62]],[50,70],[50,70],[52,70],[52,70],[53,67],[53,67],[54,70],[54,70],[55,71],[55,71],[56,70],[56,70],[57,70],[57,70],[58,72],[58,72],[59,72],[59,72],[60,72],[60,72],[61,71],[61,71],[62,70],[62,70],[[50,50],50],[[52,52],52],[[53,53],53],[[54,54],54],[[55,55],55],[[56,56],56],[[57,57],57],[[58,58],58],[[59,59],59],[[60,60],60],[[61,61],61],[[62,62],62],[[50,50]],[[52,52]],[[53,53]],[[54,54]],[[55,55]],[[56,56]],[[57,57]],[[58,58]],[[59,59]],[[60,60]],[[61,61]],[[62,62]],[[],71],[[],71],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[49,53],26],[[51,49,53,52],26],[[49,[46,[63]],[46,[65]]],26],[[51,49,[46,[63]],[46,[65]],52],26],[50,50],[52,52],[53,53],[54,54],[55,55],[56,56],[68,68],[73,73],[57,57],[58,58],[59,59],[60,60],[61,61],[74,74],[75,75],[76,76],[62,62],[63,63],[65,65],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[50,50],[52,52],[53,53],[54,54],[55,55],[56,56],[57,57],[58,58],[59,59],[60,60],[61,61],[62,62],[[50,50],18],[[52,52],18],[[53,53],18],[[54,54],18],[[55,55],18],[[56,56],18],[[57,57],18],[[58,58],18],[[59,59],18],[[60,60],18],[[61,61],18],[[62,62],18],[[51,[46,[71]],51,[46,[71]],40],[[26,[40]]]],[[],69],[[],69],[3],[[],1],[[],55],[[],71],[[50,50],50],[[52,52],52],[[53,53],53],[[54,54],54],[[55,55],55],[[56,56],56],[[57,57],57],[[58,58],58],[[59,59],59],[[60,60],60],[[61,61],61],[[62,62],62],[[],50],[[],52],[[],53],[[],54],[[],55],[[],56],[[],57],[[],58],[[],59],[[],60],[[],61],[[],62],[[50,50],18],[[52,52],18],[[53,53],18],[[54,54],18],[[55,55],18],[[56,56],18],[[68,68],18],[[73,73],18],[[57,57],18],[[58,58],18],[[59,59],18],[[60,60],18],[[61,61],18],[[74,74],18],[[76,76],18],[[62,62],18],[[63,63],18],[[65,65],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[51,71],26],[[50,77]],[[52,77]],[[53,77]],[[54,77]],[[55,77]],[[56,77]],[[57,77]],[[58,77]],[[59,77]],[[60,77]],[[61,77]],[[62,77]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[51,71,71,73],26],[[51,60,71,71],26],[[51,53],26],[[51,[46,[63]],[46,[65]]],26],[[51,58],26],0,[51,[[26,[58]]]],0,[51,[[26,[54]]]],[[51,74],26],0,[[51,54],26],[51,26],[[51,49,[23,[22]]],[[26,[40]]]],[78,24],[79,24],[78,68],[79,68],[[51,[23,[80]]],[[26,[40]]]],[[51,74],26],[[81,4],82],[[78,4],82],[[79,4],82],[[50,4],82],[[50,4],82],[[50,4],82],[[50,4],82],[[50,4],82],[[52,4],82],[[52,4],82],[[52,4],82],[[52,4],82],[[52,4],82],[[53,4],82],[[53,4],82],[[53,4],82],[[53,4],82],[[53,4],82],[[54,4],82],[[54,4],82],[[54,4],82],[[54,4],82],[[54,4],82],[[55,4],82],[[55,4],82],[[55,4],82],[[55,4],82],[[55,4],82],[[56,4],82],[[56,4],82],[[56,4],82],[[56,4],82],[[56,4],82],[[68,4],82],[[73,4],82],[[57,4],82],[[57,4],82],[[57,4],82],[[57,4],82],[[57,4],82],[[58,4],82],[[58,4],82],[[58,4],82],[[58,4],82],[[58,4],82],[[59,4],82],[[59,4],82],[[59,4],82],[[59,4],82],[[59,4],82],[[60,4],82],[[60,4],82],[[60,4],82],[[60,4],82],[[60,4],82],[[61,4],82],[[61,4],82],[[61,4],82],[[61,4],82],[[61,4],82],[[74,4],82],[[75,4],82],[[76,4],82],[[62,4],82],[[62,4],82],[[62,4],82],[[62,4],82],[[62,4],82],[[63,4],82],[[65,4],82],[[51,49],26],[[]],[[]],[53,67],[[]],[[]],[[]],[[]],[[]],[67,53],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[70,[[46,[50]]]],[70,[[46,[52]]]],[67,[[46,[53]]]],[70,[[46,[54]]]],[71,[[46,[55]]]],[70,[[46,[56]]]],[70,[[46,[57]]]],[72,[[46,[58]]]],[72,[[46,[59]]]],[72,[[46,[60]]]],[71,[[46,[61]]]],[70,[[46,[62]]]],[70,50],[70,50],[70,52],[70,52],[67,53],[67,53],[70,54],[70,54],[71,55],[71,55],[70,56],[70,56],[70,57],[70,57],[72,58],[72,58],[72,59],[72,59],[72,60],[72,60],[71,61],[71,61],[70,62],[70,62],[70,50],[70,52],[67,53],[70,54],[71,55],[70,56],[70,57],[72,58],[72,59],[72,60],[71,61],[70,62],[77,50],[77,52],[77,53],[77,54],[77,55],[77,56],[77,57],[77,58],[77,59],[77,60],[77,61],[77,62],[28,[[46,[50]]]],[28,[[46,[52]]]],[28,[[46,[53]]]],[28,[[46,[54]]]],[28,[[46,[55]]]],[28,[[46,[56]]]],[28,[[46,[57]]]],[28,[[46,[58]]]],[28,[[46,[59]]]],[28,[[46,[60]]]],[28,[[46,[61]]]],[28,[[46,[62]]]],[64,63],[66,65],[67,53],[67,68],[[51,49,[23,[22]],62],26],[51,[[26,[83]]]],[51,[[26,[84]]]],[51,[[26,[85]]]],[51,26],[[51,71],26],[[51,75],26],[[49,49,[23,[22]]],[[26,[40]]]],[[],72],[[50,38]],[[52,38]],[[53,38]],[[54,38]],[[55,38]],[[56,38]],[[57,38]],[[58,38]],[[59,38]],[[60,38]],[[61,38]],[[62,38]],[[63,38]],[[65,38]],[[],71],[[],71],[78,71],[79,71],0,[[50,50]],[[52,52]],[[53,53]],[[54,54]],[[55,55]],[[56,56]],[[57,57]],[[58,58]],[[59,59]],[[60,60]],[[61,61]],[[62,62]],[[50,50],50],[[52,52],52],[[53,53],53],[[54,54],54],[[55,55],55],[[56,56],56],[[57,57],57],[[58,58],58],[[59,59],59],[[60,60],60],[[61,61],61],[[62,62],62],[[50,50],18],[[52,52],18],[[53,53],18],[[54,54],18],[[55,55],18],[[56,56],18],[[57,57],18],[[58,58],18],[[59,59],18],[[60,60],18],[[61,61],18],[[62,62],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[50],[52],[53],[54],[55],[56],[57],[58],[59],[60],[61],[62],[51,[[26,[72]]]],[51,[[26,[72]]]],[[51,51],26],[50,18],[52,18],[53,18],[54,18],[55,18],[56,18],[57,18],[58,18],[59,18],[60,18],[61,18],[62,18],[[],18],[[[86,[51]]],18],[[],18],[50,18],[52,18],[53,18],[54,18],[55,18],[56,18],[57,18],[58,18],[59,18],[60,18],[61,18],[62,18],[[],18],[51,26],[63,18],[65,18],[[],18],[50,[[87,[50]]]],[52,[[87,[52]]]],[53,[[87,[53]]]],[54,[[87,[54]]]],[55,[[87,[55]]]],[56,[[87,[56]]]],[57,[[87,[57]]]],[58,[[87,[58]]]],[59,[[87,[59]]]],[60,[[87,[60]]]],[61,[[87,[61]]]],[62,[[87,[62]]]],[50,[[88,[50]]]],[52,[[88,[52]]]],[53,[[88,[53]]]],[54,[[88,[54]]]],[55,[[88,[55]]]],[56,[[88,[56]]]],[57,[[88,[57]]]],[58,[[88,[58]]]],[59,[[88,[59]]]],[60,[[88,[60]]]],[61,[[88,[61]]]],[62,[[88,[62]]]],0,0,[[49,49,[23,[22]]],[[26,[40]]]],[[49,49],26],[[51,49,51,49,52],26],[[49,[23,[80]]],[[26,[40]]]],[[49,[23,[80]]],[[26,[40]]]],[[49,49],26],[[49,49,[23,[22]],62],26],[49,[[26,[83]]]],[89,72],[[72,72],89],[[49,57],[[26,[2]]]],[89,72],[[49,53],26],[[51,49,53],26],[[51,49,68,53,89],26],[72],[[],72],[[],69],[[],69],[[51,[23,[[90,[22]]]]],[[86,[51]]]],[81,46],[[[86,[51]]],[[46,[[26,[78]]]]]],[78,71],[[],71],[50,50],[52,52],[53,53],[54,54],[55,55],[56,56],[57,57],[58,58],[59,59],[60,60],[61,61],[62,62],[[49,54,53],[[26,[2]]]],[[51,49,54,53],[[26,[2]]]],[[51,49,54,53,55],[[26,[2]]]],[[],71],[81,[[46,[[26,[79]]]]]],[[[23,[22]],71],[[6,[40,19]]]],[[[23,[22]],71],[[6,[19]]]],[51,[[26,[81]]]],[[[23,[91]],71],[[6,[40,19]]]],[[49,[45,[[34,[22]]]]],[[26,[21]]]],[[51,49,[45,[[34,[22]]]]],[[26,[21]]]],[[50,50]],[[52,52]],[[53,53]],[[54,54]],[[55,55]],[[56,56]],[[57,57]],[[58,58]],[[59,59]],[[60,60]],[[61,61]],[[62,62]],[[49,49],26],[[49,49],26],[[51,49,51,49],26],[[51,49,51,49,56],26],[81],[49,26],[[51,76],[[26,[71]]]],[[51,51,[46,[71]],40],[[26,[40]]]],[[50,50,18]],[[52,52,18]],[[53,53,18]],[[54,54,18]],[[55,55,18]],[[56,56,18]],[[57,57,18]],[[58,58,18]],[[59,59,18]],[[60,60,18]],[[61,61,18]],[[62,62,18]],[[49,49,[23,[22]],62],26],[[],71],[49,[[26,[83]]]],[81,[[26,[83]]]],[[51,49,52],[[26,[83]]]],[49,[[26,[84]]]],[81,[[26,[84]]]],[49,[[26,[85]]]],[81,[[26,[85]]]],[[51,49,52,59],[[26,[92]]]],[[50,50],50],[[52,52],52],[[53,53],53],[[54,54],54],[[55,55],55],[[56,56],56],[[57,57],57],[[58,58],58],[[59,59],59],[[60,60],60],[[61,61],61],[[62,62],62],[[50,50]],[[52,52]],[[53,53]],[[54,54]],[[55,55]],[[56,56]],[[57,57]],[[58,58]],[[59,59]],[[60,60]],[[61,61]],[[62,62]],[[49,49],26],[[49,51,49],26],[[50,50],50],[[52,52],52],[[53,53],53],[[54,54],54],[[55,55],55],[[56,56],56],[[57,57],57],[[58,58],58],[[59,59],59],[[60,60],60],[[61,61],61],[[62,62],62],[[]],[51,26],[51,[[26,[71]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[50,50]],[[52,52]],[[53,53]],[[54,54]],[[55,55]],[[56,56]],[[57,57]],[[58,58]],[[59,59]],[[60,60]],[[61,61]],[[62,62]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],72],[[50,50],50],[[52,52],52],[[53,53],53],[[54,54],54],[[55,55],55],[[56,56],56],[[57,57],57],[[58,58],58],[[59,59],59],[[60,60],60],[[61,61],61],[[62,62],62],[49,26],[[51,49,52],26],[[51,49,75,52],26],[[[23,[22]],71],[[6,[19]]]],[[[23,[22]],71],[[6,[40,19]]]],[[[23,[93]],71],[[6,[40,19]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],94],[[],94],[[],95],[[],95],[[94,94],94],[[95,95],95],[[94,94]],[[95,95]],[[94,94],94],[[95,95],95],[[94,94]],[[95,95]],[94,70],[94,70],[94,70],[95,70],[95,70],[95,70],[[94,94],94],[[95,95],95],[[94,94]],[[95,95]],[[]],[[]],[[]],[[]],[94,94],[95,95],[[]],[[]],[94,94],[94,94],[95,95],[95,95],[[94,94],18],[[94,94],18],[[95,95],18],[[95,95],18],[[],95],[[94,94],94],[[94,94],94],[[95,95],95],[[95,95],95],[[],94],[[],94],[[],95],[[],95],[[94,94],18],[[95,95],18],[[],18],[[],18],[[94,77]],[[95,77]],[[94,4],82],[[94,4],82],[[94,4],82],[[94,4],82],[[94,4],82],[[95,4],82],[[95,4],82],[[95,4],82],[[95,4],82],[[95,4],82],[[]],[[]],[70,[[46,[94]]]],[70,[[46,[94]]]],[70,[[46,[95]]]],[70,[[46,[95]]]],[70,94],[70,94],[70,94],[70,95],[70,95],[70,95],[70,94],[70,94],[70,95],[70,95],[77,94],[77,95],[28,[[46,[94]]]],[28,[[46,[94]]]],[28,[[46,[95]]]],[28,[[46,[95]]]],[[94,38]],[[95,38]],[[1,49,95],[[26,[3]]]],[94,[[26,[2]]]],[[1,3],26],[[94,94]],[[94,94]],[[95,95]],[[95,95]],[[94,94],94],[[94,94],94],[[95,95],95],[[95,95],95],[[94,94],18],[[94,94],18],[[95,95],18],[[95,95],18],[[]],[[]],[94],[95],[94,18],[94,18],[95,18],[95,18],[94,18],[94,18],[95,18],[95,18],[94,[[87,[94]]]],[94,[[87,[94]]]],[95,[[87,[95]]]],[95,[[87,[95]]]],[94,[[88,[94]]]],[94,[[88,[94]]]],[95,[[88,[95]]]],[95,[[88,[95]]]],[94,94],[95,95],[[94,94]],[[94,94]],[[95,95]],[[95,95]],[[94,94,18]],[[94,94,18]],[[95,95,18]],[[95,95,18]],[[94,94],94],[[95,95],95],[[94,94]],[[95,95]],[[94,94],94],[[94,94],94],[[95,95],95],[[95,95],95],[[]],[[]],[[94,94]],[[94,94]],[[95,95]],[[95,95]],[[],6],[[],6],[[],6],[[],6],[[],20],[[],20],[[94,94],94],[[94,94],94],[[95,95],95],[[95,95],95],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[91,40]],[[93,40]],[[[23,[91]],40]],[[[23,[93]],40]],[[],96],[[],97],[[],98],[[96,96],96],[[97,97],97],[[98,98],98],[[96,96]],[[97,97]],[[98,98]],[[96,96],96],[[97,97],97],[[98,98],98],[[96,96]],[[97,97]],[[98,98]],[96,70],[96,70],[97,70],[97,70],[98,70],[98,70],[[96,96],96],[[97,97],97],[[98,98],98],[[96,96]],[[97,97]],[[98,98]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[99,99],[96,96],[97,97],[98,98],[93,93],[[]],[[]],[[]],[[]],[[]],[100],[96,96],[97,97],[98,98],[[96,96],18],[[97,97],18],[[98,98],18],[91,[[23,[22]]]],[93,[[23,[22]]]],[91,[[23,[22]]]],[[96,96],96],[[97,97],97],[[98,98],98],[51,[[26,[2]]]],[[51,2],26],[[51,2,98],26],[[],96],[[],97],[[],98],[[99,99],18],[[96,96],18],[[97,97],18],[[98,98],18],[[],18],[[],18],[[],18],[[],18],[[96,77]],[[97,77]],[[98,77]],[[51,100],[[26,[2]]]],[51,[[26,[96]]]],[[51,96],26],[[91,4],[[6,[5]]]],[[99,4],82],[[99,4],82],[[96,4],82],[[96,4],82],[[96,4],82],[[96,4],82],[[96,4],82],[[97,4],82],[[97,4],82],[[97,4],82],[[97,4],82],[[97,4],82],[[98,4],82],[[98,4],82],[[98,4],82],[[98,4],82],[[98,4],82],[[93,4],[[6,[5]]]],[[]],[[]],[[]],[[]],[[]],[[]],[70,[[46,[96]]]],[70,[[46,[97]]]],[70,[[46,[98]]]],[70,96],[70,96],[70,97],[70,97],[70,98],[70,98],[70,96],[70,97],[70,98],[19,[[46,[99]]]],[77,96],[77,97],[77,98],[28,[[46,[96]]]],[28,[[46,[97]]]],[28,[[46,[98]]]],[3,99],[[99,38]],[[96,38]],[[97,38]],[[98,38]],[[96,96]],[[97,97]],[[98,98]],[[96,96],96],[[97,97],97],[[98,98],98],[[96,96],18],[[97,97],18],[[98,98],18],[[]],[[]],[[]],[[]],[[]],[[]],[96],[97],[98],[[51,18],26],[51,[[26,[71]]]],[96,18],[97,18],[98,18],[96,18],[97,18],[98,18],[96,[[87,[96]]]],[97,[[87,[97]]]],[98,[[87,[98]]]],[96,[[88,[96]]]],[97,[[88,[97]]]],[98,[[88,[98]]]],[99,101],[[[23,[22]]],91],[[[23,[22]]],93],[96,96],[97,97],[98,98],[[51,[23,[22]],71],[[26,[40]]]],[[51,[23,[91]],71],[[26,[40]]]],[[51,[23,[91]],71,97],[[26,[40]]]],[47],[[51,[23,[22]],71],[[26,[40]]]],[[51,[23,[93]],71],[[26,[40]]]],[[51,[23,[93]],71,97],[[26,[40]]]],[99,3],[[51,[23,[22]]],[[26,[40]]]],[[51,[23,[91]]],[[26,[40]]]],[[96,96]],[[97,97]],[[98,98]],[102,26],[[96,96,18]],[[97,97,18]],[[98,98,18]],[[96,96],96],[[97,97],97],[[98,98],98],[[96,96]],[[97,97]],[[98,98]],[[96,96],96],[[97,97],97],[[98,98],98],[[]],[[]],[[]],[[]],[[]],[[],42],[[96,96]],[[97,97]],[[98,98]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[96,96],96],[[97,97],97],[[98,98],98],[[51,[23,[22]]],[[26,[40]]]],[[51,[23,[93]]],[[26,[40]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],103],[[[105,[104]]],103],[[[106,[104]]],103],[[[107,[104]]],103],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[108,108],[109,109],[[]],[[]],[[108,108],31],[[109,109],31],[[108,108],18],[[109,109],18],[[],18],[[],18],[[[105,[104]],4],82],[[[106,[104]],4],82],[[[107,[104,110]],4],82],[[108,4],82],[[109,4],82],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[109,22,22,40],108],[[108,38]],[[109,38]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[51,111],26],[[],[[105,[104]]]],[[],[[106,[104]]]],[[],[[107,[104]]]],[[22,22],108],[112,108],[[113,103],26],[[113,103],26],[[113,103],26],[[113,103],26],[[108,108],[[46,[31]]]],[[109,109],[[46,[31]]]],[108,112],[[22,22],108],[[22,22],108],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[22,22],108],0,[[],[[26,[[25,[24]]]]]],[[],[[26,[28]]]],[[],[[26,[[25,[24]]]]]],[[114,44],26],[[],[[25,[28]]]]],"c":[641],"p":[[3,"BorrowedFd"],[3,"OwnedFd"],[15,"i32"],[3,"Formatter"],[3,"Error"],[4,"Result"],[3,"ChildStderr"],[3,"PidFd"],[3,"ChildStdout"],[3,"TcpListener"],[3,"UnixStream"],[3,"TcpStream"],[3,"File"],[3,"UnixDatagram"],[3,"UnixListener"],[3,"UdpSocket"],[3,"ChildStdin"],[15,"bool"],[3,"Error"],[3,"TypeId"],[3,"CString"],[15,"u8"],[15,"slice"],[3,"CStr"],[4,"Cow"],[6,"Result"],[15,"i8"],[15,"str"],[3,"NulError"],[3,"FromBytesWithNulError"],[4,"Ordering"],[3,"NonZeroU8"],[3,"Global"],[3,"Vec"],[3,"Box"],[3,"FromBytesUntilNulError"],[3,"FromVecWithNulError"],[8,"Hasher"],[3,"RangeFull"],[15,"usize"],[3,"RangeFrom"],[3,"String"],[3,"IntoStringError"],[8,"FnOnce"],[8,"Into"],[4,"Option"],[3,"Demand"],[3,"Utf8Error"],[8,"Arg"],[3,"Access"],[8,"AsFd"],[3,"AtFlags"],[3,"Mode"],[3,"OFlags"],[3,"ResolveFlags"],[3,"RenameFlags"],[3,"MemfdFlags"],[3,"SealFlags"],[3,"StatxFlags"],[3,"FallocateFlags"],[3,"StatVfsMountFlags"],[3,"XattrFlags"],[3,"Uid"],[6,"__kernel_uid_t"],[3,"Gid"],[6,"__kernel_gid_t"],[6,"RawMode"],[4,"FileType"],[15,"i64"],[6,"c_uint"],[15,"u64"],[15,"u32"],[4,"Advice"],[4,"FlockOperation"],[3,"Timestamps"],[4,"SeekFrom"],[8,"IntoIterator"],[3,"RawDirEntry"],[3,"DirEntry"],[6,"c_char"],[3,"Dir"],[6,"Result"],[6,"Stat"],[6,"StatFs"],[3,"StatVfs"],[3,"RawDir"],[3,"Iter"],[3,"IterNames"],[6,"Dev"],[19,"MaybeUninit"],[3,"IoSliceMut"],[6,"Statx"],[3,"IoSlice"],[3,"CreateFlags"],[3,"WatchFlags"],[3,"FdFlags"],[3,"ReadWriteFlags"],[3,"DupFlags"],[3,"Errno"],[6,"RawFd"],[4,"ErrorKind"],[8,"FnMut"],[4,"c_void"],[8,"CompileTimeOpcode"],[3,"NoArg"],[3,"Getter"],[3,"Setter"],[3,"Opcode"],[4,"Direction"],[8,"Debug"],[8,"Ioctl"],[6,"RawOpcode"],[6,"IoctlOutput"],[8,"Sized"],[8,"AsRawFd"],[8,"FromRawFd"],[8,"IntoRawFd"],[8,"MetadataExt"],[8,"OpenOptionsExt"],[8,"DirEntryExt"],[8,"FileTypeExt"],[8,"FileExt"],[3,"BadOpcode"],[3,"ReadOpcode"],[3,"WriteOpcode"],[3,"ReadWriteOpcode"],[3,"NoneOpcode"]],"a":{"2big":[1666],"acces":[1527],"at_fdcwd":[204],"blkpbszget":[1033],"blksszget":[1034],"creat":[201],"errno":[1562],"ext4_ioc_resize_fs":[704],"f_add_seals":[743],"f_dupfd_cloexec":[1758],"f_get_seals":[745],"f_getfd":[1759],"f_getfl":[747],"f_setfd":[1760],"f_setfl":[750],"f_setlk":[748],"f_setlkw":[748],"faccessat":[406],"fchmodat":[572],"fchownat":[574],"ficlone":[1035],"fionbio":[1828],"fionread":[1829],"fstatat":[1177],"ifo":[234,235],"inode_number":[957],"inotify_init1":[1459],"inotify_rm_watch":[1460],"lseek":[1159,1223],"noattr":[1609],"off":[1116],"posix_fadvise":[739],"posix_fallocate":[740],"renameat2":[1156]}},\
"scoped_tls":{"doc":"Scoped thread-local storage","t":"DLLLLLOLLLLL","n":["ScopedKey","borrow","borrow_mut","from","into","is_set","scoped_thread_local","set","try_from","try_into","type_id","with"],"q":[[0,"scoped_tls"]],"d":["Type representing a thread local storage key corresponding …","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Test whether this TLS key has been <code>set</code> for the current …","The macro. See the module level documentation for the …","Inserts a value into this scoped thread local storage slot …","","","","Gets a value out of this scoped variable."],"i":[0,1,1,1,1,1,0,1,1,1,1,1],"f":[0,[[]],[[]],[[]],[[]],[1,2],0,[[1,3]],[[],4],[[],4],[[],5],[[1,3]]],"c":[],"p":[[3,"ScopedKey"],[15,"bool"],[8,"FnOnce"],[4,"Result"],[3,"TypeId"]]},\
"smallvec":{"doc":"Small vectors in various sizes. These store a certain …","t":"NINEDDQDILLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLOOLLLLKLLLLLLLLLLLLLLLLLLM","n":["AllocErr","Array","CapacityOverflow","CollectionAllocErr","Drain","IntoIter","Item","SmallVec","ToSmallVec","append","as_mut","as_mut_ptr","as_mut_slice","as_mut_slice","as_ptr","as_ref","as_slice","as_slice","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone_from","clone_into","clone_into","cmp","dedup","dedup_by","dedup_by_key","default","deref","deref_mut","drain","drop","drop","drop","eq","extend","extend_from_slice","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_buf","from_buf_and_len","from_buf_and_len_unchecked","from_const","from_elem","from_iter","from_raw_parts","from_slice","from_vec","grow","hash","index","index_mut","inline_size","insert","insert_from_slice","insert_many","into","into","into","into","into_boxed_slice","into_inner","into_iter","into_iter","into_iter","into_iter","into_iter","into_vec","is_empty","len","len","new","new_const","next","next","next_back","next_back","partial_cmp","pop","push","remove","reserve","reserve_exact","resize","resize_with","retain","retain_mut","set_len","shrink_to_fit","size","size_hint","size_hint","smallvec","smallvec_inline","spilled","swap_remove","to_owned","to_owned","to_smallvec","to_string","truncate","try_from","try_from","try_from","try_from","try_grow","try_into","try_into","try_into","try_into","try_reserve","try_reserve_exact","type_id","type_id","type_id","type_id","with_capacity","layout"],"q":[[0,"smallvec"],[141,"smallvec::CollectionAllocErr"]],"d":["The allocator return an error","Types that can be used as the backing store for a SmallVec","Overflow <code>usize::MAX</code> or other error during size computation","Error type for APIs with fallible heap allocation","An iterator that removes the items from a <code>SmallVec</code> and …","An iterator that consumes a <code>SmallVec</code> and yields its items …","The type of the array’s elements.","A <code>Vec</code>-like container that can store a small number of …","Convenience trait for constructing a <code>SmallVec</code>","Moves all the elements of <code>other</code> into <code>self</code>, leaving <code>other</code> …","","Returns a raw mutable pointer to the vector’s buffer.","Extracts a mutable slice of the entire vector.","Returns the remaining items of this iterator as a mutable …","Returns a raw pointer to the vector’s buffer.","","Extracts a slice containing the entire vector.","Returns the remaining items of this iterator as a slice.","","","","","","","","","","","The number of items the vector can hold without …","Remove all elements from the vector.","","","","","","","Removes consecutive duplicate elements.","Removes consecutive duplicate elements using the given …","Removes consecutive elements that map to the same key.","","","","Creates a draining iterator that removes the specified …","","","","","","Copy elements from a slice and append them to the vector.","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Constructs a new <code>SmallVec</code> on the stack from an <code>A</code> without …","Constructs a new <code>SmallVec</code> on the stack from an <code>A</code> without …","Constructs a new <code>SmallVec</code> on the stack from an <code>A</code> without …","The array passed as an argument is moved to be an inline …","Creates a <code>SmallVec</code> with <code>n</code> copies of <code>elem</code>.","","Creates a <code>SmallVec</code> directly from the raw components of …","Copy the elements from a slice into a new <code>SmallVec</code>.","Construct a new <code>SmallVec</code> from a <code>Vec&lt;A::Item&gt;</code>.","Re-allocate to set the capacity to …","","","","The maximum number of elements this vector can hold inline","Insert an element at position <code>index</code>, shifting all elements …","Copy elements from a slice into the vector at position …","Insert multiple elements at position <code>index</code>, shifting all …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts a <code>SmallVec</code> into a <code>Box&lt;[T]&gt;</code> without reallocating …","Convert the SmallVec into an <code>A</code> if possible. Otherwise …","","","","","","Convert a SmallVec to a Vec, without reallocating if the …","Returns <code>true</code> if the vector is empty","","The number of elements stored in the vector","Construct an empty vector","Construct an empty vector.","","","","","","Remove an item from the end of the vector and return it, …","Append an item to the vector.","Remove and return the element at position <code>index</code>, shifting …","Reserve capacity for <code>additional</code> more elements to be …","Reserve the minimum capacity for <code>additional</code> more elements …","Resizes the vector so that its length is equal to <code>len</code>.","Resizes the <code>SmallVec</code> in-place so that <code>len</code> is equal to …","Retains only the elements specified by the predicate.","Retains only the elements specified by the predicate.","Sets the length of a vector.","Shrink the capacity of the vector as much as possible.","Returns the number of items the array can hold.","","","Creates a <code>SmallVec</code> containing the arguments.","Creates an inline <code>SmallVec</code> containing the arguments. This …","Returns <code>true</code> if the data has spilled into a separate …","Remove the element at position <code>index</code>, replacing it with …","","","Construct a new <code>SmallVec</code> from a slice.","","Shorten the vector, keeping the first <code>len</code> elements and …","","","","","Re-allocate to set the capacity to …","","","","","Reserve capacity for <code>additional</code> more elements to be …","Reserve the minimum capacity for <code>additional</code> more elements …","","","","","Construct an empty vector with enough capacity …","The layout that was passed to the allocator"],"i":[15,0,15,0,0,0,1,0,0,2,2,2,2,4,2,2,2,4,10,2,2,4,15,10,2,2,4,15,2,2,2,4,2,2,4,2,2,2,2,2,2,2,2,10,2,4,2,2,2,10,2,4,15,15,10,2,2,2,2,2,4,15,15,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,10,2,4,15,2,2,10,2,2,2,4,2,2,10,2,2,2,10,4,10,4,2,2,2,2,2,2,2,2,2,2,2,2,1,10,4,0,0,2,2,2,4,28,15,2,10,2,4,15,2,10,2,4,15,2,2,10,2,4,15,2,29],"f":[0,0,0,0,0,0,0,0,0,[[[2,[1]],[2,[1]]]],[[[2,[1]]],3],[[[2,[1]]]],[[[2,[1]]],3],[[[4,[1]]],3],[[[2,[1]]]],[[[2,[1]]],3],[[[2,[1]]],3],[[[4,[1]]],3],[[]],[[[2,[1]]],3],[[]],[[]],[[]],[[]],[[[2,[1]]],3],[[]],[[]],[[]],[[[2,[1]]],5],[[[2,[1]]]],[[[2,[1]]],[[2,[1]]]],[[[4,[[0,[1,6]]]]],[[4,[[0,[1,6]]]]]],[[[2,[1]],[2,[1]]]],[[]],[[]],[[[2,[1]],[2,[1]]],7],[[[2,[1]]]],[[[2,[1]],8]],[[[2,[1]],8]],[[],[[2,[1]]]],[[[2,[1]]],3],[[[2,[1]]],3],[[[2,[1]],[9,[5]]],[[10,[1]]]],[[[10,[1]]]],[[[2,[1]]]],[[[4,[1]]]],[[[2,[1]],[2,[1]]],11],[[[2,[1]],12]],[[[2,[1]],3]],[[[10,[1]],13],14],[[[2,[1]],13],14],[[[4,[1]],13],14],[[15,13],14],[[15,13],14],[[]],[16],[3,[[2,[1]]]],[[]],[17,[[2,[1]]]],[1,[[2,[1]]]],[[]],[18,15],[[]],[1,[[2,[1]]]],[[1,5],[[2,[1]]]],[[[19,[1]],5],[[2,[1]]]],[20,[[2,[20]]]],[5,[[2,[1]]]],[12,[[2,[1]]]],[[5,5],[[2,[1]]]],[3,[[2,[1]]]],[17,[[2,[1]]]],[[[2,[1]],5]],[[[2,[1]],21]],[[[2,[1]],[22,[3]]]],[[[2,[1]],[22,[3]]]],[[[2,[1]]],5],[[[2,[1]],5]],[[[2,[1]],5,3]],[[[2,[1]],5,12]],[[]],[[]],[[]],[[]],[[[2,[1]]],[[23,[3]]]],[[[2,[1]]],[[24,[1,[2,[1]]]]]],[[]],[[[2,[1]]]],[[[2,[1]]]],[[[2,[1]]]],[[]],[[[2,[1]]],17],[[[2,[1]]],11],[[[10,[1]]],5],[[[2,[1]]],5],[[],[[2,[1]]]],[[],[[2,[20]]]],[[[10,[1]]],25],[[[4,[1]]],25],[[[10,[1]]],25],[[[4,[1]]],25],[[[2,[1]],[2,[1]]],[[25,[7]]]],[[[2,[1]]],25],[[[2,[1]]]],[[[2,[1]],5]],[[[2,[1]],5]],[[[2,[1]],5]],[[[2,[1]],5]],[[[2,[1]],5,8]],[[[2,[1]],8]],[[[2,[1]],8]],[[[2,[1]],5]],[[[2,[1]]]],[[],5],[[[10,[1]]]],[[[4,[1]]]],0,0,[[[2,[1]]],11],[[[2,[1]],5]],[[]],[[]],[[],2],[[],26],[[[2,[1]],5]],[[],24],[[],24],[[],24],[[],24],[[[2,[1]],5],[[24,[15]]]],[[],24],[[],24],[[],24],[[],24],[[[2,[1]],5],[[24,[15]]]],[[[2,[1]],5],[[24,[15]]]],[[],27],[[],27],[[],27],[[],27],[5,[[2,[1]]]],0],"c":[],"p":[[8,"Array"],[3,"SmallVec"],[15,"slice"],[3,"IntoIter"],[15,"usize"],[8,"Clone"],[4,"Ordering"],[8,"FnMut"],[8,"RangeBounds"],[3,"Drain"],[15,"bool"],[8,"IntoIterator"],[3,"Formatter"],[6,"Result"],[4,"CollectionAllocErr"],[15,"never"],[3,"Vec"],[6,"LayoutErr"],[19,"MaybeUninit"],[15,"array"],[8,"Hasher"],[8,"SliceIndex"],[3,"Box"],[4,"Result"],[4,"Option"],[3,"String"],[3,"TypeId"],[8,"ToSmallVec"],[13,"AllocErr"]]},\
"tempfile":{"doc":"Temporary files and directories.","t":"DDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLFLFLFLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Builder","NamedTempFile","PathPersistError","PersistError","SpooledTempFile","TempDir","TempPath","append","as_fd","as_file","as_file_mut","as_raw_fd","as_ref","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","close","close","close","default","deref","drop","drop","eq","equivalent","error","error","file","flush","flush","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_parts","from_path","into","into","into","into","into","into","into","into_file","into_inner","into_parts","into_path","into_temp_path","is_rolled","keep","keep","make","make_in","new","new","new","new","new_in","new_in","path","path","path","persist","persist","persist_noclobber","persist_noclobber","prefix","provide","provide","rand_bytes","read","read","read","read_exact","read_exact","read_exact","read_to_end","read_to_end","read_to_end","read_to_string","read_to_string","read_to_string","read_vectored","read_vectored","read_vectored","reopen","roll","seek","seek","seek","set_len","source","source","spooled_tempfile","suffix","tempdir","tempdir","tempdir_in","tempdir_in","tempfile","tempfile","tempfile_in","tempfile_in","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","with_prefix","with_prefix","with_prefix_in","with_prefix_in","write","write","write","write_all","write_all","write_fmt","write_fmt","write_vectored","write_vectored","write_vectored"],"q":[[0,"tempfile"]],"d":["Create a new temporary file or directory with custom …","A named temporary file.","Error returned when persisting a temporary file path fails.","Error returned when persisting a temporary file fails.","An object that behaves like a regular temporary file, but …","A directory in the filesystem that is automatically …","A path to a named temporary file without an open file …","Set the file to be opened in append mode.","","Get a reference to the underlying file.","Get a mutable reference to the underlying file.","","","","","","","","","","","","","","","","","","","","","","Closes and removes the temporary directory, returning a …","Close and remove the temporary file.","Close and remove the temporary file.","","","","","","","The underlying IO error.","The underlying IO error.","The temporary file that couldn’t be persisted.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a <code>NamedTempFile</code> from its constituent parts.","Create a new TempPath from an existing path. This can be …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert the temporary file into a <code>std::fs::File</code>.","Consumes and returns the inner <code>SpooledData</code> type.","Converts the named temporary file into its constituent …","Persist the temporary directory to disk, returning the …","Closes the file, leaving only the temporary file path.","Returns true if the file has been rolled over to disk.","Keep the temporary file from being deleted. This function …","Keep the temporary file from being deleted. This function …","Attempts to create a temporary file (or file-like object) …","This is the same as <code>Builder::make</code>, except <code>dir</code> is used as …","Attempts to make a temporary directory inside of …","Create a new named temporary file.","","Create a new <code>Builder</code>.","Attempts to make a temporary directory inside of <code>dir</code>. The …","Create a new named temporary file in the specified …","Accesses the <code>Path</code> to the temporary directory.","Get the temporary file’s path.","The temporary file path that couldn’t be persisted.","Persist the temporary file at the target path.","Persist the temporary file at the target path.","Persist the temporary file at the target path if and only …","Persist the temporary file at the target path if and only …","Set a custom filename prefix.","","","Set the number of random bytes.","","","","","","","","","","","","","","","","Securely reopen the temporary file.","Rolls over to a file on disk, regardless of current size. …","","","","","","","Create a new spooled temporary file.","Set a custom filename suffix.","Create a new temporary directory.","Attempts to make a temporary directory inside of …","Create a new temporary directory in a specific directory.","Attempts to make a temporary directory inside of <code>dir</code>. The …","Create a new temporary file.","Create the named temporary file.","Create a new temporary file in the specified directory.","Create the named temporary file in the specified directory.","","","","","","","","","","","","","","","","","","","","","","","","","Attempts to make a temporary directory with the specified …","Create a new named temporary file with the specified …","Attempts to make a temporary directory with the specified …","Create a new named temporary file with the specified …","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,1,4,4,4,4,8,10,10,4,8,10,4,18,19,15,1,8,10,4,18,19,15,1,1,1,8,10,4,1,10,8,10,1,1,18,19,18,4,4,15,8,10,4,18,18,19,19,15,1,8,10,10,4,4,18,19,15,1,4,10,8,10,4,18,19,15,1,4,15,4,8,4,15,10,4,1,1,8,4,15,1,8,4,8,4,19,10,4,10,4,1,18,19,1,4,4,15,4,4,15,4,4,15,4,4,15,4,4,15,4,15,4,4,15,15,18,19,0,1,0,1,0,1,0,1,0,1,1,18,19,8,10,4,18,19,15,1,8,10,4,18,19,15,1,8,10,4,18,19,15,1,8,4,8,4,4,4,15,4,4,4,4,4,4,15],"f":[0,0,0,0,0,0,0,[[1,2],1],[[[4,[3]]],5],[4],[4],[[[4,[6]]],7],[8,9],[10,11],[10,9],[4,9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[[]],[8,12],[10,12],[4,12],[[],1],[10,9],[8],[10],[[1,1],2],[[],2],0,0,0,[[[4,[13]]],12],[[[4,[14]]],12],[15,12],[[8,16],17],[[10,16],17],[[4,16],17],[[18,16],17],[[18,16],17],[[19,16],17],[[19,16],17],[[15,16],17],[[1,16],17],[[]],[[]],[19,10],[[]],[18,4],[[]],[[]],[[]],[[]],[10,4],[[[21,[20]]],10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[4],0,[4],[8,20],[4,10],[15,2],[10,[[22,[20,19]]]],[4,[[22,[18]]]],[[1,23],[[12,[4]]]],[[1,[24,[9]],23],[[12,[4]]]],[[],[[12,[8]]]],[[],[[12,[4]]]],[25,15],[[],1],[[[24,[9]]],[[12,[8]]]],[[[24,[9]]],[[12,[4]]]],[8,9],[4,9],0,[[10,[24,[9]]],[[22,[19]]]],[[4,[24,[9]]],[[22,[18]]]],[[10,[24,[9]]],[[22,[19]]]],[[4,[24,[9]]],[[22,[18]]]],[[1,[0,[[24,[11]],26]]],1],[27],[27],[[1,25],1],[[[4,[28]],[30,[29]]],[[12,[25]]]],[[[4,[13]],[30,[29]]],[[12,[25]]]],[[15,[30,[29]]],[[12,[25]]]],[[[4,[28]],[30,[29]]],12],[[[4,[13]],[30,[29]]],12],[[15,[30,[29]]],12],[[[4,[28]],[31,[29]]],[[12,[25]]]],[[[4,[13]],[31,[29]]],[[12,[25]]]],[[15,[31,[29]]],[[12,[25]]]],[[[4,[13]],32],[[12,[25]]]],[[[4,[28]],32],[[12,[25]]]],[[15,32],[[12,[25]]]],[[[4,[28]],[30,[33]]],[[12,[25]]]],[[[4,[13]],[30,[33]]],[[12,[25]]]],[[15,[30,[33]]],[[12,[25]]]],[[[4,[13]]],[[12,[13]]]],[15,12],[[[4,[34]],35],[[12,[36]]]],[[[4,[13]],35],[[12,[36]]]],[[15,35],[[12,[36]]]],[[15,36],[[22,[37]]]],[18,[[39,[38]]]],[19,[[39,[38]]]],[25,15],[[1,[0,[[24,[11]],26]]],1],[[],[[12,[8]]]],[1,[[12,[8]]]],[[[24,[9]]],[[12,[8]]]],[[1,[24,[9]]],[[12,[8]]]],[[],[[12,[13]]]],[1,[[12,[4]]]],[[[24,[9]]],[[12,[13]]]],[[1,[24,[9]]],[[12,[4]]]],[[]],[[],32],[[],32],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[[24,[11]]],[[12,[8]]]],[[[24,[11]]],[[12,[4]]]],[[[24,[11]],[24,[9]]],[[12,[8]]]],[[[24,[11]],[24,[9]]],[[12,[4]]]],[[[4,[14]],[30,[29]]],[[12,[25]]]],[[[4,[13]],[30,[29]]],[[12,[25]]]],[[15,[30,[29]]],[[12,[25]]]],[[[4,[13]],[30,[29]]],12],[[[4,[14]],[30,[29]]],12],[[[4,[14]],41],12],[[[4,[13]],41],12],[[[4,[14]],[30,[42]]],[[12,[25]]]],[[[4,[13]],[30,[42]]],[[12,[25]]]],[[15,[30,[42]]],[[12,[25]]]]],"c":[],"p":[[3,"Builder"],[15,"bool"],[8,"AsFd"],[3,"NamedTempFile"],[3,"BorrowedFd"],[8,"AsRawFd"],[6,"RawFd"],[3,"TempDir"],[3,"Path"],[3,"TempPath"],[3,"OsStr"],[6,"Result"],[3,"File"],[8,"Write"],[3,"SpooledTempFile"],[3,"Formatter"],[6,"Result"],[3,"PersistError"],[3,"PathPersistError"],[3,"PathBuf"],[8,"Into"],[4,"Result"],[8,"FnMut"],[8,"AsRef"],[15,"usize"],[8,"Sized"],[3,"Demand"],[8,"Read"],[15,"u8"],[15,"slice"],[3,"Vec"],[3,"String"],[3,"IoSliceMut"],[8,"Seek"],[4,"SeekFrom"],[15,"u64"],[3,"Error"],[8,"Error"],[4,"Option"],[3,"TypeId"],[3,"Arguments"],[3,"IoSlice"]]},\
"thiserror":{"doc":"github crates-io docs-rs","t":"Y","n":["Error"],"q":[[0,"thiserror"]],"d":[""],"i":[0],"f":[0],"c":[],"p":[]},\
"thiserror_impl":{"doc":"","t":"Y","n":["Error"],"q":[[0,"thiserror_impl"]],"d":[""],"i":[0],"f":[0],"c":[],"p":[]},\
"tree_magic_mini":{"doc":"<code>tree_magic_mini</code> is a Rust crate that determines the MIME …","t":"FFFF","n":["from_filepath","from_u8","match_filepath","match_u8"],"q":[[0,"tree_magic_mini"]],"d":["Gets the type of a file from a filepath.","Gets the type of a file from a byte stream.","Check if the given filepath matches the given MIME type.","Checks if the given bytestream matches the given MIME type."],"i":[0,0,0,0],"f":[[1,[[3,[2]]]],[[[5,[4]]],2],[[2,1],6],[[2,[5,[4]]],6]],"c":[],"p":[[3,"Path"],[15,"str"],[4,"Option"],[15,"u8"],[15,"slice"],[15,"bool"]]},\
"unicode_ident":{"doc":"github crates-io docs-rs","t":"FF","n":["is_xid_continue","is_xid_start"],"q":[[0,"unicode_ident"]],"d":["",""],"i":[0,0],"f":[[1,2],[1,2]],"c":[],"p":[[15,"char"],[15,"bool"]]},\
"wayland_backend":{"doc":"Backend API for wayland crates","t":"COAACHEEENNNNNNRNNDDDNNNNNDDNNNNNNEDNMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLMLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMMMMMMMMMLLMMMMFLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMTDDAADDNDIDNDEDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDIDNDEIDDDEDNNIDNDLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLL","n":["client","message","protocol","rs","server","ANONYMOUS_INTERFACE","AllowNull","Argument","ArgumentType","Array","Array","Fd","Fd","Fixed","Fixed","INLINE_ARGS","Int","Int","Interface","Message","MessageDesc","NewId","NewId","No","Object","Object","ObjectInfo","ProtocolError","Str","Str","Uint","Uint","Unknown","Value","WEnum","WEnumError","Yes","a","arg_interfaces","args","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_ptr","child_interface","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","code","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","event_count","events","events","f","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_type","h","i","id","interface","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_result","is_destructor","map_fd","message","n","name","name","name","name","o","object_id","object_interface","opcode","provide","provide","request_count","requests","requests","s","same_interface","same_type","sender_id","signature","signature","since","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","types","u","version","version","version","wl_argument","wl_interface","wl_message","client","server","Backend","InvalidId","Io","NoWaylandLib","ObjectData","ObjectId","Protocol","ReadEventsGuard","WaylandError","WeakBackend","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cause","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","connect","connection_fd","data_as_any","debug","destroyed","dispatch_inner_queue","display_id","downcast","downcast_arc","downcast_mut","downcast_rc","downcast_ref","downgrade","eq","equivalent","event","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","get_data","hash","info","interface","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is","is_null","last_error","null","poll_fd","prepare_read","protocol_id","provide","provide","provide","read","send_request","set_data","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upgrade","Backend","ClientData","ClientId","ConnectionClosed","Credentials","DisconnectReason","GlobalHandler","GlobalId","GlobalInfo","Handle","InitError","InvalidId","Io","NoWaylandLib","ObjectData","ObjectId","ProtocolError","WeakHandle","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","bind","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","can_view","cause","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","create_global","create_object","debug","debug","debug","destroyed","disable_global","disabled","disconnected","dispatch_all_clients","dispatch_single_client","downcast","downcast","downcast","downcast_arc","downcast_arc","downcast_arc","downcast_mut","downcast_mut","downcast_mut","downcast_rc","downcast_rc","downcast_rc","downcast_ref","downcast_ref","downcast_ref","downgrade","eq","eq","eq","equivalent","equivalent","equivalent","flush","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","get_client","get_client_credentials","get_client_data","get_global_handler","get_object_data","get_object_data_any","gid","global_info","handle","hash","hash","hash","initialized","insert_client","interface","interface","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is","is","is","is_null","kill_client","new","null","object_for_protocol_id","object_info","pid","poll_fd","post_error","protocol_id","provide","provide","remove_global","request","same_client_as","send_event","set_object_data","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uid","upgrade","version","with_all_clients","with_all_objects_for"],"q":[[0,"wayland_backend"],[5,"wayland_backend::protocol"],[296,"wayland_backend::rs"],[298,"wayland_backend::rs::client"],[461,"wayland_backend::rs::server"]],"d":["","Helper macro for quickly making a <code>Message</code>","Types and utilities for manipulating the Wayland protocol","Rust implementations of the Wayland backends","","Special interface representing an anonymous object","Describes whether an argument may have a null value.","Enum of possible argument of the protocol","Enum of possible argument types as recognized by the wire","Vec","Vec","A file descriptor argument. Represented by a [<code>RawFd</code>].","A file descriptor argument. Represented by a [<code>RawFd</code>].","A signed fixed point number with 1/256 precision","A signed fixed point number with 1/256 precision","Number of arguments that are stocked inline in a <code>Message</code> …","An integer argument. Represented by a <code>i32</code>.","An integer argument. Represented by a <code>i32</code>.","Description of wayland interface.","Represents a message that has been sent from some object.","Wire metadata of a given message","Id of a newly created wayland object","Id of a newly created wayland object","Null values are forbidden.","Id of a wayland object","Id of a wayland object","Description of the protocol-level information of an object","A protocol error","A string. This is represented as a <code>CString</code> in a message.","CString","An unsigned integer argument. Represented by a <code>u32</code>.","An unsigned integer argument. Represented by a <code>u32</code>.","The stored value does not match one defined by the …","The interpreted value","An enum value in the protocol.","Error representing an unknown numeric variant for a <code>WEnum</code>","Null values are allowed.","","The interfaces passed into this message as arguments.","The arguments of the message.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A C representation of this interface that may be used to …","The child interface created from this message.","","","","","","","","","","","","","","","","","","","The error code associated with the error","","","","","","","","","","","","","A list that describes every event this interface supports.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Constructs an enum from the integer format used by the …","Returns the argument unchanged.","Retrieve the type of a given argument instance","","","The protocol ID","The interface","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert this <code>WEnum</code> into a result","Whether this message is a destructor","Map some closure on all Fd contained in this message, to …","The message sent by the server describing the error","","","","The name of the interface.","Name of this message","","The id of the object that caused the error","The interface of the object that caused the error","The opcode of the message.","","","","","A list that describes every request this interface …","","Returns true if the two interfaces are the same.","Returns true if the type of the argument is the same.","The id of the object that sent the message.","","Signature of the message","Minimum required version of the interface","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The maximum supported version of the interface.","The version","","","","Client-side rust implementation of a Wayland protocol …","Server-side rust implementation of a Wayland protocol …","A Wayland client backend","An error generated when trying to act on an invalid …","The connection encountered an IO error","An error type representing the failure to load libwayland","A trait representing your data associated to an object","An ID representing a Wayland object","The connection encountered a protocol error","Guard for synchronizing event reading across multiple …","An error that can occur when using a Wayland connection","A weak handle to a <code>Backend</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Try to initialize a Wayland backend on the provided unix …","Access the Wayland socket FD for polling","Helper for accessing user data","Helper for forwarding a Debug implementation of your …","Notification that the object has been destroyed and is no …","Dispatches the inner queue of this backend if necessary","Get the object ID for the <code>wl_display</code>","Returns a boxed object from a boxed trait object if the …","Returns an <code>Arc</code>-ed object from an <code>Arc</code>-ed trait object if …","Returns a mutable reference to the object within the trait …","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …","Returns a reference to the object within the trait object …","Get a <code>WeakBackend</code> from this backend","","","Dispatch an event for the associated object","Flush all pending outgoing requests to the server","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Access the object data associated with a given object ID","","Get the detailed protocol information about a wayland …","Interface of the represented object","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns true if the trait object wraps an object of type …","Check if this is a null ID","Get the last error that occurred on this backend","Create a null object ID","Access the Wayland socket FD for polling","Create a new reading guard","Return the protocol-level numerical ID of this object","","","","Attempt to read events from the Wayland socket","Sends a request to the server","Set the object data associated with a given object ID","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Try to upgrade this weak handle to a <code>Backend</code>","A backend object that represents the state of a wayland …","A trait representing your data associated to a client","An ID representing a Wayland client","The connection has been closed by the server or client.","Holds the client credentials","Describes why a client has been disconnected from the …","A trait representing the handling of new bound globals","An Id representing a global","Description of a global advertised to some clients.","Main handle of a backend to the Wayland protocol","An error type representing the failure to initialize a …","An error generated when trying to act on an invalid …","Initialized failed due to an underlying I/O error","The wayland system library could not be loaded","A trait representing your data associated to an object","An ID representing a Wayland object","The server has sent the client a protocol error, …","A weak reference to a <code>Handle</code>","","","","","","","","","","","","","","","","","","","","","","","A global has been bound","","","","","","","","","","","","","","","","","","","","","","","Check if given client is allowed to interact with given …","","","","","","","","","","","","","","","","Creates a global of the specified interface and version …","Create a new object for given client","Helper for forwarding a Debug implementation of your …","Helper for forwarding a Debug implementation of your …","Helper for forwarding a Debug implementation of your …","Notification that the object has been destroyed and is no …","Disables a global object that is currently active.","Whether the global is disabled.","Notification that the client is disconnected","Dispatches all pending messages from all clients.","Dispatches all pending messages from the specified client.","Returns a boxed object from a boxed trait object if the …","Returns a boxed object from a boxed trait object if the …","Returns a boxed object from a boxed trait object if the …","Returns an <code>Arc</code>-ed object from an <code>Arc</code>-ed trait object if …","Returns an <code>Arc</code>-ed object from an <code>Arc</code>-ed trait object if …","Returns an <code>Arc</code>-ed object from an <code>Arc</code>-ed trait object if …","Returns a mutable reference to the object within the trait …","Returns a mutable reference to the object within the trait …","Returns a mutable reference to the object within the trait …","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …","Returns a reference to the object within the trait object …","Returns a reference to the object within the trait object …","Returns a reference to the object within the trait object …","Get a <code>WeakHandle</code> from this handle","","","","","","","Flushes pending events destined for a client.","Flushes pending events destined for a client.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the id of the client which owns the object.","Retrive the <code>Credentials</code> of a client","Returns the data associated with a client.","Returns the handler which manages the visibility and …","Returns the data associated with an object.","Returns the data associated with an object as a <code>dyn Any</code>","gid of the client","Returns information about a global.","Returns a handle which represents the server side state of …","","","","Notification that the client was initialized","Initializes a connection with a client.","Returns the interface of this object.","The interface of the global.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if the trait object wraps an object of type …","Returns true if the trait object wraps an object of type …","Returns true if the trait object wraps an object of type …","Returns whether this object is a null object.","Kills the connection to a client.","Initialize a new Wayland backend","Returns an object id that represents a null object.","Retrieve the <code>ObjectId</code> for a wayland object given its …","Get the detailed protocol information about a wayland …","pid of the client","Returns the underlying file descriptor.","Posts a protocol error on an object. This will also …","Return the protocol-level numerical ID of this object","","","Removes a global object and free its ressources.","Dispatch a request for the associated object","Check if two object IDs are associated with the same client","Send an event to the client","Sets the data associated with some object.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uid of the client","Try to upgrade this weak handle to a <code>Handle</code>","The version of the global that is advertised to clients.","Invokes a closure for all clients connected to this server","Invokes a closure for all objects owned by a client."],"i":[0,0,0,0,0,0,0,0,0,3,5,3,5,3,5,0,3,5,0,0,0,3,5,2,3,5,0,0,3,5,3,5,10,10,0,0,2,68,6,9,69,15,68,2,3,5,22,6,7,8,9,10,11,69,15,68,2,3,5,22,6,7,8,9,10,11,69,15,68,2,3,5,22,6,7,8,9,10,11,69,15,68,2,3,5,22,6,7,8,9,10,11,22,6,2,3,5,6,7,8,9,10,11,2,3,5,6,7,8,9,10,11,8,2,3,5,9,10,2,3,5,9,10,15,15,22,68,15,2,3,5,5,22,22,6,7,8,8,9,10,11,11,69,15,68,2,3,5,22,6,7,8,9,10,10,11,5,68,68,7,7,69,15,68,2,3,5,22,6,7,8,9,10,11,69,15,68,2,3,5,22,6,7,8,9,10,11,15,2,3,5,22,6,7,8,9,10,11,69,15,68,2,3,5,22,6,7,8,9,10,11,10,6,9,8,68,69,15,22,6,68,8,8,9,8,11,15,15,22,68,0,3,9,69,6,6,2,3,5,6,7,8,9,10,11,5,22,8,11,69,15,68,2,3,5,22,6,7,8,9,10,11,69,15,68,2,3,5,22,6,7,8,9,10,11,69,15,68,2,3,5,22,6,7,8,9,10,11,69,68,15,22,7,0,0,0,0,0,0,0,33,0,0,0,33,0,0,0,36,37,38,42,41,33,39,36,37,38,42,41,33,39,36,37,38,42,41,33,39,36,37,38,42,41,33,39,33,36,37,38,33,39,36,37,38,33,39,37,42,45,45,45,37,37,45,45,45,45,45,37,36,36,45,37,45,36,36,37,38,42,41,41,33,33,39,39,36,37,38,42,41,33,33,33,39,37,36,37,36,36,37,38,42,41,33,39,36,37,38,42,41,33,39,36,37,38,42,41,33,39,36,37,38,42,41,33,39,45,36,37,36,37,37,36,41,33,39,42,37,37,36,37,38,33,39,36,41,33,39,36,37,38,42,41,33,39,36,37,38,42,41,33,39,36,37,38,42,41,33,39,38,0,0,0,63,0,0,0,0,0,0,0,0,58,58,0,0,63,0,55,53,54,52,59,64,66,58,60,63,61,55,53,54,52,59,64,66,58,60,63,61,62,55,53,54,52,59,64,66,58,60,63,61,55,53,54,52,59,64,66,58,60,63,61,62,58,55,53,54,52,59,60,61,55,53,54,52,59,60,61,52,52,56,62,57,56,52,66,57,64,64,56,62,57,56,62,57,56,62,57,56,62,57,56,62,57,52,55,53,54,55,53,54,52,64,56,62,57,55,55,53,54,52,59,64,66,58,58,60,60,63,61,55,53,54,52,59,64,66,58,60,63,61,52,52,52,52,52,52,61,52,64,55,53,54,57,52,55,66,55,53,54,52,59,64,66,58,60,63,61,55,53,54,52,59,64,66,58,60,63,61,55,53,54,52,59,64,66,58,60,63,61,55,53,54,52,59,64,66,58,60,63,61,56,62,57,55,52,64,55,52,52,61,64,52,55,58,60,52,56,55,52,52,55,53,54,52,59,60,61,55,58,60,55,53,54,52,59,64,66,58,60,63,61,55,53,54,52,59,64,66,58,60,63,61,55,53,54,52,59,64,66,58,60,63,61,61,59,66,52,52],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[2,2],[3,3],[[[5,[4,4]]],[[5,[4,4]]]],[6,6],[7,7],[8,8],[[[9,[4,4]]],[[9,[4,4]]]],[[[10,[4]]],[[10,[4]]]],[11,11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[2,2],12],[[3,3],12],[[[5,[13,14]],[5,[13,14]]],12],[[[9,[13,14]],[9,[13,14]]],12],[[[10,[13]],[10,[13]]],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,0,0,0,[[15,16],[[18,[17]]]],[[2,16],19],[[3,16],19],[[[5,[20,14]],16],19],[[[5,[21,21]],16],19],[[22,16],19],[[22,16],19],[[6,16],19],[[7,16],19],[[8,16],[[18,[17]]]],[[8,16],19],[[[9,[21,21]],16],19],[[[10,[21]],16],19],[[11,16],19],[[11,16],19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[23,[[10,[[24,[23]]]]]],[[]],[5,3],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[10,[[18,[11]]]],0,[[9,29],9],0,0,0,0,0,0,0,0,0,0,[30],[30],0,0,0,0,[[22,22],12],[[3,3],12],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],31],[[],31],[[],31],[[],31],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[33,[[35,[34]]]],[36,36],[37,37],[38,38],[33,33],[39,39],[[]],[[]],[[]],[[]],[[]],[40,[[18,[37,41]]]],[42,43],[[],1],[16,19],[36],[37,[[18,[44,33]]]],[37,36],[[[26,[45]]],[[18,[[26,[45]],[26,[45]]]]]],[[[27,[45]]],[[18,[[27,[[0,[1,46,47,45]]]],[27,[45]]]]]],[45,[[35,[45]]]],[[[28,[45]]],[[18,[[28,[45]],[28,[45]]]]]],[45,[[35,[45]]]],[37,38],[[36,36],12],[[],12],[[27,37,[9,[36,48]]],[[35,[[27,[45]]]]]],[37,[[18,[33]]]],[[45,16],19],[[36,16],19],[[36,16],19],[[37,16],19],[[38,16],19],[[42,16],19],[[41,16],19],[[41,16],[[18,[17]]]],[[33,16],[[18,[17]]]],[[33,16],19],[[39,16],19],[[39,16],[[18,[17]]]],[[]],[[]],[[]],[[]],[[]],[8,33],[49,33],[[]],[[]],[[37,36],[[18,[[27,[45]],39]]]],[[36,50]],[[37,36],[[18,[7,39]]]],[36,22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[45,12],[36,12],[37,[[35,[33]]]],[[],36],[37,43],[37,[[35,[42]]]],[36,23],[30],[30],[30],[42,[[18,[44,33]]]],[[37,[9,[36,51]],[35,[[27,[45]]]],35],[[18,[36,39]]]],[[37,36,[27,[45]]],[[18,[39]]]],[[]],[[]],[[]],[[]],[[]],[[],31],[[],31],[[],31],[[],31],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[38,[[35,[37]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[27,52,53,54,55],[[27,[56]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[53,[27,[57]],54],12],[58,[[35,[34]]]],[55,55],[53,53],[54,54],[52,52],[59,59],[60,60],[61,61],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[52,22,23,[27,[62]]],54],[[52,53,22,23,[27,[56]]],[[18,[55,60]]]],[16,19],[16,19],[16,19],[[27,52,53,55]],[[52,54]],0,[[53,63]],[64,[[65,[44]]]],[[64,53],[[65,[44]]]],[[[26,[56]]],[[18,[[26,[[56,[1]]]],[26,[56]]]]]],[[[26,[62]]],[[18,[[26,[[62,[1]]]],[26,[62]]]]]],[[[26,[57]]],[[18,[[26,[57]],[26,[57]]]]]],[[[27,[56]]],[[18,[[27,[[0,[1,46,47,[56,[1]]]]]],[27,[56]]]]]],[[[27,[62]]],[[18,[[27,[[0,[1,46,47,[62,[1]]]]]],[27,[62]]]]]],[[[27,[57]]],[[18,[[27,[[0,[1,46,47,57]]]],[27,[57]]]]]],[56,[[35,[[56,[1]]]]]],[62,[[35,[[62,[1]]]]]],[57,[[35,[57]]]],[[[28,[56]]],[[18,[[28,[[56,[1]]]],[28,[56]]]]]],[[[28,[62]]],[[18,[[28,[[62,[1]]]],[28,[62]]]]]],[[[28,[57]]],[[18,[[28,[57]],[28,[57]]]]]],[56,[[35,[[56,[1]]]]]],[62,[[35,[[62,[1]]]]]],[57,[[35,[57]]]],[52,59],[[55,55],12],[[53,53],12],[[54,54],12],[[],12],[[],12],[[],12],[[52,[35,[53]]],65],[[64,[35,[53]]],65],[[56,16],19],[[62,16],19],[[57,16],19],[[55,16],19],[[55,16],19],[[53,16],19],[[54,16],19],[[52,16],19],[[59,16],19],[[[64,[21]],16],19],[[66,16],19],[[58,16],[[18,[17]]]],[[58,16],19],[[60,16],[[18,[17]]]],[[60,16],19],[[63,16],19],[[61,16],19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[52,55],[[18,[53,60]]]],[[52,53],[[18,[61,60]]]],[[52,53],[[18,[[27,[57]],60]]]],[[52,54],[[18,[[27,[62]],60]]]],[[52,55],[[18,[[27,[56]],60]]]],[[52,55],[[18,[[27,[1]],60]]]],0,[[52,54],[[18,[66,60]]]],[64,52],[[55,50]],[[53,50]],[[54,50]],[53],[[52,40,[27,[57]]],[[65,[53]]]],[55,22],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[56,12],[62,12],[57,12],[55,12],[[52,53,63]],[[],[[18,[64,58]]]],[[],55],[[52,53,22,23],[[18,[55,60]]]],[[52,55],[[18,[7,60]]]],0,[64,43],[[52,55,23,67]],[55,23],[30],[30],[[52,54]],[[27,52,53,[9,[55,48]]],[[35,[[27,[56]]]]]],[[55,55],12],[[52,[9,[55,51]]],[[18,[60]]]],[[52,55,[27,[56]]],[[18,[60]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],31],[[],31],[[],31],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],0,[59,[[35,[52]]]],0,[[52,29]],[[52,53,29],[[18,[60]]]]],"c":[],"p":[[8,"Any"],[4,"AllowNull"],[4,"ArgumentType"],[8,"Clone"],[4,"Argument"],[3,"MessageDesc"],[3,"ObjectInfo"],[3,"ProtocolError"],[3,"Message"],[4,"WEnum"],[3,"WEnumError"],[15,"bool"],[8,"PartialEq"],[8,"AsRawFd"],[3,"wl_interface"],[3,"Formatter"],[3,"Error"],[4,"Result"],[6,"Result"],[8,"Display"],[8,"Debug"],[3,"Interface"],[15,"u32"],[8,"TryFrom"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[8,"FnMut"],[3,"Demand"],[3,"String"],[3,"TypeId"],[4,"WaylandError"],[8,"Error"],[4,"Option"],[3,"ObjectId"],[3,"Backend"],[3,"WeakBackend"],[3,"InvalidId"],[3,"UnixStream"],[3,"NoWaylandLib"],[3,"ReadEventsGuard"],[3,"BorrowedFd"],[15,"usize"],[8,"ObjectData"],[8,"Send"],[8,"Sync"],[3,"OwnedFd"],[3,"Error"],[8,"Hasher"],[6,"RawFd"],[3,"Handle"],[3,"ClientId"],[3,"GlobalId"],[3,"ObjectId"],[8,"ObjectData"],[8,"ClientData"],[4,"InitError"],[3,"WeakHandle"],[3,"InvalidId"],[3,"Credentials"],[8,"GlobalHandler"],[4,"DisconnectReason"],[3,"Backend"],[6,"Result"],[3,"GlobalInfo"],[3,"CString"],[19,"wl_argument"],[3,"wl_message"]]},\
"wayland_client":{"doc":"Interface for interacting with the Wayland protocol, …","t":"NNEDIEQDNNNIDDDQNNEDLLLLLLLLLLLLLLLLLLLLAKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLOOLLLLLLLLLLKLLLOLLLLLLLLLLLLLLLLLLLLLLLLLLKLLALLKLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLKLLLALLLLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLKKMMMDDNDIDNDEDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLCLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHEEENNNNNNRNNDDDNNNNNDDNNNNNNEDNMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLMLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMMMMMMMMMLLMMMMFLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMTDDNEDEDDNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLMLLLFLLLLLLLLLLLLLLLLLLLMLAAAAAAAAAAAAAAAAAAAAAAAHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHNRRERRNEDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNRREEDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMNNERRRREDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNRRRRRRRRRRRRNEENNRRRRRRNENNNNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMSSNDENSSRRRREDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMNNNRRRRRREENNNNNNRRRRRRRRRRNENNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMNNNNNRRRRRRRRRRRREENNNRRRRRRENNNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMNRRRRENENNNNNRRRRENDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMRRRRRRRRRRRRNENENENNNNRRNNNEDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMSNNRRRRRRRRRRRRENNNNNNNDNNNNSRRNENEENNNDNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMENNENENNNNENRRRRRRRRRRRRRRRRRRRRRRNEENNNNNNNNRRRRNNENNNNNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNERRRRRRENDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMNRRRRENNRREDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMNDRRRREENNNSNNSRRRRRRRRNESDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMEENRRENDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMSSSNNNRRRRRRENESSNSNNNRRRRRRRRRRRRRRRRRRRREDNSNNNNNNNNSSSDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNRREEENNNNNNNNNNNNNNNNNNNNNRRENNNNNNNNNNNNNNNNNNNNDNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMNNERRRRRRENDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMNNNEENRRRREDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMNNEENNRRRRRRRRRRRRENNNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMNNNNNNRRRRRRRRNEENNNNNNNNNRRRRRRRRRRRRRRRRRRRRRRENNNNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMNNRRRRRRRRRRRRRRENNNRRNENNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMM","n":["Backend","BadMessage","ConnectError","Connection","Dispatch","DispatchError","Event","EventQueue","InvalidFd","NoCompositor","NoWaylandLib","Proxy","QueueFreezeGuard","QueueHandle","QueueProxyData","Request","Unknown","Value","WEnum","Weak","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_fd","as_fd","backend","backend","backend","blocking_dispatch","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","connect_to_env","data","data_as_any","delegate_dispatch","delegate_noop","destroyed","dispatch_pending","display","downgrade","drop","eq","eq","eq","equivalent","equivalent","event","event","event_created_child","event_created_child","event_created_child","flush","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","freeze","from","from","from","from","from","from","from","from","from","from","from","from_backend","from_id","from_socket","get_object_data","globals","handle","hash","id","id","inert","interface","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_result","is_alive","make_data","new_event_queue","object_data","object_info","parse_event","poll_dispatch_pending","prepare_read","prepare_read","protocol","protocol_error","provide","provide","roundtrip","roundtrip","send_constructor","send_request","send_request","source","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","udata","upgrade","version","write_request","interface","opcode","sender_id","Backend","InvalidId","Io","NoWaylandLib","ObjectData","ObjectId","Protocol","ReadEventsGuard","WaylandError","WeakBackend","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cause","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","connect","connection_fd","data_as_any","debug","destroyed","dispatch_inner_queue","display_id","downcast","downcast_arc","downcast_mut","downcast_rc","downcast_ref","downgrade","eq","equivalent","event","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","get_data","hash","info","interface","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is","is_null","last_error","null","poll_fd","prepare_read","protocol","protocol_id","provide","provide","provide","read","send_request","set_data","smallvec","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upgrade","ANONYMOUS_INTERFACE","AllowNull","Argument","ArgumentType","Array","Array","Fd","Fd","Fixed","Fixed","INLINE_ARGS","Int","Int","Interface","Message","MessageDesc","NewId","NewId","No","Object","Object","ObjectInfo","ProtocolError","Str","Str","Uint","Uint","Unknown","Value","WEnum","WEnumError","Yes","a","arg_interfaces","args","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_ptr","child_interface","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","code","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","event_count","events","events","f","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","get_type","h","i","id","interface","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_destructor","map_fd","message","n","name","name","name","name","o","object_id","object_interface","opcode","provide","provide","request_count","requests","requests","s","same_interface","same_type","sender_id","signature","signature","since","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","types","u","version","version","version","wl_argument","wl_interface","wl_message","Backend","BindError","Global","GlobalError","GlobalList","GlobalListContents","InvalidId","NotPresent","UnsupportedVersion","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","bind","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","clone_list","contents","eq","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","interface","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","name","provide","provide","registry","registry_queue_init","source","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","version","with_list","__interfaces","wl_buffer","wl_callback","wl_compositor","wl_data_device","wl_data_device_manager","wl_data_offer","wl_data_source","wl_display","wl_keyboard","wl_output","wl_pointer","wl_region","wl_registry","wl_seat","wl_shell","wl_shell_surface","wl_shm","wl_shm_pool","wl_subcompositor","wl_subsurface","wl_surface","wl_touch","WL_BUFFER_INTERFACE","WL_CALLBACK_INTERFACE","WL_COMPOSITOR_INTERFACE","WL_DATA_DEVICE_INTERFACE","WL_DATA_DEVICE_MANAGER_INTERFACE","WL_DATA_OFFER_INTERFACE","WL_DATA_SOURCE_INTERFACE","WL_DISPLAY_INTERFACE","WL_KEYBOARD_INTERFACE","WL_OUTPUT_INTERFACE","WL_POINTER_INTERFACE","WL_REGION_INTERFACE","WL_REGISTRY_INTERFACE","WL_SEAT_INTERFACE","WL_SHELL_INTERFACE","WL_SHELL_SURFACE_INTERFACE","WL_SHM_INTERFACE","WL_SHM_POOL_INTERFACE","WL_SUBCOMPOSITOR_INTERFACE","WL_SUBSURFACE_INTERFACE","WL_SURFACE_INTERFACE","WL_TOUCH_INTERFACE","wl_buffer_events","wl_buffer_interface","wl_buffer_requests","wl_callback_events","wl_callback_interface","wl_compositor_interface","wl_compositor_requests","wl_data_device_events","wl_data_device_interface","wl_data_device_manager_interface","wl_data_device_manager_requests","wl_data_device_requests","wl_data_offer_events","wl_data_offer_interface","wl_data_offer_requests","wl_data_source_events","wl_data_source_interface","wl_data_source_requests","wl_display_events","wl_display_interface","wl_display_requests","wl_keyboard_events","wl_keyboard_interface","wl_keyboard_requests","wl_output_events","wl_output_interface","wl_output_requests","wl_pointer_events","wl_pointer_interface","wl_pointer_requests","wl_region_interface","wl_region_requests","wl_registry_events","wl_registry_interface","wl_registry_requests","wl_seat_events","wl_seat_interface","wl_seat_requests","wl_shell_interface","wl_shell_requests","wl_shell_surface_events","wl_shell_surface_interface","wl_shell_surface_requests","wl_shm_events","wl_shm_interface","wl_shm_pool_interface","wl_shm_pool_requests","wl_shm_requests","wl_subcompositor_interface","wl_subcompositor_requests","wl_subsurface_interface","wl_subsurface_requests","wl_surface_events","wl_surface_interface","wl_surface_requests","wl_touch_events","wl_touch_interface","wl_touch_requests","Destroy","EVT_RELEASE_OPCODE","EVT_RELEASE_SINCE","Event","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","Release","Request","WlBuffer","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","destroy","eq","eq","equivalent","fmt","fmt","fmt","from","from","from","from_id","hash","id","inert","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","send_constructor","send_request","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_request","Done","EVT_DONE_OPCODE","EVT_DONE_SINCE","Event","Request","WlCallback","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","eq","eq","equivalent","fmt","fmt","fmt","from","from","from","from_id","hash","id","inert","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","send_constructor","send_request","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_request","callback_data","CreateRegion","CreateSurface","Event","REQ_CREATE_REGION_OPCODE","REQ_CREATE_REGION_SINCE","REQ_CREATE_SURFACE_OPCODE","REQ_CREATE_SURFACE_SINCE","Request","WlCompositor","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","create_region","create_surface","data","eq","eq","equivalent","fmt","fmt","fmt","from","from","from","from_id","hash","id","inert","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","send_constructor","send_request","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_request","DataOffer","Drop","EVT_DATA_OFFER_OPCODE","EVT_DATA_OFFER_SINCE","EVT_DROP_OPCODE","EVT_DROP_SINCE","EVT_ENTER_OPCODE","EVT_ENTER_SINCE","EVT_LEAVE_OPCODE","EVT_LEAVE_SINCE","EVT_MOTION_OPCODE","EVT_MOTION_SINCE","EVT_SELECTION_OPCODE","EVT_SELECTION_SINCE","Enter","Error","Event","Leave","Motion","REQ_RELEASE_OPCODE","REQ_RELEASE_SINCE","REQ_SET_SELECTION_OPCODE","REQ_SET_SELECTION_SINCE","REQ_START_DRAG_OPCODE","REQ_START_DRAG_SINCE","Release","Request","Role","Selection","SetSelection","StartDrag","WlDataDevice","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","eq","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_id","hash","hash","id","inert","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","release","send_constructor","send_request","set_selection","start_drag","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_request","id","id","id","serial","surface","time","x","x","y","y","icon","origin","serial","serial","source","source","Ask","Copy","CreateDataSource","DndAction","Event","GetDataDevice","Move","None","REQ_CREATE_DATA_SOURCE_OPCODE","REQ_CREATE_DATA_SOURCE_SINCE","REQ_GET_DATA_DEVICE_OPCODE","REQ_GET_DATA_DEVICE_SINCE","Request","WlDataDeviceManager","all","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","complement","contains","create_data_source","data","difference","empty","eq","eq","eq","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_id","from_iter","from_name","get_data_device","hash","hash","id","inert","insert","interface","intersection","intersects","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","is_all","is_empty","iter","iter_names","not","object_data","opcode","opcode","parse_event","remove","send_constructor","send_request","set","sub","sub_assign","symmetric_difference","to_owned","to_owned","toggle","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","union","version","write_request","seat","Accept","Action","Destroy","EVT_ACTION_OPCODE","EVT_ACTION_SINCE","EVT_OFFER_OPCODE","EVT_OFFER_SINCE","EVT_SOURCE_ACTIONS_OPCODE","EVT_SOURCE_ACTIONS_SINCE","Error","Event","Finish","InvalidAction","InvalidActionMask","InvalidFinish","InvalidOffer","Offer","REQ_ACCEPT_OPCODE","REQ_ACCEPT_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_FINISH_OPCODE","REQ_FINISH_SINCE","REQ_RECEIVE_OPCODE","REQ_RECEIVE_SINCE","REQ_SET_ACTIONS_OPCODE","REQ_SET_ACTIONS_SINCE","Receive","Request","SetActions","SourceActions","WlDataOffer","accept","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","destroy","eq","eq","eq","equivalent","equivalent","finish","fmt","fmt","fmt","fmt","from","from","from","from","from_id","hash","hash","id","inert","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","receive","send_constructor","send_request","set_actions","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_request","dnd_action","mime_type","source_actions","dnd_actions","fd","mime_type","mime_type","preferred_action","serial","Action","Cancelled","Destroy","DndDropPerformed","DndFinished","EVT_ACTION_OPCODE","EVT_ACTION_SINCE","EVT_CANCELLED_OPCODE","EVT_CANCELLED_SINCE","EVT_DND_DROP_PERFORMED_OPCODE","EVT_DND_DROP_PERFORMED_SINCE","EVT_DND_FINISHED_OPCODE","EVT_DND_FINISHED_SINCE","EVT_SEND_OPCODE","EVT_SEND_SINCE","EVT_TARGET_OPCODE","EVT_TARGET_SINCE","Error","Event","InvalidActionMask","InvalidSource","Offer","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_OFFER_OPCODE","REQ_OFFER_SINCE","REQ_SET_ACTIONS_OPCODE","REQ_SET_ACTIONS_SINCE","Request","Send","SetActions","Target","WlDataSource","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","destroy","eq","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_id","hash","hash","id","inert","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","offer","opcode","opcode","parse_event","partial_cmp","send_constructor","send_request","set_actions","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_request","dnd_action","fd","mime_type","mime_type","dnd_actions","mime_type","DeleteId","EVT_DELETE_ID_OPCODE","EVT_DELETE_ID_SINCE","EVT_ERROR_OPCODE","EVT_ERROR_SINCE","Error","Error","Event","GetRegistry","Implementation","InvalidMethod","InvalidObject","NoMemory","REQ_GET_REGISTRY_OPCODE","REQ_GET_REGISTRY_SINCE","REQ_SYNC_OPCODE","REQ_SYNC_SINCE","Request","Sync","WlDisplay","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","eq","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_id","get_registry","hash","hash","id","inert","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","send_constructor","send_request","sync","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_request","code","id","message","object_id","EVT_ENTER_OPCODE","EVT_ENTER_SINCE","EVT_KEYMAP_OPCODE","EVT_KEYMAP_SINCE","EVT_KEY_OPCODE","EVT_KEY_SINCE","EVT_LEAVE_OPCODE","EVT_LEAVE_SINCE","EVT_MODIFIERS_OPCODE","EVT_MODIFIERS_SINCE","EVT_REPEAT_INFO_OPCODE","EVT_REPEAT_INFO_SINCE","Enter","Event","Key","KeyState","Keymap","KeymapFormat","Leave","Modifiers","NoKeymap","Pressed","REQ_RELEASE_OPCODE","REQ_RELEASE_SINCE","Release","Released","RepeatInfo","Request","WlKeyboard","XkbV1","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","data","eq","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_id","hash","hash","hash","id","inert","interface","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","partial_cmp","release","send_constructor","send_request","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","version","write_request","delay","fd","format","group","key","keys","mods_depressed","mods_latched","mods_locked","rate","serial","serial","serial","serial","size","state","surface","surface","time","Current","Description","Done","EVT_DESCRIPTION_OPCODE","EVT_DESCRIPTION_SINCE","EVT_DONE_OPCODE","EVT_DONE_SINCE","EVT_GEOMETRY_OPCODE","EVT_GEOMETRY_SINCE","EVT_MODE_OPCODE","EVT_MODE_SINCE","EVT_NAME_OPCODE","EVT_NAME_SINCE","EVT_SCALE_OPCODE","EVT_SCALE_SINCE","Event","Flipped","Flipped180","Flipped270","Flipped90","Geometry","HorizontalBgr","HorizontalRgb","Mode","Mode","Name","None","Normal","Preferred","REQ_RELEASE_OPCODE","REQ_RELEASE_SINCE","Release","Request","Scale","Subpixel","Transform","Unknown","VerticalBgr","VerticalRgb","WlOutput","_180","_270","_90","all","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","complement","contains","data","difference","empty","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_id","from_iter","from_name","hash","hash","hash","hash","id","inert","insert","interface","intersection","intersects","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","is_all","is_empty","iter","iter_names","not","object_data","opcode","opcode","parse_event","partial_cmp","partial_cmp","release","remove","send_constructor","send_request","set","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","to_owned","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","union","version","write_request","description","factor","flags","height","make","model","name","physical_height","physical_width","refresh","subpixel","transform","width","x","y","Axis","Axis","AxisDiscrete","AxisRelativeDirection","AxisRelativeDirection","AxisSource","AxisSource","AxisStop","AxisValue120","Button","ButtonState","Continuous","EVT_AXIS_DISCRETE_OPCODE","EVT_AXIS_DISCRETE_SINCE","EVT_AXIS_OPCODE","EVT_AXIS_RELATIVE_DIRECTION_OPCODE","EVT_AXIS_RELATIVE_DIRECTION_SINCE","EVT_AXIS_SINCE","EVT_AXIS_SOURCE_OPCODE","EVT_AXIS_SOURCE_SINCE","EVT_AXIS_STOP_OPCODE","EVT_AXIS_STOP_SINCE","EVT_AXIS_VALUE120_OPCODE","EVT_AXIS_VALUE120_SINCE","EVT_BUTTON_OPCODE","EVT_BUTTON_SINCE","EVT_ENTER_OPCODE","EVT_ENTER_SINCE","EVT_FRAME_OPCODE","EVT_FRAME_SINCE","EVT_LEAVE_OPCODE","EVT_LEAVE_SINCE","EVT_MOTION_OPCODE","EVT_MOTION_SINCE","Enter","Error","Event","Finger","Frame","HorizontalScroll","Identical","Inverted","Leave","Motion","Pressed","REQ_RELEASE_OPCODE","REQ_RELEASE_SINCE","REQ_SET_CURSOR_OPCODE","REQ_SET_CURSOR_SINCE","Release","Released","Request","Role","SetCursor","VerticalScroll","Wheel","WheelTilt","WlPointer","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","data","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_id","hash","hash","hash","hash","hash","hash","id","inert","interface","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","release","send_constructor","send_request","set_cursor","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","write_request","axis","axis","axis","axis","axis","axis_source","button","direction","discrete","serial","serial","serial","state","surface","surface","surface_x","surface_x","surface_y","surface_y","time","time","time","time","value","value120","hotspot_x","hotspot_y","serial","surface","Add","Destroy","Event","REQ_ADD_OPCODE","REQ_ADD_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_SUBTRACT_OPCODE","REQ_SUBTRACT_SINCE","Request","Subtract","WlRegion","add","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","destroy","eq","eq","equivalent","fmt","fmt","fmt","from","from","from","from_id","hash","id","inert","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","send_constructor","send_request","subtract","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_request","height","height","width","width","x","x","y","y","Bind","EVT_GLOBAL_OPCODE","EVT_GLOBAL_REMOVE_OPCODE","EVT_GLOBAL_REMOVE_SINCE","EVT_GLOBAL_SINCE","Event","Global","GlobalRemove","REQ_BIND_OPCODE","REQ_BIND_SINCE","Request","WlRegistry","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","backend","bind","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","eq","eq","equivalent","fmt","fmt","fmt","from","from","from","from_id","hash","id","inert","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","send_constructor","send_request","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_request","interface","name","name","version","id","name","Capabilities","Capability","EVT_CAPABILITIES_OPCODE","EVT_CAPABILITIES_SINCE","EVT_NAME_OPCODE","EVT_NAME_SINCE","Error","Event","GetKeyboard","GetPointer","GetTouch","Keyboard","MissingCapability","Name","Pointer","REQ_GET_KEYBOARD_OPCODE","REQ_GET_KEYBOARD_SINCE","REQ_GET_POINTER_OPCODE","REQ_GET_POINTER_SINCE","REQ_GET_TOUCH_OPCODE","REQ_GET_TOUCH_SINCE","REQ_RELEASE_OPCODE","REQ_RELEASE_SINCE","Release","Request","Touch","WlSeat","all","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","complement","contains","data","difference","empty","eq","eq","eq","eq","equivalent","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_id","from_iter","from_name","get_keyboard","get_pointer","get_touch","hash","hash","hash","id","inert","insert","interface","intersection","intersects","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","is_all","is_empty","iter","iter_names","not","object_data","opcode","opcode","parse_event","partial_cmp","release","remove","send_constructor","send_request","set","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","version","write_request","capabilities","name","Error","Event","GetShellSurface","REQ_GET_SHELL_SURFACE_OPCODE","REQ_GET_SHELL_SURFACE_SINCE","Request","Role","WlShell","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","eq","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_id","get_shell_surface","hash","hash","id","inert","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","send_constructor","send_request","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_request","surface","Bottom","BottomLeft","BottomRight","Configure","Default","Driver","EVT_CONFIGURE_OPCODE","EVT_CONFIGURE_SINCE","EVT_PING_OPCODE","EVT_PING_SINCE","EVT_POPUP_DONE_OPCODE","EVT_POPUP_DONE_SINCE","Event","Fill","FullscreenMethod","Inactive","Left","Move","None","Ping","Pong","PopupDone","REQ_MOVE_OPCODE","REQ_MOVE_SINCE","REQ_PONG_OPCODE","REQ_PONG_SINCE","REQ_RESIZE_OPCODE","REQ_RESIZE_SINCE","REQ_SET_CLASS_OPCODE","REQ_SET_CLASS_SINCE","REQ_SET_FULLSCREEN_OPCODE","REQ_SET_FULLSCREEN_SINCE","REQ_SET_MAXIMIZED_OPCODE","REQ_SET_MAXIMIZED_SINCE","REQ_SET_POPUP_OPCODE","REQ_SET_POPUP_SINCE","REQ_SET_TITLE_OPCODE","REQ_SET_TITLE_SINCE","REQ_SET_TOPLEVEL_OPCODE","REQ_SET_TOPLEVEL_SINCE","REQ_SET_TRANSIENT_OPCODE","REQ_SET_TRANSIENT_SINCE","Request","Resize","Resize","Right","Scale","SetClass","SetFullscreen","SetMaximized","SetPopup","SetTitle","SetToplevel","SetTransient","Top","TopLeft","TopRight","Transient","WlShellSurface","_move","all","all","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","complement","complement","contains","contains","data","difference","difference","empty","empty","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_id","from_iter","from_iter","from_name","from_name","hash","hash","hash","hash","id","inert","insert","insert","interface","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","is_all","is_all","is_empty","is_empty","iter","iter","iter_names","iter_names","not","not","object_data","opcode","opcode","parse_event","partial_cmp","pong","remove","remove","resize","send_constructor","send_request","set","set","set_class","set_fullscreen","set_maximized","set_popup","set_title","set_toplevel","set_transient","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","union","union","version","write_request","edges","height","serial","width","class_","edges","flags","flags","framerate","method","output","output","parent","parent","seat","seat","seat","serial","serial","serial","serial","title","x","x","y","y","Abgr1555","Abgr16161616","Abgr16161616f","Abgr2101010","Abgr4444","Abgr8888","Argb1555","Argb16161616","Argb16161616f","Argb2101010","Argb4444","Argb8888","Axbxgxrx106106106106","Ayuv","Bgr233","Bgr565","Bgr565A8","Bgr888","Bgr888A8","Bgra1010102","Bgra4444","Bgra5551","Bgra8888","Bgrx1010102","Bgrx4444","Bgrx5551","Bgrx8888","Bgrx8888A8","C8","CreatePool","EVT_FORMAT_OPCODE","EVT_FORMAT_SINCE","Error","Event","Format","Format","Gr1616","Gr88","InvalidFd","InvalidFormat","InvalidStride","Nv12","Nv15","Nv16","Nv21","Nv24","Nv42","Nv61","P010","P012","P016","P210","Q401","Q410","R16","R8","REQ_CREATE_POOL_OPCODE","REQ_CREATE_POOL_SINCE","Request","Rg1616","Rg88","Rgb332","Rgb565","Rgb565A8","Rgb888","Rgb888A8","Rgba1010102","Rgba4444","Rgba5551","Rgba8888","Rgbx1010102","Rgbx4444","Rgbx5551","Rgbx8888","Rgbx8888A8","Uyvy","Vuy101010","Vuy888","Vyuy","WlShm","X0l0","X0l2","Xbgr1555","Xbgr16161616","Xbgr16161616f","Xbgr2101010","Xbgr4444","Xbgr8888","Xbgr8888A8","Xrgb1555","Xrgb16161616","Xrgb16161616f","Xrgb2101010","Xrgb4444","Xrgb8888","Xrgb8888A8","Xvyu1216161616","Xvyu16161616","Xvyu2101010","Xyuv8888","Y0l0","Y0l2","Y210","Y212","Y216","Y410","Y412","Y416","Yuv410","Yuv411","Yuv420","Yuv42010bit","Yuv4208bit","Yuv422","Yuv444","Yuyv","Yvu410","Yvu411","Yvu420","Yvu422","Yvu444","Yvyu","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","create_pool","data","eq","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_id","hash","hash","hash","id","inert","interface","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","partial_cmp","send_constructor","send_request","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","version","write_request","format","fd","size","CreateBuffer","Destroy","Event","REQ_CREATE_BUFFER_OPCODE","REQ_CREATE_BUFFER_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_RESIZE_OPCODE","REQ_RESIZE_SINCE","Request","Resize","WlShmPool","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","create_buffer","data","destroy","eq","eq","equivalent","fmt","fmt","fmt","from","from","from","from_id","hash","id","inert","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","resize","send_constructor","send_request","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_request","format","height","offset","size","stride","width","BadParent","BadSurface","Destroy","Error","Event","GetSubsurface","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_GET_SUBSURFACE_OPCODE","REQ_GET_SUBSURFACE_SINCE","Request","WlSubcompositor","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","destroy","eq","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_id","get_subsurface","hash","hash","id","inert","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","send_constructor","send_request","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_request","parent","surface","BadSurface","Destroy","Error","Event","PlaceAbove","PlaceBelow","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_PLACE_ABOVE_OPCODE","REQ_PLACE_ABOVE_SINCE","REQ_PLACE_BELOW_OPCODE","REQ_PLACE_BELOW_SINCE","REQ_SET_DESYNC_OPCODE","REQ_SET_DESYNC_SINCE","REQ_SET_POSITION_OPCODE","REQ_SET_POSITION_SINCE","REQ_SET_SYNC_OPCODE","REQ_SET_SYNC_SINCE","Request","SetDesync","SetPosition","SetSync","WlSubsurface","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","destroy","eq","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_id","hash","hash","id","inert","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","place_above","place_below","send_constructor","send_request","set_desync","set_position","set_sync","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_request","sibling","sibling","x","y","Attach","Commit","Damage","DamageBuffer","DefunctRoleObject","Destroy","EVT_ENTER_OPCODE","EVT_ENTER_SINCE","EVT_LEAVE_OPCODE","EVT_LEAVE_SINCE","EVT_PREFERRED_BUFFER_SCALE_OPCODE","EVT_PREFERRED_BUFFER_SCALE_SINCE","EVT_PREFERRED_BUFFER_TRANSFORM_OPCODE","EVT_PREFERRED_BUFFER_TRANSFORM_SINCE","Enter","Error","Event","Frame","InvalidOffset","InvalidScale","InvalidSize","InvalidTransform","Leave","Offset","PreferredBufferScale","PreferredBufferTransform","REQ_ATTACH_OPCODE","REQ_ATTACH_SINCE","REQ_COMMIT_OPCODE","REQ_COMMIT_SINCE","REQ_DAMAGE_BUFFER_OPCODE","REQ_DAMAGE_BUFFER_SINCE","REQ_DAMAGE_OPCODE","REQ_DAMAGE_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_FRAME_OPCODE","REQ_FRAME_SINCE","REQ_OFFSET_OPCODE","REQ_OFFSET_SINCE","REQ_SET_BUFFER_SCALE_OPCODE","REQ_SET_BUFFER_SCALE_SINCE","REQ_SET_BUFFER_TRANSFORM_OPCODE","REQ_SET_BUFFER_TRANSFORM_SINCE","REQ_SET_INPUT_REGION_OPCODE","REQ_SET_INPUT_REGION_SINCE","REQ_SET_OPAQUE_REGION_OPCODE","REQ_SET_OPAQUE_REGION_SINCE","Request","SetBufferScale","SetBufferTransform","SetInputRegion","SetOpaqueRegion","WlSurface","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","attach","backend","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","commit","damage","damage_buffer","data","destroy","eq","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","frame","from","from","from","from","from_id","hash","hash","id","inert","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","offset","opcode","opcode","parse_event","partial_cmp","send_constructor","send_request","set_buffer_scale","set_buffer_transform","set_input_region","set_opaque_region","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_request","factor","output","output","transform","buffer","height","height","region","region","scale","transform","width","width","x","x","x","x","y","y","y","y","Cancel","Down","EVT_CANCEL_OPCODE","EVT_CANCEL_SINCE","EVT_DOWN_OPCODE","EVT_DOWN_SINCE","EVT_FRAME_OPCODE","EVT_FRAME_SINCE","EVT_MOTION_OPCODE","EVT_MOTION_SINCE","EVT_ORIENTATION_OPCODE","EVT_ORIENTATION_SINCE","EVT_SHAPE_OPCODE","EVT_SHAPE_SINCE","EVT_UP_OPCODE","EVT_UP_SINCE","Event","Frame","Motion","Orientation","REQ_RELEASE_OPCODE","REQ_RELEASE_SINCE","Release","Request","Shape","Up","WlTouch","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","eq","eq","equivalent","fmt","fmt","fmt","from","from","from","from_id","hash","id","inert","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","release","send_constructor","send_request","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_request","id","id","id","id","id","major","minor","orientation","serial","serial","surface","time","time","time","x","x","y","y"],"q":[[0,"wayland_client"],[219,"wayland_client::DispatchError"],[222,"wayland_client::backend"],[387,"wayland_client::backend::protocol"],[658,"wayland_client::globals"],[755,"wayland_client::protocol"],[778,"wayland_client::protocol::__interfaces"],[858,"wayland_client::protocol::wl_buffer"],[929,"wayland_client::protocol::wl_callback"],[996,"wayland_client::protocol::wl_callback::Event"],[997,"wayland_client::protocol::wl_compositor"],[1069,"wayland_client::protocol::wl_data_device"],[1187,"wayland_client::protocol::wl_data_device::Event"],[1197,"wayland_client::protocol::wl_data_device::Request"],[1203,"wayland_client::protocol::wl_data_device_manager"],[1340,"wayland_client::protocol::wl_data_device_manager::Request"],[1341,"wayland_client::protocol::wl_data_offer"],[1461,"wayland_client::protocol::wl_data_offer::Event"],[1464,"wayland_client::protocol::wl_data_offer::Request"],[1470,"wayland_client::protocol::wl_data_source"],[1589,"wayland_client::protocol::wl_data_source::Event"],[1593,"wayland_client::protocol::wl_data_source::Request"],[1595,"wayland_client::protocol::wl_display"],[1700,"wayland_client::protocol::wl_display::Event"],[1704,"wayland_client::protocol::wl_keyboard"],[1840,"wayland_client::protocol::wl_keyboard::Event"],[1859,"wayland_client::protocol::wl_output"],[2068,"wayland_client::protocol::wl_output::Event"],[2083,"wayland_client::protocol::wl_pointer"],[2314,"wayland_client::protocol::wl_pointer::Event"],[2339,"wayland_client::protocol::wl_pointer::Request"],[2343,"wayland_client::protocol::wl_region"],[2419,"wayland_client::protocol::wl_region::Request"],[2427,"wayland_client::protocol::wl_registry"],[2501,"wayland_client::protocol::wl_registry::Event"],[2505,"wayland_client::protocol::wl_registry::Request"],[2507,"wayland_client::protocol::wl_seat"],[2681,"wayland_client::protocol::wl_seat::Event"],[2683,"wayland_client::protocol::wl_shell"],[2775,"wayland_client::protocol::wl_shell::Request"],[2776,"wayland_client::protocol::wl_shell_surface"],[3048,"wayland_client::protocol::wl_shell_surface::Event"],[3052,"wayland_client::protocol::wl_shell_surface::Request"],[3074,"wayland_client::protocol::wl_shm"],[3302,"wayland_client::protocol::wl_shm::Event"],[3303,"wayland_client::protocol::wl_shm::Request"],[3305,"wayland_client::protocol::wl_shm_pool"],[3381,"wayland_client::protocol::wl_shm_pool::Request"],[3387,"wayland_client::protocol::wl_subcompositor"],[3484,"wayland_client::protocol::wl_subcompositor::Request"],[3486,"wayland_client::protocol::wl_subsurface"],[3598,"wayland_client::protocol::wl_subsurface::Request"],[3602,"wayland_client::protocol::wl_surface"],[3750,"wayland_client::protocol::wl_surface::Event"],[3754,"wayland_client::protocol::wl_surface::Request"],[3771,"wayland_client::protocol::wl_touch"],[3860,"wayland_client::protocol::wl_touch::Event"]],"d":["The backend generated an error","The received message does not match the specification for …","An error when trying to establish a Wayland connection.","The Wayland connection","A trait providing an implementation for handling events a …","Wayland dispatching error","The event enum for this interface","An event queue","<code>WAYLAND_SOCKET</code> was set but contained garbage","Could not find wayland compositor","The wayland library could not be loaded.","Trait representing a Wayland interface","A handle that temporarily pauses event processing on an …","A handle representing an <code>EventQueue</code>, used to assign …","The <code>ObjectData</code> implementation used by Wayland proxies, …","The request enum for this interface","The stored value does not match one defined by the …","The interpreted value","An enum value in the protocol.","A weak handle to a Wayland object","","","","","","","","","","","","","","","","","","","Provides fd from <code>Backend::poll_fd</code> for polling.","Provides fd from <code>Backend::poll_fd</code> for polling.","Backend reexports","Access the backend associated with this object","Get the <code>Backend</code> underlying this <code>Connection</code>","Block waiting for events and dispatch them","","","","","","","","","","","","","","","","","","","","","","","","","","","Try to connect to the Wayland server following the …","Access the user-data associated with this object","","A helper macro which delegates a set of <code>Dispatch</code> …","A helper macro which delegates a set of <code>Dispatch</code> …","","Dispatch pending events","Get the <code>WlDisplay</code> associated with this connection","Creates a weak handle to this object","","","","","","","Called when an event from the server is processed","","Method used to initialize the user-data of objects created …","Method used to initialize the user-data of objects created …","Macro used to override <code>Dispatch::event_created_child()</code>","Flush pending outgoing events to the server","Flush pending outgoing events to the server","","","","","","","","","","","","Temporarily block processing on this queue.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Constructs an enum from the integer format used by the …","","Returns the argument unchanged.","Returns the argument unchanged.","Wrap an existing <code>Backend</code> into a <code>Connection</code>","Create an object proxy from its ID","Initialize a Wayland connection from an already existing …","Get the object data for a given object ID","Helpers for handling the initialization of an app","Get a <code>QueueHandle</code> for this event queue","","The ID of this object","The underlying <code>ObjectId</code>","Create an inert object proxy","The interface description","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert this <code>WEnum</code> into a result","Checks if the Wayland object associated with this proxy is …","Create an object data associated with this event queue","Create a new event queue","Access the raw data associated with this object.","Get the protocol information related to given object ID","Parse a event for this object","Attempt to dispatch events from this queue, registering …","Start a synchronized read from the socket","Start a synchronized read from the socket","Generated protocol definitions","Retrieve the protocol error that occured on the connection …","","","Synchronous roundtrip","Do a roundtrip to the server","Send a request for this object that creates another object.","Send a request for this object.","Send a request associated with the provided object","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The user data associated with this object","Try to upgrade with weak handle back into a full proxy.","The version of this object","Serialize a request for this object","The interface of the target object","The opcode number","The id of the target object","A Wayland client backend","An error generated when trying to act on an invalid …","The connection encountered an IO error","An error type representing the failure to load libwayland","A trait representing your data associated to an object","An ID representing a Wayland object","The connection encountered a protocol error","Guard for synchronizing event reading across multiple …","An error that can occur when using a Wayland connection","A weak handle to a <code>Backend</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Try to initialize a Wayland backend on the provided unix …","Access the Wayland socket FD for polling","Helper for accessing user data","Helper for forwarding a Debug implementation of your …","Notification that the object has been destroyed and is no …","Dispatches the inner queue of this backend if necessary","Get the object ID for the <code>wl_display</code>","Returns a boxed object from a boxed trait object if the …","Returns an <code>Arc</code>-ed object from an <code>Arc</code>-ed trait object if …","Returns a mutable reference to the object within the trait …","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …","Returns a reference to the object within the trait object …","Get a <code>WeakBackend</code> from this backend","","","Dispatch an event for the associated object","Flush all pending outgoing requests to the server","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Access the object data associated with a given object ID","","Get the detailed protocol information about a wayland …","Interface of the represented object","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns true if the trait object wraps an object of type …","Check if this is a null ID","Get the last error that occurred on this backend","Create a null object ID","Access the Wayland socket FD for polling","Create a new reading guard","Types and utilities for manipulating the Wayland protocol","Return the protocol-level numerical ID of this object","","","","Attempt to read events from the Wayland socket","Sends a request to the server","Set the object data associated with a given object ID","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Try to upgrade this weak handle to a <code>Backend</code>","Special interface representing an anonymous object","Describes whether an argument may have a null value.","Enum of possible argument of the protocol","Enum of possible argument types as recognized by the wire","Vec","Vec","A file descriptor argument. Represented by a [<code>RawFd</code>].","A file descriptor argument. Represented by a [<code>RawFd</code>].","A signed fixed point number with 1/256 precision","A signed fixed point number with 1/256 precision","Number of arguments that are stocked inline in a <code>Message</code> …","An integer argument. Represented by a <code>i32</code>.","An integer argument. Represented by a <code>i32</code>.","Description of wayland interface.","Represents a message that has been sent from some object.","Wire metadata of a given message","Id of a newly created wayland object","Id of a newly created wayland object","Null values are forbidden.","Id of a wayland object","Id of a wayland object","Description of the protocol-level information of an object","A protocol error","A string. This is represented as a <code>CString</code> in a message.","CString","An unsigned integer argument. Represented by a <code>u32</code>.","An unsigned integer argument. Represented by a <code>u32</code>.","The stored value does not match one defined by the …","The interpreted value","An enum value in the protocol.","Error representing an unknown numeric variant for a <code>WEnum</code>","Null values are allowed.","","The interfaces passed into this message as arguments.","The arguments of the message.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A C representation of this interface that may be used to …","The child interface created from this message.","","","","","","","","","","","","","","","","","The error code associated with the error","","","","","","","","","","","A list that describes every event this interface supports.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Retrieve the type of a given argument instance","","","The protocol ID","The interface","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether this message is a destructor","Map some closure on all Fd contained in this message, to …","The message sent by the server describing the error","","","","The name of the interface.","Name of this message","","The id of the object that caused the error","The interface of the object that caused the error","The opcode of the message.","","","","","A list that describes every request this interface …","","Returns true if the two interfaces are the same.","Returns true if the type of the argument is the same.","The id of the object that sent the message.","","Signature of the message","Minimum required version of the interface","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The maximum supported version of the interface.","The version","","","","The backend generated an error","An error that occurs when a binding a global fails.","Description of a global.","An error that may occur when initializing the global list.","A helper for global initialization.","A container representing the current contents of the list …","An invalid object id was acted upon.","The requested global was not found in the registry.","The requested version of the global is not supported.","","","","","","","","","","","Binds a global, returning a new protocol object associated …","","","","","","","","","","","","","Get a copy of the contents of the list of globals.","Access the contents of the list of globals","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","The interface of the global.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","The name of the global.","","","Returns the <code>WlRegistry</code> protocol object.","Initialize a new event queue with its associated registry …","","","","","","","","","","","","","","","","","","","","The advertised version of the global.","Access the list of globals","","content for a wl_surface","callback object","the compositor singleton","data transfer device","data transfer interface","offer to transfer data","offer to transfer data","core global object","keyboard input device","compositor output region","pointer input device","region interface","global registry object","group of input devices","create desktop-style surfaces","desktop-style metadata interface","shared memory support","a shared memory pool","sub-surface compositing","sub-surface interface to a wl_surface","an onscreen surface","touchscreen input device","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","destroy a buffer","The wire opcode for this event","The minimal object version supporting this event","","The wire opcode for this request","The minimal object version supporting this request","compositor releases buffer","","content for a wl_surface","","","","","","","","","","","","","","","","","","destroy a buffer","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","done event","The wire opcode for this event","The minimal object version supporting this event","","","callback object","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","request-specific data for the callback","create new region","create new surface","","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","the compositor singleton","","","","","","","","","","","","","","","","","create new region","create new surface","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","introduce a new wl_data_offer","end drag-and-drop session successfully","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","initiate drag-and-drop session","","","end drag-and-drop session","drag-and-drop session motion","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","destroy data device","","given wl_surface has another role","advertise new selection","copy data to the selection","start drag-and-drop operation","data transfer device","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","destroy data device","","","copy data to the selection","start drag-and-drop operation","","","","","","","","","","","","","","","","","","the new data_offer object","source data_offer object","selection data_offer object","serial number of the enter event","client surface entered","timestamp with millisecond granularity","surface-local x coordinate","surface-local x coordinate","surface-local y coordinate","surface-local y coordinate","drag-and-drop icon surface","surface where the drag originates","serial number of the implicit grab on the origin","serial number of the event that triggered this request","data source for the eventual transfer","data source for the selection","ask action","copy action","create a new data source","drag and drop actions","","create a new data device","move action","no action","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","data transfer interface","Get a flags value with all known bits set.","","","","","","","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","create a new data source","","The intersection of a source flags value with the …","Get a flags value with all bits unset.","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","create a new data device","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained named flags values.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","Get the opcode number of this message","Get the opcode number of this message","","The intersection of a source flags value with the …","","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","","","seat associated with the data device","accept one of the offered mime types","notify the selected action","destroy data offer","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","","the offer will no longer be used","action argument has an invalid value","action mask contains invalid values","finish request was called untimely","offer doesn’t accept this request","advertise offered mime type","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","request that the data is transferred","","set the available/preferred drag-and-drop actions","notify the source-side available actions","offer to transfer data","accept one of the offered mime types","","","","","","","","","","","","","","","","","","","","","","","","","destroy data offer","","","","","","the offer will no longer be used","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","request that the data is transferred","","","set the available/preferred drag-and-drop actions","","","","","","","","","","","","","","","","","","action selected by the compositor","offered mime type","actions offered by the data source","actions supported by the destination client","file descriptor for data transfer","mime type accepted by the client","mime type desired by receiver","action preferred by the destination client","serial number of the accept request","notify the selected action","selection was cancelled","destroy the data source","the drag-and-drop operation physically finished","the drag-and-drop operation concluded","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","","action mask contains invalid values","source doesn’t accept this request","add an offered mime type","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","send the data","set the available drag-and-drop actions","a target accepts an offered mime type","offer to transfer data","","","","","","","","","","","","","","","","","","","","","","","","","destroy the data source","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","add an offered mime type","Get the opcode number of this message","Get the opcode number of this message","","","","","set the available drag-and-drop actions","","","","","","","","","","","","","","","","","","action selected by the compositor","file descriptor for the data","mime type accepted by the target","mime type for the data","actions supported by the data source","mime type offered by the data source","acknowledge object ID deletion","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","global error values","fatal error event","","get global registry object","implementation error in compositor","method doesn’t exist on the specified interface or …","server couldn’t find object","server is out of memory","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","asynchronous roundtrip","core global object","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","get global registry object","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","asynchronous roundtrip","","","","","","","","","","","","","","","","","","error code","deleted object ID","error description","object where the error occurred","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","enter event","","key event","physical key state","keyboard mapping","keyboard mapping format","leave event","modifier and group state","no keymap; client must understand how to interpret the raw …","key is pressed","The wire opcode for this request","The minimal object version supporting this request","release the keyboard object","key is not pressed","repeat rate and delay","","keyboard input device","libxkbcommon compatible, null-terminated string; to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","release the keyboard object","","","","","","","","","","","","","","","","","","","","","","","","","delay in milliseconds since key down until repeating starts","keymap file descriptor","keymap format","keyboard layout","key that produced the event","the currently pressed keys","depressed modifiers","latched modifiers","locked modifiers","the rate of repeating keys in characters per second","serial number of the enter event","serial number of the leave event","serial number of the key event","serial number of the modifiers event","keymap size, in bytes","physical state of the key","surface gaining keyboard focus","surface that lost keyboard focus","timestamp with millisecond granularity","indicates this is the current mode","human-readable description of this output","sent all information about output","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","180 degree flip around a vertical axis","flip and rotate 180 degrees counter-clockwise","flip and rotate 270 degrees counter-clockwise","flip and rotate 90 degrees counter-clockwise","properties of the output","horizontal BGR","horizontal RGB","mode information","advertise available modes for the output","name of this output","no geometry","no transform","indicates this is the preferred mode","The wire opcode for this request","The minimal object version supporting this request","release the output object","","output scaling properties","subpixel geometry information","transform from framebuffer to output","unknown geometry","vertical BGR","vertical RGB","compositor output region","180 degrees counter-clockwise","270 degrees counter-clockwise","90 degrees counter-clockwise","Get a flags value with all known bits set.","","","","","","","","","","","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","","The intersection of a source flags value with the …","Get a flags value with all bits unset.","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained named flags values.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","Get the opcode number of this message","Get the opcode number of this message","","","","release the output object","The intersection of a source flags value with the …","","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","","","output description","scaling factor of output","bitfield of mode flags","height of the mode in hardware units","textual description of the manufacturer","textual description of the model","output name","height in millimeters of the output","width in millimeters of the output","vertical refresh rate in mHz","subpixel orientation of the output","transform that maps framebuffer to output","width of the mode in hardware units","x position within the global compositor space","y position within the global compositor space","axis types","axis event","axis click event","axis relative direction","axis relative physical direction event","axis source types","axis source event","axis stop event","axis high-resolution scroll event","pointer button event","physical button state","continuous coordinate space","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The wire opcode for this event","The minimal object version supporting this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","enter event","","","finger on a touch surface","end of a pointer event sequence","horizontal axis","physical motion matches axis direction","physical motion is the inverse of the axis direction","leave event","pointer motion event","the button is pressed","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","release the pointer object","the button is not pressed","","given wl_surface has another role","set the pointer surface","vertical axis","a physical wheel rotation","a physical wheel tilt","pointer input device","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","release the pointer object","","","set the pointer surface","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","axis type","the axis stopped with this event","axis type","axis type","axis type","source of the axis event","button that produced the event","physical direction relative to axis motion","number of steps","serial number of the enter event","serial number of the leave event","serial number of the button event","physical state of the button","surface entered by the pointer","surface left by the pointer","surface-local x coordinate","surface-local x coordinate","surface-local y coordinate","surface-local y coordinate","timestamp with millisecond granularity","timestamp with millisecond granularity","timestamp with millisecond granularity","timestamp with millisecond granularity","length of vector in surface-local coordinate space","scroll distance as fraction of 120","surface-local x coordinate","surface-local y coordinate","serial number of the enter event","pointer surface","add rectangle to region","destroy region","","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","subtract rectangle from region","region interface","add rectangle to region","","","","","","","","","","","","","","","","","","destroy region","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","subtract rectangle from region","","","","","","","","","","","","","rectangle height","rectangle height","rectangle width","rectangle width","region-local x coordinate","region-local x coordinate","region-local y coordinate","region-local y coordinate","bind an object to the display","The wire opcode for this event","The wire opcode for this event","The minimal object version supporting this event","The minimal object version supporting this event","","announce global object","announce removal of global object","The wire opcode for this request","The minimal object version supporting this request","","global registry object","","","","","","","","bind an object to the display","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","interface implemented by the object","numeric name of the global object","numeric name of the global object","interface version","bounded object","unique numeric name of the object","seat capabilities changed","seat capability bitmask","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","wl_seat error values","","return keyboard object","return pointer object","return touch object","the seat has one or more keyboards","get_pointer, get_keyboard or get_touch called on seat …","unique identifier for this seat","the seat has pointer devices","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","release the seat object","","the seat has touch devices","group of input devices","Get a flags value with all known bits set.","","","","","","","","","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","","The intersection of a source flags value with the …","Get a flags value with all bits unset.","","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","return keyboard object","return pointer object","return touch object","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained named flags values.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","Get the opcode number of this message","Get the opcode number of this message","","","release the seat object","The intersection of a source flags value with the …","","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","","","capabilities of the seat","seat identifier","","","create a shell surface from a surface","The wire opcode for this request","The minimal object version supporting this request","","given wl_surface has another role","create desktop-style surfaces","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","create a shell surface from a surface","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","","","","surface to be given the shell surface role","bottom edge","bottom and left edges","bottom and right edges","suggest resize","no preference, apply default policy","switch output mode to the smallest mode that can fit the …","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","no upscaling, center on output and add black borders to …","different method to set the surface fullscreen","do not set keyboard focus","left edge","start an interactive move","no edge","ping client","respond to a ping event","popup interaction is done","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","edge values for resizing","start an interactive resize","right edge","scale, preserve the surface’s aspect ratio and center on …","set surface class","make the surface a fullscreen surface","make the surface a maximized surface","make the surface a popup surface","set surface title","make the surface a toplevel surface","make the surface a transient surface","top edge","top and left edges","top and right edges","details of transient behaviour","desktop-style metadata interface","start an interactive move","Get a flags value with all known bits set.","Get a flags value with all known bits set.","","","","","","","","","","","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value exactly.","","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","Get the opcode number of this message","Get the opcode number of this message","","","respond to a ping event","The intersection of a source flags value with the …","The intersection of a source flags value with the …","start an interactive resize","","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","set surface class","make the surface a fullscreen surface","make the surface a maximized surface","make the surface a popup surface","set surface title","make the surface a toplevel surface","make the surface a transient surface","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","","how the surface was resized","new height of the surface","serial number of the ping","new width of the surface","surface class","which edge or corner is being dragged","transient surface behavior","transient surface behavior","framerate in mHz","method for resolving size conflict","output on which the surface is to be fullscreen","output on which the surface is to be maximized","parent surface","parent surface","seat whose pointer is used","seat whose pointer is used","seat whose pointer is used","serial number of the ping event","serial number of the implicit grab on the pointer","serial number of the implicit grab on the pointer","serial number of the implicit grab on the pointer","surface title","surface-local x coordinate","surface-local x coordinate","surface-local y coordinate","surface-local y coordinate","16-bit ABGR 1555 format, [15:0] A:B:G:R 1:5:5:5 little …","[63:0] A:B:G:R 16:16:16:16 little endian","[63:0] A:B:G:R 16:16:16:16 little endian","32-bit ABGR format, [31:0] A:B:G:R 2:10:10:10 little endian","16-bit ABGR format, [15:0] A:B:G:R 4:4:4:4 little endian","32-bit ABGR format, [31:0] A:B:G:R 8:8:8:8 little endian","16-bit ARGB 1555 format, [15:0] A:R:G:B 1:5:5:5 little …","[63:0] A:R:G:B 16:16:16:16 little endian","[63:0] A:R:G:B 16:16:16:16 little endian","32-bit ARGB format, [31:0] A:R:G:B 2:10:10:10 little endian","16-bit ARGB format, [15:0] A:R:G:B 4:4:4:4 little endian","32-bit ARGB format, [31:0] A:R:G:B 8:8:8:8 little endian","[63:0] A:x:B:x:G:x:R:x 10:6:10:6:10:6:10:6 little endian","packed AYCbCr format, [31:0] A:Y:Cb:Cr 8:8:8:8 little …","8-bit BGR format, [7:0] B:G:R 2:3:3","16-bit BGR 565 format, [15:0] B:G:R 5:6:5 little endian","","24-bit BGR format, [23:0] B:G:R little endian","","32-bit BGRA format, [31:0] B:G:R:A 10:10:10:2 little endian","16-bit BGRA format, [15:0] B:G:R:A 4:4:4:4 little endian","16-bit BGRA 5551 format, [15:0] B:G:R:A 5:5:5:1 little …","32-bit BGRA format, [31:0] B:G:R:A 8:8:8:8 little endian","32-bit BGRx format, [31:0] B:G:R:x 10:10:10:2 little endian","16-bit BGRx format, [15:0] B:G:R:x 4:4:4:4 little endian","16-bit BGRx 5551 format, [15:0] B:G:R:x 5:5:5:1 little …","32-bit BGRx format, [31:0] B:G:R:x 8:8:8:8 little endian","","8-bit color index format, [7:0] C","create a shm pool","The wire opcode for this event","The minimal object version supporting this event","wl_shm error values","","pixel formats","pixel format description","[31:0] G:R 16:16 little endian","[15:0] G:R 8:8 little endian","mmapping the file descriptor failed","buffer format is not known","invalid size or stride during pool or buffer creation","2 plane YCbCr Cr:Cb format, 2x2 subsampled Cr:Cb plane","2x2 subsampled Cr:Cb plane","2 plane YCbCr Cr:Cb format, 2x1 subsampled Cr:Cb plane","2 plane YCbCr Cb:Cr format, 2x2 subsampled Cb:Cr plane","non-subsampled Cr:Cb plane","non-subsampled Cb:Cr plane","2 plane YCbCr Cb:Cr format, 2x1 subsampled Cb:Cr plane","2x2 subsampled Cr:Cb plane 10 bits per channel","2x2 subsampled Cr:Cb plane 12 bits per channel","2x2 subsampled Cr:Cb plane 16 bits per channel","2x1 subsampled Cr:Cb plane, 10 bit per channel","","","[15:0] R little endian","[7:0] R","The wire opcode for this request","The minimal object version supporting this request","","[31:0] R:G 16:16 little endian","[15:0] R:G 8:8 little endian","8-bit RGB format, [7:0] R:G:B 3:3:2","16-bit RGB 565 format, [15:0] R:G:B 5:6:5 little endian","","24-bit RGB format, [23:0] R:G:B little endian","","32-bit RGBA format, [31:0] R:G:B:A 10:10:10:2 little endian","16-bit RBGA format, [15:0] R:G:B:A 4:4:4:4 little endian","16-bit RGBA 5551 format, [15:0] R:G:B:A 5:5:5:1 little …","32-bit RGBA format, [31:0] R:G:B:A 8:8:8:8 little endian","32-bit RGBx format, [31:0] R:G:B:x 10:10:10:2 little endian","16-bit RGBx format, [15:0] R:G:B:x 4:4:4:4 little endian","16-bit RGBx 5551 format, [15:0] R:G:B:x 5:5:5:1 little …","32-bit RGBx format, [31:0] R:G:B:x 8:8:8:8 little endian","","packed YCbCr format, [31:0] Y1:Cr0:Y0:Cb0 8:8:8:8 little …","Y followed by U then V, 10:10:10. Non-linear modifier only","[23:0] Cr:Cb:Y 8:8:8 little endian","packed YCbCr format, [31:0] Y1:Cb0:Y0:Cr0 8:8:8:8 little …","shared memory support","[63:0] X3:X2:Y3:0:Cr0:0:Y2:0:X1:X0:Y1:0:Cb0:0:Y0:0 …","[63:0] X3:X2:Y3:Cr0:Y2:X1:X0:Y1:Cb0:Y0 …","16-bit xBGR 1555 format, [15:0] x:B:G:R 1:5:5:5 little …","[63:0] x:B:G:R 16:16:16:16 little endian","[63:0] x:B:G:R 16:16:16:16 little endian","32-bit xBGR format, [31:0] x:B:G:R 2:10:10:10 little endian","16-bit xBGR format, [15:0] x:B:G:R 4:4:4:4 little endian","32-bit xBGR format, [31:0] x:B:G:R 8:8:8:8 little endian","","16-bit xRGB format, [15:0] x:R:G:B 1:5:5:5 little endian","[63:0] x:R:G:B 16:16:16:16 little endian","[63:0] x:R:G:B 16:16:16:16 little endian","32-bit xRGB format, [31:0] x:R:G:B 2:10:10:10 little endian","16-bit xRGB format, [15:0] x:R:G:B 4:4:4:4 little endian","32-bit RGB format, [31:0] x:R:G:B 8:8:8:8 little endian","","[63:0] X:0:Cr:0:Y:0:Cb:0 12:4:12:4:12:4:12:4 little endian","[63:0] X:Cr:Y:Cb 16:16:16:16 little endian","[31:0] X:Cr:Y:Cb 2:10:10:10 little endian","[31:0] X:Y:Cb:Cr 8:8:8:8 little endian","[63:0] A3:A2:Y3:0:Cr0:0:Y2:0:A1:A0:Y1:0:Cb0:0:Y0:0 …","[63:0] A3:A2:Y3:Cr0:Y2:A1:A0:Y1:Cb0:Y0 …","[63:0] Cr0:0:Y1:0:Cb0:0:Y0:0 10:6:10:6:10:6:10:6 little …","[63:0] Cr0:0:Y1:0:Cb0:0:Y0:0 12:4:12:4:12:4:12:4 little …","[63:0] Cr0:Y1:Cb0:Y0 16:16:16:16 little endian per 2 Y …","[31:0] A:Cr:Y:Cb 2:10:10:10 little endian","[63:0] A:0:Cr:0:Y:0:Cb:0 12:4:12:4:12:4:12:4 little endian","[63:0] A:Cr:Y:Cb 16:16:16:16 little endian","3 plane YCbCr format, 4x4 subsampled Cb (1) and Cr (2) …","3 plane YCbCr format, 4x1 subsampled Cb (1) and Cr (2) …","3 plane YCbCr format, 2x2 subsampled Cb (1) and Cr (2) …","","","3 plane YCbCr format, 2x1 subsampled Cb (1) and Cr (2) …","3 plane YCbCr format, non-subsampled Cb (1) and Cr (2) …","packed YCbCr format, [31:0] Cr0:Y1:Cb0:Y0 8:8:8:8 little …","3 plane YCbCr format, 4x4 subsampled Cr (1) and Cb (2) …","3 plane YCbCr format, 4x1 subsampled Cr (1) and Cb (2) …","3 plane YCbCr format, 2x2 subsampled Cr (1) and Cb (2) …","3 plane YCbCr format, 2x1 subsampled Cr (1) and Cb (2) …","3 plane YCbCr format, non-subsampled Cr (1) and Cb (2) …","packed YCbCr format, [31:0] Cb0:Y1:Cr0:Y0 8:8:8:8 little …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","create a shm pool","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","","","","","","","","","","buffer pixel format","file descriptor for the pool","pool size, in bytes","create a buffer from the pool","destroy the pool","","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","change the size of the pool mapping","a shared memory pool","","","","","","","","","","","","","","","","","create a buffer from the pool","","destroy the pool","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","change the size of the pool mapping","","","","","","","","","","","","","","","buffer pixel format","buffer height, in pixels","buffer byte offset within the pool","new size of the pool, in bytes","number of bytes from the beginning of one row to the …","buffer width, in pixels","the to-be sub-surface parent is invalid","the to-be sub-surface is invalid","unbind from the subcompositor interface","","","give a surface the role sub-surface","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","sub-surface compositing","","","","","","","","","","","","","","","","","","","","","","","","","unbind from the subcompositor interface","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","give a surface the role sub-surface","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","","","","the parent surface","the surface to be turned into a sub-surface","wl_surface is not a sibling or the parent","remove sub-surface interface","","","restack the sub-surface","restack the sub-surface","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","set sub-surface to desynchronized mode","reposition the sub-surface","set sub-surface to synchronized mode","sub-surface interface to a wl_surface","","","","","","","","","","","","","","","","","","","","","","","","","remove sub-surface interface","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","restack the sub-surface","restack the sub-surface","","","set sub-surface to desynchronized mode","reposition the sub-surface","set sub-surface to synchronized mode","","","","","","","","","","","","","","","","","","the reference surface","the reference surface","x coordinate in the parent surface","y coordinate in the parent surface","set the surface contents","commit pending surface state","mark part of the surface damaged","mark part of the surface damaged using buffer coordinates","surface was destroyed before its role object","delete surface","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","surface enters an output","wl_surface error values","","request a frame throttling hint","buffer offset is invalid","buffer scale value is invalid","buffer size is invalid","buffer transform value is invalid","surface leaves an output","set the surface contents offset","preferred buffer scale for the surface","preferred buffer transform for the surface","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","sets the buffer scaling factor","sets the buffer transformation","set input region","set opaque region","an onscreen surface","","","","","","","","","set the surface contents","","","","","","","","","","","","","","","","commit pending surface state","mark part of the surface damaged","mark part of the surface damaged using buffer coordinates","","delete surface","","","","","","","","","","request a frame throttling hint","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","set the surface contents offset","Get the opcode number of this message","Get the opcode number of this message","","","","","sets the buffer scaling factor","sets the buffer transformation","set input region","set opaque region","","","","","","","","","","","","","","","","","","preferred scaling factor","output entered by the surface","output left by the surface","preferred transform","buffer of surface contents","height of damage rectangle","height of damage rectangle","opaque region of the surface","input region of the surface","positive scale for interpreting buffer contents","transform for interpreting buffer contents","width of damage rectangle","width of damage rectangle","surface-local x coordinate","surface-local x coordinate","buffer-local x coordinate","surface-local x coordinate","surface-local y coordinate","surface-local y coordinate","buffer-local y coordinate","surface-local y coordinate","touch session cancelled","touch down event and beginning of a touch sequence","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","end of touch frame event","update of touch point coordinates","update orientation of touch point","The wire opcode for this request","The minimal object version supporting this request","release the touch object","","update shape of touch point","end of a touch event sequence","touchscreen input device","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","release the touch object","","","","","","","","","","","","","","","the unique ID of this touch point","the unique ID of this touch point","the unique ID of this touch point","the unique ID of this touch point","the unique ID of this touch point","length of the major axis in surface-local coordinates","length of the minor axis in surface-local coordinates","angle between major axis and positive surface y-axis in …","serial number of the touch down event","serial number of the touch up event","surface touched","timestamp with millisecond granularity","timestamp with millisecond granularity","timestamp with millisecond granularity","surface-local x coordinate","surface-local x coordinate","surface-local y coordinate","surface-local y coordinate"],"i":[8,8,0,0,0,0,18,0,14,14,14,0,0,0,0,18,12,12,0,0,2,10,20,4,14,23,12,8,13,2,10,20,4,14,23,12,8,13,2,4,0,18,4,2,2,10,20,4,14,23,12,8,13,2,10,20,4,14,23,12,8,13,10,4,12,13,10,4,12,13,4,18,20,0,0,20,2,4,18,23,12,13,13,12,13,19,20,19,19,0,2,4,2,10,20,4,14,14,23,12,8,8,13,10,2,10,20,4,14,23,12,12,8,8,13,4,18,4,4,0,2,13,18,13,18,18,2,10,20,4,14,23,12,8,13,2,10,20,4,14,23,12,8,13,2,10,20,4,14,23,12,8,13,2,10,20,4,14,23,12,8,13,12,18,10,4,18,4,18,2,2,4,0,4,14,8,2,4,18,18,4,8,10,4,12,13,14,8,2,10,20,4,14,23,12,8,13,2,10,20,4,14,23,12,8,13,2,10,20,4,14,23,12,8,13,20,13,18,18,171,171,171,0,0,31,0,0,0,31,0,0,0,21,6,5,50,56,31,38,21,6,5,50,56,31,38,21,6,5,50,56,31,38,21,6,5,50,56,31,38,31,21,6,5,31,38,21,6,5,31,38,6,50,29,29,29,6,6,29,29,29,29,29,6,21,21,29,6,29,21,21,6,5,50,56,56,31,31,38,38,21,6,5,50,56,31,31,31,38,6,21,6,21,21,6,5,50,56,31,38,21,6,5,50,56,31,38,21,6,5,50,56,31,38,21,6,5,50,56,31,38,29,21,6,21,6,6,0,21,56,31,38,50,6,6,0,21,6,5,31,38,21,56,31,38,21,6,5,50,56,31,38,21,6,5,50,56,31,38,21,6,5,50,56,31,38,5,0,0,0,0,60,61,60,61,60,61,0,60,61,0,0,0,60,61,59,60,61,0,0,60,61,60,61,12,12,0,0,59,172,62,28,173,64,172,59,60,61,41,62,46,51,28,45,173,64,172,59,60,61,41,62,46,51,28,45,173,64,172,59,60,61,41,62,46,51,28,45,173,64,172,59,60,61,41,62,46,51,28,45,41,62,59,60,61,62,46,51,28,45,59,60,61,62,46,51,28,45,51,59,60,61,28,59,60,61,28,64,64,41,172,64,59,60,61,61,41,41,62,46,51,51,28,45,45,173,64,172,59,60,61,41,62,46,51,28,45,61,172,172,46,46,173,64,172,59,60,61,41,62,46,51,28,45,173,64,172,59,60,61,41,62,46,51,28,45,64,59,60,61,41,62,46,51,28,45,173,64,172,59,60,61,41,62,46,51,28,45,62,28,51,172,173,64,41,62,172,51,51,28,51,45,64,64,41,172,0,60,28,173,62,62,59,60,61,62,46,51,28,45,61,41,51,45,173,64,172,59,60,61,41,62,46,51,28,45,173,64,172,59,60,61,41,62,46,51,28,45,173,64,172,59,60,61,41,62,46,51,28,45,173,172,64,41,46,0,0,0,73,0,0,0,0,0,73,69,69,67,73,69,70,71,67,73,69,70,71,67,67,73,69,70,71,67,73,69,70,71,70,70,71,67,70,70,67,73,73,69,69,70,71,67,73,73,73,69,70,71,70,67,73,69,70,71,67,73,69,70,71,67,73,69,70,71,67,73,69,70,71,70,73,69,67,0,73,70,73,69,67,73,69,70,71,67,73,69,70,71,67,73,69,70,71,70,71,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,77,0,0,0,0,0,78,0,0,77,78,76,77,78,76,76,77,78,76,76,77,78,76,76,76,76,76,76,76,76,77,78,76,77,78,76,76,76,76,76,76,77,78,76,77,78,76,77,78,76,77,78,76,76,77,78,76,76,76,76,77,78,76,77,78,76,77,78,76,76,76,81,0,0,0,0,0,80,81,79,80,81,79,79,80,81,79,79,80,81,79,79,79,79,79,79,79,80,81,79,80,81,79,79,79,79,79,79,80,81,79,80,81,79,80,81,79,80,81,79,79,80,81,79,79,79,79,80,81,79,80,81,79,80,81,79,79,79,174,85,85,0,0,0,0,0,0,0,85,86,82,85,86,82,82,85,86,82,82,85,86,82,82,82,82,82,82,82,82,82,85,86,82,85,86,82,82,82,82,82,82,85,86,82,85,86,82,85,86,82,85,86,82,82,85,86,82,82,82,82,85,86,82,85,86,82,85,86,82,82,82,91,91,0,0,0,0,0,0,0,0,0,0,0,0,91,0,0,91,91,0,0,0,0,0,0,90,0,88,91,90,90,0,88,90,91,87,88,90,91,87,87,88,90,91,87,87,88,90,91,87,88,87,88,87,88,87,88,87,87,88,87,88,90,91,87,88,90,91,87,87,88,87,87,87,87,88,90,91,87,88,90,91,87,88,90,91,87,88,90,91,87,87,90,91,87,88,87,87,87,87,87,88,87,88,88,90,91,87,88,90,91,87,88,90,91,87,87,87,175,176,177,176,176,178,176,178,176,178,179,179,179,180,179,180,93,93,96,0,0,96,93,93,0,0,0,0,0,0,93,93,96,97,94,93,96,97,94,94,93,93,93,93,93,93,93,93,93,96,97,94,94,93,96,97,94,93,94,93,94,93,93,94,94,93,93,93,94,94,93,94,93,93,93,93,93,93,96,97,94,93,96,97,94,93,93,93,93,94,93,93,94,93,94,94,94,93,94,93,93,93,96,97,94,93,96,97,94,93,96,97,94,93,96,97,94,93,93,93,93,93,93,94,96,97,94,93,94,94,93,93,93,93,93,94,93,93,93,96,97,94,93,96,97,94,93,96,97,94,93,94,94,181,104,105,104,0,0,0,0,0,0,0,0,104,103,103,103,103,105,0,0,0,0,0,0,0,0,0,0,104,0,104,105,0,102,103,104,105,102,103,104,105,102,102,103,104,105,102,102,103,104,105,102,103,102,103,102,103,102,102,103,102,102,103,102,102,103,104,105,102,103,104,105,102,102,103,102,102,102,102,103,104,105,102,103,104,105,102,103,104,105,102,103,104,105,102,102,104,105,102,103,102,102,102,102,103,102,103,103,104,105,102,103,104,105,102,103,104,105,102,102,102,182,183,184,185,186,187,186,185,187,108,108,107,108,108,0,0,0,0,0,0,0,0,0,0,0,0,0,0,106,106,107,0,0,0,0,0,0,0,108,107,108,0,106,107,108,92,106,107,108,92,92,106,107,108,92,92,106,107,108,92,106,92,106,92,106,92,92,106,92,92,106,92,106,107,108,92,106,107,108,92,92,106,92,92,92,92,106,107,108,92,106,107,108,92,106,107,108,92,106,107,108,92,92,92,107,108,92,106,92,92,92,106,92,106,106,107,108,92,106,107,108,92,106,107,108,92,92,92,188,189,190,189,191,192,111,0,0,0,0,0,111,0,110,109,109,109,109,0,0,0,0,0,110,0,109,110,111,22,109,110,111,22,22,109,110,111,22,22,109,110,111,22,109,22,109,22,109,22,109,22,22,109,22,109,110,111,22,109,110,111,22,22,22,109,22,22,22,22,109,110,111,22,109,110,111,22,109,110,111,22,109,110,111,22,22,110,111,22,109,22,22,22,109,22,109,109,110,111,22,109,110,111,22,109,110,111,22,22,22,193,194,193,193,0,0,0,0,0,0,0,0,0,0,0,0,116,0,116,0,116,0,116,116,113,114,0,0,115,114,116,0,0,113,113,114,115,116,112,113,114,115,116,112,112,113,114,115,116,112,112,113,114,115,116,112,113,114,112,113,114,112,113,114,112,113,114,112,112,113,114,112,113,114,115,116,112,113,114,115,116,112,112,113,114,112,112,112,112,113,114,115,116,112,113,114,115,116,112,113,114,115,116,112,113,114,115,116,112,112,115,116,112,113,114,112,112,112,113,114,112,113,113,114,114,115,116,112,113,114,115,116,112,113,114,115,116,112,112,112,195,196,196,197,198,199,197,197,197,195,199,200,198,197,196,198,199,200,198,117,122,122,0,0,0,0,0,0,0,0,0,0,0,0,0,120,120,120,120,122,119,119,0,122,122,119,120,117,0,0,121,0,122,0,0,119,119,119,0,120,120,120,117,119,120,117,121,122,118,119,120,117,121,122,118,118,117,117,117,117,117,117,117,117,119,120,117,121,122,118,118,119,120,117,121,122,118,119,120,117,118,119,120,117,118,119,120,117,117,118,117,117,119,120,117,118,118,119,120,117,118,117,119,120,117,117,117,117,117,121,122,118,119,120,117,121,122,118,117,117,117,117,118,117,117,119,120,117,118,118,118,117,118,117,117,119,120,117,121,122,118,119,120,117,121,122,118,119,120,117,121,122,118,119,120,117,121,122,118,117,117,117,117,117,117,118,121,122,118,119,120,118,117,118,118,117,117,117,117,119,120,117,118,117,119,119,120,120,117,117,121,122,118,119,120,117,121,122,118,119,120,117,121,122,118,117,118,118,201,202,203,203,204,204,205,204,204,203,204,204,203,204,204,0,130,130,0,130,0,130,130,130,130,0,127,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,127,130,126,128,128,130,130,125,0,0,0,0,129,125,0,124,129,126,127,127,0,124,125,126,127,128,129,130,123,124,125,126,127,128,129,130,123,123,124,125,126,127,128,129,130,123,123,124,125,126,127,128,129,130,123,124,125,126,127,128,123,124,125,126,127,128,123,124,125,126,127,128,123,124,125,126,127,128,123,123,124,125,126,127,128,123,124,125,126,127,128,129,130,123,124,125,126,127,128,129,130,123,123,124,125,126,127,128,123,123,123,123,124,125,126,127,128,129,130,123,124,125,126,127,128,129,130,123,124,125,126,127,128,129,130,123,124,125,126,127,128,129,130,123,123,129,130,123,124,125,126,127,128,123,123,123,123,124,125,126,127,128,123,124,124,125,125,126,126,127,127,128,128,129,130,123,124,125,126,127,128,129,130,123,124,125,126,127,128,129,130,123,123,123,206,207,208,209,210,211,212,210,208,213,214,212,212,213,214,213,215,213,215,215,212,206,207,206,209,216,216,216,216,131,131,0,0,0,0,0,0,0,0,131,0,83,131,132,83,131,132,83,83,131,132,83,83,131,132,83,83,83,83,83,83,83,83,131,132,83,131,132,83,83,83,83,83,83,131,132,83,131,132,83,131,132,83,131,132,83,83,131,132,83,83,83,83,83,131,132,83,131,132,83,131,132,83,83,83,217,218,217,218,217,218,217,218,133,0,0,0,0,0,134,134,0,0,0,0,133,134,74,133,134,74,74,74,133,134,74,74,133,134,74,74,74,74,74,74,74,133,134,74,133,134,74,74,74,74,74,74,133,134,74,133,134,74,133,134,74,133,134,74,74,133,134,74,74,74,74,133,134,74,133,134,74,133,134,74,74,74,219,219,220,219,221,221,138,0,0,0,0,0,0,0,137,137,137,135,136,138,135,0,0,0,0,0,0,0,0,137,0,135,0,135,135,136,137,138,99,135,136,137,138,99,99,135,135,135,135,135,135,135,135,135,136,137,138,99,99,135,136,137,138,99,135,136,99,135,136,99,136,135,135,99,135,135,135,136,99,99,135,136,99,135,135,135,135,135,135,136,137,138,99,135,136,137,138,99,135,135,135,135,99,135,135,99,99,99,135,136,99,99,99,135,99,135,135,135,136,137,138,99,135,136,137,138,99,135,136,137,138,99,135,136,137,138,99,135,135,135,135,135,135,99,137,138,99,136,99,135,99,99,135,135,135,135,135,136,99,135,135,135,136,136,137,138,99,135,136,137,138,99,135,136,137,138,99,135,99,99,222,223,0,0,142,0,0,0,141,0,141,142,143,140,141,142,143,140,140,141,142,143,140,140,141,142,143,140,141,140,141,140,141,140,141,140,140,141,140,141,142,143,140,141,142,143,140,140,140,141,140,140,140,140,141,142,143,140,141,142,143,140,141,142,143,140,141,142,143,140,140,142,143,140,141,140,140,141,140,141,141,142,143,140,141,142,143,140,141,142,143,140,140,140,224,145,145,145,149,147,147,0,0,0,0,0,0,0,147,0,146,145,148,145,149,148,149,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,148,145,147,148,148,148,148,148,148,148,145,145,145,0,0,144,145,146,145,146,147,148,149,144,145,146,147,148,149,144,144,145,146,145,146,145,146,145,146,145,145,146,146,145,146,145,146,145,146,147,148,149,144,144,145,146,147,148,149,144,145,146,147,144,145,146,147,144,147,145,146,145,146,144,145,146,145,146,145,146,147,144,144,145,146,147,144,145,146,145,145,145,145,145,146,146,146,146,146,147,148,149,144,145,146,147,148,149,144,145,146,145,145,146,146,145,146,144,145,146,145,146,145,146,147,144,144,144,145,146,144,145,146,145,146,145,146,147,148,149,144,145,146,147,148,149,144,145,146,147,148,149,144,145,146,147,148,149,144,145,146,145,146,145,146,145,146,145,146,145,146,144,148,149,144,147,144,145,146,144,144,144,145,146,144,144,144,144,144,144,144,145,146,145,146,145,146,145,146,147,144,145,146,145,145,146,146,147,147,148,149,144,145,146,147,148,149,144,145,146,147,148,149,144,145,146,144,144,225,225,226,225,227,228,229,230,231,231,231,232,229,230,233,228,230,234,233,228,230,235,229,230,229,230,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,154,0,0,0,0,0,155,152,152,151,151,151,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,0,0,0,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,0,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,151,152,154,155,150,151,152,154,155,150,150,151,152,154,155,150,150,151,152,154,155,150,151,152,150,151,152,150,151,152,150,150,151,152,150,150,151,152,150,151,152,154,155,150,151,152,154,155,150,150,151,152,150,150,150,150,151,152,154,155,150,151,152,154,155,150,151,152,154,155,150,151,152,154,155,150,150,154,155,150,151,152,150,150,151,152,150,151,151,152,152,154,155,150,151,152,154,155,150,151,152,154,155,150,150,150,236,237,237,156,156,0,0,0,0,0,0,0,0,156,0,156,157,153,156,157,153,153,156,157,153,153,156,157,153,153,153,153,153,153,153,153,153,156,157,153,156,157,153,153,153,153,153,153,156,157,153,156,157,153,156,157,153,156,157,153,153,156,157,153,153,153,153,153,156,157,153,156,157,153,156,157,153,153,153,238,238,238,239,238,238,159,159,160,0,0,160,0,0,0,0,0,0,159,160,161,158,159,160,161,158,158,159,160,161,158,158,159,160,161,158,159,158,159,158,159,158,158,159,158,158,159,158,159,160,161,158,159,160,161,158,158,158,159,158,158,158,158,159,160,161,158,159,160,161,158,159,160,161,158,159,160,161,158,158,160,161,158,159,158,158,159,158,159,159,160,161,158,159,160,161,158,159,160,161,158,158,158,240,240,163,164,0,0,164,164,0,0,0,0,0,0,0,0,0,0,0,0,0,164,164,164,0,163,164,165,162,163,164,165,162,162,163,164,165,162,162,163,164,165,162,163,162,163,162,163,162,162,163,162,162,163,162,163,164,165,162,163,164,165,162,162,163,162,162,162,162,163,164,165,162,163,164,165,162,163,164,165,162,163,164,165,162,162,164,165,162,163,162,162,162,162,162,162,162,163,162,163,163,164,165,162,163,164,165,162,163,164,165,162,162,162,241,242,243,243,167,167,167,167,166,167,0,0,0,0,0,0,0,0,168,0,0,167,166,166,166,166,168,167,168,168,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,167,167,167,167,0,166,167,168,84,166,167,168,84,84,84,166,167,168,84,84,166,167,168,84,166,84,166,84,166,84,84,84,84,84,166,84,84,166,84,166,167,168,84,84,166,167,168,84,84,166,84,84,84,84,166,167,168,84,166,167,168,84,166,167,168,84,166,167,168,84,84,84,167,168,84,166,84,84,84,84,84,84,166,84,166,166,167,168,84,166,167,168,84,166,167,168,84,84,84,244,245,246,247,248,249,250,251,252,253,254,249,250,248,249,250,255,248,249,250,255,170,170,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,170,170,170,0,0,169,0,170,170,0,169,170,139,169,170,139,139,169,170,139,139,169,170,139,139,139,139,139,139,139,169,170,139,169,170,139,139,139,139,139,139,169,170,139,169,170,139,169,170,139,169,170,139,139,169,170,139,139,139,139,139,169,170,139,169,170,139,169,170,139,139,139,256,257,258,259,260,259,259,260,256,257,256,256,257,258,256,258,256,258],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2,3],[4,3],0,[[],5],[4,6],[2,[[9,[7,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[10,10],[4,4],[[[12,[11]]],[[12,[11]]]],[[[13,[11]]],[[13,[11]]]],[[]],[[]],[[]],[[]],[[],[[9,[4,14]]]],[[],[[17,[[0,[15,16]]]]]],[[[20,[18,[0,[15,16]],[19,[18,[0,[15,16]],[19,[18,[0,[15,16]],[19,[18,[0,[15,16]],19]]]]]]]]],1],0,0,[[[20,[18,[0,[15,16]],[19,[18,[0,[15,16]],[19,[18,[0,[15,16]],[19,[18,[0,[15,16]],19]]]]]]]],21]],[2,[[9,[7,8]]]],[4,22],[[],13],[23],[[[12,[[24,[[24,[[24,[24]]]]]]]],[12,[[24,[[24,[[24,[24]]]]]]]]],25],[[[13,[18]],18],25],[[13,13],25],[[],25],[[],25],[[4,10]],[[[26,[[20,[18,[0,[15,16]],[19,[18,[0,[15,16]],[19,[18,[0,[15,16]],[19,[18,[0,[15,16]],19]]]]]]]]]],6,[28,[21,27]]],[[17,[[26,[29]]]]]],[[30,10],[[26,[29]]]],[[30,10],[[26,[29]]]],0,[2,[[9,[31]]]],[4,[[9,[31]]]],[[2,32],33],[[10,32],33],[[[20,[18,34]],32],33],[[4,32],33],[[14,32],33],[[14,32],33],[[[23,[34]],32],33],[[[12,[34]],32],[[9,[35]]]],[[8,32],33],[[8,32],33],[[[13,[34]],32],33],[10,23],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[36,[[12,[[37,[36]]]]]],[31,8],[[]],[[]],[6,4],[[4,21],[[9,[38]]]],[39,[[9,[4,14]]]],[[4,21],[[9,[[26,[29]],38]]]],0,[2,10],[[13,40]],[[],21],[[[13,[18]]],21],[5],[[],41],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[12,[[9,[45]]]],[[],25],[[[10,[[19,[18,[0,[15,16]],[19,[18,[0,[15,16]],[19,[18,[0,[15,16]],19]]]]]]]],[0,[15,16]]],[[26,[29]]]],[4,2],[[],[[17,[[26,[29]]]]]],[[4,21],[[9,[46,38]]]],[[4,[28,[21,27]]],[[9,[8]]]],[[2,47],[[49,[[9,[48,8]]]]]],[2,[[17,[50]]]],[4,[[17,[50]]]],0,[4,[[17,[51]]]],[52],[52],[2,[[9,[7,8]]]],[4,[[9,[7,31]]]],[[[26,[29]]],[[9,[18,38]]]],[[],[[9,[38]]]],[[4,18,[17,[[26,[29]]]]],[[9,[21,38]]]],[8,[[17,[53]]]],[[]],[[]],[[]],[[]],[[],54],[[],54],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],0,[[[13,[18]]],[[9,[18,38]]]],[[],36],[4,[[9,[38]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[31,[[17,[53]]]],[21,21],[6,6],[5,5],[31,31],[38,38],[[]],[[]],[[]],[[]],[[]],[39,[[9,[6,56]]]],[50,3],[[],1],[32,[[9,[35]]]],[21],[6,[[9,[7,31]]]],[6,21],[[[43,[29,42]]],[[9,[[43,[29,42]],[43,[29,42]]]]]],[[[26,[29]]],[[9,[[26,[[0,[29,1,15,16]]]],[26,[29]]]]]],[29,[[17,[29]]]],[[[44,[29]]],[[9,[[44,[29]],[44,[29]]]]]],[29,[[17,[29]]]],[6,5],[[21,21],25],[[],25],[[26,6,[28,[21,27]]],[[17,[[26,[29]]]]]],[6,[[9,[31]]]],[[29,32],[[9,[35]]]],[[21,32],[[9,[35]]]],[[21,32],[[9,[35]]]],[[6,32],[[9,[35]]]],[[5,32],[[9,[35]]]],[[50,32],[[9,[35]]]],[[56,32],[[9,[35]]]],[[56,32],[[9,[35]]]],[[31,32],[[9,[35]]]],[[31,32],[[9,[35]]]],[[38,32],[[9,[35]]]],[[38,32],[[9,[35]]]],[[]],[[]],[[]],[[]],[[]],[51,31],[57,31],[[]],[[]],[[6,21],[[9,[[26,[29]],38]]]],[[21,40]],[[6,21],[[9,[46,38]]]],[21,41],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[29,25],[21,25],[6,[[17,[31]]]],[[],21],[6,3],[6,[[17,[50]]]],0,[21,36],[52],[52],[52],[50,[[9,[7,31]]]],[[6,[28,[21,58]],[17,[[26,[29]]]],17],[[9,[21,38]]]],[[6,21,[26,[29]]],[[9,[38]]]],0,[[]],[[]],[[]],[[]],[[]],[[],54],[[],54],[[],54],[[],54],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[5,[[17,[6]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[59,59],[60,60],[[[61,[11,11]]],[[61,[11,11]]]],[62,62],[46,46],[51,51],[[[28,[11,11]]],[[28,[11,11]]]],[45,45],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[59,59],25],[[60,60],25],[[[61,[[24,[[24,[[24,[24]]]]]],63]],[61,[[24,[[24,[[24,[24]]]]]],63]]],25],[[[28,[[24,[[24,[[24,[24]]]]]],63]],[28,[[24,[[24,[[24,[24]]]]]],63]]],25],[[],25],[[],25],[[],25],[[],25],0,0,0,0,[[64,32],[[9,[35]]]],[[59,32],[[9,[35]]]],[[60,32],[[9,[35]]]],[[[61,[34,34]],32],[[9,[35]]]],[[[61,[65,63]],32],[[9,[35]]]],[[41,32],[[9,[35]]]],[[41,32],[[9,[35]]]],[[62,32],[[9,[35]]]],[[46,32],[[9,[35]]]],[[51,32],[[9,[35]]]],[[51,32],[[9,[35]]]],[[[28,[34,34]],32],[[9,[35]]]],[[45,32],[[9,[35]]]],[[45,32],[[9,[35]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[61,60],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],0,[[28,66],28],0,0,0,0,0,0,0,0,0,0,[52],[52],0,0,0,0,[[41,41],25],[[60,60],25],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],54],[[],54],[[],54],[[],54],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[67,[10,[[19,[18,[0,[15,16]]]]]],[68,[36]],[0,[15,16]]],[[9,[18,69]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[70,70],[[]],[71,[[72,[70]]]],[67,71],[[70,70],25],[[],25],[[67,32],33],[[73,32],33],[[73,32],33],[[69,32],33],[[69,32],33],[[70,32],33],[[71,32],33],[[]],[31,73],[38,73],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],0,[52],[52],[67,74],[4,[[9,[73]]]],[73,[[17,[53]]]],[[]],[[],54],[[],54],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],55],[[],55],[[],55],[[],55],[[],55],0,[[71,75]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[76,5],[[]],[[]],[76,21],[[]],[[]],[[]],[[]],[76,76],[[]],[76,[[17,[[0,[15,16]]]]]],[76],[[76,[13,[76]]],25],[[76,76],25],[[],25],[[77,32],33],[[78,32],33],[[76,32],33],[[]],[[]],[[]],[[4,21],[[9,[76,38]]]],[[76,40]],[76,21],[5,76],[[],41],[[]],[[]],[[]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[76,[[17,[[26,[29]]]]]],[77,30],[78,30],[[4,[28,[21,27]]],[[9,[8]]]],[[76,[26,[29]]],[[9,[18,38]]]],[76,[[9,[38]]]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],55],[[],55],[[],55],[76,36],[[76,4],[[9,[38]]]],0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[79,5],[[]],[[]],[79,21],[[]],[[]],[[]],[[]],[79,79],[[]],[79,[[17,[[0,[15,16]]]]]],[[79,[13,[79]]],25],[[79,79],25],[[],25],[[80,32],33],[[81,32],33],[[79,32],33],[[]],[[]],[[]],[[4,21],[[9,[79,38]]]],[[79,40]],[79,21],[5,79],[[],41],[[]],[[]],[[]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[79,[[17,[[26,[29]]]]]],[80,30],[81,30],[[4,[28,[21,27]]],[[9,[8]]]],[[79,[26,[29]]],[[9,[18,38]]]],[79,[[9,[38]]]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],55],[[],55],[[],55],[79,36],[[79,4],[[9,[38]]]],0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[82,5],[[]],[[]],[82,21],[[]],[[]],[[]],[[]],[82,82],[[]],[[82,[10,[[19,[83,[0,[15,16]]]]]],[0,[15,16]]],83],[[82,[10,[[19,[84,[0,[15,16]]]]]],[0,[15,16]]],84],[82,[[17,[[0,[15,16]]]]]],[[82,82],25],[[82,[13,[82]]],25],[[],25],[[85,32],33],[[86,32],33],[[82,32],33],[[]],[[]],[[]],[[4,21],[[9,[82,38]]]],[[82,40]],[82,21],[5,82],[[],41],[[]],[[]],[[]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[82,[[17,[[26,[29]]]]]],[85,30],[86,30],[[4,[28,[21,27]]],[[9,[8]]]],[[82,[26,[29]]],[[9,[18,38]]]],[82,[[9,[38]]]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],55],[[],55],[[],55],[82,36],[[82,4],[[9,[38]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[87,5],[[]],[[]],[[]],[[]],[87,21],[[]],[[]],[[]],[[]],[88,88],[87,87],[[]],[[]],[[88,88],89],[87,[[17,[[0,[15,16]]]]]],[[88,88],25],[[87,[13,[87]]],25],[[87,87],25],[[],25],[[],25],[[88,32],33],[[90,32],33],[[91,32],33],[[87,32],33],[[]],[[]],[[]],[[]],[[4,21],[[9,[87,38]]]],[[88,40]],[[87,40]],[87,21],[5,87],[[],41],[[]],[[]],[[]],[[]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[87,[[17,[[26,[29]]]]]],[90,30],[91,30],[[4,[28,[21,27]]],[[9,[8]]]],[[88,88],[[17,[89]]]],[87],[[87,[26,[29]]],[[9,[18,38]]]],[87,[[9,[38]]]],[[87,[17,[92]],36]],[[87,[17,[92]],84,[17,[84]],36]],[[]],[[]],[36,[[9,[88]]]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],55],[[],55],[[],55],[[],55],[87,36],[[87,4],[[9,[38]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],93],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[94,5],[[93,93],93],[[93,93]],[[93,93],93],[[93,93]],[93,36],[93,36],[[93,93],93],[[93,93]],[[]],[[]],[[]],[[]],[94,21],[[]],[[]],[[]],[[]],[93,93],[94,94],[[]],[[]],[93,93],[[93,93],25],[[94,[10,[[19,[92,[0,[15,16]]]]]],[0,[15,16]]],92],[94,[[17,[[0,[15,16]]]]]],[[93,93],93],[[],93],[[93,93],25],[[94,[13,[94]]],25],[[94,94],25],[[],25],[[],25],[[93,95]],[[93,32],33],[[93,32],33],[[93,32],33],[[93,32],33],[[93,32],33],[[96,32],33],[[97,32],33],[[94,32],33],[[]],[[]],[[]],[[]],[36,[[17,[93]]]],[36,93],[36,93],[36,93],[[4,21],[[9,[94,38]]]],[95,93],[98,[[17,[93]]]],[[94,99,[10,[[19,[87,[0,[15,16]]]]]],[0,[15,16]]],87],[[93,40]],[[94,40]],[94,21],[5,94],[[93,93]],[[],41],[[93,93],93],[[93,93],25],[[]],[[]],[[]],[[]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[93],[93,25],[93,25],[93,[[100,[93]]]],[93,[[101,[93]]]],[93,93],[94,[[17,[[26,[29]]]]]],[96,30],[97,30],[[4,[28,[21,27]]],[[9,[8]]]],[[93,93]],[[94,[26,[29]]],[[9,[18,38]]]],[94,[[9,[38]]]],[[93,93,25]],[[93,93],93],[[93,93]],[[93,93],93],[[]],[[]],[[93,93]],[[],9],[36,[[9,[93]]]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],55],[[],55],[[],55],[[],55],[[93,93],93],[94,36],[[94,4],[[9,[38]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[102,36,[17,[54]]]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[102,5],[[]],[[]],[[]],[[]],[102,21],[[]],[[]],[[]],[[]],[103,103],[102,102],[[]],[[]],[[103,103],89],[102,[[17,[[0,[15,16]]]]]],[102],[[103,103],25],[[102,102],25],[[102,[13,[102]]],25],[[],25],[[],25],[102],[[103,32],33],[[104,32],33],[[105,32],33],[[102,32],33],[[]],[[]],[[]],[[]],[[4,21],[[9,[102,38]]]],[[103,40]],[[102,40]],[102,21],[5,102],[[],41],[[]],[[]],[[]],[[]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[102,[[17,[[26,[29]]]]]],[104,30],[105,30],[[4,[28,[21,27]]],[[9,[8]]]],[[103,103],[[17,[89]]]],[[102,54,3]],[[102,[26,[29]]],[[9,[18,38]]]],[102,[[9,[38]]]],[[102,93,93]],[[]],[[]],[[],9],[36,[[9,[103]]]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],55],[[],55],[[],55],[[],55],[102,36],[[102,4],[[9,[38]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[92,5],[[]],[[]],[[]],[[]],[92,21],[[]],[[]],[[]],[[]],[106,106],[92,92],[[]],[[]],[[106,106],89],[92,[[17,[[0,[15,16]]]]]],[92],[[106,106],25],[[92,[13,[92]]],25],[[92,92],25],[[],25],[[],25],[[106,32],33],[[107,32],33],[[108,32],33],[[92,32],33],[[]],[[]],[[]],[[]],[[4,21],[[9,[92,38]]]],[[106,40]],[[92,40]],[92,21],[5,92],[[],41],[[]],[[]],[[]],[[]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[92,[[17,[[26,[29]]]]]],[[92,54]],[107,30],[108,30],[[4,[28,[21,27]]],[[9,[8]]]],[[106,106],[[17,[89]]]],[[92,[26,[29]]],[[9,[18,38]]]],[92,[[9,[38]]]],[[92,93]],[[]],[[]],[36,[[9,[106]]]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],55],[[],55],[[],55],[[],55],[92,36],[[92,4],[[9,[38]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[22,5],[[]],[[]],[[]],[[]],[22,21],[[]],[[]],[[]],[[]],[109,109],[22,22],[[]],[[]],[[109,109],89],[22,[[17,[[0,[15,16]]]]]],[[109,109],25],[[22,22],25],[[22,[13,[22]]],25],[[],25],[[],25],[[109,32],33],[[110,32],33],[[111,32],33],[[22,32],33],[[]],[[]],[[]],[[]],[[4,21],[[9,[22,38]]]],[[22,[10,[[19,[74,[0,[15,16]]]]]],[0,[15,16]]],74],[[109,40]],[[22,40]],[22,21],[5,22],[[],41],[[]],[[]],[[]],[[]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[22,[[17,[[26,[29]]]]]],[110,30],[111,30],[[4,[28,[21,27]]],[[9,[8]]]],[[109,109],[[17,[89]]]],[[22,[26,[29]]],[[9,[18,38]]]],[22,[[9,[38]]]],[[22,[10,[[19,[79,[0,[15,16]]]]]],[0,[15,16]]],79],[[]],[[]],[36,[[9,[109]]]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],55],[[],55],[[],55],[[],55],[22,36],[[22,4],[[9,[38]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[112,5],[[]],[[]],[[]],[[]],[[]],[112,21],[[]],[[]],[[]],[[]],[[]],[113,113],[114,114],[112,112],[[]],[[]],[[]],[[113,113],89],[[114,114],89],[112,[[17,[[0,[15,16]]]]]],[[113,113],25],[[114,114],25],[[112,112],25],[[112,[13,[112]]],25],[[],25],[[],25],[[],25],[[113,32],33],[[114,32],33],[[115,32],33],[[116,32],33],[[112,32],33],[[]],[[]],[[]],[[]],[[]],[[4,21],[[9,[112,38]]]],[[113,40]],[[114,40]],[[112,40]],[112,21],[5,112],[[],41],[[]],[[]],[[]],[[]],[[]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[112,[[17,[[26,[29]]]]]],[115,30],[116,30],[[4,[28,[21,27]]],[[9,[8]]]],[[113,113],[[17,[89]]]],[[114,114],[[17,[89]]]],[112],[[112,[26,[29]]],[[9,[18,38]]]],[112,[[9,[38]]]],[[]],[[]],[[]],[36,[[9,[113]]]],[[],9],[36,[[9,[114]]]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],55],[[],55],[[],55],[[],55],[[],55],[112,36],[[112,4],[[9,[38]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],117],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[118,5],[[117,117],117],[[117,117]],[[117,117],117],[[117,117]],[117,36],[117,36],[[117,117],117],[[117,117]],[[]],[[]],[[]],[[]],[[]],[[]],[118,21],[[]],[[]],[[]],[[]],[[]],[[]],[119,119],[120,120],[117,117],[118,118],[[]],[[]],[[]],[[]],[[119,119],89],[[120,120],89],[117,117],[[117,117],25],[118,[[17,[[0,[15,16]]]]]],[[117,117],117],[[],117],[[119,119],25],[[120,120],25],[[117,117],25],[[118,[13,[118]]],25],[[118,118],25],[[],25],[[],25],[[],25],[[],25],[[117,95]],[[119,32],33],[[120,32],33],[[117,32],33],[[117,32],33],[[117,32],33],[[117,32],33],[[117,32],33],[[121,32],33],[[122,32],33],[[118,32],33],[[]],[[]],[[]],[[]],[[]],[[]],[36,[[17,[117]]]],[36,117],[36,117],[36,117],[[4,21],[[9,[118,38]]]],[95,117],[98,[[17,[117]]]],[[119,40]],[[120,40]],[[117,40]],[[118,40]],[118,21],[5,118],[[117,117]],[[],41],[[117,117],117],[[117,117],25],[[]],[[]],[[]],[[]],[[]],[[]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[117],[117,25],[117,25],[117,[[100,[117]]]],[117,[[101,[117]]]],[117,117],[118,[[17,[[26,[29]]]]]],[121,30],[122,30],[[4,[28,[21,27]]],[[9,[8]]]],[[119,119],[[17,[89]]]],[[120,120],[[17,[89]]]],[118],[[117,117]],[[118,[26,[29]]],[[9,[18,38]]]],[118,[[9,[38]]]],[[117,117,25]],[[117,117],117],[[117,117]],[[117,117],117],[[]],[[]],[[]],[[]],[[117,117]],[36,[[9,[119]]]],[[],9],[36,[[9,[120]]]],[[],9],[36,[[9,[117]]]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[117,117],117],[118,36],[[118,4],[[9,[38]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[123,5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[123,21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[124,124],[125,125],[126,126],[127,127],[128,128],[123,123],[[]],[[]],[[]],[[]],[[]],[[]],[[124,124],89],[[125,125],89],[[126,126],89],[[127,127],89],[[128,128],89],[123,[[17,[[0,[15,16]]]]]],[[124,124],25],[[125,125],25],[[126,126],25],[[127,127],25],[[128,128],25],[[123,[13,[123]]],25],[[123,123],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[124,32],33],[[125,32],33],[[126,32],33],[[127,32],33],[[128,32],33],[[129,32],33],[[130,32],33],[[123,32],33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[4,21],[[9,[123,38]]]],[[124,40]],[[125,40]],[[126,40]],[[127,40]],[[128,40]],[[123,40]],[123,21],[5,123],[[],41],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[123,[[17,[[26,[29]]]]]],[129,30],[130,30],[[4,[28,[21,27]]],[[9,[8]]]],[[124,124],[[17,[89]]]],[[125,125],[[17,[89]]]],[[126,126],[[17,[89]]]],[[127,127],[[17,[89]]]],[[128,128],[[17,[89]]]],[123],[[123,[26,[29]]],[[9,[18,38]]]],[123,[[9,[38]]]],[[123,36,[17,[84]],58,58]],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[36,[[9,[124]]]],[36,[[9,[125]]]],[[],9],[36,[[9,[126]]]],[[],9],[[],9],[36,[[9,[127]]]],[36,[[9,[128]]]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[123,36],[[123,4],[[9,[38]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[83,58,58,58,58]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[83,5],[[]],[[]],[[]],[83,21],[[]],[[]],[[]],[83,83],[[]],[83,[[17,[[0,[15,16]]]]]],[83],[[83,83],25],[[83,[13,[83]]],25],[[],25],[[131,32],33],[[132,32],33],[[83,32],33],[[]],[[]],[[]],[[4,21],[[9,[83,38]]]],[[83,40]],[83,21],[5,83],[[],41],[[]],[[]],[[]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[83,[[17,[[26,[29]]]]]],[131,30],[132,30],[[4,[28,[21,27]]],[[9,[8]]]],[[83,[26,[29]]],[[9,[18,38]]]],[83,[[9,[38]]]],[[83,58,58,58,58]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],55],[[],55],[[],55],[83,36],[[83,4],[[9,[38]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[74,5],[[74,36,36,[10,[[19,[18,[0,[15,16]]]]]],[0,[15,16]]],18],[[]],[[]],[[]],[74,21],[[]],[[]],[[]],[74,74],[[]],[74,[[17,[[0,[15,16]]]]]],[[74,[13,[74]]],25],[[74,74],25],[[],25],[[133,32],33],[[134,32],33],[[74,32],33],[[]],[[]],[[]],[[4,21],[[9,[74,38]]]],[[74,40]],[74,21],[5,74],[[],41],[[]],[[]],[[]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[74,[[17,[[26,[29]]]]]],[133,30],[134,30],[[4,[28,[21,27]]],[[9,[8]]]],[[74,[26,[29]]],[[9,[18,38]]]],[74,[[9,[38]]]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],55],[[],55],[[],55],[74,36],[[74,4],[[9,[38]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],135],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[99,5],[[135,135],135],[[135,135]],[[135,135],135],[[135,135]],[135,36],[135,36],[[135,135],135],[[135,135]],[[]],[[]],[[]],[[]],[99,21],[[]],[[]],[[]],[[]],[[]],[[]],[135,135],[136,136],[99,99],[[]],[[]],[[]],[[136,136],89],[135,135],[[135,135],25],[99,[[17,[[0,[15,16]]]]]],[[135,135],135],[[],135],[[135,135],25],[[136,136],25],[[99,[13,[99]]],25],[[99,99],25],[[],25],[[],25],[[],25],[[135,95]],[[135,32],33],[[135,32],33],[[135,32],33],[[135,32],33],[[135,32],33],[[136,32],33],[[137,32],33],[[138,32],33],[[99,32],33],[[]],[[]],[[]],[[]],[[]],[36,[[17,[135]]]],[36,135],[36,135],[36,135],[[4,21],[[9,[99,38]]]],[95,135],[98,[[17,[135]]]],[[99,[10,[[19,[112,[0,[15,16]]]]]],[0,[15,16]]],112],[[99,[10,[[19,[123,[0,[15,16]]]]]],[0,[15,16]]],123],[[99,[10,[[19,[139,[0,[15,16]]]]]],[0,[15,16]]],139],[[135,40]],[[136,40]],[[99,40]],[99,21],[5,99],[[135,135]],[[],41],[[135,135],135],[[135,135],25],[[]],[[]],[[]],[[]],[[]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[135],[135,25],[135,25],[135,[[100,[135]]]],[135,[[101,[135]]]],[135,135],[99,[[17,[[26,[29]]]]]],[137,30],[138,30],[[4,[28,[21,27]]],[[9,[8]]]],[[136,136],[[17,[89]]]],[99],[[135,135]],[[99,[26,[29]]],[[9,[18,38]]]],[99,[[9,[38]]]],[[135,135,25]],[[135,135],135],[[135,135]],[[135,135],135],[[]],[[]],[[]],[[135,135]],[36,[[9,[135]]]],[[],9],[36,[[9,[136]]]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],55],[[],55],[[],55],[[],55],[[],55],[[135,135],135],[99,36],[[99,4],[[9,[38]]]],0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[140,5],[[]],[[]],[[]],[[]],[140,21],[[]],[[]],[[]],[[]],[141,141],[140,140],[[]],[[]],[[141,141],89],[140,[[17,[[0,[15,16]]]]]],[[141,141],25],[[140,140],25],[[140,[13,[140]]],25],[[],25],[[],25],[[141,32],33],[[142,32],33],[[143,32],33],[[140,32],33],[[]],[[]],[[]],[[]],[[4,21],[[9,[140,38]]]],[[140,84,[10,[[19,[144,[0,[15,16]]]]]],[0,[15,16]]],144],[[141,40]],[[140,40]],[140,21],[5,140],[[],41],[[]],[[]],[[]],[[]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[140,[[17,[[26,[29]]]]]],[142,30],[143,30],[[4,[28,[21,27]]],[[9,[8]]]],[[141,141],[[17,[89]]]],[[140,[26,[29]]],[[9,[18,38]]]],[140,[[9,[38]]]],[[]],[[]],[36,[[9,[141]]]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],55],[[],55],[[],55],[[],55],[140,36],[[140,4],[[9,[38]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[144,99,36]],[[],145],[[],146],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[144,5],[[145,145],145],[[146,146],146],[[145,145]],[[146,146]],[[145,145],145],[[146,146],146],[[145,145]],[[146,146]],[145,36],[145,36],[146,36],[146,36],[[145,145],145],[[146,146],146],[[145,145]],[[146,146]],[[]],[[]],[[]],[[]],[[]],[144,21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[145,145],[146,146],[147,147],[144,144],[[]],[[]],[[]],[[]],[[147,147],89],[145,145],[146,146],[[145,145],25],[[146,146],25],[144,[[17,[[0,[15,16]]]]]],[[145,145],145],[[146,146],146],[[],145],[[],146],[[145,145],25],[[146,146],25],[[147,147],25],[[144,[13,[144]]],25],[[144,144],25],[[],25],[[],25],[[],25],[[],25],[[145,95]],[[146,95]],[[145,32],33],[[145,32],33],[[145,32],33],[[145,32],33],[[145,32],33],[[146,32],33],[[146,32],33],[[146,32],33],[[146,32],33],[[146,32],33],[[147,32],33],[[148,32],33],[[149,32],33],[[144,32],33],[[]],[[]],[[]],[[]],[[]],[[]],[36,[[17,[145]]]],[36,[[17,[146]]]],[36,145],[36,145],[36,146],[36,146],[36,145],[36,146],[[4,21],[[9,[144,38]]]],[95,145],[95,146],[98,[[17,[145]]]],[98,[[17,[146]]]],[[145,40]],[[146,40]],[[147,40]],[[144,40]],[144,21],[5,144],[[145,145]],[[146,146]],[[],41],[[145,145],145],[[146,146],146],[[145,145],25],[[146,146],25],[[]],[[]],[[]],[[]],[[]],[[]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[145],[146],[145,25],[146,25],[145,25],[146,25],[145,[[100,[145]]]],[146,[[100,[146]]]],[145,[[101,[145]]]],[146,[[101,[146]]]],[145,145],[146,146],[144,[[17,[[26,[29]]]]]],[148,30],[149,30],[[4,[28,[21,27]]],[[9,[8]]]],[[147,147],[[17,[89]]]],[[144,36]],[[145,145]],[[146,146]],[[144,99,36,145]],[[144,[26,[29]]],[[9,[18,38]]]],[144,[[9,[38]]]],[[145,145,25]],[[146,146,25]],[[144,54]],[[144,147,36,[17,[118]]]],[[144,[17,[118]]]],[[144,99,36,84,58,58,146]],[[144,54]],[144],[[144,84,58,58,146]],[[145,145],145],[[146,146],146],[[145,145]],[[146,146]],[[145,145],145],[[146,146],146],[[]],[[]],[[]],[[]],[[145,145]],[[146,146]],[36,[[9,[145]]]],[[],9],[36,[[9,[146]]]],[[],9],[[],9],[36,[[9,[147]]]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[145,145],145],[[146,146],146],[144,36],[[144,4],[[9,[38]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[150,5],[[]],[[]],[[]],[[]],[150,21],[[]],[[]],[[]],[[]],[[]],[[]],[151,151],[152,152],[150,150],[[]],[[]],[[]],[[151,151],89],[[152,152],89],[[150,3,58,[10,[[19,[153,[0,[15,16]]]]]],[0,[15,16]]],153],[150,[[17,[[0,[15,16]]]]]],[[151,151],25],[[152,152],25],[[150,[13,[150]]],25],[[150,150],25],[[],25],[[],25],[[],25],[[151,32],33],[[152,32],33],[[154,32],33],[[155,32],33],[[150,32],33],[[]],[[]],[[]],[[]],[[]],[[4,21],[[9,[150,38]]]],[[151,40]],[[152,40]],[[150,40]],[150,21],[5,150],[[],41],[[]],[[]],[[]],[[]],[[]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[150,[[17,[[26,[29]]]]]],[154,30],[155,30],[[4,[28,[21,27]]],[[9,[8]]]],[[151,151],[[17,[89]]]],[[152,152],[[17,[89]]]],[[150,[26,[29]]],[[9,[18,38]]]],[150,[[9,[38]]]],[[]],[[]],[[]],[36,[[9,[151]]]],[[],9],[36,[[9,[152]]]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],55],[[],55],[[],55],[[],55],[[],55],[150,36],[[150,4],[[9,[38]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[153,5],[[]],[[]],[[]],[153,21],[[]],[[]],[[]],[153,153],[[]],[[153,58,58,58,58,152,[10,[[19,[76,[0,[15,16]]]]]],[0,[15,16]]],76],[153,[[17,[[0,[15,16]]]]]],[153],[[153,153],25],[[153,[13,[153]]],25],[[],25],[[156,32],33],[[157,32],33],[[153,32],33],[[]],[[]],[[]],[[4,21],[[9,[153,38]]]],[[153,40]],[153,21],[5,153],[[],41],[[]],[[]],[[]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[153,[[17,[[26,[29]]]]]],[156,30],[157,30],[[4,[28,[21,27]]],[[9,[8]]]],[[153,58]],[[153,[26,[29]]],[[9,[18,38]]]],[153,[[9,[38]]]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],55],[[],55],[[],55],[153,36],[[153,4],[[9,[38]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[158,5],[[]],[[]],[[]],[158,21],[[]],[[]],[[]],[[]],[[]],[159,159],[158,158],[[]],[[]],[[159,159],89],[158,[[17,[[0,[15,16]]]]]],[158],[[159,159],25],[[158,[13,[158]]],25],[[158,158],25],[[],25],[[],25],[[159,32],33],[[160,32],33],[[161,32],33],[[158,32],33],[[]],[[]],[[]],[[]],[[4,21],[[9,[158,38]]]],[[158,84,84,[10,[[19,[162,[0,[15,16]]]]]],[0,[15,16]]],162],[[159,40]],[[158,40]],[158,21],[5,158],[[],41],[[]],[[]],[[]],[[]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[158,[[17,[[26,[29]]]]]],[160,30],[161,30],[[4,[28,[21,27]]],[[9,[8]]]],[[159,159],[[17,[89]]]],[[158,[26,[29]]],[[9,[18,38]]]],[158,[[9,[38]]]],[[]],[[]],[[],9],[36,[[9,[159]]]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],55],[[],55],[[],55],[[],55],[158,36],[[158,4],[[9,[38]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[162,5],[[]],[[]],[[]],[162,21],[[]],[[]],[[]],[[]],[[]],[163,163],[162,162],[[]],[[]],[[163,163],89],[162,[[17,[[0,[15,16]]]]]],[162],[[163,163],25],[[162,[13,[162]]],25],[[162,162],25],[[],25],[[],25],[[163,32],33],[[164,32],33],[[165,32],33],[[162,32],33],[[]],[[]],[[]],[[]],[[4,21],[[9,[162,38]]]],[[163,40]],[[162,40]],[162,21],[5,162],[[],41],[[]],[[]],[[]],[[]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[162,[[17,[[26,[29]]]]]],[164,30],[165,30],[[4,[28,[21,27]]],[[9,[8]]]],[[163,163],[[17,[89]]]],[[162,84]],[[162,84]],[[162,[26,[29]]],[[9,[18,38]]]],[162,[[9,[38]]]],[162],[[162,58,58]],[162],[[]],[[]],[36,[[9,[163]]]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],55],[[],55],[[],55],[[],55],[162,36],[[162,4],[[9,[38]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[84,[17,[76]],58,58]],[84,5],[[]],[[]],[[]],[[]],[84,21],[[]],[[]],[[]],[[]],[166,166],[84,84],[[]],[[]],[[166,166],89],[84],[[84,58,58,58,58]],[[84,58,58,58,58]],[84,[[17,[[0,[15,16]]]]]],[84],[[166,166],25],[[84,[13,[84]]],25],[[84,84],25],[[],25],[[],25],[[166,32],33],[[167,32],33],[[168,32],33],[[84,32],33],[[84,[10,[[19,[79,[0,[15,16]]]]]],[0,[15,16]]],79],[[]],[[]],[[]],[[]],[[4,21],[[9,[84,38]]]],[[166,40]],[[84,40]],[84,21],[5,84],[[],41],[[]],[[]],[[]],[[]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[84,[[17,[[26,[29]]]]]],[[84,58,58]],[167,30],[168,30],[[4,[28,[21,27]]],[[9,[8]]]],[[166,166],[[17,[89]]]],[[84,[26,[29]]],[[9,[18,38]]]],[84,[[9,[38]]]],[[84,58]],[[84,120]],[[84,[17,[83]]]],[[84,[17,[83]]]],[[]],[[]],[[],9],[36,[[9,[166]]]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],55],[[],55],[[],55],[[],55],[84,36],[[84,4],[[9,[38]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[139,5],[[]],[[]],[139,21],[[]],[[]],[[]],[[]],[139,139],[[]],[139,[[17,[[0,[15,16]]]]]],[[139,139],25],[[139,[13,[139]]],25],[[],25],[[169,32],33],[[170,32],33],[[139,32],33],[[]],[[]],[[]],[[4,21],[[9,[139,38]]]],[[139,40]],[139,21],[5,139],[[],41],[[]],[[]],[[]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[[[43,[42]]],[[43,[1,42]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[44,[[44,[1]]]],[139,[[17,[[26,[29]]]]]],[169,30],[170,30],[[4,[28,[21,27]]],[[9,[8]]]],[139],[[139,[26,[29]]],[[9,[18,38]]]],[139,[[9,[38]]]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],55],[[],55],[[],55],[139,36],[[139,4],[[9,[38]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[8,"Any"],[3,"EventQueue"],[3,"BorrowedFd"],[3,"Connection"],[3,"WeakBackend"],[3,"Backend"],[15,"usize"],[4,"DispatchError"],[4,"Result"],[3,"QueueHandle"],[8,"Clone"],[4,"WEnum"],[3,"Weak"],[4,"ConnectError"],[8,"Send"],[8,"Sync"],[4,"Option"],[8,"Proxy"],[8,"Dispatch"],[3,"QueueProxyData"],[3,"ObjectId"],[3,"WlDisplay"],[3,"QueueFreezeGuard"],[8,"PartialEq"],[15,"bool"],[3,"Arc"],[3,"OwnedFd"],[3,"Message"],[8,"ObjectData"],[15,"u16"],[4,"WaylandError"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[3,"Error"],[15,"u32"],[8,"TryFrom"],[3,"InvalidId"],[3,"UnixStream"],[8,"Hasher"],[3,"Interface"],[3,"Global"],[3,"Box"],[3,"Rc"],[3,"WEnumError"],[3,"ObjectInfo"],[3,"Context"],[4,"Infallible"],[4,"Poll"],[3,"ReadEventsGuard"],[3,"ProtocolError"],[3,"Demand"],[8,"Error"],[3,"String"],[3,"TypeId"],[3,"NoWaylandLib"],[3,"Error"],[15,"i32"],[4,"AllowNull"],[4,"ArgumentType"],[4,"Argument"],[3,"MessageDesc"],[8,"AsRawFd"],[3,"wl_interface"],[8,"Display"],[8,"FnMut"],[3,"GlobalList"],[3,"RangeInclusive"],[4,"BindError"],[3,"Global"],[3,"GlobalListContents"],[3,"Vec"],[4,"GlobalError"],[3,"WlRegistry"],[8,"FnOnce"],[3,"WlBuffer"],[4,"Request"],[4,"Event"],[3,"WlCallback"],[4,"Request"],[4,"Event"],[3,"WlCompositor"],[3,"WlRegion"],[3,"WlSurface"],[4,"Request"],[4,"Event"],[3,"WlDataDevice"],[4,"Error"],[4,"Ordering"],[4,"Request"],[4,"Event"],[3,"WlDataSource"],[3,"DndAction"],[3,"WlDataDeviceManager"],[8,"IntoIterator"],[4,"Request"],[4,"Event"],[15,"str"],[3,"WlSeat"],[3,"Iter"],[3,"IterNames"],[3,"WlDataOffer"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"WlKeyboard"],[4,"KeymapFormat"],[4,"KeyState"],[4,"Request"],[4,"Event"],[3,"Mode"],[3,"WlOutput"],[4,"Subpixel"],[4,"Transform"],[4,"Request"],[4,"Event"],[3,"WlPointer"],[4,"Error"],[4,"ButtonState"],[4,"Axis"],[4,"AxisSource"],[4,"AxisRelativeDirection"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[3,"Capability"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"WlTouch"],[3,"WlShell"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"WlShellSurface"],[3,"Resize"],[3,"Transient"],[4,"FullscreenMethod"],[4,"Request"],[4,"Event"],[3,"WlShm"],[4,"Error"],[4,"Format"],[3,"WlShmPool"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[3,"WlSubcompositor"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"WlSubsurface"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[13,"BadMessage"],[19,"wl_argument"],[3,"wl_message"],[13,"Done"],[13,"DataOffer"],[13,"Enter"],[13,"Selection"],[13,"Motion"],[13,"StartDrag"],[13,"SetSelection"],[13,"GetDataDevice"],[13,"Action"],[13,"Offer"],[13,"SourceActions"],[13,"SetActions"],[13,"Receive"],[13,"Accept"],[13,"Action"],[13,"Send"],[13,"Target"],[13,"SetActions"],[13,"Offer"],[13,"Error"],[13,"DeleteId"],[13,"RepeatInfo"],[13,"Keymap"],[13,"Modifiers"],[13,"Key"],[13,"Enter"],[13,"Leave"],[13,"Description"],[13,"Scale"],[13,"Mode"],[13,"Geometry"],[13,"Name"],[13,"Axis"],[13,"AxisStop"],[13,"AxisDiscrete"],[13,"AxisValue120"],[13,"AxisRelativeDirection"],[13,"AxisSource"],[13,"Button"],[13,"Enter"],[13,"Leave"],[13,"Motion"],[13,"SetCursor"],[13,"Add"],[13,"Subtract"],[13,"Global"],[13,"GlobalRemove"],[13,"Bind"],[13,"Capabilities"],[13,"Name"],[13,"GetShellSurface"],[13,"Configure"],[13,"Ping"],[13,"SetClass"],[13,"Resize"],[13,"SetTransient"],[13,"SetPopup"],[13,"SetFullscreen"],[13,"SetMaximized"],[13,"Move"],[13,"Pong"],[13,"SetTitle"],[13,"Format"],[13,"CreatePool"],[13,"CreateBuffer"],[13,"Resize"],[13,"GetSubsurface"],[13,"PlaceAbove"],[13,"PlaceBelow"],[13,"SetPosition"],[13,"PreferredBufferScale"],[13,"Enter"],[13,"Leave"],[13,"PreferredBufferTransform"],[13,"Attach"],[13,"Damage"],[13,"DamageBuffer"],[13,"SetOpaqueRegion"],[13,"SetInputRegion"],[13,"SetBufferScale"],[13,"SetBufferTransform"],[13,"Offset"],[13,"Down"],[13,"Up"],[13,"Motion"],[13,"Shape"],[13,"Orientation"]]},\
"wayland_protocols":{"doc":"This crate provides bindings to the official wayland …","t":"AAAAAAAAAAHHHHHHHNNRREENNNRRRREDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMNRRRRRRESSDNENSDSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMAAAAHHHHHHNNNEENNRRRRRRENNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMNEENRRRRENDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMAAAAAAAAHHHHHHHHHHHHHHHHHHHNNRRRRRREENNNRRRRRRNNEDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMENNNNNNDNEESSENNNNNSRRRRRRRRRRRRRRRRRRRRESSNNNNNNNNNNNSSNNNNNNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMNNNNNRREENNNNNRRRRRRRRRRENNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMNNNNNNNNRRRRRRRREENNNNNNNNNNNRRRRRRRRRRRRRRRRRRRRRRRRRRRRENENNNNNNNNNNNENNNNNNNNNNNENDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMNNNRREENNNNNNNRRRRRRRRENNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMM","n":["ext","wp","xdg","xwayland","presentation_time","viewporter","client","__interfaces","wp_presentation","wp_presentation_feedback","WP_PRESENTATION_FEEDBACK_INTERFACE","WP_PRESENTATION_INTERFACE","wp_presentation_events","wp_presentation_feedback_events","wp_presentation_feedback_interface","wp_presentation_interface","wp_presentation_requests","ClockId","Destroy","EVT_CLOCK_ID_OPCODE","EVT_CLOCK_ID_SINCE","Error","Event","Feedback","InvalidFlag","InvalidTimestamp","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_FEEDBACK_OPCODE","REQ_FEEDBACK_SINCE","Request","WpPresentation","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","destroy","eq","eq","eq","equivalent","equivalent","feedback","fmt","fmt","fmt","fmt","from","from","from","from","from_id","hash","hash","id","inert","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","send_constructor","send_request","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_request","clk_id","surface","Discarded","EVT_DISCARDED_OPCODE","EVT_DISCARDED_SINCE","EVT_PRESENTED_OPCODE","EVT_PRESENTED_SINCE","EVT_SYNC_OUTPUT_OPCODE","EVT_SYNC_OUTPUT_SINCE","Event","HwClock","HwCompletion","Kind","Presented","Request","SyncOutput","Vsync","WpPresentationFeedback","ZeroCopy","all","all","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","complement","complement","contains","contains","data","difference","difference","empty","empty","eq","eq","eq","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_id","from_iter","from_name","from_name","hash","hash","id","inert","insert","insert","interface","intersection","intersection","intersects","intersects","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","is_all","is_all","is_empty","is_empty","iter","iter","iter_names","iter_names","not","object_data","opcode","opcode","parse_event","remove","remove","send_constructor","send_request","set","set","sub","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","union","union","version","write_request","flags","output","refresh","seq_hi","seq_lo","tv_nsec","tv_sec_hi","tv_sec_lo","client","__interfaces","wp_viewport","wp_viewporter","WP_VIEWPORTER_INTERFACE","WP_VIEWPORT_INTERFACE","wp_viewport_interface","wp_viewport_requests","wp_viewporter_interface","wp_viewporter_requests","BadSize","BadValue","Destroy","Error","Event","NoSurface","OutOfBuffer","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_SET_DESTINATION_OPCODE","REQ_SET_DESTINATION_SINCE","REQ_SET_SOURCE_OPCODE","REQ_SET_SOURCE_SINCE","Request","SetDestination","SetSource","WpViewport","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","destroy","eq","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_id","hash","hash","id","inert","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","send_constructor","send_request","set_destination","set_source","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_request","height","height","width","width","x","y","Destroy","Error","Event","GetViewport","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_GET_VIEWPORT_OPCODE","REQ_GET_VIEWPORT_SINCE","Request","ViewportExists","WpViewporter","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","destroy","eq","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_id","get_viewport","hash","hash","id","inert","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","send_constructor","send_request","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_request","surface","shell","client","__interfaces","xdg_popup","xdg_positioner","xdg_surface","xdg_toplevel","xdg_wm_base","XDG_POPUP_INTERFACE","XDG_POSITIONER_INTERFACE","XDG_SURFACE_INTERFACE","XDG_TOPLEVEL_INTERFACE","XDG_WM_BASE_INTERFACE","xdg_popup_events","xdg_popup_interface","xdg_popup_requests","xdg_positioner_interface","xdg_positioner_requests","xdg_surface_events","xdg_surface_interface","xdg_surface_requests","xdg_toplevel_events","xdg_toplevel_interface","xdg_toplevel_requests","xdg_wm_base_events","xdg_wm_base_interface","xdg_wm_base_requests","Configure","Destroy","EVT_CONFIGURE_OPCODE","EVT_CONFIGURE_SINCE","EVT_POPUP_DONE_OPCODE","EVT_POPUP_DONE_SINCE","EVT_REPOSITIONED_OPCODE","EVT_REPOSITIONED_SINCE","Error","Event","Grab","InvalidGrab","PopupDone","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_GRAB_OPCODE","REQ_GRAB_SINCE","REQ_REPOSITION_OPCODE","REQ_REPOSITION_SINCE","Reposition","Repositioned","Request","XdgPopup","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","destroy","eq","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_id","grab","hash","hash","id","inert","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","reposition","send_constructor","send_request","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_request","height","token","width","x","y","positioner","seat","serial","token","Anchor","Bottom","Bottom","BottomLeft","BottomLeft","BottomRight","BottomRight","ConstraintAdjustment","Destroy","Error","Event","FlipX","FlipY","Gravity","InvalidInput","Left","Left","None","None","None","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_SET_ANCHOR_OPCODE","REQ_SET_ANCHOR_RECT_OPCODE","REQ_SET_ANCHOR_RECT_SINCE","REQ_SET_ANCHOR_SINCE","REQ_SET_CONSTRAINT_ADJUSTMENT_OPCODE","REQ_SET_CONSTRAINT_ADJUSTMENT_SINCE","REQ_SET_GRAVITY_OPCODE","REQ_SET_GRAVITY_SINCE","REQ_SET_OFFSET_OPCODE","REQ_SET_OFFSET_SINCE","REQ_SET_PARENT_CONFIGURE_OPCODE","REQ_SET_PARENT_CONFIGURE_SINCE","REQ_SET_PARENT_SIZE_OPCODE","REQ_SET_PARENT_SIZE_SINCE","REQ_SET_REACTIVE_OPCODE","REQ_SET_REACTIVE_SINCE","REQ_SET_SIZE_OPCODE","REQ_SET_SIZE_SINCE","Request","ResizeX","ResizeY","Right","Right","SetAnchor","SetAnchorRect","SetConstraintAdjustment","SetGravity","SetOffset","SetParentConfigure","SetParentSize","SetReactive","SetSize","SlideX","SlideY","Top","Top","TopLeft","TopLeft","TopRight","TopRight","XdgPositioner","all","all","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","complement","complement","contains","contains","data","destroy","difference","difference","empty","empty","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_id","from_iter","from_name","from_name","hash","hash","hash","hash","hash","id","inert","insert","insert","interface","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","is_all","is_all","is_empty","is_empty","iter","iter","iter_names","iter_names","not","object_data","opcode","opcode","parse_event","partial_cmp","partial_cmp","partial_cmp","remove","remove","send_constructor","send_request","set","set","set_anchor","set_anchor_rect","set_constraint_adjustment","set_gravity","set_offset","set_parent_configure","set_parent_size","set_reactive","set_size","sub","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","version","write_request","anchor","constraint_adjustment","gravity","height","height","parent_height","parent_width","serial","width","width","x","x","y","y","AckConfigure","AlreadyConstructed","Configure","DefunctRoleObject","Destroy","EVT_CONFIGURE_OPCODE","EVT_CONFIGURE_SINCE","Error","Event","GetPopup","GetToplevel","InvalidSerial","InvalidSize","NotConstructed","REQ_ACK_CONFIGURE_OPCODE","REQ_ACK_CONFIGURE_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_GET_POPUP_OPCODE","REQ_GET_POPUP_SINCE","REQ_GET_TOPLEVEL_OPCODE","REQ_GET_TOPLEVEL_SINCE","REQ_SET_WINDOW_GEOMETRY_OPCODE","REQ_SET_WINDOW_GEOMETRY_SINCE","Request","SetWindowGeometry","UnconfiguredBuffer","XdgSurface","ack_configure","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","destroy","eq","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_id","get_popup","get_toplevel","hash","hash","id","inert","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","send_constructor","send_request","set_window_geometry","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_request","serial","height","parent","positioner","serial","width","x","y","Activated","Bottom","BottomLeft","BottomRight","Close","Configure","ConfigureBounds","Destroy","EVT_CLOSE_OPCODE","EVT_CLOSE_SINCE","EVT_CONFIGURE_BOUNDS_OPCODE","EVT_CONFIGURE_BOUNDS_SINCE","EVT_CONFIGURE_OPCODE","EVT_CONFIGURE_SINCE","EVT_WM_CAPABILITIES_OPCODE","EVT_WM_CAPABILITIES_SINCE","Error","Event","Fullscreen","Fullscreen","InvalidParent","InvalidResizeEdge","InvalidSize","Left","Maximize","Maximized","Minimize","Move","None","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_MOVE_OPCODE","REQ_MOVE_SINCE","REQ_RESIZE_OPCODE","REQ_RESIZE_SINCE","REQ_SET_APP_ID_OPCODE","REQ_SET_APP_ID_SINCE","REQ_SET_FULLSCREEN_OPCODE","REQ_SET_FULLSCREEN_SINCE","REQ_SET_MAXIMIZED_OPCODE","REQ_SET_MAXIMIZED_SINCE","REQ_SET_MAX_SIZE_OPCODE","REQ_SET_MAX_SIZE_SINCE","REQ_SET_MINIMIZED_OPCODE","REQ_SET_MINIMIZED_SINCE","REQ_SET_MIN_SIZE_OPCODE","REQ_SET_MIN_SIZE_SINCE","REQ_SET_PARENT_OPCODE","REQ_SET_PARENT_SINCE","REQ_SET_TITLE_OPCODE","REQ_SET_TITLE_SINCE","REQ_SHOW_WINDOW_MENU_OPCODE","REQ_SHOW_WINDOW_MENU_SINCE","REQ_UNSET_FULLSCREEN_OPCODE","REQ_UNSET_FULLSCREEN_SINCE","REQ_UNSET_MAXIMIZED_OPCODE","REQ_UNSET_MAXIMIZED_SINCE","Request","Resize","ResizeEdge","Resizing","Right","SetAppId","SetFullscreen","SetMaxSize","SetMaximized","SetMinSize","SetMinimized","SetParent","SetTitle","ShowWindowMenu","State","Suspended","TiledBottom","TiledLeft","TiledRight","TiledTop","Top","TopLeft","TopRight","UnsetFullscreen","UnsetMaximized","WindowMenu","WmCapabilities","WmCapabilities","XdgToplevel","_move","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","data","destroy","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_id","hash","hash","hash","hash","hash","id","inert","interface","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","partial_cmp","partial_cmp","partial_cmp","resize","send_constructor","send_request","set_app_id","set_fullscreen","set_max_size","set_maximized","set_min_size","set_minimized","set_parent","set_title","show_window_menu","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unset_fullscreen","unset_maximized","version","write_request","capabilities","height","height","states","width","width","app_id","edges","height","height","output","parent","seat","seat","seat","serial","serial","serial","title","width","width","x","y","CreatePositioner","DefunctSurfaces","Destroy","EVT_PING_OPCODE","EVT_PING_SINCE","Error","Event","GetXdgSurface","InvalidPopupParent","InvalidPositioner","InvalidSurfaceState","NotTheTopmostPopup","Ping","Pong","REQ_CREATE_POSITIONER_OPCODE","REQ_CREATE_POSITIONER_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_GET_XDG_SURFACE_OPCODE","REQ_GET_XDG_SURFACE_SINCE","REQ_PONG_OPCODE","REQ_PONG_SINCE","Request","Role","Unresponsive","XdgWmBase","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","create_positioner","data","destroy","eq","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_id","get_xdg_surface","hash","hash","id","inert","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","pong","send_constructor","send_request","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_request","serial","serial","surface"],"q":[[0,"wayland_protocols"],[4,"wayland_protocols::wp"],[6,"wayland_protocols::wp::presentation_time"],[7,"wayland_protocols::wp::presentation_time::client"],[10,"wayland_protocols::wp::presentation_time::client::__interfaces"],[17,"wayland_protocols::wp::presentation_time::client::wp_presentation"],[117,"wayland_protocols::wp::presentation_time::client::wp_presentation::Event"],[118,"wayland_protocols::wp::presentation_time::client::wp_presentation::Request"],[119,"wayland_protocols::wp::presentation_time::client::wp_presentation_feedback"],[279,"wayland_protocols::wp::presentation_time::client::wp_presentation_feedback::Event"],[287,"wayland_protocols::wp::viewporter"],[288,"wayland_protocols::wp::viewporter::client"],[291,"wayland_protocols::wp::viewporter::client::__interfaces"],[297,"wayland_protocols::wp::viewporter::client::wp_viewport"],[400,"wayland_protocols::wp::viewporter::client::wp_viewport::Request"],[406,"wayland_protocols::wp::viewporter::client::wp_viewporter"],[502,"wayland_protocols::wp::viewporter::client::wp_viewporter::Request"],[503,"wayland_protocols::xdg"],[504,"wayland_protocols::xdg::shell"],[505,"wayland_protocols::xdg::shell::client"],[511,"wayland_protocols::xdg::shell::client::__interfaces"],[530,"wayland_protocols::xdg::shell::client::xdg_popup"],[639,"wayland_protocols::xdg::shell::client::xdg_popup::Event"],[644,"wayland_protocols::xdg::shell::client::xdg_popup::Request"],[648,"wayland_protocols::xdg::shell::client::xdg_positioner"],[930,"wayland_protocols::xdg::shell::client::xdg_positioner::Request"],[944,"wayland_protocols::xdg::shell::client::xdg_surface"],[1060,"wayland_protocols::xdg::shell::client::xdg_surface::Event"],[1061,"wayland_protocols::xdg::shell::client::xdg_surface::Request"],[1068,"wayland_protocols::xdg::shell::client::xdg_toplevel"],[1317,"wayland_protocols::xdg::shell::client::xdg_toplevel::Event"],[1323,"wayland_protocols::xdg::shell::client::xdg_toplevel::Request"],[1340,"wayland_protocols::xdg::shell::client::xdg_wm_base"],[1453,"wayland_protocols::xdg::shell::client::xdg_wm_base::Event"],[1454,"wayland_protocols::xdg::shell::client::xdg_wm_base::Request"]],"d":["Miscellaneous protocols","Generic wayland protocols","Protocols related to window management","XWayland related protocols","Presentation time protocol","Viewporter protocol","Client-side API of this protocol","","timed presentation related wl_surface requests","presentation time feedback event","","","","","","","","clock ID for timestamps","unbind from the presentation interface","The wire opcode for this event","The minimal object version supporting this event","fatal presentation errors","","request presentation feedback information","invalid flag","invalid value in tv_nsec","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","timed presentation related wl_surface requests","","","","","","","","","","","","","","","","","","","","","","","","","unbind from the presentation interface","","","","","","request presentation feedback information","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","","","","platform clock identifier","target surface","the content update was not displayed","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","hardware provided the presentation timestamp","hardware signalled the start of the presentation","bitmask of flags in presented event","the content update was displayed","","presentation synchronized to this output","presentation was vsync’d","presentation time feedback event","presentation was done zero-copy","Get a flags value with all known bits set.","Get a flags value with all known bits set.","","","","","","","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value exactly.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","Get the opcode number of this message","Get the opcode number of this message","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","","combination of ‘kind’ values","presentation output","nanoseconds till next refresh","high 32 bits of refresh counter","low 32 bits of refresh counter","nanoseconds part of the presentation timestamp","high 32 bits of the seconds part of the presentation …","low 32 bits of the seconds part of the presentation …","Client-side API of this protocol","","crop and scale interface to a wl_surface","surface cropping and scaling","","","","","","","destination size is not integer","negative or zero values in width or height","remove scaling and cropping from the surface","","","the wl_surface was destroyed","source rectangle extends outside of the content area","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","set the surface size for scaling","set the source rectangle for cropping","crop and scale interface to a wl_surface","","","","","","","","","","","","","","","","","","","","","","","","","remove scaling and cropping from the surface","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","set the surface size for scaling","set the source rectangle for cropping","","","","","","","","","","","","","","","","","","source rectangle height","surface height","source rectangle width","surface width","source rectangle x","source rectangle y","unbind from the cropping and scaling interface","","","extend surface interface for crop and scale","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","the surface already has a viewport object associated","surface cropping and scaling","","","","","","","","","","","","","","","","","","","","","","","","","unbind from the cropping and scaling interface","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","extend surface interface for crop and scale","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","","","","the surface","XDG Shell protocol","Client-side API of this protocol","","short-lived, popup surfaces for menus","child surface positioner","desktop user interface surface base interface","toplevel surface","create desktop-style surfaces","","","","","","","","","","","","","","","","","","","","configure the popup surface","remove xdg_popup interface","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","","make the popup take an explicit grab","tried to grab after being mapped","popup interaction is done","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","recalculate the popup’s location","signal the completion of a repositioned request","","short-lived, popup surfaces for menus","","","","","","","","","","","","","","","","","","","","","","","","","remove xdg_popup interface","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","make the popup take an explicit grab","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","recalculate the popup’s location","","","","","","","","","","","","","","","","","","","","window geometry height","reposition request token","window geometry width","x position relative to parent surface window geometry","y position relative to parent surface window geometry","","the wl_seat of the user event","the serial of the user event","reposition request token","","","","","","","","constraint adjustments","destroy the xdg_positioner object","","","invert the anchor and gravity on the x axis","invert the anchor and gravity on the y axis","","invalid input provided","","","","","don’t move the child surface when constrained","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The wire opcode for this request","The minimal object version supporting this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","horizontally resize the surface","vertically resize the surface","","","set anchor rectangle anchor","set the anchor rectangle within the parent surface","set the adjustment to be done when constrained","set child surface gravity","set surface position offset","set parent configure this is a response to","Set the parent window geometry the compositor should use …","continuously reconstrain the surface","set the size of the to-be positioned rectangle","move along the x axis until unconstrained","move along the y axis until unconstrained","","","","","","","child surface positioner","Get a flags value with all known bits set.","Get a flags value with all known bits set.","","","","","","","","","","","","","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","","destroy the xdg_positioner object","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value exactly.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","Get the opcode number of this message","Get the opcode number of this message","","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","set anchor rectangle anchor","set the anchor rectangle within the parent surface","set the adjustment to be done when constrained","set child surface gravity","set surface position offset","set parent configure this is a response to","Set the parent window geometry the compositor should use …","continuously reconstrain the surface","set the size of the to-be positioned rectangle","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","","anchor","bit mask of constraint adjustments","gravity direction","height of positioned rectangle","height of anchor rectangle","future window geometry height of parent","future window geometry width of parent","serial of parent configure event","width of positioned rectangle","width of anchor rectangle","x position of anchor rectangle","surface position x offset","y position of anchor rectangle","surface position y offset","ack a configure event","Surface was already constructed","suggest a surface change","Surface was destroyed before its role object","destroy the xdg_surface","The wire opcode for this event","The minimal object version supporting this event","","","assign the xdg_popup surface role","assign the xdg_toplevel surface role","Invalid serial number when acking a configure event","Width or height was zero or negative","Surface was not fully constructed","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","set the new window geometry","Attaching a buffer to an unconfigured surface","desktop user interface surface base interface","ack a configure event","","","","","","","","","","","","","","","","","","","","","","","","","destroy the xdg_surface","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","assign the xdg_popup surface role","assign the xdg_toplevel surface role","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","set the new window geometry","","","","","","","","","","","","","","","","","","serial of the configure event","","","","the serial from the configure event","","","","the surface is now activated","","","","surface wants to be closed","suggest a surface change","recommended window geometry bounds","destroy the xdg_toplevel","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","","the surface is fullscreen","set_fullscreen and unset_fullscreen are available","invalid parent toplevel","provided value is not a valid variant of the resize_edge …","client provided an invalid min or max size","","set_maximized and unset_maximized are available","the surface is maximized","set_minimized is available","start an interactive move","","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","start an interactive resize","edge values for resizing","the surface is being resized","","set application ID","set the window as fullscreen on an output","set the maximum size","maximize the window","set the minimum size","set the window as minimized","set the parent of this surface","set surface title","show the window menu","types of state on the surface","surface repaint is suspended","the surface’s bottom edge is tiled","the surface’s left edge is tiled","the surface’s right edge is tiled","the surface’s top edge is tiled","","","","unset the window as fullscreen","unmaximize the window","show_window_menu is available","","compositor capabilities","toplevel surface","start an interactive move","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","destroy the xdg_toplevel","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","start an interactive resize","","","set application ID","set the window as fullscreen on an output","set the maximum size","maximize the window","set the minimum size","set the window as minimized","set the parent of this surface","set surface title","show the window menu","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","unset the window as fullscreen","unmaximize the window","","","array of 32-bit capabilities","","","","","","","which edge or corner is being dragged","","","","","the wl_seat of the user event","the wl_seat of the user event","the wl_seat of the user event","the serial of the user event","the serial of the user event","the serial of the user event","","","","the x position to pop up the window menu at","the y position to pop up the window menu at","create a positioner object","xdg_wm_base was destroyed before children","destroy xdg_wm_base","The wire opcode for this event","The minimal object version supporting this event","","","create a shell surface from a surface","the client specified an invalid popup parent surface","the client provided an invalid positioner","the client provided an invalid surface state","the client tried to map or destroy a non-topmost popup","check if the client is alive","respond to a ping event","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","given wl_surface has another role","the client didn’t respond to a ping event in time","create desktop-style surfaces","","","","","","","","","","","","","","","","","","","","","","","","create a positioner object","","destroy xdg_wm_base","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","create a shell surface from a surface","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","respond to a ping event","","","","","","","","","","","","","","","","","","","","pass this to the pong request","serial of the ping event",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,18,0,0,0,0,18,5,5,0,0,0,0,0,0,5,18,19,2,5,18,19,2,2,5,18,19,2,2,5,18,19,2,5,2,5,2,5,2,2,5,2,2,5,2,2,5,18,19,2,5,18,19,2,2,5,2,2,2,2,5,18,19,2,5,18,19,2,5,18,19,2,5,18,19,2,2,18,19,2,5,2,2,5,2,5,5,18,19,2,5,18,19,2,5,18,19,2,2,2,83,84,40,0,0,0,0,0,0,0,37,37,0,40,0,40,37,0,37,37,37,37,39,40,13,37,39,40,13,13,37,37,37,37,37,37,37,37,37,37,39,40,13,13,37,39,40,13,37,13,37,13,37,37,37,37,13,37,37,37,37,37,13,13,37,13,37,37,37,37,37,37,39,40,13,37,39,40,13,37,37,37,37,37,37,37,13,37,37,37,37,13,13,13,37,37,13,37,37,37,37,37,39,40,13,37,39,40,13,37,39,40,13,37,39,40,13,37,37,37,37,37,37,37,37,37,37,13,39,40,13,37,37,13,13,37,37,37,37,37,37,37,13,37,37,37,37,39,40,13,37,39,40,13,37,39,40,13,37,37,13,13,85,86,85,85,85,85,85,85,0,0,0,0,0,0,0,0,0,0,45,45,46,0,0,45,45,0,0,0,0,0,0,0,46,46,0,45,46,47,44,45,46,47,44,44,45,46,47,44,44,45,46,47,44,45,44,45,44,45,44,44,45,44,44,45,44,45,46,47,44,45,46,47,44,44,45,44,44,44,44,45,46,47,44,45,46,47,44,45,46,47,44,45,46,47,44,44,46,47,44,45,44,44,44,44,45,44,45,45,46,47,44,45,46,47,44,45,46,47,44,44,44,87,88,87,88,87,87,52,0,0,52,0,0,0,0,0,51,0,51,52,53,50,51,52,53,50,50,51,52,53,50,50,51,52,53,50,51,50,51,50,51,50,50,51,50,50,51,50,51,52,53,50,51,52,53,50,50,50,51,50,50,50,50,51,52,53,50,51,52,53,50,51,52,53,50,51,52,53,50,50,52,53,50,51,50,50,51,50,51,51,52,53,50,51,52,53,50,51,52,53,50,50,50,89,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,57,56,0,0,0,0,0,0,0,0,56,55,57,0,0,0,0,0,0,56,57,0,0,55,56,57,54,55,56,57,54,54,55,56,57,54,54,55,56,57,54,55,54,55,54,55,54,54,55,54,54,55,54,55,56,57,54,55,56,57,54,54,54,55,54,54,54,54,55,56,57,54,55,56,57,54,55,56,57,54,55,56,57,54,54,56,57,54,55,54,54,54,55,54,55,55,56,57,54,55,56,57,54,55,56,57,54,54,54,90,91,90,90,90,92,93,93,92,0,62,63,62,63,62,63,0,64,0,0,60,60,0,61,62,63,62,63,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,60,60,62,63,64,64,64,64,64,64,64,64,64,60,60,62,63,62,63,62,63,0,60,60,61,62,63,60,64,65,59,61,62,63,60,64,65,59,59,60,60,60,60,60,60,60,60,60,61,62,63,60,64,65,59,59,61,62,63,60,64,65,59,61,62,63,60,59,61,62,63,60,59,61,62,63,60,60,60,60,59,59,60,60,60,60,61,62,63,60,59,59,61,62,63,60,59,60,61,62,63,60,60,60,60,60,64,65,59,61,62,63,60,64,65,59,60,60,60,60,60,60,60,59,60,60,60,61,62,63,60,59,59,59,60,60,59,60,60,60,60,61,62,63,60,64,65,59,61,62,63,60,64,65,59,61,62,63,60,64,65,59,61,62,63,60,64,65,59,60,60,60,60,60,60,60,60,60,60,59,64,65,59,61,62,63,60,60,59,59,60,60,59,59,59,59,59,59,59,59,59,60,60,60,60,61,62,63,60,59,60,60,61,61,62,62,63,63,60,60,64,65,59,61,62,63,60,64,65,59,61,62,63,60,64,65,59,60,60,59,59,94,95,96,97,98,99,99,100,97,98,98,101,98,101,68,67,69,67,68,0,0,0,0,68,68,67,67,67,0,0,0,0,0,0,0,0,0,0,0,68,67,0,66,67,68,69,66,67,68,69,66,66,67,68,69,66,66,67,68,69,66,67,66,67,66,67,66,66,67,66,66,67,66,67,68,69,66,67,68,69,66,66,66,66,67,66,66,66,66,67,68,69,66,67,68,69,66,67,68,69,66,67,68,69,66,66,68,69,66,67,66,66,66,67,66,67,67,68,69,66,67,68,69,66,67,68,69,66,66,66,102,103,104,104,105,103,103,103,73,72,72,72,76,76,76,75,0,0,0,0,0,0,0,0,0,0,73,74,71,71,71,72,74,73,74,75,72,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,75,0,73,72,75,75,75,75,75,75,75,75,75,0,73,73,73,73,73,72,72,72,75,75,74,0,76,0,70,71,72,73,74,75,76,70,71,72,73,74,75,76,70,70,71,72,73,74,75,76,70,70,71,72,73,74,75,76,70,71,72,73,74,70,71,72,73,74,70,71,72,73,74,70,70,71,72,73,74,70,70,71,72,73,74,70,71,72,73,74,75,76,70,71,72,73,74,75,76,70,70,71,72,73,74,70,70,70,70,71,72,73,74,75,76,70,71,72,73,74,75,76,70,71,72,73,74,75,76,70,71,72,73,74,75,76,70,70,75,76,70,71,72,73,74,70,70,70,70,70,70,70,70,70,70,70,70,71,72,73,74,70,71,71,72,72,73,73,74,74,75,76,70,71,72,73,74,75,76,70,71,72,73,74,75,76,70,70,70,70,70,106,107,108,107,107,108,109,110,111,112,113,114,115,116,110,115,116,110,117,111,112,115,115,81,80,81,0,0,0,0,81,80,80,80,80,82,81,0,0,0,0,0,0,0,0,0,80,80,0,80,81,82,79,80,81,82,79,79,80,81,82,79,79,80,81,82,79,80,79,80,79,80,79,79,79,80,79,79,80,79,80,81,82,79,80,81,82,79,79,79,80,79,79,79,79,80,81,82,79,80,81,82,79,80,81,82,79,80,81,82,79,79,81,82,79,80,79,79,79,80,79,80,80,81,82,79,80,81,82,79,80,81,82,79,79,79,118,119,120],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2,3],[[]],[[]],[[]],[2,4],[[]],[[]],[[]],[[]],[[]],[5,5],[2,2],[[]],[[]],[[5,5],6],[2,[[9,[[0,[7,8]]]]]],[2],[[5,5],10],[[2,2],10],[[2,[11,[2]]],10],[[],10],[[],10],[[2,12,[15,[[14,[13,[0,[7,8]]]]]],[0,[7,8]]],13],[[5,16],17],[[18,16],17],[[19,16],17],[[2,16],17],[[]],[[]],[[]],[[]],[[20,4],[[22,[2,21]]]],[[5,23]],[[2,23]],[2,4],[3,2],[[],24],[[]],[[]],[[]],[[]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[2,[[9,[[27,[29]]]]]],[18,30],[19,30],[[20,[32,[4,31]]],[[22,[33]]]],[[5,5],[[9,[6]]]],[[2,[27,[29]]],[[22,[34,21]]]],[2,[[22,[21]]]],[[]],[[]],[35,[[22,[5]]]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],36],[[],36],[[],36],[[],36],[2,35],[[2,20],[[22,[21]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],37],[[],37],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[13,3],[[37,37],37],[[37,37]],[[37,37],37],[[37,37]],[37,35],[37,35],[37,35],[[37,37],37],[[37,37]],[[]],[[]],[[]],[[]],[13,4],[[]],[[]],[[]],[[]],[37,37],[13,13],[[]],[[]],[37,37],[37,37],[[37,37],10],[[37,37],10],[13,[[9,[[0,[7,8]]]]]],[[37,37],37],[[37,37],37],[[],37],[[],37],[[37,37],10],[[13,13],10],[[13,[11,[13]]],10],[[],10],[[],10],[[37,38]],[[37,16],17],[[37,16],17],[[37,16],17],[[37,16],17],[[37,16],17],[[39,16],17],[[40,16],17],[[13,16],17],[[]],[[]],[[]],[[]],[35,[[9,[37]]]],[35,[[9,[37]]]],[35,37],[35,37],[35,37],[35,37],[35,37],[[20,4],[[22,[13,21]]]],[38,37],[41,[[9,[37]]]],[41,[[9,[37]]]],[[37,23]],[[13,23]],[13,4],[3,13],[[37,37]],[[37,37]],[[],24],[[37,37],37],[[37,37],37],[[37,37],10],[[37,37],10],[[]],[[]],[[]],[[]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[37],[37,10],[37,10],[37,10],[37,10],[37,[[42,[37]]]],[37,[[42,[37]]]],[37,[[43,[37]]]],[37,[[43,[37]]]],[37,37],[13,[[9,[[27,[29]]]]]],[39,30],[40,30],[[20,[32,[4,31]]],[[22,[33]]]],[[37,37]],[[37,37]],[[13,[27,[29]]],[[22,[34,21]]]],[13,[[22,[21]]]],[[37,37,10]],[[37,37,10]],[[37,37],37],[[37,37]],[[37,37],37],[[37,37],37],[[]],[[]],[[37,37]],[[37,37]],[35,[[22,[37]]]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],36],[[],36],[[],36],[[],36],[[37,37],37],[[37,37],37],[13,35],[[13,20],[[22,[21]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[44,3],[[]],[[]],[[]],[44,4],[[]],[[]],[[]],[[]],[[]],[45,45],[44,44],[[]],[[]],[[45,45],6],[44,[[9,[[0,[7,8]]]]]],[44],[[45,45],10],[[44,44],10],[[44,[11,[44]]],10],[[],10],[[],10],[[45,16],17],[[46,16],17],[[47,16],17],[[44,16],17],[[]],[[]],[[]],[[]],[[20,4],[[22,[44,21]]]],[[45,23]],[[44,23]],[44,4],[3,44],[[],24],[[]],[[]],[[]],[[]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[44,[[9,[[27,[29]]]]]],[46,30],[47,30],[[20,[32,[4,31]]],[[22,[33]]]],[[45,45],[[9,[6]]]],[[44,[27,[29]]],[[22,[34,21]]]],[44,[[22,[21]]]],[[44,48,48]],[[44,49,49,49,49]],[[]],[[]],[35,[[22,[45]]]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],36],[[],36],[[],36],[[],36],[44,35],[[44,20],[[22,[21]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[50,3],[[]],[[]],[[]],[50,4],[[]],[[]],[[]],[[]],[[]],[51,51],[50,50],[[]],[[]],[[51,51],6],[50,[[9,[[0,[7,8]]]]]],[50],[[51,51],10],[[50,50],10],[[50,[11,[50]]],10],[[],10],[[],10],[[51,16],17],[[52,16],17],[[53,16],17],[[50,16],17],[[]],[[]],[[]],[[]],[[20,4],[[22,[50,21]]]],[[50,12,[15,[[14,[44,[0,[7,8]]]]]],[0,[7,8]]],44],[[51,23]],[[50,23]],[50,4],[3,50],[[],24],[[]],[[]],[[]],[[]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[50,[[9,[[27,[29]]]]]],[52,30],[53,30],[[20,[32,[4,31]]],[[22,[33]]]],[[51,51],[[9,[6]]]],[[50,[27,[29]]],[[22,[34,21]]]],[50,[[22,[21]]]],[[]],[[]],[[],22],[35,[[22,[51]]]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],36],[[],36],[[],36],[[],36],[50,35],[[50,20],[[22,[21]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[54,3],[[]],[[]],[[]],[[]],[54,4],[[]],[[]],[[]],[[]],[55,55],[54,54],[[]],[[]],[[55,55],6],[54,[[9,[[0,[7,8]]]]]],[54],[[55,55],10],[[54,54],10],[[54,[11,[54]]],10],[[],10],[[],10],[[55,16],17],[[56,16],17],[[57,16],17],[[54,16],17],[[]],[[]],[[]],[[]],[[20,4],[[22,[54,21]]]],[[54,58,35]],[[55,23]],[[54,23]],[54,4],[3,54],[[],24],[[]],[[]],[[]],[[]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[54,[[9,[[27,[29]]]]]],[56,30],[57,30],[[20,[32,[4,31]]],[[22,[33]]]],[[55,55],[[9,[6]]]],[[54,59,35]],[[54,[27,[29]]],[[22,[34,21]]]],[54,[[22,[21]]]],[[]],[[]],[35,[[22,[55]]]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],36],[[],36],[[],36],[[],36],[54,35],[[54,20],[[22,[21]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],60],[[],60],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[59,3],[[60,60],60],[[60,60]],[[60,60],60],[[60,60]],[60,35],[60,35],[60,35],[[60,60],60],[[60,60]],[[]],[[]],[[]],[[]],[[]],[[]],[59,4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[61,61],[62,62],[63,63],[60,60],[59,59],[[]],[[]],[[]],[[]],[[]],[[61,61],6],[[62,62],6],[[63,63],6],[60,60],[60,60],[[60,60],10],[[60,60],10],[59,[[9,[[0,[7,8]]]]]],[59],[[60,60],60],[[60,60],60],[[],60],[[],60],[[61,61],10],[[62,62],10],[[63,63],10],[[60,60],10],[[59,59],10],[[59,[11,[59]]],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[60,38]],[[61,16],17],[[62,16],17],[[63,16],17],[[60,16],17],[[60,16],17],[[60,16],17],[[60,16],17],[[60,16],17],[[64,16],17],[[65,16],17],[[59,16],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[35,[[9,[60]]]],[35,[[9,[60]]]],[35,60],[35,60],[35,60],[35,60],[35,60],[[20,4],[[22,[59,21]]]],[38,60],[41,[[9,[60]]]],[41,[[9,[60]]]],[[61,23]],[[62,23]],[[63,23]],[[60,23]],[[59,23]],[59,4],[3,59],[[60,60]],[[60,60]],[[],24],[[60,60],60],[[60,60],60],[[60,60],10],[[60,60],10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[60],[60,10],[60,10],[60,10],[60,10],[60,[[42,[60]]]],[60,[[42,[60]]]],[60,[[43,[60]]]],[60,[[43,[60]]]],[60,60],[59,[[9,[[27,[29]]]]]],[64,30],[65,30],[[20,[32,[4,31]]],[[22,[33]]]],[[61,61],[[9,[6]]]],[[62,62],[[9,[6]]]],[[63,63],[[9,[6]]]],[[60,60]],[[60,60]],[[59,[27,[29]]],[[22,[34,21]]]],[59,[[22,[21]]]],[[60,60,10]],[[60,60,10]],[[59,62]],[[59,48,48,48,48]],[[59,35]],[[59,63]],[[59,48,48]],[[59,35]],[[59,48,48]],[59],[[59,48,48]],[[60,60],60],[[60,60]],[[60,60],60],[[60,60],60],[[]],[[]],[[]],[[]],[[]],[[60,60]],[[60,60]],[35,[[22,[61]]]],[[],22],[[],22],[35,[[22,[62]]]],[[],22],[35,[[22,[63]]]],[35,[[22,[60]]]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[60,60],60],[[60,60],60],[59,35],[[59,20],[[22,[21]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[66,35]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[66,3],[[]],[[]],[[]],[66,4],[[]],[[]],[[]],[[]],[[]],[67,67],[66,66],[[]],[[]],[[67,67],6],[66,[[9,[[0,[7,8]]]]]],[66],[[67,67],10],[[66,66],10],[[66,[11,[66]]],10],[[],10],[[],10],[[67,16],17],[[68,16],17],[[69,16],17],[[66,16],17],[[]],[[]],[[]],[[]],[[20,4],[[22,[66,21]]]],[[66,[9,[66]],59,[15,[[14,[54,[0,[7,8]]]]]],[0,[7,8]]],54],[[66,[15,[[14,[70,[0,[7,8]]]]]],[0,[7,8]]],70],[[67,23]],[[66,23]],[66,4],[3,66],[[],24],[[]],[[]],[[]],[[]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[66,[[9,[[27,[29]]]]]],[68,30],[69,30],[[20,[32,[4,31]]],[[22,[33]]]],[[67,67],[[9,[6]]]],[[66,[27,[29]]],[[22,[34,21]]]],[66,[[22,[21]]]],[[66,48,48,48,48]],[[]],[[]],[35,[[22,[67]]]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],36],[[],36],[[],36],[[],36],[66,35],[[66,20],[[22,[21]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[70,58,35]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[70,3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[70,4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[71,71],[72,72],[73,73],[74,74],[70,70],[[]],[[]],[[]],[[]],[[]],[[71,71],6],[[72,72],6],[[73,73],6],[[74,74],6],[70,[[9,[[0,[7,8]]]]]],[70],[[71,71],10],[[72,72],10],[[73,73],10],[[74,74],10],[[70,70],10],[[70,[11,[70]]],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[71,16],17],[[72,16],17],[[73,16],17],[[74,16],17],[[75,16],17],[[76,16],17],[[70,16],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[20,4],[[22,[70,21]]]],[[71,23]],[[72,23]],[[73,23]],[[74,23]],[[70,23]],[70,4],[3,70],[[],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[70,[[9,[[27,[29]]]]]],[75,30],[76,30],[[20,[32,[4,31]]],[[22,[33]]]],[[71,71],[[9,[6]]]],[[72,72],[[9,[6]]]],[[73,73],[[9,[6]]]],[[74,74],[[9,[6]]]],[[70,58,35,72]],[[70,[27,[29]]],[[22,[34,21]]]],[70,[[22,[21]]]],[[70,77]],[[70,[9,[78]]]],[[70,48,48]],[70],[[70,48,48]],[70],[[70,[9,[70]]]],[[70,77]],[[70,58,35,48,48]],[[]],[[]],[[]],[[]],[[]],[[],22],[35,[[22,[71]]]],[35,[[22,[72]]]],[[],22],[35,[[22,[73]]]],[[],22],[35,[[22,[74]]]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[70],[70],[70,35],[[70,20],[[22,[21]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[79,3],[[]],[[]],[[]],[79,4],[[]],[[]],[[]],[[]],[[]],[80,80],[79,79],[[]],[[]],[[80,80],6],[[79,[15,[[14,[59,[0,[7,8]]]]]],[0,[7,8]]],59],[79,[[9,[[0,[7,8]]]]]],[79],[[80,80],10],[[79,79],10],[[79,[11,[79]]],10],[[],10],[[],10],[[80,16],17],[[81,16],17],[[82,16],17],[[79,16],17],[[]],[[]],[[]],[[]],[[20,4],[[22,[79,21]]]],[[79,12,[15,[[14,[66,[0,[7,8]]]]]],[0,[7,8]]],66],[[80,23]],[[79,23]],[79,4],[3,79],[[],24],[[]],[[]],[[]],[[]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[79,[[9,[[27,[29]]]]]],[81,30],[82,30],[[20,[32,[4,31]]],[[22,[33]]]],[[80,80],[[9,[6]]]],[[79,35]],[[79,[27,[29]]],[[22,[34,21]]]],[79,[[22,[21]]]],[[]],[[]],[35,[[22,[80]]]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],36],[[],36],[[],36],[[],36],[79,35],[[79,20],[[22,[21]]]],0,0,0],"c":[],"p":[[8,"Any"],[3,"WpPresentation"],[3,"WeakBackend"],[3,"ObjectId"],[4,"Error"],[4,"Ordering"],[8,"Send"],[8,"Sync"],[4,"Option"],[15,"bool"],[3,"Weak"],[3,"WlSurface"],[3,"WpPresentationFeedback"],[8,"Dispatch"],[3,"QueueHandle"],[3,"Formatter"],[6,"Result"],[4,"Request"],[4,"Event"],[3,"Connection"],[3,"InvalidId"],[4,"Result"],[8,"Hasher"],[3,"Interface"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[8,"ObjectData"],[15,"u16"],[3,"OwnedFd"],[3,"Message"],[4,"DispatchError"],[8,"Proxy"],[15,"u32"],[3,"TypeId"],[3,"Kind"],[8,"IntoIterator"],[4,"Request"],[4,"Event"],[15,"str"],[3,"Iter"],[3,"IterNames"],[3,"WpViewport"],[4,"Error"],[4,"Request"],[4,"Event"],[15,"i32"],[15,"f64"],[3,"WpViewporter"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"XdgPopup"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"WlSeat"],[3,"XdgPositioner"],[3,"ConstraintAdjustment"],[4,"Error"],[4,"Anchor"],[4,"Gravity"],[4,"Request"],[4,"Event"],[3,"XdgSurface"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"XdgToplevel"],[4,"Error"],[4,"ResizeEdge"],[4,"State"],[4,"WmCapabilities"],[4,"Request"],[4,"Event"],[3,"String"],[3,"WlOutput"],[3,"XdgWmBase"],[4,"Error"],[4,"Request"],[4,"Event"],[13,"ClockId"],[13,"Feedback"],[13,"Presented"],[13,"SyncOutput"],[13,"SetSource"],[13,"SetDestination"],[13,"GetViewport"],[13,"Configure"],[13,"Repositioned"],[13,"Reposition"],[13,"Grab"],[13,"SetAnchor"],[13,"SetConstraintAdjustment"],[13,"SetGravity"],[13,"SetSize"],[13,"SetAnchorRect"],[13,"SetParentSize"],[13,"SetParentConfigure"],[13,"SetOffset"],[13,"Configure"],[13,"SetWindowGeometry"],[13,"GetPopup"],[13,"AckConfigure"],[13,"WmCapabilities"],[13,"Configure"],[13,"ConfigureBounds"],[13,"SetAppId"],[13,"Resize"],[13,"SetMaxSize"],[13,"SetMinSize"],[13,"SetFullscreen"],[13,"SetParent"],[13,"ShowWindowMenu"],[13,"Move"],[13,"SetTitle"],[13,"Ping"],[13,"Pong"],[13,"GetXdgSurface"]]},\
"wayland_protocols_wlr":{"doc":"This crate provides bindings to the wlroots wayland …","t":"AAAAAAAAAAAAAAAAAHHHHHHHHHHHHHHHNNRRRRRRRREENNRRRRRRENNNNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMNNENRRRRRREDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMNRRENRRRRNEDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMNNRRRREENNRRRRENDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMAAAAAHHHHHHHNENRRRRRRRREENNNRRNENNNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMNNERRRREDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMAAAAAHHHHHHHHNNNNNNNRRRRRRRRRRRRRRRREENNNNNNNRRRRRRRRRRRRRRRRRRRRENNNNENNNNNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMRRRRENRRENNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMAAAAAHHHHHHHNENRRRREDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMNRRRREENNNRRRRENDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMAAAAAHHHHHHNEENRREDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNERREDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAAAAAHHHHHHHNNNNEENNENRRRRENNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMNDSNNNRRRREENNNNNNESNNRRRRRRRRRRRRRRRRRRESNNNNNNSDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMAAAAAAAAHHHHHHHHHHHHHHHHHHHNEENNNNNRRRRRRRRRRRRENNNNNNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMNNNNNNRRRRRRNEENRRRRRRRRRRENNNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMNENNNRRRRRRRRRRRRRRRRRRRRRRRRRRRRNNENNNNNNNRRNENNNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMNNRRRRRRENNRRRRENDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMRRRRRRRRENNRRNNENDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMAAAAAHHHHHHHNENRRRREDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMNRRRREENNENNNRRRRENDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMAAAAAHHHHHHHNNNNNNNRRRRRRRRRRRRRREENDNNNRRRRRRNESDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMNNNERRRRRREDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMAAAAAHHHHHHNNNERRRRRREDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMNNNNNNEENNNNNRRRRRRRRRRRRRRRRRREDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMM","n":["data_control","export_dmabuf","foreign_toplevel","gamma_control","input_inhibitor","layer_shell","output_management","output_power_management","screencopy","virtual_pointer","v1","client","__interfaces","zwlr_data_control_device_v1","zwlr_data_control_manager_v1","zwlr_data_control_offer_v1","zwlr_data_control_source_v1","ZWLR_DATA_CONTROL_DEVICE_V1_INTERFACE","ZWLR_DATA_CONTROL_MANAGER_V1_INTERFACE","ZWLR_DATA_CONTROL_OFFER_V1_INTERFACE","ZWLR_DATA_CONTROL_SOURCE_V1_INTERFACE","zwlr_data_control_device_v1_events","zwlr_data_control_device_v1_interface","zwlr_data_control_device_v1_requests","zwlr_data_control_manager_v1_interface","zwlr_data_control_manager_v1_requests","zwlr_data_control_offer_v1_events","zwlr_data_control_offer_v1_interface","zwlr_data_control_offer_v1_requests","zwlr_data_control_source_v1_events","zwlr_data_control_source_v1_interface","zwlr_data_control_source_v1_requests","DataOffer","Destroy","EVT_DATA_OFFER_OPCODE","EVT_DATA_OFFER_SINCE","EVT_FINISHED_OPCODE","EVT_FINISHED_SINCE","EVT_PRIMARY_SELECTION_OPCODE","EVT_PRIMARY_SELECTION_SINCE","EVT_SELECTION_OPCODE","EVT_SELECTION_SINCE","Error","Event","Finished","PrimarySelection","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_SET_PRIMARY_SELECTION_OPCODE","REQ_SET_PRIMARY_SELECTION_SINCE","REQ_SET_SELECTION_OPCODE","REQ_SET_SELECTION_SINCE","Request","Selection","SetPrimarySelection","SetSelection","UsedSource","ZwlrDataControlDeviceV1","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","destroy","eq","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_id","hash","hash","id","inert","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","send_constructor","send_request","set_primary_selection","set_selection","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_request","id","id","id","source","source","CreateDataSource","Destroy","Event","GetDataDevice","REQ_CREATE_DATA_SOURCE_OPCODE","REQ_CREATE_DATA_SOURCE_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_GET_DATA_DEVICE_OPCODE","REQ_GET_DATA_DEVICE_SINCE","Request","ZwlrDataControlManagerV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","create_data_source","data","destroy","eq","eq","equivalent","fmt","fmt","fmt","from","from","from","from_id","get_data_device","hash","id","inert","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","send_constructor","send_request","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_request","seat","Destroy","EVT_OFFER_OPCODE","EVT_OFFER_SINCE","Event","Offer","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_RECEIVE_OPCODE","REQ_RECEIVE_SINCE","Receive","Request","ZwlrDataControlOfferV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","destroy","eq","eq","equivalent","fmt","fmt","fmt","from","from","from","from_id","hash","id","inert","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","receive","send_constructor","send_request","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_request","mime_type","fd","mime_type","Cancelled","Destroy","EVT_CANCELLED_OPCODE","EVT_CANCELLED_SINCE","EVT_SEND_OPCODE","EVT_SEND_SINCE","Error","Event","InvalidOffer","Offer","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_OFFER_OPCODE","REQ_OFFER_SINCE","Request","Send","ZwlrDataControlSourceV1","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","destroy","eq","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_id","hash","hash","id","inert","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","offer","opcode","opcode","parse_event","partial_cmp","send_constructor","send_request","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_request","fd","mime_type","mime_type","v1","client","__interfaces","zwlr_export_dmabuf_frame_v1","zwlr_export_dmabuf_manager_v1","ZWLR_EXPORT_DMABUF_FRAME_V1_INTERFACE","ZWLR_EXPORT_DMABUF_MANAGER_V1_INTERFACE","zwlr_export_dmabuf_frame_v1_events","zwlr_export_dmabuf_frame_v1_interface","zwlr_export_dmabuf_frame_v1_requests","zwlr_export_dmabuf_manager_v1_interface","zwlr_export_dmabuf_manager_v1_requests","Cancel","CancelReason","Destroy","EVT_CANCEL_OPCODE","EVT_CANCEL_SINCE","EVT_FRAME_OPCODE","EVT_FRAME_SINCE","EVT_OBJECT_OPCODE","EVT_OBJECT_SINCE","EVT_READY_OPCODE","EVT_READY_SINCE","Event","Flags","Frame","Object","Permanent","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","Ready","Request","Resizing","Temporary","Transient","ZwlrExportDmabufFrameV1","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","data","destroy","eq","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_id","hash","hash","hash","id","inert","interface","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","partial_cmp","send_constructor","send_request","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","version","write_request","buffer_flags","fd","flags","format","height","index","mod_high","mod_low","num_objects","offset","offset_x","offset_y","plane_index","reason","size","stride","tv_nsec","tv_sec_hi","tv_sec_lo","width","CaptureOutput","Destroy","Event","REQ_CAPTURE_OUTPUT_OPCODE","REQ_CAPTURE_OUTPUT_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","Request","ZwlrExportDmabufManagerV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","capture_output","clone","clone_into","data","destroy","eq","eq","equivalent","fmt","fmt","fmt","from","from","from","from_id","hash","id","inert","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","send_constructor","send_request","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_request","output","overlay_cursor","v1","client","__interfaces","zwlr_foreign_toplevel_handle_v1","zwlr_foreign_toplevel_manager_v1","ZWLR_FOREIGN_TOPLEVEL_HANDLE_V1_INTERFACE","ZWLR_FOREIGN_TOPLEVEL_MANAGER_V1_INTERFACE","zwlr_foreign_toplevel_handle_v1_events","zwlr_foreign_toplevel_handle_v1_interface","zwlr_foreign_toplevel_handle_v1_requests","zwlr_foreign_toplevel_manager_v1_events","zwlr_foreign_toplevel_manager_v1_interface","zwlr_foreign_toplevel_manager_v1_requests","Activate","Activated","AppId","Close","Closed","Destroy","Done","EVT_APP_ID_OPCODE","EVT_APP_ID_SINCE","EVT_CLOSED_OPCODE","EVT_CLOSED_SINCE","EVT_DONE_OPCODE","EVT_DONE_SINCE","EVT_OUTPUT_ENTER_OPCODE","EVT_OUTPUT_ENTER_SINCE","EVT_OUTPUT_LEAVE_OPCODE","EVT_OUTPUT_LEAVE_SINCE","EVT_PARENT_OPCODE","EVT_PARENT_SINCE","EVT_STATE_OPCODE","EVT_STATE_SINCE","EVT_TITLE_OPCODE","EVT_TITLE_SINCE","Error","Event","Fullscreen","InvalidRectangle","Maximized","Minimized","OutputEnter","OutputLeave","Parent","REQ_ACTIVATE_OPCODE","REQ_ACTIVATE_SINCE","REQ_CLOSE_OPCODE","REQ_CLOSE_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_SET_FULLSCREEN_OPCODE","REQ_SET_FULLSCREEN_SINCE","REQ_SET_MAXIMIZED_OPCODE","REQ_SET_MAXIMIZED_SINCE","REQ_SET_MINIMIZED_OPCODE","REQ_SET_MINIMIZED_SINCE","REQ_SET_RECTANGLE_OPCODE","REQ_SET_RECTANGLE_SINCE","REQ_UNSET_FULLSCREEN_OPCODE","REQ_UNSET_FULLSCREEN_SINCE","REQ_UNSET_MAXIMIZED_OPCODE","REQ_UNSET_MAXIMIZED_SINCE","REQ_UNSET_MINIMIZED_OPCODE","REQ_UNSET_MINIMIZED_SINCE","Request","SetFullscreen","SetMaximized","SetMinimized","SetRectangle","State","State","Title","UnsetFullscreen","UnsetMaximized","UnsetMinimized","ZwlrForeignToplevelHandleV1","activate","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","close","cmp","cmp","data","destroy","eq","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_id","hash","hash","hash","id","inert","interface","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","partial_cmp","send_constructor","send_request","set_fullscreen","set_maximized","set_minimized","set_rectangle","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unset_fullscreen","unset_maximized","unset_minimized","version","write_request","app_id","output","output","parent","state","title","height","output","seat","surface","width","x","y","EVT_FINISHED_OPCODE","EVT_FINISHED_SINCE","EVT_TOPLEVEL_OPCODE","EVT_TOPLEVEL_SINCE","Event","Finished","REQ_STOP_OPCODE","REQ_STOP_SINCE","Request","Stop","Toplevel","ZwlrForeignToplevelManagerV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","eq","eq","equivalent","fmt","fmt","fmt","from","from","from","from_id","hash","id","inert","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","send_constructor","send_request","stop","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_request","toplevel","v1","client","__interfaces","zwlr_gamma_control_manager_v1","zwlr_gamma_control_v1","ZWLR_GAMMA_CONTROL_MANAGER_V1_INTERFACE","ZWLR_GAMMA_CONTROL_V1_INTERFACE","zwlr_gamma_control_manager_v1_interface","zwlr_gamma_control_manager_v1_requests","zwlr_gamma_control_v1_events","zwlr_gamma_control_v1_interface","zwlr_gamma_control_v1_requests","Destroy","Event","GetGammaControl","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_GET_GAMMA_CONTROL_OPCODE","REQ_GET_GAMMA_CONTROL_SINCE","Request","ZwlrGammaControlManagerV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","destroy","eq","eq","equivalent","fmt","fmt","fmt","from","from","from","from_id","get_gamma_control","hash","id","inert","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","send_constructor","send_request","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_request","output","Destroy","EVT_FAILED_OPCODE","EVT_FAILED_SINCE","EVT_GAMMA_SIZE_OPCODE","EVT_GAMMA_SIZE_SINCE","Error","Event","Failed","GammaSize","InvalidGamma","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_SET_GAMMA_OPCODE","REQ_SET_GAMMA_SINCE","Request","SetGamma","ZwlrGammaControlV1","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","destroy","eq","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_id","hash","hash","id","inert","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","send_constructor","send_request","set_gamma","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_request","size","fd","v1","client","__interfaces","zwlr_input_inhibit_manager_v1","zwlr_input_inhibitor_v1","ZWLR_INPUT_INHIBITOR_V1_INTERFACE","ZWLR_INPUT_INHIBIT_MANAGER_V1_INTERFACE","zwlr_input_inhibit_manager_v1_interface","zwlr_input_inhibit_manager_v1_requests","zwlr_input_inhibitor_v1_interface","zwlr_input_inhibitor_v1_requests","AlreadyInhibited","Error","Event","GetInhibitor","REQ_GET_INHIBITOR_OPCODE","REQ_GET_INHIBITOR_SINCE","Request","ZwlrInputInhibitManagerV1","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","eq","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_id","get_inhibitor","hash","hash","id","inert","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","send_constructor","send_request","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_request","Destroy","Event","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","Request","ZwlrInputInhibitorV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","destroy","eq","eq","equivalent","fmt","fmt","fmt","from","from","from","from_id","hash","id","inert","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","send_constructor","send_request","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_request","v1","client","__interfaces","zwlr_layer_shell_v1","zwlr_layer_surface_v1","ZWLR_LAYER_SHELL_V1_INTERFACE","ZWLR_LAYER_SURFACE_V1_INTERFACE","zwlr_layer_shell_v1_interface","zwlr_layer_shell_v1_requests","zwlr_layer_surface_v1_events","zwlr_layer_surface_v1_interface","zwlr_layer_surface_v1_requests","AlreadyConstructed","Background","Bottom","Destroy","Error","Event","GetLayerSurface","InvalidLayer","Layer","Overlay","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_GET_LAYER_SURFACE_OPCODE","REQ_GET_LAYER_SURFACE_SINCE","Request","Role","Top","ZwlrLayerShellV1","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","data","destroy","eq","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_id","get_layer_surface","hash","hash","hash","id","inert","interface","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","partial_cmp","send_constructor","send_request","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","version","write_request","layer","namespace","output","surface","AckConfigure","Anchor","Bottom","Closed","Configure","Destroy","EVT_CLOSED_OPCODE","EVT_CLOSED_SINCE","EVT_CONFIGURE_OPCODE","EVT_CONFIGURE_SINCE","Error","Event","Exclusive","GetPopup","InvalidAnchor","InvalidKeyboardInteractivity","InvalidSize","InvalidSurfaceState","KeyboardInteractivity","Left","None","OnDemand","REQ_ACK_CONFIGURE_OPCODE","REQ_ACK_CONFIGURE_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_GET_POPUP_OPCODE","REQ_GET_POPUP_SINCE","REQ_SET_ANCHOR_OPCODE","REQ_SET_ANCHOR_SINCE","REQ_SET_EXCLUSIVE_ZONE_OPCODE","REQ_SET_EXCLUSIVE_ZONE_SINCE","REQ_SET_KEYBOARD_INTERACTIVITY_OPCODE","REQ_SET_KEYBOARD_INTERACTIVITY_SINCE","REQ_SET_LAYER_OPCODE","REQ_SET_LAYER_SINCE","REQ_SET_MARGIN_OPCODE","REQ_SET_MARGIN_SINCE","REQ_SET_SIZE_OPCODE","REQ_SET_SIZE_SINCE","Request","Right","SetAnchor","SetExclusiveZone","SetKeyboardInteractivity","SetLayer","SetMargin","SetSize","Top","ZwlrLayerSurfaceV1","ack_configure","all","all","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","complement","complement","contains","contains","data","destroy","difference","difference","empty","empty","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_id","from_iter","from_name","from_name","get_popup","hash","hash","hash","hash","id","inert","insert","insert","interface","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","is_all","is_all","is_empty","is_empty","iter","iter","iter_names","iter_names","not","object_data","opcode","opcode","parse_event","partial_cmp","partial_cmp","remove","remove","send_constructor","send_request","set","set","set_anchor","set_exclusive_zone","set_keyboard_interactivity","set_layer","set_margin","set_size","sub","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","union","union","version","write_request","height","serial","width","anchor","bottom","height","keyboard_interactivity","layer","left","popup","right","serial","top","width","zone","v1","client","__interfaces","zwlr_output_configuration_head_v1","zwlr_output_configuration_v1","zwlr_output_head_v1","zwlr_output_manager_v1","zwlr_output_mode_v1","ZWLR_OUTPUT_CONFIGURATION_HEAD_V1_INTERFACE","ZWLR_OUTPUT_CONFIGURATION_V1_INTERFACE","ZWLR_OUTPUT_HEAD_V1_INTERFACE","ZWLR_OUTPUT_MANAGER_V1_INTERFACE","ZWLR_OUTPUT_MODE_V1_INTERFACE","zwlr_output_configuration_head_v1_interface","zwlr_output_configuration_head_v1_requests","zwlr_output_configuration_v1_events","zwlr_output_configuration_v1_interface","zwlr_output_configuration_v1_requests","zwlr_output_head_v1_events","zwlr_output_head_v1_interface","zwlr_output_head_v1_requests","zwlr_output_manager_v1_events","zwlr_output_manager_v1_interface","zwlr_output_manager_v1_requests","zwlr_output_mode_v1_events","zwlr_output_mode_v1_interface","zwlr_output_mode_v1_requests","AlreadySet","Error","Event","InvalidAdaptiveSyncState","InvalidCustomMode","InvalidMode","InvalidScale","InvalidTransform","REQ_SET_ADAPTIVE_SYNC_OPCODE","REQ_SET_ADAPTIVE_SYNC_SINCE","REQ_SET_CUSTOM_MODE_OPCODE","REQ_SET_CUSTOM_MODE_SINCE","REQ_SET_MODE_OPCODE","REQ_SET_MODE_SINCE","REQ_SET_POSITION_OPCODE","REQ_SET_POSITION_SINCE","REQ_SET_SCALE_OPCODE","REQ_SET_SCALE_SINCE","REQ_SET_TRANSFORM_OPCODE","REQ_SET_TRANSFORM_SINCE","Request","SetAdaptiveSync","SetCustomMode","SetMode","SetPosition","SetScale","SetTransform","ZwlrOutputConfigurationHeadV1","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","eq","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_id","hash","hash","id","inert","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","send_constructor","send_request","set_adaptive_sync","set_custom_mode","set_mode","set_position","set_scale","set_transform","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_request","height","mode","refresh","scale","state","transform","width","x","y","AlreadyConfiguredHead","AlreadyUsed","Apply","Cancelled","Destroy","DisableHead","EVT_CANCELLED_OPCODE","EVT_CANCELLED_SINCE","EVT_FAILED_OPCODE","EVT_FAILED_SINCE","EVT_SUCCEEDED_OPCODE","EVT_SUCCEEDED_SINCE","EnableHead","Error","Event","Failed","REQ_APPLY_OPCODE","REQ_APPLY_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_DISABLE_HEAD_OPCODE","REQ_DISABLE_HEAD_SINCE","REQ_ENABLE_HEAD_OPCODE","REQ_ENABLE_HEAD_SINCE","REQ_TEST_OPCODE","REQ_TEST_SINCE","Request","Succeeded","Test","UnconfiguredHead","ZwlrOutputConfigurationV1","apply","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","destroy","disable_head","enable_head","eq","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_id","hash","hash","id","inert","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","send_constructor","send_request","test","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_request","head","head","AdaptiveSync","AdaptiveSyncState","CurrentMode","Description","Disabled","EVT_ADAPTIVE_SYNC_OPCODE","EVT_ADAPTIVE_SYNC_SINCE","EVT_CURRENT_MODE_OPCODE","EVT_CURRENT_MODE_SINCE","EVT_DESCRIPTION_OPCODE","EVT_DESCRIPTION_SINCE","EVT_ENABLED_OPCODE","EVT_ENABLED_SINCE","EVT_FINISHED_OPCODE","EVT_FINISHED_SINCE","EVT_MAKE_OPCODE","EVT_MAKE_SINCE","EVT_MODEL_OPCODE","EVT_MODEL_SINCE","EVT_MODE_OPCODE","EVT_MODE_SINCE","EVT_NAME_OPCODE","EVT_NAME_SINCE","EVT_PHYSICAL_SIZE_OPCODE","EVT_PHYSICAL_SIZE_SINCE","EVT_POSITION_OPCODE","EVT_POSITION_SINCE","EVT_SCALE_OPCODE","EVT_SCALE_SINCE","EVT_SERIAL_NUMBER_OPCODE","EVT_SERIAL_NUMBER_SINCE","EVT_TRANSFORM_OPCODE","EVT_TRANSFORM_SINCE","Enabled","Enabled","Event","Finished","Make","Mode","Model","Name","PhysicalSize","Position","REQ_RELEASE_OPCODE","REQ_RELEASE_SINCE","Release","Request","Scale","SerialNumber","Transform","ZwlrOutputHeadV1","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","eq","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_id","hash","hash","id","inert","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","release","send_constructor","send_request","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_request","description","enabled","height","make","mode","mode","model","name","scale","serial_number","state","transform","width","x","y","CreateConfiguration","Done","EVT_DONE_OPCODE","EVT_DONE_SINCE","EVT_FINISHED_OPCODE","EVT_FINISHED_SINCE","EVT_HEAD_OPCODE","EVT_HEAD_SINCE","Event","Finished","Head","REQ_CREATE_CONFIGURATION_OPCODE","REQ_CREATE_CONFIGURATION_SINCE","REQ_STOP_OPCODE","REQ_STOP_SINCE","Request","Stop","ZwlrOutputManagerV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","create_configuration","data","eq","eq","equivalent","fmt","fmt","fmt","from","from","from","from_id","hash","id","inert","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","send_constructor","send_request","stop","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_request","head","serial","serial","EVT_FINISHED_OPCODE","EVT_FINISHED_SINCE","EVT_PREFERRED_OPCODE","EVT_PREFERRED_SINCE","EVT_REFRESH_OPCODE","EVT_REFRESH_SINCE","EVT_SIZE_OPCODE","EVT_SIZE_SINCE","Event","Finished","Preferred","REQ_RELEASE_OPCODE","REQ_RELEASE_SINCE","Refresh","Release","Request","Size","ZwlrOutputModeV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","eq","eq","equivalent","fmt","fmt","fmt","from","from","from","from_id","hash","id","inert","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","release","send_constructor","send_request","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_request","height","refresh","width","v1","client","__interfaces","zwlr_output_power_manager_v1","zwlr_output_power_v1","ZWLR_OUTPUT_POWER_MANAGER_V1_INTERFACE","ZWLR_OUTPUT_POWER_V1_INTERFACE","zwlr_output_power_manager_v1_interface","zwlr_output_power_manager_v1_requests","zwlr_output_power_v1_events","zwlr_output_power_v1_interface","zwlr_output_power_v1_requests","Destroy","Event","GetOutputPower","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_GET_OUTPUT_POWER_OPCODE","REQ_GET_OUTPUT_POWER_SINCE","Request","ZwlrOutputPowerManagerV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","destroy","eq","eq","equivalent","fmt","fmt","fmt","from","from","from","from_id","get_output_power","hash","id","inert","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","send_constructor","send_request","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_request","output","Destroy","EVT_FAILED_OPCODE","EVT_FAILED_SINCE","EVT_MODE_OPCODE","EVT_MODE_SINCE","Error","Event","Failed","InvalidMode","Mode","Mode","Off","On","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_SET_MODE_OPCODE","REQ_SET_MODE_SINCE","Request","SetMode","ZwlrOutputPowerV1","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","data","destroy","eq","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_id","hash","hash","hash","id","inert","interface","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","partial_cmp","send_constructor","send_request","set_mode","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","version","write_request","mode","mode","v1","client","__interfaces","zwlr_screencopy_frame_v1","zwlr_screencopy_manager_v1","ZWLR_SCREENCOPY_FRAME_V1_INTERFACE","ZWLR_SCREENCOPY_MANAGER_V1_INTERFACE","zwlr_screencopy_frame_v1_events","zwlr_screencopy_frame_v1_interface","zwlr_screencopy_frame_v1_requests","zwlr_screencopy_manager_v1_interface","zwlr_screencopy_manager_v1_requests","AlreadyUsed","Buffer","BufferDone","Copy","CopyWithDamage","Damage","Destroy","EVT_BUFFER_DONE_OPCODE","EVT_BUFFER_DONE_SINCE","EVT_BUFFER_OPCODE","EVT_BUFFER_SINCE","EVT_DAMAGE_OPCODE","EVT_DAMAGE_SINCE","EVT_FAILED_OPCODE","EVT_FAILED_SINCE","EVT_FLAGS_OPCODE","EVT_FLAGS_SINCE","EVT_LINUX_DMABUF_OPCODE","EVT_LINUX_DMABUF_SINCE","EVT_READY_OPCODE","EVT_READY_SINCE","Error","Event","Failed","Flags","Flags","InvalidBuffer","LinuxDmabuf","REQ_COPY_OPCODE","REQ_COPY_SINCE","REQ_COPY_WITH_DAMAGE_OPCODE","REQ_COPY_WITH_DAMAGE_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","Ready","Request","YInvert","ZwlrScreencopyFrameV1","all","all","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","complement","complement","contains","contains","copy","copy_with_damage","data","destroy","difference","difference","empty","empty","eq","eq","eq","eq","equivalent","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_id","from_iter","from_name","from_name","hash","hash","hash","id","inert","insert","insert","interface","intersection","intersection","intersects","intersects","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","is_all","is_all","is_empty","is_empty","iter","iter","iter_names","iter_names","not","object_data","opcode","opcode","parse_event","partial_cmp","remove","remove","send_constructor","send_request","set","set","sub","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","union","version","write_request","flags","format","format","height","height","height","stride","tv_nsec","tv_sec_hi","tv_sec_lo","width","width","width","x","y","buffer","buffer","CaptureOutput","CaptureOutputRegion","Destroy","Event","REQ_CAPTURE_OUTPUT_OPCODE","REQ_CAPTURE_OUTPUT_REGION_OPCODE","REQ_CAPTURE_OUTPUT_REGION_SINCE","REQ_CAPTURE_OUTPUT_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","Request","ZwlrScreencopyManagerV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","capture_output","capture_output_region","clone","clone_into","data","destroy","eq","eq","equivalent","fmt","fmt","fmt","from","from","from","from_id","hash","id","inert","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","send_constructor","send_request","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_request","height","output","output","overlay_cursor","overlay_cursor","width","x","y","v1","client","__interfaces","zwlr_virtual_pointer_manager_v1","zwlr_virtual_pointer_v1","ZWLR_VIRTUAL_POINTER_MANAGER_V1_INTERFACE","ZWLR_VIRTUAL_POINTER_V1_INTERFACE","zwlr_virtual_pointer_manager_v1_interface","zwlr_virtual_pointer_manager_v1_requests","zwlr_virtual_pointer_v1_interface","zwlr_virtual_pointer_v1_requests","CreateVirtualPointer","CreateVirtualPointerWithOutput","Destroy","Event","REQ_CREATE_VIRTUAL_POINTER_OPCODE","REQ_CREATE_VIRTUAL_POINTER_SINCE","REQ_CREATE_VIRTUAL_POINTER_WITH_OUTPUT_OPCODE","REQ_CREATE_VIRTUAL_POINTER_WITH_OUTPUT_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","Request","ZwlrVirtualPointerManagerV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","create_virtual_pointer","create_virtual_pointer_with_output","data","destroy","eq","eq","equivalent","fmt","fmt","fmt","from","from","from","from_id","hash","id","inert","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","send_constructor","send_request","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_request","output","seat","seat","Axis","AxisDiscrete","AxisSource","AxisStop","Button","Destroy","Error","Event","Frame","InvalidAxis","InvalidAxisSource","Motion","MotionAbsolute","REQ_AXIS_DISCRETE_OPCODE","REQ_AXIS_DISCRETE_SINCE","REQ_AXIS_OPCODE","REQ_AXIS_SINCE","REQ_AXIS_SOURCE_OPCODE","REQ_AXIS_SOURCE_SINCE","REQ_AXIS_STOP_OPCODE","REQ_AXIS_STOP_SINCE","REQ_BUTTON_OPCODE","REQ_BUTTON_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_FRAME_OPCODE","REQ_FRAME_SINCE","REQ_MOTION_ABSOLUTE_OPCODE","REQ_MOTION_ABSOLUTE_SINCE","REQ_MOTION_OPCODE","REQ_MOTION_SINCE","Request","ZwlrVirtualPointerV1","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","axis","axis_discrete","axis_source","axis_stop","backend","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","button","clone","clone","clone_into","clone_into","cmp","data","destroy","eq","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","frame","from","from","from","from","from_id","hash","hash","id","inert","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","motion","motion_absolute","object_data","opcode","opcode","parse_event","partial_cmp","send_constructor","send_request","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_request","axis","axis","axis","axis_source","button","discrete","dx","dy","state","time","time","time","time","time","time","value","value","x","x_extent","y","y_extent"],"q":[[0,"wayland_protocols_wlr"],[10,"wayland_protocols_wlr::data_control"],[11,"wayland_protocols_wlr::data_control::v1"],[12,"wayland_protocols_wlr::data_control::v1::client"],[17,"wayland_protocols_wlr::data_control::v1::client::__interfaces"],[32,"wayland_protocols_wlr::data_control::v1::client::zwlr_data_control_device_v1"],[144,"wayland_protocols_wlr::data_control::v1::client::zwlr_data_control_device_v1::Event"],[147,"wayland_protocols_wlr::data_control::v1::client::zwlr_data_control_device_v1::Request"],[149,"wayland_protocols_wlr::data_control::v1::client::zwlr_data_control_manager_v1"],[225,"wayland_protocols_wlr::data_control::v1::client::zwlr_data_control_manager_v1::Request"],[226,"wayland_protocols_wlr::data_control::v1::client::zwlr_data_control_offer_v1"],[301,"wayland_protocols_wlr::data_control::v1::client::zwlr_data_control_offer_v1::Event"],[302,"wayland_protocols_wlr::data_control::v1::client::zwlr_data_control_offer_v1::Request"],[304,"wayland_protocols_wlr::data_control::v1::client::zwlr_data_control_source_v1"],[406,"wayland_protocols_wlr::data_control::v1::client::zwlr_data_control_source_v1::Event"],[408,"wayland_protocols_wlr::data_control::v1::client::zwlr_data_control_source_v1::Request"],[409,"wayland_protocols_wlr::export_dmabuf"],[410,"wayland_protocols_wlr::export_dmabuf::v1"],[411,"wayland_protocols_wlr::export_dmabuf::v1::client"],[414,"wayland_protocols_wlr::export_dmabuf::v1::client::__interfaces"],[421,"wayland_protocols_wlr::export_dmabuf::v1::client::zwlr_export_dmabuf_frame_v1"],[551,"wayland_protocols_wlr::export_dmabuf::v1::client::zwlr_export_dmabuf_frame_v1::Event"],[571,"wayland_protocols_wlr::export_dmabuf::v1::client::zwlr_export_dmabuf_manager_v1"],[643,"wayland_protocols_wlr::export_dmabuf::v1::client::zwlr_export_dmabuf_manager_v1::Request"],[645,"wayland_protocols_wlr::foreign_toplevel"],[646,"wayland_protocols_wlr::foreign_toplevel::v1"],[647,"wayland_protocols_wlr::foreign_toplevel::v1::client"],[650,"wayland_protocols_wlr::foreign_toplevel::v1::client::__interfaces"],[658,"wayland_protocols_wlr::foreign_toplevel::v1::client::zwlr_foreign_toplevel_handle_v1"],[837,"wayland_protocols_wlr::foreign_toplevel::v1::client::zwlr_foreign_toplevel_handle_v1::Event"],[843,"wayland_protocols_wlr::foreign_toplevel::v1::client::zwlr_foreign_toplevel_handle_v1::Request"],[850,"wayland_protocols_wlr::foreign_toplevel::v1::client::zwlr_foreign_toplevel_manager_v1"],[924,"wayland_protocols_wlr::foreign_toplevel::v1::client::zwlr_foreign_toplevel_manager_v1::Event"],[925,"wayland_protocols_wlr::gamma_control"],[926,"wayland_protocols_wlr::gamma_control::v1"],[927,"wayland_protocols_wlr::gamma_control::v1::client"],[930,"wayland_protocols_wlr::gamma_control::v1::client::__interfaces"],[937,"wayland_protocols_wlr::gamma_control::v1::client::zwlr_gamma_control_manager_v1"],[1009,"wayland_protocols_wlr::gamma_control::v1::client::zwlr_gamma_control_manager_v1::Request"],[1010,"wayland_protocols_wlr::gamma_control::v1::client::zwlr_gamma_control_v1"],[1112,"wayland_protocols_wlr::gamma_control::v1::client::zwlr_gamma_control_v1::Event"],[1113,"wayland_protocols_wlr::gamma_control::v1::client::zwlr_gamma_control_v1::Request"],[1114,"wayland_protocols_wlr::input_inhibitor"],[1115,"wayland_protocols_wlr::input_inhibitor::v1"],[1116,"wayland_protocols_wlr::input_inhibitor::v1::client"],[1119,"wayland_protocols_wlr::input_inhibitor::v1::client::__interfaces"],[1125,"wayland_protocols_wlr::input_inhibitor::v1::client::zwlr_input_inhibit_manager_v1"],[1217,"wayland_protocols_wlr::input_inhibitor::v1::client::zwlr_input_inhibitor_v1"],[1285,"wayland_protocols_wlr::layer_shell"],[1286,"wayland_protocols_wlr::layer_shell::v1"],[1287,"wayland_protocols_wlr::layer_shell::v1::client"],[1290,"wayland_protocols_wlr::layer_shell::v1::client::__interfaces"],[1297,"wayland_protocols_wlr::layer_shell::v1::client::zwlr_layer_shell_v1"],[1422,"wayland_protocols_wlr::layer_shell::v1::client::zwlr_layer_shell_v1::Request"],[1426,"wayland_protocols_wlr::layer_shell::v1::client::zwlr_layer_surface_v1"],[1672,"wayland_protocols_wlr::layer_shell::v1::client::zwlr_layer_surface_v1::Event"],[1675,"wayland_protocols_wlr::layer_shell::v1::client::zwlr_layer_surface_v1::Request"],[1687,"wayland_protocols_wlr::output_management"],[1688,"wayland_protocols_wlr::output_management::v1"],[1689,"wayland_protocols_wlr::output_management::v1::client"],[1695,"wayland_protocols_wlr::output_management::v1::client::__interfaces"],[1714,"wayland_protocols_wlr::output_management::v1::client::zwlr_output_configuration_head_v1"],[1831,"wayland_protocols_wlr::output_management::v1::client::zwlr_output_configuration_head_v1::Request"],[1840,"wayland_protocols_wlr::output_management::v1::client::zwlr_output_configuration_v1"],[1959,"wayland_protocols_wlr::output_management::v1::client::zwlr_output_configuration_v1::Request"],[1961,"wayland_protocols_wlr::output_management::v1::client::zwlr_output_head_v1"],[2096,"wayland_protocols_wlr::output_management::v1::client::zwlr_output_head_v1::Event"],[2111,"wayland_protocols_wlr::output_management::v1::client::zwlr_output_manager_v1"],[2192,"wayland_protocols_wlr::output_management::v1::client::zwlr_output_manager_v1::Event"],[2194,"wayland_protocols_wlr::output_management::v1::client::zwlr_output_manager_v1::Request"],[2195,"wayland_protocols_wlr::output_management::v1::client::zwlr_output_mode_v1"],[2275,"wayland_protocols_wlr::output_management::v1::client::zwlr_output_mode_v1::Event"],[2278,"wayland_protocols_wlr::output_power_management"],[2279,"wayland_protocols_wlr::output_power_management::v1"],[2280,"wayland_protocols_wlr::output_power_management::v1::client"],[2283,"wayland_protocols_wlr::output_power_management::v1::client::__interfaces"],[2290,"wayland_protocols_wlr::output_power_management::v1::client::zwlr_output_power_manager_v1"],[2362,"wayland_protocols_wlr::output_power_management::v1::client::zwlr_output_power_manager_v1::Request"],[2363,"wayland_protocols_wlr::output_power_management::v1::client::zwlr_output_power_v1"],[2490,"wayland_protocols_wlr::output_power_management::v1::client::zwlr_output_power_v1::Event"],[2491,"wayland_protocols_wlr::output_power_management::v1::client::zwlr_output_power_v1::Request"],[2492,"wayland_protocols_wlr::screencopy"],[2493,"wayland_protocols_wlr::screencopy::v1"],[2494,"wayland_protocols_wlr::screencopy::v1::client"],[2497,"wayland_protocols_wlr::screencopy::v1::client::__interfaces"],[2504,"wayland_protocols_wlr::screencopy::v1::client::zwlr_screencopy_frame_v1"],[2710,"wayland_protocols_wlr::screencopy::v1::client::zwlr_screencopy_frame_v1::Event"],[2725,"wayland_protocols_wlr::screencopy::v1::client::zwlr_screencopy_frame_v1::Request"],[2727,"wayland_protocols_wlr::screencopy::v1::client::zwlr_screencopy_manager_v1"],[2803,"wayland_protocols_wlr::screencopy::v1::client::zwlr_screencopy_manager_v1::Request"],[2811,"wayland_protocols_wlr::virtual_pointer"],[2812,"wayland_protocols_wlr::virtual_pointer::v1"],[2813,"wayland_protocols_wlr::virtual_pointer::v1::client"],[2816,"wayland_protocols_wlr::virtual_pointer::v1::client::__interfaces"],[2822,"wayland_protocols_wlr::virtual_pointer::v1::client::zwlr_virtual_pointer_manager_v1"],[2898,"wayland_protocols_wlr::virtual_pointer::v1::client::zwlr_virtual_pointer_manager_v1::Request"],[2901,"wayland_protocols_wlr::virtual_pointer::v1::client::zwlr_virtual_pointer_v1"],[3026,"wayland_protocols_wlr::virtual_pointer::v1::client::zwlr_virtual_pointer_v1::Request"]],"d":["Control data devices, particularly the clipboard.","A protocol for low overhead screen content capturing","List and control opened apps","Manage gamma tables of outputs.","Inhibits input events to other clients","Layered shell protocol","Output management protocol","Output power management protocol","Screen content capturing on client buffers","Virtual pointer protocol","","Client-side API of this protocol","","manage a data device for a seat","manager to control data devices","offer to transfer data","offer to transfer data","","","","","","","","","","","","","","","","introduce a new wlr_data_control_offer","destroy this data device","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","","this data control is no longer valid","advertise new primary selection","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","advertise new selection","copy data to the primary selection","copy data to the selection","source given to set_selection or set_primary_selection was …","manage a data device for a seat","","","","","","","","","","","","","","","","","","","","","","","","","destroy this data device","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","copy data to the primary selection","copy data to the selection","","","","","","","","","","","","","","","","","","","","","","","create a new data source","destroy the manager","","get a data device for a seat","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","manager to control data devices","","","","","","","","","","","","","","","","","create a new data source","","destroy the manager","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","get a data device for a seat","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","destroy this offer","The wire opcode for this event","The minimal object version supporting this event","","advertise offered MIME type","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","request that the data is transferred","","offer to transfer data","","","","","","","","","","","","","","","","","","destroy this offer","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","request that the data is transferred","","","","","","","","","","","","","","","offered MIME type","file descriptor for data transfer","MIME type desired by receiver","selection was cancelled","destroy this source","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","","offer sent after wlr_data_control_device.set_selection","add an offered MIME type","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","send the data","offer to transfer data","","","","","","","","","","","","","","","","","","","","","","","","","destroy this source","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","add an offered MIME type","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","","","","file descriptor for the data","MIME type for the data","MIME type offered by the data source","","Client-side API of this protocol","","a DMA-BUF frame","manager to inform clients and begin capturing","","","","","","","","indicates the frame is no longer valid","cancel reason","delete this object, used or not","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","frame flags","a frame description","an object description","fatal error, source will not produce frames","The wire opcode for this request","The minimal object version supporting this request","indicates frame is available for reading","","temporary error, source will produce more frames","temporary error, source will produce more frames","clients should copy frame before processing","a DMA-BUF frame","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","delete this object, used or not","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","","","","","","","","","","flags which indicate properties (invert, interlacing), has …","fd of the current object","indicates special frame features","format of the frame (DRM_FORMAT_*)","frame height in pixels","index of the current object","drm format modifier, high","drm format modifier, low","indicates how many objects (FDs) the frame has (max 4)","starting point for the data in the object’s fd","crop offset for the x axis","crop offset for the y axis","index of the plane the data in the object applies to","indicates a reason for cancelling this frame capture","size in bytes for the current object","line size in bytes","nanoseconds part of the timestamp","high 32 bits of the seconds part of the timestamp","low 32 bits of the seconds part of the timestamp","frame width in pixels","capture a frame from an output","destroy the manager","","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","manager to inform clients and begin capturing","","","","","","","","","","","","","","","capture a frame from an output","","","","destroy the manager","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","include custom client hardware cursor on top of the frame","","Client-side API of this protocol","","an opened toplevel","list and control opened apps","","","","","","","","","activate the toplevel","the toplevel is active","app-id change","request that the toplevel be closed","this toplevel has been destroyed","destroy the zwlr_foreign_toplevel_handle_v1 object","all information about the toplevel has been sent","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","","the toplevel is fullscreen","the provided rectangle is invalid","the toplevel is maximized","the toplevel is minimized","toplevel entered an output","toplevel left an output","parent change","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","request that the toplevel be fullscreened","requests that the toplevel be maximized","requests that the toplevel be minimized","the rectangle which represents the toplevel","types of states on the toplevel","the toplevel state changed","title change","request that the toplevel be unfullscreened","requests that the toplevel be unmaximized","requests that the toplevel be unminimized","an opened toplevel","activate the toplevel","","","","","","","","","","","","","","","","","","","","","","","","","","","","","request that the toplevel be closed","","","","destroy the zwlr_foreign_toplevel_handle_v1 object","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","request that the toplevel be fullscreened","requests that the toplevel be maximized","requests that the toplevel be minimized","the rectangle which represents the toplevel","","","","","","","","","","","","","","","","","","","","","request that the toplevel be unfullscreened","requests that the toplevel be unmaximized","requests that the toplevel be unminimized","","","","","","","","","","","","","","","","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","the compositor has finished with the toplevel manager","The wire opcode for this request","The minimal object version supporting this request","","stop sending events","a toplevel has been created","list and control opened apps","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","stop sending events","","","","","","","","","","","","","","","Client-side API of this protocol","","manager to create per-output gamma controls","adjust gamma tables for an output","","","","","","","","destroy the manager","","get a gamma control for an output","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","manager to create per-output gamma controls","","","","","","","","","","","","","","","","","","destroy the manager","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","get a gamma control for an output","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","destroy this control","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","","object no longer valid","size of gamma ramps","invalid gamma tables","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","set the gamma table","adjust gamma tables for an output","","","","","","","","","","","","","","","","","","","","","","","","","destroy this control","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","set the gamma table","","","","","","","","","","","","","","","","","","number of elements in a ramp","gamma table file descriptor","","Client-side API of this protocol","","inhibits input events to other clients","inhibits input to other clients","","","","","","","an input inhibitor is already in use on the compositor","","","inhibit input to other clients","The wire opcode for this request","The minimal object version supporting this request","","inhibits input events to other clients","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","inhibit input to other clients","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","","","","destroy the input inhibitor object","","The wire opcode for this request","The minimal object version supporting this request","","inhibits input to other clients","","","","","","","","","","","","","","","","","","destroy the input inhibitor object","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","Client-side API of this protocol","","create surfaces that are layers of the desktop","layer metadata interface","","","","","","","","wl_surface has a buffer attached or committed","","","destroy the layer_shell object","","","create a layer_surface from a surface","layer value is invalid","available layers for surfaces","","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","wl_surface has another role","","create surfaces that are layers of the desktop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","destroy the layer_shell object","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","create a layer_surface from a surface","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","","","","","","","","","","layer to add this surface to","namespace for the layer surface","","","ack a configure event","","the bottom edge of the anchor rectangle","surface should be closed","suggest a surface change","destroy the layer_surface","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","","request exclusive keyboard focus","assign this layer_surface as an xdg_popup parent","anchor bitfield is invalid","keyboard interactivity is invalid","size is invalid","provided surface state is invalid","types of keyboard interaction possible for a layer shell …","the left edge of the anchor rectangle","no keyboard focus is possible","request regular keyboard focus semantics","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","the right edge of the anchor rectangle","configures the anchor point of the surface","configures the exclusive geometry of this surface","requests keyboard events","change the layer of the surface","sets a margin from the anchor point","sets the size of the surface","the top edge of the anchor rectangle","layer metadata interface","ack a configure event","Get a flags value with all known bits set.","Get a flags value with all known bits set.","","","","","","","","","","","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","","destroy the layer_surface","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value exactly.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","assign this layer_surface as an xdg_popup parent","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","Get the opcode number of this message","Get the opcode number of this message","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","configures the anchor point of the surface","configures the exclusive geometry of this surface","requests keyboard events","change the layer of the surface","sets a margin from the anchor point","sets the size of the surface","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","","","","","","","","","layer to move this surface to","","","","the serial from the configure event","","","","","Client-side API of this protocol","","head configuration","output configuration","output device","output device configuration manager","output mode","","","","","","","","","","","","","","","","","","","","property has already been set","","","invalid enum value used in the set_adaptive_sync request","mode is invalid","mode doesn’t belong to head","scale negative or zero","transform value outside enum","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","enable/disable adaptive sync","set a custom mode","set the mode","set the position","set the scale","set the transform","head configuration","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","enable/disable adaptive sync","set a custom mode","set the mode","set the position","set the scale","set the transform","","","","","","","","","","","","","","","","","","height of the mode in hardware units","","vertical refresh rate in mHz or zero","","","","width of the mode in hardware units","x position in the global compositor space","y position in the global compositor space","head has been configured twice","request sent after configuration has been applied or tested","apply the configuration","configuration has been cancelled","destroy the output configuration","disable a head","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","enable and configure a head","","","configuration changes failed","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","configuration changes succeeded","test the configuration","head has not been configured","output configuration","apply the configuration","","","","","","","","","","","","","","","","","","","","","","","","","destroy the output configuration","disable a head","enable and configure a head","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","test the configuration","","","","","","","","","","","","","","","","","","the head to be enabled","the head to be disabled","current adaptive sync state","","current mode","head description","adaptive sync is disabled","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","adaptive sync is enabled","head is enabled or disabled","","the head has disappeared","head manufacturer","introduce a mode","head model","head name","head physical size","current position","The wire opcode for this request","The minimal object version supporting this request","destroy the head object","","current scale","head serial number","current transformation","output device","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","destroy the head object","","","","","","","","","","","","","","","","","","","","","zero if disabled, non-zero if enabled","height in millimeters of the output","","","","","","","","","","width in millimeters of the output","x position within the global compositor space","y position within the global compositor space","create a new output configuration object","sent all information about current configuration","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","the compositor has finished with the manager","introduce a new head","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","stop sending events","output device configuration manager","","","","","","","","","","","","","","","","","create a new output configuration object","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","stop sending events","","","","","","","","","","","","","","current configuration serial","","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","the mode has disappeared","mode is preferred","The wire opcode for this request","The minimal object version supporting this request","mode refresh rate","destroy the mode object","","mode size","output mode","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","destroy the mode object","","","","","","","","","","","","","","","height of the mode in hardware units","vertical refresh rate in mHz","width of the mode in hardware units","","Client-side API of this protocol","","manager to create per-output power management","adjust power management mode for an output","","","","","","","","destroy the manager","","get a power management for an output","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","manager to create per-output power management","","","","","","","","","","","","","","","","","","destroy the manager","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","get a power management for an output","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","destroy this power management","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","","object no longer valid","nonexistent power save mode","","Report a power management mode change","Output is turned off.","Output is turned on, no power saving","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","Set an outputs power save mode","adjust power management mode for an output","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","destroy this power management","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","Set an outputs power save mode","","","","","","","","","","","","","","","","","","","","","","","the output’s new power management mode","the power save mode to set","","Client-side API of this protocol","","a frame ready for copy","manager to inform clients and begin capturing","","","","","","","","the object has already been used to copy a wl_buffer","wl_shm buffer information","all buffer types reported","copy the frame","copy the frame when it’s damaged","carries the coordinates of the damaged region","delete this object, used or not","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","","frame copy failed","","frame flags","buffer attributes are invalid","linux-dmabuf buffer information","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","indicates frame is available for reading","","contents are y-inverted","a frame ready for copy","Get a flags value with all known bits set.","Get a flags value with all known bits set.","","","","","","","","","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","copy the frame","copy the frame when it’s damaged","","delete this object, used or not","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value exactly.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","Get the opcode number of this message","Get the opcode number of this message","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","","frame flags","buffer format","fourcc pixel format","buffer height","current height","buffer height","buffer stride","nanoseconds part of the timestamp","high 32 bits of the seconds part of the timestamp","low 32 bits of the seconds part of the timestamp","buffer width","current width","buffer width","damaged x coordinates","damaged y coordinates","","","capture an output","capture an output’s region","destroy the manager","","The wire opcode for this request","The wire opcode for this request","The minimal object version supporting this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","manager to inform clients and begin capturing","","","","","","","","","","","","","","","capture an output","capture an output’s region","","","","destroy the manager","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","composite cursor onto the frame","composite cursor onto the frame","","","","","Client-side API of this protocol","","virtual pointer manager","virtual pointer","","","","","","","Create a new virtual pointer","Create a new virtual pointer","destroy the virtual pointer manager","","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","virtual pointer manager","","","","","","","","","","","","","","","","","Create a new virtual pointer","Create a new virtual pointer","","destroy the virtual pointer manager","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","axis event","axis click event","axis source event","axis stop event","button event","destroy the virtual pointer object","","","end of a pointer event sequence","client sent invalid axis enumeration value","client sent invalid axis source enumeration value","pointer relative motion event","pointer absolute motion event","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","virtual pointer","","","","","","","","","axis event","axis click event","axis source event","axis stop event","","","","","","","","","","","button event","","","","","","","destroy the virtual pointer object","","","","","","","","","","end of a pointer event sequence","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","pointer relative motion event","pointer absolute motion event","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","","","","axis type","the axis stopped with this event","axis type","source of the axis event","button that produced the event","number of steps","displacement on the x-axis","displacement on the y-axis","physical state of the button","timestamp with millisecond granularity","timestamp with millisecond granularity","timestamp with millisecond granularity","timestamp with millisecond granularity","timestamp with millisecond granularity","timestamp with millisecond granularity","length of vector in touchpad coordinates","length of vector in touchpad coordinates","position on the x-axis","extent of the x-axis","position on the y-axis","extent of the y-axis"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,14,0,0,0,0,0,0,0,0,0,0,15,15,0,0,0,0,0,0,0,15,14,14,5,0,5,14,15,2,5,14,15,2,2,5,14,15,2,2,5,14,15,2,5,2,5,2,5,2,2,5,2,2,5,2,5,14,15,2,5,14,15,2,2,5,2,2,2,2,5,14,15,2,5,14,15,2,5,14,15,2,5,14,15,2,2,14,15,2,5,2,2,2,2,5,2,5,5,14,15,2,5,14,15,2,5,14,15,2,2,2,144,145,146,147,148,37,37,0,37,0,0,0,0,0,0,0,0,37,38,34,37,38,34,34,37,38,34,34,37,38,34,34,34,34,34,34,34,34,34,37,38,34,37,38,34,34,34,34,34,34,34,37,38,34,37,38,34,37,38,34,37,38,34,34,37,38,34,34,34,34,37,38,34,37,38,34,37,38,34,34,34,149,41,0,0,0,42,0,0,0,0,41,0,0,41,42,40,41,42,40,40,41,42,40,40,41,42,40,40,40,40,40,40,40,40,41,42,40,41,42,40,40,40,40,40,40,41,42,40,41,42,40,41,42,40,41,42,40,40,41,42,40,40,40,40,40,41,42,40,41,42,40,41,42,40,40,40,150,151,151,47,46,0,0,0,0,0,0,45,46,0,0,0,0,0,47,0,45,46,47,31,45,46,47,31,31,45,46,47,31,31,45,46,47,31,45,31,45,31,45,31,31,45,31,31,45,31,45,46,47,31,45,46,47,31,31,45,31,31,31,31,45,46,47,31,45,46,47,31,45,46,47,31,45,46,47,31,31,31,46,47,31,45,31,31,45,31,45,45,46,47,31,45,46,47,31,45,46,47,31,31,31,152,152,153,0,0,0,0,0,0,0,0,0,0,0,0,52,0,51,0,0,0,0,0,0,0,0,0,0,52,52,50,0,0,52,0,50,50,49,0,49,50,51,52,48,49,50,51,52,48,48,49,50,51,52,48,48,49,50,51,52,48,49,50,48,49,50,48,49,50,48,48,49,50,48,48,49,50,48,49,50,51,52,48,49,50,51,52,48,48,49,50,48,48,48,48,49,50,51,52,48,49,50,51,52,48,49,50,51,52,48,49,50,51,52,48,48,51,52,48,49,50,48,48,49,50,48,49,49,50,50,51,52,48,49,50,51,52,48,49,50,51,52,48,48,48,154,155,154,154,154,155,154,154,154,155,154,154,155,156,155,155,157,157,157,154,56,56,0,0,0,0,0,0,0,56,57,53,56,57,53,53,56,57,53,53,56,57,53,53,53,53,53,53,53,53,53,56,57,53,56,57,53,53,53,53,53,53,56,57,53,56,57,53,56,57,53,56,57,53,53,56,57,53,53,53,53,56,57,53,56,57,53,56,57,53,53,53,158,158,0,0,0,0,0,0,0,0,0,0,0,0,0,61,59,62,61,62,61,62,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,59,60,59,59,62,62,62,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,61,61,61,61,0,62,62,61,61,61,0,58,59,60,61,62,58,59,60,61,62,58,58,59,60,61,62,58,58,59,60,61,62,58,59,60,58,59,60,58,58,59,60,58,58,59,60,58,58,59,60,58,59,60,61,62,58,59,60,61,62,58,58,59,60,58,58,58,58,59,60,61,62,58,59,60,61,62,58,59,60,61,62,58,59,60,61,62,58,58,61,62,58,59,60,58,58,58,58,58,58,59,60,58,59,59,60,60,61,62,58,59,60,61,62,58,59,60,61,62,58,58,58,58,58,58,159,160,161,162,163,164,165,166,167,165,165,165,165,0,0,0,0,0,66,0,0,0,65,66,0,65,66,64,65,66,64,64,65,66,64,64,65,66,64,64,64,64,64,64,64,65,66,64,65,66,64,64,64,64,64,64,65,66,64,65,66,64,65,66,64,65,66,64,64,65,66,64,64,64,64,64,65,66,64,65,66,64,65,66,64,64,64,168,0,0,0,0,0,0,0,0,0,0,0,0,68,0,68,0,0,0,0,0,0,68,69,67,68,69,67,67,68,69,67,67,68,69,67,67,67,67,67,67,67,67,68,69,67,68,69,67,67,67,67,67,67,67,68,69,67,68,69,67,68,69,67,68,69,67,67,68,69,67,67,67,67,68,69,67,68,69,67,68,69,67,67,67,169,72,0,0,0,0,0,0,73,73,71,0,0,0,0,0,72,0,71,72,73,70,71,72,73,70,70,71,72,73,70,70,71,72,73,70,71,70,71,70,71,70,70,71,70,70,71,70,71,72,73,70,71,72,73,70,70,71,70,70,70,70,71,72,73,70,71,72,73,70,71,72,73,70,71,72,73,70,70,72,73,70,71,70,70,70,71,70,71,71,72,73,70,71,72,73,70,71,72,73,70,70,70,170,171,0,0,0,0,0,0,0,0,0,0,0,75,0,0,76,0,0,0,0,75,76,77,74,75,76,77,74,74,75,76,77,74,74,75,76,77,74,75,74,75,74,75,74,75,74,74,75,74,75,76,77,74,75,76,77,74,74,74,75,74,74,74,74,75,76,77,74,75,76,77,74,75,76,77,74,75,76,77,74,74,76,77,74,75,74,74,75,74,75,75,76,77,74,75,76,77,74,75,76,77,74,74,74,79,0,0,0,0,0,79,80,78,79,80,78,78,79,80,78,78,79,80,78,78,78,78,78,78,78,78,79,80,78,79,80,78,78,78,78,78,78,79,80,78,79,80,78,79,80,78,79,80,78,78,79,80,78,78,78,78,79,80,78,79,80,78,79,80,78,78,78,0,0,0,0,0,0,0,0,0,0,0,0,82,83,83,84,0,0,84,82,0,83,0,0,0,0,0,82,83,0,82,83,84,85,81,82,83,84,85,81,81,82,83,84,85,81,81,82,83,84,85,81,82,83,81,82,83,81,82,83,81,81,82,83,81,81,82,83,81,82,83,84,85,81,82,83,84,85,81,81,81,82,83,81,81,81,81,82,83,84,85,81,82,83,84,85,81,82,83,84,85,81,82,83,84,85,81,81,84,85,81,82,83,81,81,82,83,81,82,82,83,83,84,85,81,82,83,84,85,81,82,83,84,85,81,81,81,172,172,172,172,91,0,87,92,92,91,0,0,0,0,0,0,88,91,89,89,89,89,0,87,88,88,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,87,91,91,91,91,91,91,87,0,86,87,87,88,89,87,91,92,86,88,89,87,91,92,86,86,87,87,87,87,87,87,87,87,87,88,89,87,91,92,86,86,88,89,87,91,92,86,88,89,87,86,88,89,87,86,88,89,87,87,87,87,86,86,87,87,87,87,88,89,87,86,86,88,89,87,86,87,88,89,87,87,87,87,87,91,92,86,88,89,87,91,92,86,87,87,87,87,87,87,87,86,87,87,87,86,88,89,87,86,86,86,87,87,86,87,87,87,87,88,89,87,91,92,86,88,89,87,91,92,86,88,89,87,91,92,86,88,89,87,91,92,86,87,87,87,87,87,87,87,87,87,87,86,91,92,86,88,89,87,87,86,86,87,87,86,86,86,86,86,86,87,87,87,87,88,89,87,86,87,87,88,88,89,89,87,87,91,92,86,88,89,87,91,92,86,88,89,87,91,92,86,87,87,86,86,173,173,173,174,175,176,177,178,175,179,175,180,175,176,181,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,98,0,0,98,98,98,98,98,0,0,0,0,0,0,0,0,0,0,0,0,0,99,99,99,99,99,99,0,98,99,100,97,98,99,100,97,97,98,99,100,97,97,98,99,100,97,98,97,98,97,98,97,98,97,97,98,97,98,99,100,97,98,99,100,97,97,98,97,97,97,97,98,99,100,97,98,99,100,97,98,99,100,97,98,99,100,97,97,99,100,97,98,97,97,97,97,97,97,97,97,98,97,98,98,99,100,97,98,99,100,97,98,99,100,97,97,97,182,183,182,184,185,186,182,187,187,106,106,108,109,108,108,0,0,0,0,0,0,108,0,0,109,0,0,0,0,0,0,0,0,0,0,0,109,108,106,0,105,106,108,109,105,106,108,109,105,105,106,108,109,105,105,106,108,109,105,106,105,106,105,106,105,105,105,105,106,105,105,106,105,106,108,109,105,106,108,109,105,105,106,105,105,105,105,106,108,109,105,106,108,109,105,106,108,109,105,106,108,109,105,105,108,109,105,106,105,105,105,106,105,106,106,108,109,105,106,108,109,105,106,108,109,105,105,105,188,189,111,0,111,111,101,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,101,111,0,111,111,111,111,111,111,111,0,0,110,0,111,111,111,0,101,110,111,107,101,110,111,107,107,101,110,111,107,107,101,110,111,107,101,107,101,107,101,107,101,107,107,101,107,101,110,111,107,101,110,111,107,107,101,107,107,107,107,101,110,111,107,101,110,111,107,101,110,111,107,101,110,111,107,107,110,111,107,101,107,107,107,101,107,101,101,110,111,107,101,110,111,107,101,110,111,107,107,107,190,191,192,193,194,195,196,197,198,199,200,201,192,202,202,113,114,0,0,0,0,0,0,0,114,114,0,0,0,0,0,113,0,113,114,112,113,114,112,112,113,114,112,112,113,114,112,112,112,112,112,112,112,112,113,114,112,113,114,112,112,112,112,112,112,113,114,112,113,114,112,113,114,112,113,114,112,112,113,114,112,112,112,112,112,113,114,112,113,114,112,113,114,112,112,112,203,204,205,0,0,0,0,0,0,0,0,0,116,116,0,0,116,115,0,116,0,115,116,102,115,116,102,102,115,116,102,102,115,116,102,102,102,102,102,102,102,115,116,102,115,116,102,102,102,102,102,102,115,116,102,115,116,102,115,116,102,115,116,102,102,115,116,102,102,102,102,102,115,116,102,115,116,102,115,116,102,102,102,206,207,206,0,0,0,0,0,0,0,0,0,0,0,0,118,0,118,0,0,0,0,0,0,118,119,117,118,119,117,117,118,119,117,117,118,119,117,117,117,117,117,117,117,117,118,119,117,118,119,117,117,117,117,117,117,117,118,119,117,118,119,117,118,119,117,118,119,117,117,118,119,117,117,117,117,118,119,117,118,119,117,118,119,117,117,117,208,123,0,0,0,0,0,0,124,122,0,124,121,121,0,0,0,0,0,123,0,121,122,123,124,120,121,122,123,124,120,120,121,122,123,124,120,120,121,122,123,124,120,121,122,120,121,122,120,121,122,120,120,121,122,120,120,121,122,120,121,122,123,124,120,121,122,123,124,120,120,121,122,120,120,120,120,121,122,123,124,120,121,122,123,124,120,121,122,123,124,120,121,122,123,124,120,120,123,124,120,121,122,120,120,120,121,122,120,121,121,122,122,123,124,120,121,122,123,124,120,121,122,123,124,120,120,120,209,210,0,0,0,0,0,0,0,0,0,0,0,0,127,130,130,129,129,130,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,130,127,130,0,0,0,0,0,0,130,0,125,0,125,125,127,125,129,130,126,127,125,129,130,126,126,125,125,125,125,125,125,125,125,125,127,125,129,130,126,126,127,125,129,130,126,127,125,126,127,125,126,127,125,125,125,125,126,126,126,126,125,125,125,125,127,125,126,126,127,125,126,125,127,125,125,125,125,125,129,130,126,127,125,129,130,126,125,125,125,125,125,125,125,126,125,125,125,127,125,126,126,126,125,125,126,125,125,125,125,127,125,129,130,126,127,125,129,130,126,127,125,129,130,126,127,125,129,130,126,125,125,125,125,125,125,125,125,125,125,126,129,130,126,127,125,125,126,126,125,125,125,125,125,125,127,125,126,125,125,127,127,125,125,129,130,126,127,125,129,130,126,127,125,129,130,126,125,125,126,126,211,212,213,212,214,213,212,215,215,215,212,214,213,214,214,216,217,132,132,132,0,0,0,0,0,0,0,0,0,132,133,131,132,133,131,131,132,133,131,131,132,133,131,131,131,131,131,131,131,131,131,131,132,133,131,132,133,131,131,131,131,131,131,132,133,131,132,133,131,132,133,131,132,133,131,131,132,133,131,131,131,131,132,133,131,132,133,131,132,133,131,131,131,218,219,218,219,218,218,218,218,0,0,0,0,0,0,0,0,0,0,0,136,136,136,0,0,0,0,0,0,0,0,0,136,137,134,136,137,134,134,136,137,134,134,136,137,134,134,134,134,134,134,134,134,134,134,136,137,134,136,137,134,134,134,134,134,134,136,137,134,136,137,134,136,137,134,136,137,134,134,136,137,134,134,134,134,136,137,134,136,137,134,136,137,134,134,134,220,221,220,142,142,142,142,142,142,0,0,142,141,141,142,142,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,141,142,143,135,141,142,143,135,135,135,135,135,135,141,142,143,135,135,141,142,143,135,135,141,135,141,135,141,135,135,141,135,135,141,135,141,142,143,135,135,141,142,143,135,135,141,135,135,135,135,141,142,143,135,141,142,143,135,141,142,143,135,141,142,143,135,135,135,135,142,143,135,141,135,135,141,135,141,141,142,143,135,141,142,143,135,141,142,143,135,135,135,222,223,224,225,226,224,227,227,226,227,228,226,222,223,224,222,224,228,228,228,228],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2,3],[[]],[[]],[[]],[[]],[2,4],[[]],[[]],[[]],[[]],[5,5],[2,2],[[]],[[]],[[5,5],6],[2,[[9,[[0,[7,8]]]]]],[2],[[5,5],10],[[2,2],10],[[2,[11,[2]]],10],[[],10],[[],10],[[5,12],13],[[14,12],13],[[15,12],13],[[2,12],13],[[]],[[]],[[]],[[]],[[16,4],[[18,[2,17]]]],[[5,19]],[[2,19]],[2,4],[3,2],[[],20],[[]],[[]],[[]],[[]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[2,[[9,[[23,[25]]]]]],[14,26],[15,26],[[16,[28,[4,27]]],[[18,[29]]]],[[5,5],[[9,[6]]]],[[2,[23,[25]]],[[18,[30,17]]]],[2,[[18,[17]]]],[[2,[9,[31]]]],[[2,[9,[31]]]],[[]],[[]],[32,[[18,[5]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],33],[[],33],[[],33],[[],33],[2,32],[[2,16],[[18,[17]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[34,3],[[]],[[]],[34,4],[[]],[[]],[[]],[[]],[34,34],[[]],[[34,[36,[[35,[31,[0,[7,8]]]]]],[0,[7,8]]],31],[34,[[9,[[0,[7,8]]]]]],[34],[[34,34],10],[[34,[11,[34]]],10],[[],10],[[37,12],13],[[38,12],13],[[34,12],13],[[]],[[]],[[]],[[16,4],[[18,[34,17]]]],[[34,39,[36,[[35,[2,[0,[7,8]]]]]],[0,[7,8]]],2],[[34,19]],[34,4],[3,34],[[],20],[[]],[[]],[[]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[34,[[9,[[23,[25]]]]]],[37,26],[38,26],[[16,[28,[4,27]]],[[18,[29]]]],[[34,[23,[25]]],[[18,[30,17]]]],[34,[[18,[17]]]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],33],[[],33],[[],33],[34,32],[[34,16],[[18,[17]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[40,3],[[]],[[]],[[]],[40,4],[[]],[[]],[[]],[40,40],[[]],[40,[[9,[[0,[7,8]]]]]],[40],[[40,40],10],[[40,[11,[40]]],10],[[],10],[[41,12],13],[[42,12],13],[[40,12],13],[[]],[[]],[[]],[[16,4],[[18,[40,17]]]],[[40,19]],[40,4],[3,40],[[],20],[[]],[[]],[[]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[40,[[9,[[23,[25]]]]]],[41,26],[42,26],[[16,[28,[4,27]]],[[18,[29]]]],[[40,43,44]],[[40,[23,[25]]],[[18,[30,17]]]],[40,[[18,[17]]]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],33],[[],33],[[],33],[40,32],[[40,16],[[18,[17]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[31,3],[[]],[[]],[[]],[[]],[31,4],[[]],[[]],[[]],[[]],[45,45],[31,31],[[]],[[]],[[45,45],6],[31,[[9,[[0,[7,8]]]]]],[31],[[45,45],10],[[31,31],10],[[31,[11,[31]]],10],[[],10],[[],10],[[45,12],13],[[46,12],13],[[47,12],13],[[31,12],13],[[]],[[]],[[]],[[]],[[16,4],[[18,[31,17]]]],[[45,19]],[[31,19]],[31,4],[3,31],[[],20],[[]],[[]],[[]],[[]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[31,[[9,[[23,[25]]]]]],[[31,43]],[46,26],[47,26],[[16,[28,[4,27]]],[[18,[29]]]],[[45,45],[[9,[6]]]],[[31,[23,[25]]],[[18,[30,17]]]],[31,[[18,[17]]]],[[]],[[]],[[],18],[32,[[18,[45]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],33],[[],33],[[],33],[[],33],[31,32],[[31,16],[[18,[17]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[48,3],[[]],[[]],[[]],[[]],[[]],[48,4],[[]],[[]],[[]],[[]],[[]],[49,49],[50,50],[48,48],[[]],[[]],[[]],[[49,49],6],[[50,50],6],[48,[[9,[[0,[7,8]]]]]],[48],[[49,49],10],[[50,50],10],[[48,48],10],[[48,[11,[48]]],10],[[],10],[[],10],[[],10],[[49,12],13],[[50,12],13],[[51,12],13],[[52,12],13],[[48,12],13],[[]],[[]],[[]],[[]],[[]],[[16,4],[[18,[48,17]]]],[[49,19]],[[50,19]],[[48,19]],[48,4],[3,48],[[],20],[[]],[[]],[[]],[[]],[[]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[48,[[9,[[23,[25]]]]]],[51,26],[52,26],[[16,[28,[4,27]]],[[18,[29]]]],[[49,49],[[9,[6]]]],[[50,50],[[9,[6]]]],[[48,[23,[25]]],[[18,[30,17]]]],[48,[[18,[17]]]],[[]],[[]],[[]],[[],18],[32,[[18,[49]]]],[[],18],[32,[[18,[50]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],33],[[],33],[[],33],[[],33],[[],33],[48,32],[[48,16],[[18,[17]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[53,3],[[]],[[]],[[]],[53,4],[[]],[[]],[[]],[[53,54,55,[36,[[35,[48,[0,[7,8]]]]]],[0,[7,8]]],48],[53,53],[[]],[53,[[9,[[0,[7,8]]]]]],[53],[[53,[11,[53]]],10],[[53,53],10],[[],10],[[56,12],13],[[57,12],13],[[53,12],13],[[]],[[]],[[]],[[16,4],[[18,[53,17]]]],[[53,19]],[53,4],[3,53],[[],20],[[]],[[]],[[]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[53,[[9,[[23,[25]]]]]],[56,26],[57,26],[[16,[28,[4,27]]],[[18,[29]]]],[[53,[23,[25]]],[[18,[30,17]]]],[53,[[18,[17]]]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],33],[[],33],[[],33],[53,32],[[53,16],[[18,[17]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[58,39]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[58,3],[[]],[[]],[[]],[[]],[[]],[58,4],[[]],[[]],[[]],[[]],[[]],[59,59],[60,60],[58,58],[[]],[[]],[[]],[58],[[59,59],6],[[60,60],6],[58,[[9,[[0,[7,8]]]]]],[58],[[59,59],10],[[60,60],10],[[58,[11,[58]]],10],[[58,58],10],[[],10],[[],10],[[],10],[[59,12],13],[[60,12],13],[[61,12],13],[[62,12],13],[[58,12],13],[[]],[[]],[[]],[[]],[[]],[[16,4],[[18,[58,17]]]],[[59,19]],[[60,19]],[[58,19]],[58,4],[3,58],[[],20],[[]],[[]],[[]],[[]],[[]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[58,[[9,[[23,[25]]]]]],[61,26],[62,26],[[16,[28,[4,27]]],[[18,[29]]]],[[59,59],[[9,[6]]]],[[60,60],[[9,[6]]]],[[58,[23,[25]]],[[18,[30,17]]]],[58,[[18,[17]]]],[[58,[9,[55]]]],[58],[58],[[58,63,54,54,54,54]],[[]],[[]],[[]],[32,[[18,[59]]]],[[],18],[32,[[18,[60]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],33],[[],33],[[],33],[[],33],[[],33],[58],[58],[58],[58,32],[[58,16],[[18,[17]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[64,3],[[]],[[]],[[]],[64,4],[[]],[[]],[[]],[64,64],[[]],[64,[[9,[[0,[7,8]]]]]],[[64,64],10],[[64,[11,[64]]],10],[[],10],[[65,12],13],[[66,12],13],[[64,12],13],[[]],[[]],[[]],[[16,4],[[18,[64,17]]]],[[64,19]],[64,4],[3,64],[[],20],[[]],[[]],[[]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[64,[[9,[[23,[25]]]]]],[65,26],[66,26],[[16,[28,[4,27]]],[[18,[29]]]],[[64,[23,[25]]],[[18,[30,17]]]],[64,[[18,[17]]]],[64],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],33],[[],33],[[],33],[64,32],[[64,16],[[18,[17]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[67,3],[[]],[[]],[[]],[67,4],[[]],[[]],[[]],[67,67],[[]],[67,[[9,[[0,[7,8]]]]]],[67],[[67,[11,[67]]],10],[[67,67],10],[[],10],[[68,12],13],[[69,12],13],[[67,12],13],[[]],[[]],[[]],[[16,4],[[18,[67,17]]]],[[67,55,[36,[[35,[70,[0,[7,8]]]]]],[0,[7,8]]],70],[[67,19]],[67,4],[3,67],[[],20],[[]],[[]],[[]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[67,[[9,[[23,[25]]]]]],[68,26],[69,26],[[16,[28,[4,27]]],[[18,[29]]]],[[67,[23,[25]]],[[18,[30,17]]]],[67,[[18,[17]]]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],33],[[],33],[[],33],[67,32],[[67,16],[[18,[17]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[70,3],[[]],[[]],[[]],[70,4],[[]],[[]],[[]],[[]],[[]],[71,71],[70,70],[[]],[[]],[[71,71],6],[70,[[9,[[0,[7,8]]]]]],[70],[[71,71],10],[[70,70],10],[[70,[11,[70]]],10],[[],10],[[],10],[[71,12],13],[[72,12],13],[[73,12],13],[[70,12],13],[[]],[[]],[[]],[[]],[[16,4],[[18,[70,17]]]],[[71,19]],[[70,19]],[70,4],[3,70],[[],20],[[]],[[]],[[]],[[]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[70,[[9,[[23,[25]]]]]],[72,26],[73,26],[[16,[28,[4,27]]],[[18,[29]]]],[[71,71],[[9,[6]]]],[[70,[23,[25]]],[[18,[30,17]]]],[70,[[18,[17]]]],[[70,44]],[[]],[[]],[32,[[18,[71]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],33],[[],33],[[],33],[[],33],[70,32],[[70,16],[[18,[17]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[74,3],[[]],[[]],[[]],[74,4],[[]],[[]],[[]],[[]],[[]],[75,75],[74,74],[[]],[[]],[[75,75],6],[74,[[9,[[0,[7,8]]]]]],[[75,75],10],[[74,[11,[74]]],10],[[74,74],10],[[],10],[[],10],[[75,12],13],[[76,12],13],[[77,12],13],[[74,12],13],[[]],[[]],[[]],[[]],[[16,4],[[18,[74,17]]]],[[74,[36,[[35,[78,[0,[7,8]]]]]],[0,[7,8]]],78],[[75,19]],[[74,19]],[74,4],[3,74],[[],20],[[]],[[]],[[]],[[]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[74,[[9,[[23,[25]]]]]],[76,26],[77,26],[[16,[28,[4,27]]],[[18,[29]]]],[[75,75],[[9,[6]]]],[[74,[23,[25]]],[[18,[30,17]]]],[74,[[18,[17]]]],[[]],[[]],[[],18],[32,[[18,[75]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],33],[[],33],[[],33],[[],33],[74,32],[[74,16],[[18,[17]]]],0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[78,3],[[]],[[]],[78,4],[[]],[[]],[[]],[[]],[78,78],[[]],[78,[[9,[[0,[7,8]]]]]],[78],[[78,78],10],[[78,[11,[78]]],10],[[],10],[[79,12],13],[[80,12],13],[[78,12],13],[[]],[[]],[[]],[[16,4],[[18,[78,17]]]],[[78,19]],[78,4],[3,78],[[],20],[[]],[[]],[[]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[78,[[9,[[23,[25]]]]]],[79,26],[80,26],[[16,[28,[4,27]]],[[18,[29]]]],[[78,[23,[25]]],[[18,[30,17]]]],[78,[[18,[17]]]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],33],[[],33],[[],33],[78,32],[[78,16],[[18,[17]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[81,3],[[]],[[]],[[]],[[]],[81,4],[[]],[[]],[[]],[[]],[[]],[[]],[82,82],[83,83],[81,81],[[]],[[]],[[]],[[82,82],6],[[83,83],6],[81,[[9,[[0,[7,8]]]]]],[81],[[82,82],10],[[83,83],10],[[81,81],10],[[81,[11,[81]]],10],[[],10],[[],10],[[],10],[[82,12],13],[[83,12],13],[[84,12],13],[[85,12],13],[[81,12],13],[[]],[[]],[[]],[[]],[[]],[[16,4],[[18,[81,17]]]],[[81,63,[9,[55]],83,43,[36,[[35,[86,[0,[7,8]]]]]],[0,[7,8]]],86],[[82,19]],[[83,19]],[[81,19]],[81,4],[3,81],[[],20],[[]],[[]],[[]],[[]],[[]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[81,[[9,[[23,[25]]]]]],[84,26],[85,26],[[16,[28,[4,27]]],[[18,[29]]]],[[82,82],[[9,[6]]]],[[83,83],[[9,[6]]]],[[81,[23,[25]]],[[18,[30,17]]]],[81,[[18,[17]]]],[[]],[[]],[[]],[[],18],[32,[[18,[82]]]],[[],18],[32,[[18,[83]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],33],[[],33],[[],33],[[],33],[[],33],[81,32],[[81,16],[[18,[17]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[86,32]],[[],87],[[],87],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[86,3],[[87,87],87],[[87,87]],[[87,87],87],[[87,87]],[87,32],[87,32],[87,32],[[87,87],87],[[87,87]],[[]],[[]],[[]],[[]],[[]],[86,4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[88,88],[89,89],[87,87],[86,86],[[]],[[]],[[]],[[]],[[88,88],6],[[89,89],6],[87,87],[87,87],[[87,87],10],[[87,87],10],[86,[[9,[[0,[7,8]]]]]],[86],[[87,87],87],[[87,87],87],[[],87],[[],87],[[88,88],10],[[89,89],10],[[87,87],10],[[86,86],10],[[86,[11,[86]]],10],[[],10],[[],10],[[],10],[[],10],[[87,90]],[[88,12],13],[[89,12],13],[[87,12],13],[[87,12],13],[[87,12],13],[[87,12],13],[[87,12],13],[[91,12],13],[[92,12],13],[[86,12],13],[[]],[[]],[[]],[[]],[[]],[[]],[32,[[9,[87]]]],[32,[[9,[87]]]],[32,87],[32,87],[32,87],[32,87],[32,87],[[16,4],[[18,[86,17]]]],[90,87],[93,[[9,[87]]]],[93,[[9,[87]]]],[[86,94]],[[88,19]],[[89,19]],[[87,19]],[[86,19]],[86,4],[3,86],[[87,87]],[[87,87]],[[],20],[[87,87],87],[[87,87],87],[[87,87],10],[[87,87],10],[[]],[[]],[[]],[[]],[[]],[[]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[87],[87,10],[87,10],[87,10],[87,10],[87,[[95,[87]]]],[87,[[95,[87]]]],[87,[[96,[87]]]],[87,[[96,[87]]]],[87,87],[86,[[9,[[23,[25]]]]]],[91,26],[92,26],[[16,[28,[4,27]]],[[18,[29]]]],[[88,88],[[9,[6]]]],[[89,89],[[9,[6]]]],[[87,87]],[[87,87]],[[86,[23,[25]]],[[18,[30,17]]]],[86,[[18,[17]]]],[[87,87,10]],[[87,87,10]],[[86,87]],[[86,54]],[[86,88]],[[86,83]],[[86,54,54,54,54]],[[86,32,32]],[[87,87],87],[[87,87]],[[87,87],87],[[87,87],87],[[]],[[]],[[]],[[]],[[87,87]],[[87,87]],[[],18],[32,[[18,[88]]]],[32,[[18,[89]]]],[[],18],[32,[[18,[87]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[87,87],87],[[87,87],87],[86,32],[[86,16],[[18,[17]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[97,3],[[]],[[]],[[]],[[]],[97,4],[[]],[[]],[[]],[[]],[98,98],[97,97],[[]],[[]],[[98,98],6],[97,[[9,[[0,[7,8]]]]]],[[98,98],10],[[97,[11,[97]]],10],[[97,97],10],[[],10],[[],10],[[98,12],13],[[99,12],13],[[100,12],13],[[97,12],13],[[]],[[]],[[]],[[]],[[16,4],[[18,[97,17]]]],[[98,19]],[[97,19]],[97,4],[3,97],[[],20],[[]],[[]],[[]],[[]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[97,[[9,[[23,[25]]]]]],[99,26],[100,26],[[16,[28,[4,27]]],[[18,[29]]]],[[98,98],[[9,[6]]]],[[97,[23,[25]]],[[18,[30,17]]]],[97,[[18,[17]]]],[[97,101]],[[97,54,54,54]],[[97,102]],[[97,54,54]],[[97,103]],[[97,104]],[[]],[[]],[[],18],[32,[[18,[98]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],33],[[],33],[[],33],[[],33],[97,32],[[97,16],[[18,[17]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[105],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[105,3],[[]],[[]],[[]],[[]],[105,4],[[]],[[]],[[]],[[]],[106,106],[105,105],[[]],[[]],[[106,106],6],[105,[[9,[[0,[7,8]]]]]],[105],[[105,107]],[[105,107,[36,[[35,[97,[0,[7,8]]]]]],[0,[7,8]]],97],[[106,106],10],[[105,[11,[105]]],10],[[105,105],10],[[],10],[[],10],[[106,12],13],[[108,12],13],[[109,12],13],[[105,12],13],[[]],[[]],[[]],[[]],[[16,4],[[18,[105,17]]]],[[106,19]],[[105,19]],[105,4],[3,105],[[],20],[[]],[[]],[[]],[[]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[105,[[9,[[23,[25]]]]]],[108,26],[109,26],[[16,[28,[4,27]]],[[18,[29]]]],[[106,106],[[9,[6]]]],[[105,[23,[25]]],[[18,[30,17]]]],[105,[[18,[17]]]],[105],[[]],[[]],[32,[[18,[106]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],33],[[],33],[[],33],[[],33],[105,32],[[105,16],[[18,[17]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[107,3],[[]],[[]],[[]],[107,4],[[]],[[]],[[]],[[]],[[]],[101,101],[107,107],[[]],[[]],[[101,101],6],[107,[[9,[[0,[7,8]]]]]],[[101,101],10],[[107,[11,[107]]],10],[[107,107],10],[[],10],[[],10],[[101,12],13],[[110,12],13],[[111,12],13],[[107,12],13],[[]],[[]],[[]],[[]],[[16,4],[[18,[107,17]]]],[[101,19]],[[107,19]],[107,4],[3,107],[[],20],[[]],[[]],[[]],[[]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[107,[[9,[[23,[25]]]]]],[110,26],[111,26],[[16,[28,[4,27]]],[[18,[29]]]],[[101,101],[[9,[6]]]],[107],[[107,[23,[25]]],[[18,[30,17]]]],[107,[[18,[17]]]],[[]],[[]],[[],18],[32,[[18,[101]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],33],[[],33],[[],33],[[],33],[107,32],[[107,16],[[18,[17]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[112,3],[[]],[[]],[112,4],[[]],[[]],[[]],[[]],[112,112],[[]],[[112,32,[36,[[35,[105,[0,[7,8]]]]]],[0,[7,8]]],105],[112,[[9,[[0,[7,8]]]]]],[[112,112],10],[[112,[11,[112]]],10],[[],10],[[113,12],13],[[114,12],13],[[112,12],13],[[]],[[]],[[]],[[16,4],[[18,[112,17]]]],[[112,19]],[112,4],[3,112],[[],20],[[]],[[]],[[]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[112,[[9,[[23,[25]]]]]],[113,26],[114,26],[[16,[28,[4,27]]],[[18,[29]]]],[[112,[23,[25]]],[[18,[30,17]]]],[112,[[18,[17]]]],[112],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],33],[[],33],[[],33],[112,32],[[112,16],[[18,[17]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[102,3],[[]],[[]],[[]],[102,4],[[]],[[]],[[]],[102,102],[[]],[102,[[9,[[0,[7,8]]]]]],[[102,[11,[102]]],10],[[102,102],10],[[],10],[[115,12],13],[[116,12],13],[[102,12],13],[[]],[[]],[[]],[[16,4],[[18,[102,17]]]],[[102,19]],[102,4],[3,102],[[],20],[[]],[[]],[[]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[102,[[9,[[23,[25]]]]]],[115,26],[116,26],[[16,[28,[4,27]]],[[18,[29]]]],[102],[[102,[23,[25]]],[[18,[30,17]]]],[102,[[18,[17]]]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],33],[[],33],[[],33],[102,32],[[102,16],[[18,[17]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[117,3],[[]],[[]],[[]],[117,4],[[]],[[]],[[]],[117,117],[[]],[117,[[9,[[0,[7,8]]]]]],[117],[[117,[11,[117]]],10],[[117,117],10],[[],10],[[118,12],13],[[119,12],13],[[117,12],13],[[]],[[]],[[]],[[16,4],[[18,[117,17]]]],[[117,55,[36,[[35,[120,[0,[7,8]]]]]],[0,[7,8]]],120],[[117,19]],[117,4],[3,117],[[],20],[[]],[[]],[[]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[117,[[9,[[23,[25]]]]]],[118,26],[119,26],[[16,[28,[4,27]]],[[18,[29]]]],[[117,[23,[25]]],[[18,[30,17]]]],[117,[[18,[17]]]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],33],[[],33],[[],33],[117,32],[[117,16],[[18,[17]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[120,3],[[]],[[]],[[]],[[]],[[]],[120,4],[[]],[[]],[[]],[[]],[[]],[121,121],[122,122],[120,120],[[]],[[]],[[]],[[121,121],6],[[122,122],6],[120,[[9,[[0,[7,8]]]]]],[120],[[121,121],10],[[122,122],10],[[120,[11,[120]]],10],[[120,120],10],[[],10],[[],10],[[],10],[[121,12],13],[[122,12],13],[[123,12],13],[[124,12],13],[[120,12],13],[[]],[[]],[[]],[[]],[[]],[[16,4],[[18,[120,17]]]],[[121,19]],[[122,19]],[[120,19]],[120,4],[3,120],[[],20],[[]],[[]],[[]],[[]],[[]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[120,[[9,[[23,[25]]]]]],[123,26],[124,26],[[16,[28,[4,27]]],[[18,[29]]]],[[121,121],[[9,[6]]]],[[122,122],[[9,[6]]]],[[120,[23,[25]]],[[18,[30,17]]]],[120,[[18,[17]]]],[[120,121]],[[]],[[]],[[]],[32,[[18,[121]]]],[[],18],[32,[[18,[122]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],33],[[],33],[[],33],[[],33],[[],33],[120,32],[[120,16],[[18,[17]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],125],[[],125],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[126,3],[[125,125],125],[[125,125]],[[125,125],125],[[125,125]],[125,32],[125,32],[125,32],[[125,125],125],[[125,125]],[[]],[[]],[[]],[[]],[126,4],[[]],[[]],[[]],[[]],[[]],[[]],[127,127],[125,125],[126,126],[[]],[[]],[[]],[[127,127],6],[125,125],[125,125],[[125,125],10],[[125,125],10],[[126,128]],[[126,128]],[126,[[9,[[0,[7,8]]]]]],[126],[[125,125],125],[[125,125],125],[[],125],[[],125],[[127,127],10],[[125,125],10],[[126,126],10],[[126,[11,[126]]],10],[[],10],[[],10],[[],10],[[125,90]],[[127,12],13],[[125,12],13],[[125,12],13],[[125,12],13],[[125,12],13],[[125,12],13],[[129,12],13],[[130,12],13],[[126,12],13],[[]],[[]],[[]],[[]],[[]],[32,[[9,[125]]]],[32,[[9,[125]]]],[32,125],[32,125],[32,125],[32,125],[32,125],[[16,4],[[18,[126,17]]]],[90,125],[93,[[9,[125]]]],[93,[[9,[125]]]],[[127,19]],[[125,19]],[[126,19]],[126,4],[3,126],[[125,125]],[[125,125]],[[],20],[[125,125],125],[[125,125],125],[[125,125],10],[[125,125],10],[[]],[[]],[[]],[[]],[[]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[125],[125,10],[125,10],[125,10],[125,10],[125,[[95,[125]]]],[125,[[95,[125]]]],[125,[[96,[125]]]],[125,[[96,[125]]]],[125,125],[126,[[9,[[23,[25]]]]]],[129,26],[130,26],[[16,[28,[4,27]]],[[18,[29]]]],[[127,127],[[9,[6]]]],[[125,125]],[[125,125]],[[126,[23,[25]]],[[18,[30,17]]]],[126,[[18,[17]]]],[[125,125,10]],[[125,125,10]],[[125,125],125],[[125,125]],[[125,125],125],[[125,125],125],[[]],[[]],[[]],[[125,125]],[[125,125]],[[],18],[32,[[18,[127]]]],[[],18],[32,[[18,[125]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],33],[[],33],[[],33],[[],33],[[],33],[[125,125],125],[[125,125],125],[126,32],[[126,16],[[18,[17]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[131,3],[[]],[[]],[[]],[131,4],[[]],[[]],[[]],[[131,54,55,[36,[[35,[126,[0,[7,8]]]]]],[0,[7,8]]],126],[[131,54,55,54,54,54,54,[36,[[35,[126,[0,[7,8]]]]]],[0,[7,8]]],126],[131,131],[[]],[131,[[9,[[0,[7,8]]]]]],[131],[[131,131],10],[[131,[11,[131]]],10],[[],10],[[132,12],13],[[133,12],13],[[131,12],13],[[]],[[]],[[]],[[16,4],[[18,[131,17]]]],[[131,19]],[131,4],[3,131],[[],20],[[]],[[]],[[]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[131,[[9,[[23,[25]]]]]],[132,26],[133,26],[[16,[28,[4,27]]],[[18,[29]]]],[[131,[23,[25]]],[[18,[30,17]]]],[131,[[18,[17]]]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],33],[[],33],[[],33],[131,32],[[131,16],[[18,[17]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[134,3],[[]],[[]],[[]],[134,4],[[]],[[]],[[]],[134,134],[[]],[[134,[9,[39]],[36,[[35,[135,[0,[7,8]]]]]],[0,[7,8]]],135],[[134,[9,[39]],[9,[55]],[36,[[35,[135,[0,[7,8]]]]]],[0,[7,8]]],135],[134,[[9,[[0,[7,8]]]]]],[134],[[134,[11,[134]]],10],[[134,134],10],[[],10],[[136,12],13],[[137,12],13],[[134,12],13],[[]],[[]],[[]],[[16,4],[[18,[134,17]]]],[[134,19]],[134,4],[3,134],[[],20],[[]],[[]],[[]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[134,[[9,[[23,[25]]]]]],[136,26],[137,26],[[16,[28,[4,27]]],[[18,[29]]]],[[134,[23,[25]]],[[18,[30,17]]]],[134,[[18,[17]]]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],33],[[],33],[[],33],[134,32],[[134,16],[[18,[17]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[135,32,138,103]],[[135,32,138,103,54]],[[135,139]],[[135,32,138]],[135,3],[[]],[[]],[[]],[[]],[135,4],[[]],[[]],[[]],[[]],[[135,32,32,140]],[141,141],[135,135],[[]],[[]],[[141,141],6],[135,[[9,[[0,[7,8]]]]]],[135],[[141,141],10],[[135,[11,[135]]],10],[[135,135],10],[[],10],[[],10],[[141,12],13],[[142,12],13],[[143,12],13],[[135,12],13],[135],[[]],[[]],[[]],[[]],[[16,4],[[18,[135,17]]]],[[141,19]],[[135,19]],[135,4],[3,135],[[],20],[[]],[[]],[[]],[[]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[[[22,[21]]],[[22,[1,21]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[[135,32,103,103]],[[135,32,32,32,32,32]],[135,[[9,[[23,[25]]]]]],[142,26],[143,26],[[16,[28,[4,27]]],[[18,[29]]]],[[141,141],[[9,[6]]]],[[135,[23,[25]]],[[18,[30,17]]]],[135,[[18,[17]]]],[[]],[[]],[32,[[18,[141]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],33],[[],33],[[],33],[[],33],[135,32],[[135,16],[[18,[17]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[8,"Any"],[3,"ZwlrDataControlDeviceV1"],[3,"WeakBackend"],[3,"ObjectId"],[4,"Error"],[4,"Ordering"],[8,"Send"],[8,"Sync"],[4,"Option"],[15,"bool"],[3,"Weak"],[3,"Formatter"],[6,"Result"],[4,"Request"],[4,"Event"],[3,"Connection"],[3,"InvalidId"],[4,"Result"],[8,"Hasher"],[3,"Interface"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[8,"ObjectData"],[15,"u16"],[3,"OwnedFd"],[3,"Message"],[4,"DispatchError"],[8,"Proxy"],[3,"ZwlrDataControlSourceV1"],[15,"u32"],[3,"TypeId"],[3,"ZwlrDataControlManagerV1"],[8,"Dispatch"],[3,"QueueHandle"],[4,"Request"],[4,"Event"],[3,"WlSeat"],[3,"ZwlrDataControlOfferV1"],[4,"Request"],[4,"Event"],[3,"String"],[3,"BorrowedFd"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"ZwlrExportDmabufFrameV1"],[4,"Flags"],[4,"CancelReason"],[4,"Request"],[4,"Event"],[3,"ZwlrExportDmabufManagerV1"],[15,"i32"],[3,"WlOutput"],[4,"Request"],[4,"Event"],[3,"ZwlrForeignToplevelHandleV1"],[4,"State"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"WlSurface"],[3,"ZwlrForeignToplevelManagerV1"],[4,"Request"],[4,"Event"],[3,"ZwlrGammaControlManagerV1"],[4,"Request"],[4,"Event"],[3,"ZwlrGammaControlV1"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"ZwlrInputInhibitManagerV1"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"ZwlrInputInhibitorV1"],[4,"Request"],[4,"Event"],[3,"ZwlrLayerShellV1"],[4,"Error"],[4,"Layer"],[4,"Request"],[4,"Event"],[3,"ZwlrLayerSurfaceV1"],[3,"Anchor"],[4,"KeyboardInteractivity"],[4,"Error"],[8,"IntoIterator"],[4,"Request"],[4,"Event"],[15,"str"],[3,"XdgPopup"],[3,"Iter"],[3,"IterNames"],[3,"ZwlrOutputConfigurationHeadV1"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"AdaptiveSyncState"],[3,"ZwlrOutputModeV1"],[15,"f64"],[4,"Transform"],[3,"ZwlrOutputConfigurationV1"],[4,"Error"],[3,"ZwlrOutputHeadV1"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[3,"ZwlrOutputManagerV1"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[3,"ZwlrOutputPowerManagerV1"],[4,"Request"],[4,"Event"],[3,"ZwlrOutputPowerV1"],[4,"Mode"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"Flags"],[3,"ZwlrScreencopyFrameV1"],[4,"Error"],[3,"WlBuffer"],[4,"Request"],[4,"Event"],[3,"ZwlrScreencopyManagerV1"],[4,"Request"],[4,"Event"],[3,"ZwlrVirtualPointerManagerV1"],[3,"ZwlrVirtualPointerV1"],[4,"Request"],[4,"Event"],[4,"Axis"],[4,"AxisSource"],[4,"ButtonState"],[4,"Error"],[4,"Request"],[4,"Event"],[13,"DataOffer"],[13,"Selection"],[13,"PrimarySelection"],[13,"SetSelection"],[13,"SetPrimarySelection"],[13,"GetDataDevice"],[13,"Offer"],[13,"Receive"],[13,"Send"],[13,"Offer"],[13,"Frame"],[13,"Object"],[13,"Cancel"],[13,"Ready"],[13,"CaptureOutput"],[13,"AppId"],[13,"OutputEnter"],[13,"OutputLeave"],[13,"Parent"],[13,"State"],[13,"Title"],[13,"SetRectangle"],[13,"SetFullscreen"],[13,"Activate"],[13,"Toplevel"],[13,"GetGammaControl"],[13,"GammaSize"],[13,"SetGamma"],[13,"GetLayerSurface"],[13,"Configure"],[13,"SetAnchor"],[13,"SetMargin"],[13,"SetSize"],[13,"SetKeyboardInteractivity"],[13,"SetLayer"],[13,"GetPopup"],[13,"AckConfigure"],[13,"SetExclusiveZone"],[13,"SetCustomMode"],[13,"SetMode"],[13,"SetScale"],[13,"SetAdaptiveSync"],[13,"SetTransform"],[13,"SetPosition"],[13,"EnableHead"],[13,"DisableHead"],[13,"Description"],[13,"Enabled"],[13,"PhysicalSize"],[13,"Make"],[13,"Mode"],[13,"CurrentMode"],[13,"Model"],[13,"Name"],[13,"Scale"],[13,"SerialNumber"],[13,"AdaptiveSync"],[13,"Transform"],[13,"Position"],[13,"Head"],[13,"Done"],[13,"CreateConfiguration"],[13,"Size"],[13,"Refresh"],[13,"GetOutputPower"],[13,"Mode"],[13,"SetMode"],[13,"Flags"],[13,"Buffer"],[13,"LinuxDmabuf"],[13,"Damage"],[13,"Ready"],[13,"Copy"],[13,"CopyWithDamage"],[13,"CaptureOutputRegion"],[13,"CaptureOutput"],[13,"CreateVirtualPointerWithOutput"],[13,"CreateVirtualPointer"],[13,"Axis"],[13,"AxisStop"],[13,"AxisDiscrete"],[13,"AxisSource"],[13,"Button"],[13,"Motion"],[13,"MotionAbsolute"]]},\
"wayland_scanner":{"doc":"Wayland protocol code-generation machinnery","t":"OOO","n":["generate_client_code","generate_interfaces","generate_server_code"],"q":[[0,"wayland_scanner"]],"d":["Proc-macro for generating client-side API associated with …","Proc-macro for generating low-level interfaces associated …","Proc-macro for generating server-side API associated with …"],"i":[0,0,0],"f":[0,0,0],"c":[],"p":[]},\
"wayland_sys":{"doc":"FFI bindings to the wayland system libraries.","t":"AAOALLLLLLLLLLLLLLLLLLLLLEEEMMLLLLLLLLLLMMMMLLLLLLMMLLLLLMMMMMMMMMMMLLLLLLLLLLLLLLLMMMTDGFFGFFDDGDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLEGEGEGGGGEEGDGEGED","n":["client","common","ffi_dispatch","server","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","from","from","from","into","into","into","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","wl_display","wl_event_queue","wl_proxy","a","alloc","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","data","event_count","events","f","fmt","from","from","from","from","from","h","i","into","into","into","into","into","n","name","name","next","o","prev","request_count","requests","s","signature","size","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","types","u","version","wl_argument","wl_array","wl_dispatcher_func_t","wl_fixed_from_double","wl_fixed_from_int","wl_fixed_t","wl_fixed_to_double","wl_fixed_to_int","wl_interface","wl_list","wl_log_func_t","wl_message","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","link","listener_list","notify","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","wl_client","wl_client_for_each_resource_iterator_func_t","wl_display","wl_display_global_filter_func_t","wl_event_loop","wl_event_loop_fd_func_t","wl_event_loop_idle_func_t","wl_event_loop_signal_func_t","wl_event_loop_timer_func_t","wl_event_source","wl_global","wl_global_bind_func_t","wl_listener","wl_notify_func_t","wl_resource","wl_resource_destroy_func_t","wl_shm_buffer","wl_signal"],"q":[[0,"wayland_sys"],[4,"wayland_sys::client"],[28,"wayland_sys::common"],[98,"wayland_sys::server"]],"d":["Bindings to the client library <code>libwayland-client.so</code>","Various types and functions that are used by both the …","","Bindings to the client library <code>libwayland-server.so</code>","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,9,10,11,9,10,11,9,10,11,9,10,11,9,10,11,9,10,11,9,10,11,0,0,0,12,13,14,3,15,13,12,14,3,15,13,12,13,3,3,12,3,14,3,15,13,12,12,12,14,3,15,13,12,12,14,3,15,12,15,3,3,12,14,13,14,3,15,13,12,14,3,15,13,12,14,3,15,13,12,14,12,3,0,0,0,0,0,0,0,0,0,0,0,0,16,17,18,19,20,21,22,23,24,16,17,18,19,20,21,22,23,24,16,17,18,19,20,21,22,23,24,16,17,18,19,20,21,22,23,24,23,24,23,16,17,18,19,20,21,22,23,24,16,17,18,19,20,21,22,23,24,16,17,18,19,20,21,22,23,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],2],[[],2],[[],2],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[3,4],5],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],2],[[],2],[[],2],[[],2],[[],2],0,0,0,0,0,0,[6,7],[8,7],0,[7,6],[7,8],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[4,"Result"],[3,"TypeId"],[3,"wl_interface"],[3,"Formatter"],[6,"Result"],[15,"f64"],[6,"wl_fixed_t"],[15,"i32"],[4,"wl_proxy"],[4,"wl_display"],[4,"wl_event_queue"],[19,"wl_argument"],[3,"wl_array"],[3,"wl_message"],[3,"wl_list"],[4,"wl_client"],[4,"wl_display"],[4,"wl_event_loop"],[4,"wl_event_source"],[4,"wl_global"],[4,"wl_resource"],[4,"wl_shm_buffer"],[3,"wl_listener"],[3,"wl_signal"]]},\
"wl_clipboard_rs":{"doc":"A safe Rust crate for working with the Wayland clipboard.","t":"AAANNNNENNEENDENNNDNDNNNENENEENNNNNNNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLFLFLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMNNEEENNNNNNNENNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMNNNENNNENNNNNNNLLLLLLLLFLLLLLLLLLLLLLLFFLLLLLLLLLLLLMM","n":["copy","paste","utils","All","Autodetect","Both","Bytes","ClipboardType","Copy","DataCopy","DataSourceError","Error","FileOpen","MimeSource","MimeType","MissingProtocol","NoSeats","Only","Options","Paste","PreparedCopy","Primary","PrimarySelectionUnsupported","Regular","Seat","SeatNotFound","ServeRequests","SocketOpenError","Source","SourceCreationError","Specific","Specific","StdIn","TempCopy","TempDirCreate","TempDirRemove","TempFileCreate","TempFileMetadata","TempFileOpen","TempFileRead","TempFileRemove","TempFileSeek","TempFileTruncate","TempFileWrite","Text","Unlimited","WaylandCommunication","WaylandConnection","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clipboard","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","compare","compare","compare","compare","compare","compare","compare","copy","copy","copy_multi","copy_multi","default","default","default","default","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","foreground","from","from","from","from","from","from","from","from","from","from","from","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","mime_type","new","omit_additional_text_mime_types","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","prepare_copy","prepare_copy","prepare_copy_multi","prepare_copy_multi","provide","provide","provide","seat","serve","serve_requests","source","source","source","source","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","trim_newline","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","name","version","Any","ClipboardEmpty","ClipboardType","Error","MimeType","MissingProtocol","NoMimeType","NoSeats","PipeCreation","Primary","PrimarySelectionUnsupported","Regular","Seat","SeatNotFound","SocketOpenError","Specific","Specific","Text","TextWithPriority","Unspecified","WaylandCommunication","WaylandConnection","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","cmp","compare","compare","compare","default","default","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","get_contents","get_mime_types","hash","hash","hash","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","partial_cmp","partial_cmp","partial_cmp","provide","source","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","name","version","ChildError","CloseSourceFd","CloseTargetFd","CopyDataError","Fork","MissingProtocol","NoSeats","PrimarySelectionCheckError","SetSourceFdFlags","SetTargetFdFlags","SocketOpenError","Wait","WaitUnexpected","WaylandCommunication","WaylandConnection","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","copy_data","fmt","fmt","fmt","fmt","from","from","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","is_primary_selection_supported","is_text","provide","provide","source","source","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","name","version"],"q":[[0,"wl_clipboard_rs"],[3,"wl_clipboard_rs::copy"],[302,"wl_clipboard_rs::copy::Error"],[304,"wl_clipboard_rs::paste"],[419,"wl_clipboard_rs::paste::Error"],[421,"wl_clipboard_rs::utils"],[473,"wl_clipboard_rs::utils::PrimarySelectionCheckError"]],"d":["Copying and clearing clipboard contents.","Getting the offered MIME types and the clipboard contents.","Helper functions.","Operate on all existing seats at once.","Detect the MIME type automatically from the data.","Operate on both clipboards at once.","Copy the given bytes.","The clipboard to operate on.","","","","Errors that can occur for copying and clearing the …","","Source for copying, with a MIME type.","MIME type to offer the copied data under.","","","Serve only the given number of requests.","Options and flags that are used to customize the copying.","","A copy operation ready to start serving requests.","The “primary” clipboard.","","The regular clipboard.","Seat to operate on.","","Number of paste requests to serve.","","Source for copying.","Errors that can occur for copying the source data to a …","Offer a specific MIME type.","Operate on a seat with the given name.","Copy contents of the standard input.","","","","","","","","","","","","Offer a number of common plain text MIME types.","Serve requests indefinitely.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Clears the clipboard for the given seat.","Sets the clipboard to work with.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Copies data to the clipboard.","Invokes the copy operation. See <code>copy()</code>.","Copies data to the clipboard, offering multiple data …","Invokes the copy_multi operation. See <code>copy_multi()</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets the flag for not spawning a separate thread for …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a blank new set of options ready for configuration.","Sets the flag for omitting additional text mime types …","","","","","","","","Prepares a data copy to the clipboard.","Invokes the prepare_copy operation. See <code>prepare_copy()</code>.","Prepares a data copy to the clipboard, offering multiple …","Invokes the prepare_copy_multi operation. See …","","","","Sets the seat to use for copying.","Starts serving copy requests.","Sets the number of requests to serve.","","","","","","","","","","","","","","","Sets the flag for trimming the trailing newline.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Request any available MIME type.","","The clipboard to operate on.","Errors that can occur for pasting and listing MIME types.","MIME types that can be requested from the clipboard.","","","","","The “primary” clipboard.","","The regular clipboard.","Seat to operate on.","","","Request a specific MIME type.","Operate on a seat with the given name.","Request a plain text MIME type.","Request the given MIME type, and if it’s not available …","Operate on one of the existing seats depending on the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Retrieves the clipboard contents.","Retrieves the offered MIME types.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Errors that can occur in <code>copy_data()</code>.","","","","Errors that can occur when checking whether the primary …","","","","","","","","","","","","","","","","Copies data from one file to another.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Checks if the compositor supports the primary selection.","Checks if the given MIME type represents plain text.","","","","","","","","","","","","","",""],"i":[0,0,0,3,7,2,8,0,17,16,0,0,17,0,0,4,4,10,0,4,0,2,4,2,0,4,0,4,0,0,7,3,8,4,16,4,16,16,16,16,4,16,16,16,7,10,4,4,24,2,7,8,9,3,10,6,16,4,17,24,2,7,8,9,3,10,6,16,4,17,24,2,7,8,9,3,10,6,16,4,17,24,2,7,8,9,3,10,6,16,4,17,0,6,2,7,8,9,3,10,6,2,7,8,9,3,10,6,2,7,8,9,3,10,6,2,7,8,9,3,10,6,0,6,0,6,2,3,10,6,2,7,8,9,3,10,6,2,2,2,7,7,7,8,8,8,9,9,9,3,3,3,10,10,10,6,6,6,2,7,8,9,3,10,6,16,16,4,4,17,17,6,24,2,7,8,9,3,10,6,16,4,17,2,7,8,9,3,10,6,24,2,7,8,9,3,10,6,16,4,17,24,2,7,8,9,3,10,6,16,4,17,24,2,7,8,9,3,10,6,16,4,17,24,2,7,8,9,3,10,6,16,4,17,9,6,6,2,7,8,9,3,10,6,0,6,0,6,16,4,17,6,24,6,16,4,17,9,2,7,8,9,3,10,6,16,4,17,6,24,2,7,8,9,3,10,6,16,4,17,24,2,7,8,9,3,10,6,16,4,17,24,2,7,8,9,3,10,6,16,4,17,38,38,30,32,0,0,0,32,32,32,32,29,32,29,0,32,32,30,31,30,30,31,32,32,29,30,31,32,29,30,31,32,29,30,31,32,29,30,31,32,29,30,31,29,30,31,29,30,31,29,30,31,29,31,29,30,31,29,29,29,30,30,30,31,31,31,29,30,31,32,32,29,30,31,32,0,0,29,30,31,29,30,31,32,29,30,31,32,29,30,31,32,29,30,31,32,29,30,31,32,32,29,30,31,32,29,30,31,32,29,30,31,32,29,30,31,32,39,39,35,35,35,0,35,36,36,0,35,35,36,35,35,36,36,35,36,35,36,35,36,35,36,0,35,35,36,36,35,36,35,36,35,36,35,36,35,36,0,0,35,36,35,36,35,36,35,36,35,36,35,36,40,40],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[2,3],[[5,[4]]]],[[6,2],6],[2,2],[7,7],[8,8],[9,9],[3,3],[10,10],[6,6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[2,2],11],[[7,7],11],[[8,8],11],[[9,9],11],[[3,3],11],[[10,10],11],[[6,6],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[6,8,7],[[5,[4]]]],[[6,8,7],[[5,[4]]]],[[6,[12,[9]]],[[5,[4]]]],[[6,[12,[9]]],[[5,[4]]]],[[],2],[[],3],[[],10],[[],6],[[2,2],13],[[7,7],13],[[8,8],13],[[9,9],13],[[3,3],13],[[10,10],13],[[6,6],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[2,14],15],[[7,14],15],[[8,14],15],[[9,14],15],[[3,14],15],[[10,14],15],[[6,14],15],[[16,14],15],[[16,14],15],[[4,14],15],[[4,14],15],[[17,14],15],[[17,14],15],[[6,13],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[2,18]],[[7,18]],[[8,18]],[[9,18]],[[3,18]],[[10,18]],[[6,18]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[20,[19]]],[[20,[1,19]]]],[[[20,[19]]],[[20,[1,19]]]],[[[20,[19]]],[[20,[1,19]]]],[[[20,[19]]],[[20,[1,19]]]],[[[20,[19]]],[[20,[1,19]]]],[[[20,[19]]],[[20,[1,19]]]],[[[20,[19]]],[[20,[1,19]]]],[[[20,[19]]],[[20,[1,19]]]],[[[20,[19]]],[[20,[1,19]]]],[[[20,[19]]],[[20,[1,19]]]],[[[20,[19]]],[[20,[1,19]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],0,[[],6],[[6,13],6],[[2,2],[[23,[11]]]],[[7,7],[[23,[11]]]],[[8,8],[[23,[11]]]],[[9,9],[[23,[11]]]],[[3,3],[[23,[11]]]],[[10,10],[[23,[11]]]],[[6,6],[[23,[11]]]],[[6,8,7],[[5,[24,4]]]],[[6,8,7],[[5,[24,4]]]],[[6,[12,[9]]],[[5,[24,4]]]],[[6,[12,[9]]],[[5,[24,4]]]],[25],[25],[25],[[6,3],6],[24,[[5,[4]]]],[[6,10],6],[16,[[23,[26]]]],[4,[[23,[26]]]],[17,[[23,[26]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],27],[[],27],[[],27],[[6,13],6],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[29,29],[30,30],[31,31],[[]],[[]],[[]],[[29,29],11],[[30,30],11],[[31,31],11],[[],11],[[],11],[[],11],[[],29],[[],31],[[29,29],13],[[30,30],13],[[31,31],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[29,14],15],[[30,14],15],[[31,14],15],[[32,14],15],[[32,14],15],[[]],[[]],[[]],[[]],[[29,31,30],[[5,[32]]]],[[29,31],[[5,[[33,[27]],32]]]],[[29,18]],[[30,18]],[[31,18]],[[]],[[]],[[]],[[]],[[[20,[19]]],[[20,[1,19]]]],[[[20,[19]]],[[20,[1,19]]]],[[[20,[19]]],[[20,[1,19]]]],[[[20,[19]]],[[20,[1,19]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[[29,29],[[23,[11]]]],[[30,30],[[23,[11]]]],[[31,31],[[23,[11]]]],[25],[32,[[23,[26]]]],[[]],[[]],[[]],[[],27],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],28],[[],28],[[],28],[[],28],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[[23,[34]],34,13],[[5,[35]]]],[[35,14],15],[[35,14],15],[[36,14],15],[[36,14],15],[[]],[[]],[[]],[[]],[[[20,[19]]],[[20,[1,19]]]],[[[20,[19]]],[[20,[1,19]]]],[21,[[21,[1]]]],[21,[[21,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[[],[[5,[13,36]]]],[37,13],[25],[25],[35,[[23,[26]]]],[36,[[23,[26]]]],[[],27],[[],27],[[],5],[[],5],[[],5],[[],5],[[],28],[[],28],0,0],"c":[],"p":[[8,"Any"],[4,"ClipboardType"],[4,"Seat"],[4,"Error"],[4,"Result"],[3,"Options"],[4,"MimeType"],[4,"Source"],[3,"MimeSource"],[4,"ServeRequests"],[4,"Ordering"],[3,"Vec"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"SourceCreationError"],[4,"DataSourceError"],[8,"Hasher"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[4,"Option"],[3,"PreparedCopy"],[3,"Demand"],[8,"Error"],[3,"String"],[3,"TypeId"],[4,"ClipboardType"],[4,"MimeType"],[4,"Seat"],[4,"Error"],[3,"HashSet"],[6,"RawFd"],[4,"CopyDataError"],[4,"PrimarySelectionCheckError"],[15,"str"],[13,"MissingProtocol"],[13,"MissingProtocol"],[13,"MissingProtocol"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
